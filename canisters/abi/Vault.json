[
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_initialOwner",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "bq",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ReentrancyGuardReentrantCall",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "ClaimAttempt",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "recipient",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "pool",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "ClaimPaid",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "pool",
        "type": "string"
      }
    ],
    "name": "Deposited",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "poolName",
        "type": "string"
      }
    ],
    "name": "PoolCreated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "apy",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "_minPeriod",
        "type": "uint256"
      }
    ],
    "name": "PoolUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "pool",
        "type": "string"
      }
    ],
    "name": "Withdraw",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "ICoverContract",
    "outputs": [
      {
        "internalType": "contract ICover",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "IGovernanceContract",
    "outputs": [
      {
        "internalType": "contract IGov",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "IPoolContract",
    "outputs": [
      {
        "internalType": "contract IPool",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "bqBTC",
    "outputs": [
      {
        "internalType": "contract IbqBTC",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "bqBTCAddress",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "coverContract",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "_vaultName",
        "type": "string"
      },
      {
        "internalType": "uint256[]",
        "name": "_poolIds",
        "type": "uint256[]"
      },
      {
        "internalType": "uint256[]",
        "name": "poolPercentageSplit",
        "type": "uint256[]"
      },
      {
        "internalType": "uint256",
        "name": "_minInv",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_maxInv",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_minPeriod",
        "type": "uint256"
      },
      {
        "internalType": "enum CoverLib.AssetDepositType",
        "name": "adt",
        "type": "uint8"
      },
      {
        "internalType": "address",
        "name": "asset",
        "type": "address"
      }
    ],
    "name": "createVault",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "vaultId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getUserVaultDeposit",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "lp",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "vaultId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "dailyPayout",
            "type": "uint256"
          },
          {
            "internalType": "enum CoverLib.Status",
            "name": "status",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "daysLeft",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "startDate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "expiryDate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "accruedPayout",
            "type": "uint256"
          },
          {
            "internalType": "enum CoverLib.AssetDepositType",
            "name": "assetType",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "asset",
            "type": "address"
          }
        ],
        "internalType": "struct Vaults.VaultDeposit",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "vaultId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getUserVaultPoolDeposits",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "lp",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "poolId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "dailyPayout",
            "type": "uint256"
          },
          {
            "internalType": "enum CoverLib.Status",
            "name": "status",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "daysLeft",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "startDate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "expiryDate",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "accruedPayout",
            "type": "uint256"
          }
        ],
        "internalType": "struct Vaults.Deposits[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "vaultId",
        "type": "uint256"
      }
    ],
    "name": "getVault",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "vaultName",
            "type": "string"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "poolName",
                "type": "string"
              },
              {
                "internalType": "enum CoverLib.RiskType",
                "name": "riskType",
                "type": "uint8"
              },
              {
                "internalType": "uint256",
                "name": "apy",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "minPeriod",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "totalUnit",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tvl",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "baseValue",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "coverUnits",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tcp",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "isActive",
                "type": "bool"
              },
              {
                "internalType": "uint256",
                "name": "percentageSplitBalance",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "investmentArmPercent",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "leverage",
                "type": "uint8"
              },
              {
                "internalType": "address",
                "name": "asset",
                "type": "address"
              },
              {
                "internalType": "enum CoverLib.AssetDepositType",
                "name": "assetType",
                "type": "uint8"
              }
            ],
            "internalType": "struct CoverLib.Pool[]",
            "name": "pools",
            "type": "tuple[]"
          },
          {
            "internalType": "uint256",
            "name": "minInv",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxInv",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minPeriod",
            "type": "uint256"
          },
          {
            "internalType": "enum CoverLib.AssetDepositType",
            "name": "assetType",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "asset",
            "type": "address"
          }
        ],
        "internalType": "struct Vaults.Vault",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "vaultId",
        "type": "uint256"
      }
    ],
    "name": "getVaultPools",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "poolName",
            "type": "string"
          },
          {
            "internalType": "enum CoverLib.RiskType",
            "name": "riskType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "apy",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minPeriod",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalUnit",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "tvl",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "baseValue",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "coverUnits",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "tcp",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "percentageSplitBalance",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "investmentArmPercent",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "leverage",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "asset",
            "type": "address"
          },
          {
            "internalType": "enum CoverLib.AssetDepositType",
            "name": "assetType",
            "type": "uint8"
          }
        ],
        "internalType": "struct CoverLib.Pool[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getVaults",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "vaultName",
            "type": "string"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "poolName",
                "type": "string"
              },
              {
                "internalType": "enum CoverLib.RiskType",
                "name": "riskType",
                "type": "uint8"
              },
              {
                "internalType": "uint256",
                "name": "apy",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "minPeriod",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "totalUnit",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tvl",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "baseValue",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "coverUnits",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tcp",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "isActive",
                "type": "bool"
              },
              {
                "internalType": "uint256",
                "name": "percentageSplitBalance",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "investmentArmPercent",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "leverage",
                "type": "uint8"
              },
              {
                "internalType": "address",
                "name": "asset",
                "type": "address"
              },
              {
                "internalType": "enum CoverLib.AssetDepositType",
                "name": "assetType",
                "type": "uint8"
              }
            ],
            "internalType": "struct CoverLib.Pool[]",
            "name": "pools",
            "type": "tuple[]"
          },
          {
            "internalType": "uint256",
            "name": "minInv",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxInv",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minPeriod",
            "type": "uint256"
          },
          {
            "internalType": "enum CoverLib.AssetDepositType",
            "name": "assetType",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "asset",
            "type": "address"
          }
        ],
        "internalType": "struct Vaults.Vault[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "governance",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "initialOwner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_vaultId",
        "type": "uint256"
      }
    ],
    "name": "initialVaultWithdraw",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "participants",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "participation",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "poolCanister",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "poolContract",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_coverContract",
        "type": "address"
      }
    ],
    "name": "setCover",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_governance",
        "type": "address"
      }
    ],
    "name": "setGovernance",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_poolcontract",
        "type": "address"
      }
    ],
    "name": "setPool",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_poolcanister",
        "type": "address"
      }
    ],
    "name": "setPoolCanister",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "vaultId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "setUserVaultDepositToZero",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_poolcanister",
        "type": "address"
      }
    ],
    "name": "updatePoolCanister",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "vaultCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_vaultId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_amount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_period",
        "type": "uint256"
      }
    ],
    "name": "vaultDeposit",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
]
