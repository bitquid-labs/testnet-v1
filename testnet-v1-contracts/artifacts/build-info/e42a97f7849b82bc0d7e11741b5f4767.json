{"id":"e42a97f7849b82bc0d7e11741b5f4767","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/CoverLib.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.28;\r\n\r\nlibrary CoverLib {\r\n    struct DepositParams {\r\n        address depositor;\r\n        uint256 poolId;\r\n        uint256 amount;\r\n        uint256 period;\r\n        CoverLib.DepositType pdt;\r\n        CoverLib.AssetDepositType adt;\r\n        address asset;\r\n    }\r\n\r\n    struct Cover {\r\n        uint256 id;\r\n        string coverName;\r\n        RiskType riskType;\r\n        string chains;\r\n        uint256 capacity;\r\n        uint256 cost;\r\n        uint256 capacityAmount;\r\n        uint256 coverValues;\r\n        uint256 maxAmount;\r\n        uint256 poolId;\r\n        string CID;\r\n    }\r\n\r\n    struct GenericCoverInfo {\r\n        address user;\r\n        uint256 coverId;\r\n        RiskType riskType;\r\n        string coverName;\r\n        uint256 coverValue; // This is the value of the cover purchased\r\n        uint256 claimPaid;\r\n        uint256 coverPeriod; // This is the period the cover is purchased for in days\r\n        uint256 endDay; // When the cover expires\r\n        bool isActive;\r\n    }\r\n\r\n    enum RiskType {\r\n        Low,\r\n        Medium,\r\n        High\r\n    }\r\n\r\n    struct GenericCover {\r\n        RiskType riskType;\r\n        bytes coverData;\r\n    }\r\n\r\n    enum AssetDepositType {\r\n        Native,\r\n        ERC20\r\n    }\r\n\r\n    enum DepositType {\r\n        Normal,\r\n        Vault\r\n    }\r\n\r\n    struct Pool {\r\n        uint256 id;\r\n        string poolName;\r\n        CoverLib.RiskType riskType;\r\n        uint256 apy;\r\n        uint256 minPeriod;\r\n        uint256 tvl;\r\n        uint256 baseValue;\r\n        uint256 coverTvl;\r\n        uint256 tcp;\r\n        bool isActive;\r\n        uint256 percentageSplitBalance;\r\n        uint256 investmentArmPercent;\r\n        uint8 leverage;\r\n        address asset;\r\n        CoverLib.AssetDepositType assetType;\r\n    }\r\n\r\n    struct PoolParams {\r\n        uint256 poolId;\r\n        CoverLib.RiskType riskType;\r\n        string poolName;\r\n        uint256 apy;\r\n        uint256 minPeriod;\r\n        uint8 leverage;\r\n        uint256 investmentArm;\r\n        CoverLib.AssetDepositType adt;\r\n        address asset;\r\n    }\r\n\r\n    struct Deposits {\r\n        address lp;\r\n        uint256 amount;\r\n        uint256 poolId;\r\n        uint256 dailyPayout;\r\n        CoverLib.Status status;\r\n        uint256 daysLeft;\r\n        uint256 startDate;\r\n        uint256 expiryDate;\r\n        uint256 accruedPayout;\r\n        CoverLib.DepositType pdt; // Vault deposit or normal pool deposit?\r\n    }\r\n\r\n    struct PoolInfo {\r\n        string poolName;\r\n        uint256 poolId;\r\n        uint256 dailyPayout;\r\n        uint256 depositAmount;\r\n        uint256 apy;\r\n        uint256 minPeriod;\r\n        uint256 tvl;\r\n        uint256 tcp; // Total claim paid to users\r\n        bool isActive; // Pool status to handle soft deletion\r\n        uint256 accruedPayout;\r\n    }\r\n\r\n    enum Status {\r\n        Active,\r\n        Due,\r\n        Withdrawn\r\n    }\r\n}"},"contracts/InsurancePool.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./CoverLib.sol\";\n\ninterface ICover {\n    function updateMaxAmount(uint256 _coverId) external;\n    function getDepositClaimableDays(\n        address user,\n        uint256 _poolId\n    ) external view returns (uint256);\n    function getLastClaimTime(\n        address user,\n        uint256 _poolId\n    ) external view returns (uint256);\n}\n\ninterface IVault {\n    struct Pool {\n        uint256 id;\n        string poolName;\n        CoverLib.RiskType riskType;\n        uint256 apy;\n        uint256 minPeriod;\n        uint256 tvl;\n        uint256 baseValue;\n        uint256 coverTvl;\n        uint256 tcp;\n        bool isActive;\n        uint256 percentageSplitBalance;\n        uint256 investmentArmPercent;\n        uint8 leverage;\n        address asset;\n        CoverLib.AssetDepositType assetType;\n    }\n\n    struct Vault {\n        uint256 id;\n        string vaultName;\n        Pool[] pools;\n        uint256 minInv;\n        uint256 maxInv;\n        uint256 minPeriod;\n        CoverLib.AssetDepositType assetType;\n        address asset;\n    }\n\n    struct VaultDeposit {\n        address lp;\n        uint256 amount;\n        uint256 vaultId;\n        uint256 dailyPayout;\n        CoverLib.Status status;\n        uint256 daysLeft;\n        uint256 startDate;\n        uint256 expiryDate;\n        uint256 accruedPayout;\n    }\n\n    function getVault(uint256 vaultId) external view returns (Vault memory);\n    function getUserVaultDeposit(\n        uint256 vaultId,\n        address user\n    ) external view returns (VaultDeposit memory);\n}\n\ninterface IbqBTC {\n    function bqMint(address account, uint256 amount) external;\n    function burn(address account, uint256 amount) external;\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\ninterface IGov {\n    struct ProposalParams {\n        address user;\n        CoverLib.RiskType riskType;\n        uint256 coverId;\n        string txHash;\n        string description;\n        uint256 poolId;\n        uint256 claimAmount;\n    }\n\n    struct Proposal {\n        uint256 id;\n        uint256 votesFor;\n        uint256 votesAgainst;\n        uint256 createdAt;\n        uint256 deadline;\n        uint256 timeleft;\n        ProposalStaus status;\n        bool executed;\n        ProposalParams proposalParam;\n    }\n\n    enum ProposalStaus {\n        Submitted,\n        Pending,\n        Approved,\n        Claimed,\n        Rejected\n    }\n\n    function getProposalDetails(\n        uint256 _proposalId\n    ) external returns (Proposal memory);\n    function updateProposalStatusToClaimed(uint256 proposalId) external;\n    function setUserVaultDepositToZero(uint256 vaultId, address user) external;\n}\n\ncontract InsurancePool is ReentrancyGuard, Ownable {\n    using CoverLib for *;\n\n    mapping(address => mapping(uint256 => mapping(CoverLib.DepositType => CoverLib.Deposits))) deposits;\n    mapping(uint256 => CoverLib.Cover[]) poolToCovers;\n    mapping(uint256 => CoverLib.Pool) public pools;\n    uint256 public poolCount;\n    address public governance;\n    ICover public ICoverContract;\n    IVault public IVaultContract;\n    IGov public IGovernanceContract;\n    IbqBTC public bqBTC;\n    address public bqBTCAddress;\n    address public coverContract;\n    address public vaultContract;\n    address public initialOwner;\n    address[] public participants;\n    mapping(address => uint256) public participation;\n\n    event Deposited(address indexed user, uint256 amount, string pool);\n    event Withdraw(address indexed user, uint256 amount, string pool);\n    event ClaimPaid(address indexed recipient, string pool, uint256 amount);\n    event PoolCreated(uint256 indexed id, string poolName);\n    event PoolUpdated(uint256 indexed poolId, uint256 apy, uint256 _minPeriod);\n    event ClaimAttempt(uint256, uint256, address);\n\n    constructor(address _initialOwner) Ownable(_initialOwner) {\n        initialOwner = _initialOwner;\n    }\n\n    function createPool(\n        CoverLib.PoolParams memory params\n    ) public onlyOwner {\n        require(\n            params.adt == CoverLib.AssetDepositType.Native || params.asset != address(0),\n            \"Wrong Asset for Deposit\"\n        );\n\n        poolCount += 1;\n        CoverLib.Pool storage newPool = pools[params.poolId];\n        newPool.id = params.poolId;\n        newPool.poolName = params.poolName;\n        newPool.apy = params.apy;\n        newPool.minPeriod = params.minPeriod;\n        newPool.tvl = 0;\n        newPool.coverTvl = 0;\n        newPool.baseValue = 0;\n        newPool.isActive = true;\n        newPool.riskType = params.riskType;\n        newPool.investmentArmPercent = params.investmentArm;\n        newPool.leverage = params.leverage;\n        newPool.percentageSplitBalance = 100 - params.investmentArm;\n        newPool.assetType = params.adt;\n\n        emit PoolCreated(params.poolId, params.poolName);\n    }\n\n    function updatePool(\n        uint256 _poolId,\n        uint256 _apy,\n        uint256 _minPeriod\n    ) public onlyOwner {\n        require(pools[_poolId].isActive, \"Pool does not exist or is inactive\");\n        require(_apy > 0, \"Invalid APY\");\n        require(_minPeriod > 0, \"Invalid minimum period\");\n\n        pools[_poolId].apy = _apy;\n        pools[_poolId].minPeriod = _minPeriod;\n\n        emit PoolUpdated(_poolId, _apy, _minPeriod);\n    }\n\n    function reducePercentageSplit(\n        uint256 _poolId,\n        uint256 __poolPercentageSplit\n    ) public onlyCover {\n        pools[_poolId].percentageSplitBalance -= __poolPercentageSplit;\n    }\n\n    function increasePercentageSplit(\n        uint256 _poolId,\n        uint256 __poolPercentageSplit\n    ) public onlyCover {\n        pools[_poolId].percentageSplitBalance += __poolPercentageSplit;\n    }\n\n    function deactivatePool(uint256 _poolId) public onlyOwner {\n        require(pools[_poolId].isActive, \"Pool is not active\");\n        pools[_poolId].isActive = false;\n    }\n\n    function getPool(\n        uint256 _poolId\n    ) public view returns (CoverLib.Pool memory) {\n        return pools[_poolId];\n    }\n\n    function getAllPools() public view returns (CoverLib.Pool[] memory) {\n        CoverLib.Pool[] memory result = new CoverLib.Pool[](poolCount);\n        for (uint256 i = 1; i <= poolCount; i++) {\n            CoverLib.Pool memory pool = pools[i];\n            result[i - 1] = CoverLib.Pool({\n                id: i,\n                poolName: pool.poolName,\n                riskType: pool.riskType,\n                apy: pool.apy,\n                minPeriod: pool.minPeriod,\n                tvl: pool.tvl,\n                baseValue: pool.baseValue,\n                coverTvl: pool.coverTvl,\n                tcp: pool.tcp,\n                isActive: pool.isActive,\n                percentageSplitBalance: pool.percentageSplitBalance,\n                investmentArmPercent: pool.investmentArmPercent,\n                leverage: pool.leverage,\n                asset: pool.asset,\n                assetType: pool.assetType\n            });\n        }\n        return result;\n    }\n\n    function updatePoolCovers(\n        uint256 _poolId,\n        CoverLib.Cover memory _cover\n    ) public onlyCover {\n        for (uint i = 0; i < poolToCovers[_poolId].length; i++) {\n            if (poolToCovers[_poolId][i].id == _cover.id) {\n                poolToCovers[_poolId][i] = _cover;\n                break;\n            }\n        }\n    }\n\n    function addPoolCover(\n        uint256 _poolId,\n        CoverLib.Cover memory _cover\n    ) public onlyCover {\n        poolToCovers[_poolId].push(_cover);\n    }\n\n    function getPoolCovers(\n        uint256 _poolId\n    ) public view returns (CoverLib.Cover[] memory) {\n        return poolToCovers[_poolId];\n    }\n\n    function getPoolsByAddress(\n        address _userAddress\n    ) public view returns (CoverLib.PoolInfo[] memory) {\n        uint256 resultCount = 0;\n        for (uint256 i = 1; i <= poolCount; i++) {\n            if (\n                deposits[_userAddress][i][CoverLib.DepositType.Normal].amount >\n                0\n            ) {\n                resultCount++;\n            }\n        }\n\n        CoverLib.PoolInfo[] memory result = new CoverLib.PoolInfo[](resultCount);\n\n        uint256 resultIndex = 0;\n\n        for (uint256 i = 1; i <= poolCount; i++) {\n            CoverLib.Pool storage pool = pools[i];\n            CoverLib.Deposits memory userDeposit = deposits[_userAddress][i][\n                CoverLib.DepositType.Normal\n            ];\n            uint256 claimableDays = ICoverContract.getDepositClaimableDays(\n                _userAddress,\n                i\n            );\n            uint256 accruedPayout = userDeposit.dailyPayout * claimableDays;\n            if (\n                deposits[_userAddress][i][CoverLib.DepositType.Normal].amount >\n                0\n            ) {\n                result[resultIndex++] = CoverLib.PoolInfo({\n                    poolName: pool.poolName,\n                    poolId: i,\n                    dailyPayout: deposits[_userAddress][i][\n                        CoverLib.DepositType.Normal\n                    ].dailyPayout,\n                    depositAmount: deposits[_userAddress][i][\n                        CoverLib.DepositType.Normal\n                    ].amount,\n                    apy: pool.apy,\n                    minPeriod: pool.minPeriod,\n                    tvl: pool.tvl,\n                    tcp: pool.tcp,\n                    isActive: pool.isActive,\n                    accruedPayout: accruedPayout\n                });\n            }\n        }\n        return result;\n    }\n\n    function poolWithdraw(uint256 _poolId) public nonReentrant {\n        CoverLib.Pool storage selectedPool = pools[_poolId];\n        CoverLib.Deposits storage userDeposit = deposits[msg.sender][_poolId][\n            CoverLib.DepositType.Normal\n        ];\n\n        require(userDeposit.amount > 0, \"No deposit found for this address\");\n        require(\n            userDeposit.status == CoverLib.Status.Active,\n            \"Deposit is not active\"\n        );\n        require(\n            block.timestamp >= userDeposit.expiryDate,\n            \"Deposit period has not ended\"\n        );\n\n        userDeposit.status = CoverLib.Status.Withdrawn;\n        selectedPool.tvl -= userDeposit.amount;\n        uint256 baseValue = selectedPool.tvl -\n            ((selectedPool.investmentArmPercent * selectedPool.tvl) / 100);\n\n        uint256 coverTvl = baseValue * selectedPool.leverage;\n        selectedPool.coverTvl = coverTvl;\n        selectedPool.baseValue = baseValue;\n        CoverLib.Cover[] memory poolCovers = getPoolCovers(_poolId);\n        for (uint i = 0; i < poolCovers.length; i++) {\n            ICoverContract.updateMaxAmount(poolCovers[i].id);\n        }\n\n        if (selectedPool.assetType == CoverLib.AssetDepositType.ERC20) {\n            bool success = IERC20(selectedPool.asset).transfer(\n                msg.sender,\n                userDeposit.amount\n            );\n            require(success, \"ERC20 transfer failed\");\n        } else {\n            (bool success, ) = msg.sender.call{value: userDeposit.amount}(\"\");\n            require(success, \"Native asset transfer failed\");\n        }\n\n        emit Withdraw(msg.sender, userDeposit.amount, selectedPool.poolName);\n    }\n\n    function withdrawUpdate(\n        address depositor,\n        uint256 _poolId,\n        CoverLib.DepositType pdt\n    ) public nonReentrant onlyVault {\n        CoverLib.Pool storage selectedPool = pools[_poolId];\n        CoverLib.Deposits storage userDeposit = deposits[depositor][_poolId][pdt];\n\n        require(userDeposit.amount > 0, \"No deposit found for this address\");\n        require(\n            userDeposit.status == CoverLib.Status.Active,\n            \"Deposit is not active\"\n        );\n        require(\n            block.timestamp >= userDeposit.expiryDate,\n            \"Deposit period has not ended\"\n        );\n\n        userDeposit.status = CoverLib.Status.Due;\n        selectedPool.tvl -= userDeposit.amount;\n        uint256 baseValue = selectedPool.tvl -\n            ((selectedPool.investmentArmPercent * selectedPool.tvl) / 100);\n\n        uint256 coverTvl = baseValue * selectedPool.leverage;\n        selectedPool.coverTvl = coverTvl;\n        selectedPool.baseValue = baseValue;\n        CoverLib.Cover[] memory poolCovers = getPoolCovers(_poolId);\n        for (uint i = 0; i < poolCovers.length; i++) {\n            ICoverContract.updateMaxAmount(poolCovers[i].id);\n        }\n\n        emit Withdraw(depositor, userDeposit.amount, selectedPool.poolName);\n    }\n\n    function vaultWithdraw(uint256 _vaultId) public nonReentrant {\n        IVault.VaultDeposit memory userVaultDeposit = IVaultContract\n            .getUserVaultDeposit(_vaultId, msg.sender);\n        require(userVaultDeposit.amount > 0, \"No active withdrawal for user\");\n        IVault.Vault memory vault = IVaultContract.getVault(_vaultId);\n        CoverLib.AssetDepositType adt = vault.assetType;\n        if (adt == CoverLib.AssetDepositType.ERC20) {\n            bool success = IERC20(vault.asset).transfer(\n                msg.sender,\n                userVaultDeposit.amount\n            );\n            require(success, \"ERC20 transfer failed\");\n        } else {\n            (bool success, ) = msg.sender.call{value: userVaultDeposit.amount}(\n                \"\"\n            );\n            require(success, \"Native asset transfer failed\");\n        }\n\n        IVaultContract.getUserVaultDeposit(_vaultId, msg.sender);\n    }\n\n    function deposit(\n        CoverLib.DepositParams memory depositParam\n    ) public payable nonReentrant returns (uint256, uint256) {\n        CoverLib.Pool storage selectedPool = pools[depositParam.poolId];\n\n        require(selectedPool.isActive, \"Pool is inactive or does not exist\");\n        require(\n            selectedPool.assetType == depositParam.adt,\n            \"Pool does not accept this deposit type\"\n        );\n        require(\n            depositParam.period >= selectedPool.minPeriod,\n            \"Period too short\"\n        );\n        require(\n            selectedPool.asset == depositParam.asset,\n            \"Pool does not accept this asset\"\n        );\n        require(\n            deposits[depositParam.depositor][depositParam.poolId][\n                depositParam.pdt\n            ].amount == 0,\n            \"User has already deposited into this pool\"\n        );\n\n        uint256 price;\n\n        if (selectedPool.assetType == CoverLib.AssetDepositType.ERC20) {\n            require(depositParam.amount > 0, \"Amount must be greater than 0\");\n            IERC20(depositParam.asset).transferFrom(\n                depositParam.depositor,\n                address(this),\n                depositParam.amount\n            );\n            selectedPool.tvl += depositParam.amount;\n            price = depositParam.amount;\n        } else {\n            require(msg.value > 0, \"Deposit cannot be zero\");\n            selectedPool.tvl += msg.value;\n            price = msg.value;\n        }\n\n        uint256 baseValue = selectedPool.tvl -\n            ((selectedPool.investmentArmPercent * selectedPool.tvl) / 100);\n\n        uint256 coverTvl = baseValue * selectedPool.leverage;\n\n        selectedPool.coverTvl = coverTvl;\n        selectedPool.baseValue = baseValue;\n\n        uint256 dailyPayout = (price * selectedPool.apy) / 100 / 365;\n        CoverLib.Deposits memory userDeposit = CoverLib.Deposits({\n            lp: depositParam.depositor,\n            amount: price,\n            poolId: depositParam.poolId,\n            dailyPayout: dailyPayout,\n            status: CoverLib.Status.Active,\n            daysLeft: depositParam.period,\n            startDate: block.timestamp,\n            expiryDate: block.timestamp + (depositParam.period * 1 days),\n            accruedPayout: 0,\n            pdt: depositParam.pdt\n        });\n\n        if (depositParam.pdt == CoverLib.DepositType.Normal) {\n            deposits[depositParam.depositor][depositParam.poolId][\n                CoverLib.DepositType.Normal\n            ] = userDeposit;\n        } else {\n            deposits[depositParam.depositor][depositParam.poolId][\n                CoverLib.DepositType.Vault\n            ] = userDeposit;\n        }\n\n        CoverLib.Cover[] memory poolCovers = getPoolCovers(depositParam.poolId);\n        for (uint i = 0; i < poolCovers.length; i++) {\n            ICoverContract.updateMaxAmount(poolCovers[i].id);\n        }\n\n        bool userExists = false;\n        for (uint i = 0; i < participants.length; i++) {\n            if (participants[i] == depositParam.depositor) {\n                userExists = true;\n                break;\n            }\n        }\n\n        if (!userExists) {\n            participants.push(depositParam.depositor);\n        }\n\n        participation[depositParam.depositor] += 1;\n\n        emit Deposited(\n            depositParam.depositor,\n            depositParam.amount,\n            selectedPool.poolName\n        );\n\n        return (price, dailyPayout);\n    }\n\n    function claimProposalFunds(uint256 _proposalId) public nonReentrant {\n        IGov.Proposal memory proposal = IGovernanceContract.getProposalDetails(\n            _proposalId\n        );\n        IGov.ProposalParams memory proposalParam = proposal.proposalParam;\n        require(\n            proposal.status == IGov.ProposalStaus.Approved && proposal.executed,\n            \"Proposal not approved\"\n        );\n        CoverLib.Pool storage pool = pools[proposalParam.poolId];\n        require(msg.sender == proposalParam.user, \"Not a valid proposal\");\n        require(pool.isActive, \"Pool is not active\");\n        require(\n            pool.tvl >= proposalParam.claimAmount,\n            \"Not enough funds in the pool\"\n        );\n\n        pool.tcp += proposalParam.claimAmount;\n        pool.tvl -= proposalParam.claimAmount;\n        CoverLib.Cover[] memory poolCovers = getPoolCovers(\n            proposalParam.poolId\n        );\n        for (uint i = 0; i < poolCovers.length; i++) {\n            ICoverContract.updateMaxAmount(poolCovers[i].id);\n        }\n\n        IGovernanceContract.updateProposalStatusToClaimed(_proposalId);\n\n        emit ClaimAttempt(\n            proposalParam.poolId,\n            proposalParam.claimAmount,\n            proposalParam.user\n        );\n\n        bqBTC.bqMint(msg.sender, proposalParam.claimAmount);\n\n        emit ClaimPaid(msg.sender, pool.poolName, proposalParam.claimAmount);\n    }\n\n    function getUserDeposit(\n        uint256 _poolId,\n        address _user\n    ) public view returns (CoverLib.Deposits memory) {\n        CoverLib.Deposits memory userDeposit = deposits[_user][_poolId][\n            CoverLib.DepositType.Normal\n        ];\n        uint256 claimTime = ICoverContract.getLastClaimTime(_user, _poolId);\n        uint lastClaimTime;\n        if (claimTime == 0) {\n            lastClaimTime = userDeposit.startDate;\n        } else {\n            lastClaimTime = claimTime;\n        }\n        uint256 currentTime = block.timestamp;\n        if (currentTime > userDeposit.expiryDate) {\n            currentTime = userDeposit.expiryDate;\n        }\n        uint256 claimableDays = (currentTime - lastClaimTime) / 5 minutes;\n        userDeposit.accruedPayout = userDeposit.dailyPayout * claimableDays;\n        if (userDeposit.expiryDate <= block.timestamp) {\n            userDeposit.daysLeft = 0;\n        } else {\n            uint256 timeLeft = userDeposit.expiryDate - block.timestamp;\n            userDeposit.daysLeft = (timeLeft + 1 days - 1) / 1 days;\n        }\n        return userDeposit;\n    }\n\n    function getPoolTVL(uint256 _poolId) public view returns (uint256) {\n        return pools[_poolId].tvl;\n    }\n\n    function poolActive(uint256 poolId) public view returns (bool) {\n        CoverLib.Pool storage pool = pools[poolId];\n        return pool.isActive;\n    }\n\n    function getAllParticipants() public view returns (address[] memory) {\n        return participants;\n    }\n\n    function getUserParticipation(address user) public view returns (uint256) {\n        return participation[user];\n    }\n\n    function setGovernance(address _governance) external onlyOwner {\n        require(governance == address(0), \"Governance already set\");\n        require(_governance != address(0), \"Governance address cannot be zero\");\n        governance = _governance;\n        IGovernanceContract = IGov(_governance);\n    }\n\n    function setCover(address _coverContract) external onlyOwner {\n        require(coverContract == address(0), \"Cover already set\");\n        require(_coverContract != address(0), \"Cover address cannot be zero\");\n        ICoverContract = ICover(_coverContract);\n        coverContract = _coverContract;\n    }\n\n    function setVault(address _vaultContract) external onlyOwner {\n        require(vaultContract == address(0), \"Vault already set\");\n        require(_vaultContract != address(0), \"Vault address cannot be zero\");\n        IVaultContract = IVault(_vaultContract);\n        vaultContract = _vaultContract;\n    }\n\n    modifier onlyGovernance() {\n        require(\n            msg.sender == governance || msg.sender == initialOwner,\n            \"Caller is not the governance contract\"\n        );\n        _;\n    }\n\n    modifier onlyCover() {\n        require(\n            msg.sender == coverContract || msg.sender == initialOwner,\n            \"Caller is not the cover contract\"\n        );\n        _;\n    }\n\n    modifier onlyVault() {\n        require(\n            msg.sender == vaultContract || msg.sender == initialOwner,\n            \"Caller is not the vault contract\"\n        );\n        _;\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[255],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":256,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,255],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[225]},"id":226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"132:71:1","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":225,"linearizedBaseContracts":[225],"name":"IERC20","nameLocation":"214:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"227:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":159,"name":"Transfer","nameLocation":"396:8:1","nodeType":"EventDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:1","nodeType":"VariableDeclaration","scope":159,"src":"405:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:1","nodeType":"VariableDeclaration","scope":159,"src":"427:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:1","nodeType":"VariableDeclaration","scope":159,"src":"447:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:1"},"src":"390:72:1"},{"anonymous":false,"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"468:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":168,"name":"Approval","nameLocation":"627:8:1","nodeType":"EventDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:1","nodeType":"VariableDeclaration","scope":168,"src":"636:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:1","nodeType":"VariableDeclaration","scope":168,"src":"659:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:1","nodeType":"VariableDeclaration","scope":168,"src":"684:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:1"},"src":"621:78:1"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"705:65:1","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":174,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"795:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":174,"src":"821:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:1"},"scope":225,"src":"775:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"836:71:1","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":182,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":182,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":225,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"986:213:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"1230:2:1","nodeType":"VariableDeclaration","scope":192,"src":"1222:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"1242:5:1","nodeType":"VariableDeclaration","scope":192,"src":"1234:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"1267:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:1"},"scope":225,"src":"1204:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1279:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:1","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"owner","nameLocation":"1575:5:1","nodeType":"VariableDeclaration","scope":202,"src":"1567:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1590:7:1","nodeType":"VariableDeclaration","scope":202,"src":"1582:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:1"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"1622:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:1"},"scope":225,"src":"1548:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"1637:667:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":212,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"spender","nameLocation":"2334:7:1","nodeType":"VariableDeclaration","scope":212,"src":"2326:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"value","nameLocation":"2351:5:1","nodeType":"VariableDeclaration","scope":212,"src":"2343:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"2376:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":209,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:1"},"scope":225,"src":"2309:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"2388:297:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"from","nameLocation":"2720:4:1","nodeType":"VariableDeclaration","scope":224,"src":"2712:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"to","nameLocation":"2734:2:1","nodeType":"VariableDeclaration","scope":224,"src":"2726:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"value","nameLocation":"2746:5:1","nodeType":"VariableDeclaration","scope":224,"src":"2738:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2771:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":221,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:1"},"scope":225,"src":"2690:87:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":226,"src":"204:2575:1","usedErrors":[],"usedEvents":[159,168]}],"src":"106:2674:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[255]},"id":256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":227,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"127:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":255,"linearizedBaseContracts":[255],"name":"Context","nameLocation":"642:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":236,"nodeType":"Block","src":"718:34:2","statements":[{"expression":{"expression":{"id":233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:2","memberName":"sender","nodeType":"MemberAccess","src":"735:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":232,"id":235,"nodeType":"Return","src":"728:17:2"}]},"id":237,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:2","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[],"src":"675:2:2"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:2"},"scope":255,"src":"656:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":245,"nodeType":"Block","src":"825:32:2","statements":[{"expression":{"expression":{"id":242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:2","memberName":"data","nodeType":"MemberAccess","src":"842:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":241,"id":244,"nodeType":"Return","src":"835:15:2"}]},"id":246,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"775:2:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":246,"src":"809:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":239,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:2"},"scope":255,"src":"758:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":253,"nodeType":"Block","src":"935:25:2","statements":[{"expression":{"hexValue":"30","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":250,"id":252,"nodeType":"Return","src":"945:8:2"}]},"id":254,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:2","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"892:2:2"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:2"},"scope":255,"src":"863:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":256,"src":"624:338:2","usedErrors":[],"usedEvents":[]}],"src":"101:862:2"},"id":2},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[324]},"id":325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":257,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"135:894:3","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":324,"linearizedBaseContracts":[324],"name":"ReentrancyGuard","nameLocation":"1048:15:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":261,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:3","nodeType":"VariableDeclaration","scope":324,"src":"1818:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":264,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:3","nodeType":"VariableDeclaration","scope":324,"src":"1864:36:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":266,"mutability":"mutable","name":"_status","nameLocation":"1923:7:3","nodeType":"VariableDeclaration","scope":324,"src":"1907:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"1937:52:3","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":269,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:3","nodeType":"ErrorDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"2028:2:3"},"src":"1994:37:3"},{"body":{"id":276,"nodeType":"Block","src":"2051:38:3","statements":[{"expression":{"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":272,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"2061:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":273,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2071:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":275,"nodeType":"ExpressionStatement","src":"2061:21:3"}]},"id":277,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"2048:2:3"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"2051:0:3"},"scope":324,"src":"2037:52:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":287,"nodeType":"Block","src":"2490:79:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":280,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"2500:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"2500:21:3"},{"id":283,"nodeType":"PlaceholderStatement","src":"2531:1:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":284,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"2542:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"ExpressionStatement","src":"2542:20:3"}]},"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"2095:366:3","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":288,"name":"nonReentrant","nameLocation":"2475:12:3","nodeType":"ModifierDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[],"src":"2487:2:3"},"src":"2466:103:3","virtual":false,"visibility":"internal"},{"body":{"id":303,"nodeType":"Block","src":"2614:268:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":291,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"2702:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":292,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2713:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":298,"nodeType":"IfStatement","src":"2698:86:3","trueBody":{"id":297,"nodeType":"Block","src":"2722:62:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":294,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2743:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":296,"nodeType":"RevertStatement","src":"2736:37:3"}]}},{"expression":{"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":299,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"2858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":300,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2868:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":302,"nodeType":"ExpressionStatement","src":"2858:17:3"}]},"id":304,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:3","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"2603:2:3"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"2614:0:3"},"scope":324,"src":"2575:307:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":311,"nodeType":"Block","src":"2926:170:3","statements":[{"expression":{"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":307,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3068:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":308,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"3078:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":310,"nodeType":"ExpressionStatement","src":"3068:21:3"}]},"id":312,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:3","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"2915:2:3"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"2926:0:3"},"scope":324,"src":"2888:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":322,"nodeType":"Block","src":"3339:42:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":318,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3356:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":319,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3367:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":317,"id":321,"nodeType":"Return","src":"3349:25:3"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"3102:168:3","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":323,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:3","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"3307:2:3"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":323,"src":"3333:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":315,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:3"},"scope":324,"src":"3275:106:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":325,"src":"1030:2353:3","usedErrors":[269],"usedEvents":[]}],"src":"109:3275:3"},"id":3},"contracts/CoverLib.sol":{"ast":{"absolutePath":"contracts/CoverLib.sol","exportedSymbols":{"CoverLib":[506]},"id":507,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":326,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"33:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"CoverLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":506,"linearizedBaseContracts":[506],"name":"CoverLib","nameLocation":"68:8:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CoverLib.DepositParams","id":343,"members":[{"constant":false,"id":328,"mutability":"mutable","name":"depositor","nameLocation":"124:9:4","nodeType":"VariableDeclaration","scope":343,"src":"116:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"poolId","nameLocation":"152:6:4","nodeType":"VariableDeclaration","scope":343,"src":"144:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"144:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"amount","nameLocation":"177:6:4","nodeType":"VariableDeclaration","scope":343,"src":"169:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"169:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"period","nameLocation":"202:6:4","nodeType":"VariableDeclaration","scope":343,"src":"194:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"194:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"pdt","nameLocation":"240:3:4","nodeType":"VariableDeclaration","scope":343,"src":"219:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"},"typeName":{"id":336,"nodeType":"UserDefinedTypeName","pathNode":{"id":335,"name":"CoverLib.DepositType","nameLocations":["219:8:4","228:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"219:20:4"},"referencedDeclaration":403,"src":"219:20:4","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"adt","nameLocation":"280:3:4","nodeType":"VariableDeclaration","scope":343,"src":"254:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":339,"nodeType":"UserDefinedTypeName","pathNode":{"id":338,"name":"CoverLib.AssetDepositType","nameLocations":["254:8:4","263:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":400,"src":"254:25:4"},"referencedDeclaration":400,"src":"254:25:4","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"asset","nameLocation":"302:5:4","nodeType":"VariableDeclaration","scope":343,"src":"294:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"294:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DepositParams","nameLocation":"91:13:4","nodeType":"StructDefinition","scope":506,"src":"84:231:4","visibility":"public"},{"canonicalName":"CoverLib.Cover","id":367,"members":[{"constant":false,"id":345,"mutability":"mutable","name":"id","nameLocation":"355:2:4","nodeType":"VariableDeclaration","scope":367,"src":"347:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"coverName","nameLocation":"375:9:4","nodeType":"VariableDeclaration","scope":367,"src":"368:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"368:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"riskType","nameLocation":"404:8:4","nodeType":"VariableDeclaration","scope":367,"src":"395:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"},"typeName":{"id":349,"nodeType":"UserDefinedTypeName","pathNode":{"id":348,"name":"RiskType","nameLocations":["395:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":391,"src":"395:8:4"},"referencedDeclaration":391,"src":"395:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"chains","nameLocation":"430:6:4","nodeType":"VariableDeclaration","scope":367,"src":"423:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":351,"name":"string","nodeType":"ElementaryTypeName","src":"423:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"capacity","nameLocation":"455:8:4","nodeType":"VariableDeclaration","scope":367,"src":"447:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"cost","nameLocation":"482:4:4","nodeType":"VariableDeclaration","scope":367,"src":"474:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"capacityAmount","nameLocation":"505:14:4","nodeType":"VariableDeclaration","scope":367,"src":"497:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"coverValues","nameLocation":"538:11:4","nodeType":"VariableDeclaration","scope":367,"src":"530:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"maxAmount","nameLocation":"568:9:4","nodeType":"VariableDeclaration","scope":367,"src":"560:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"poolId","nameLocation":"596:6:4","nodeType":"VariableDeclaration","scope":367,"src":"588:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"CID","nameLocation":"620:3:4","nodeType":"VariableDeclaration","scope":367,"src":"613:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":365,"name":"string","nodeType":"ElementaryTypeName","src":"613:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Cover","nameLocation":"330:5:4","nodeType":"StructDefinition","scope":506,"src":"323:308:4","visibility":"public"},{"canonicalName":"CoverLib.GenericCoverInfo","id":387,"members":[{"constant":false,"id":369,"mutability":"mutable","name":"user","nameLocation":"682:4:4","nodeType":"VariableDeclaration","scope":387,"src":"674:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"coverId","nameLocation":"705:7:4","nodeType":"VariableDeclaration","scope":387,"src":"697:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"riskType","nameLocation":"732:8:4","nodeType":"VariableDeclaration","scope":387,"src":"723:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"},"typeName":{"id":373,"nodeType":"UserDefinedTypeName","pathNode":{"id":372,"name":"RiskType","nameLocations":["723:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":391,"src":"723:8:4"},"referencedDeclaration":391,"src":"723:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"coverName","nameLocation":"758:9:4","nodeType":"VariableDeclaration","scope":387,"src":"751:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":375,"name":"string","nodeType":"ElementaryTypeName","src":"751:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"coverValue","nameLocation":"786:10:4","nodeType":"VariableDeclaration","scope":387,"src":"778:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"claimPaid","nameLocation":"859:9:4","nodeType":"VariableDeclaration","scope":387,"src":"851:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"coverPeriod","nameLocation":"887:11:4","nodeType":"VariableDeclaration","scope":387,"src":"879:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"endDay","nameLocation":"974:6:4","nodeType":"VariableDeclaration","scope":387,"src":"966:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"966:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"isActive","nameLocation":"1022:8:4","nodeType":"VariableDeclaration","scope":387,"src":"1017:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":385,"name":"bool","nodeType":"ElementaryTypeName","src":"1017:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"GenericCoverInfo","nameLocation":"646:16:4","nodeType":"StructDefinition","scope":506,"src":"639:399:4","visibility":"public"},{"canonicalName":"CoverLib.RiskType","id":391,"members":[{"id":388,"name":"Low","nameLocation":"1071:3:4","nodeType":"EnumValue","src":"1071:3:4"},{"id":389,"name":"Medium","nameLocation":"1085:6:4","nodeType":"EnumValue","src":"1085:6:4"},{"id":390,"name":"High","nameLocation":"1102:4:4","nodeType":"EnumValue","src":"1102:4:4"}],"name":"RiskType","nameLocation":"1051:8:4","nodeType":"EnumDefinition","src":"1046:67:4"},{"canonicalName":"CoverLib.GenericCover","id":397,"members":[{"constant":false,"id":394,"mutability":"mutable","name":"riskType","nameLocation":"1161:8:4","nodeType":"VariableDeclaration","scope":397,"src":"1152:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"},"typeName":{"id":393,"nodeType":"UserDefinedTypeName","pathNode":{"id":392,"name":"RiskType","nameLocations":["1152:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":391,"src":"1152:8:4"},"referencedDeclaration":391,"src":"1152:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"coverData","nameLocation":"1186:9:4","nodeType":"VariableDeclaration","scope":397,"src":"1180:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":395,"name":"bytes","nodeType":"ElementaryTypeName","src":"1180:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"GenericCover","nameLocation":"1128:12:4","nodeType":"StructDefinition","scope":506,"src":"1121:82:4","visibility":"public"},{"canonicalName":"CoverLib.AssetDepositType","id":400,"members":[{"id":398,"name":"Native","nameLocation":"1244:6:4","nodeType":"EnumValue","src":"1244:6:4"},{"id":399,"name":"ERC20","nameLocation":"1261:5:4","nodeType":"EnumValue","src":"1261:5:4"}],"name":"AssetDepositType","nameLocation":"1216:16:4","nodeType":"EnumDefinition","src":"1211:62:4"},{"canonicalName":"CoverLib.DepositType","id":403,"members":[{"id":401,"name":"Normal","nameLocation":"1309:6:4","nodeType":"EnumValue","src":"1309:6:4"},{"id":402,"name":"Vault","nameLocation":"1326:5:4","nodeType":"EnumValue","src":"1326:5:4"}],"name":"DepositType","nameLocation":"1286:11:4","nodeType":"EnumDefinition","src":"1281:57:4"},{"canonicalName":"CoverLib.Pool","id":436,"members":[{"constant":false,"id":405,"mutability":"mutable","name":"id","nameLocation":"1377:2:4","nodeType":"VariableDeclaration","scope":436,"src":"1369:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"poolName","nameLocation":"1397:8:4","nodeType":"VariableDeclaration","scope":436,"src":"1390:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":406,"name":"string","nodeType":"ElementaryTypeName","src":"1390:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"riskType","nameLocation":"1434:8:4","nodeType":"VariableDeclaration","scope":436,"src":"1416:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"},"typeName":{"id":409,"nodeType":"UserDefinedTypeName","pathNode":{"id":408,"name":"CoverLib.RiskType","nameLocations":["1416:8:4","1425:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":391,"src":"1416:17:4"},"referencedDeclaration":391,"src":"1416:17:4","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"apy","nameLocation":"1461:3:4","nodeType":"VariableDeclaration","scope":436,"src":"1453:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1453:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"minPeriod","nameLocation":"1483:9:4","nodeType":"VariableDeclaration","scope":436,"src":"1475:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"tvl","nameLocation":"1511:3:4","nodeType":"VariableDeclaration","scope":436,"src":"1503:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"baseValue","nameLocation":"1533:9:4","nodeType":"VariableDeclaration","scope":436,"src":"1525:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"coverTvl","nameLocation":"1561:8:4","nodeType":"VariableDeclaration","scope":436,"src":"1553:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1553:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"tcp","nameLocation":"1588:3:4","nodeType":"VariableDeclaration","scope":436,"src":"1580:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"isActive","nameLocation":"1607:8:4","nodeType":"VariableDeclaration","scope":436,"src":"1602:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":423,"name":"bool","nodeType":"ElementaryTypeName","src":"1602:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"percentageSplitBalance","nameLocation":"1634:22:4","nodeType":"VariableDeclaration","scope":436,"src":"1626:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1626:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"investmentArmPercent","nameLocation":"1675:20:4","nodeType":"VariableDeclaration","scope":436,"src":"1667:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1667:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"leverage","nameLocation":"1712:8:4","nodeType":"VariableDeclaration","scope":436,"src":"1706:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":429,"name":"uint8","nodeType":"ElementaryTypeName","src":"1706:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"asset","nameLocation":"1739:5:4","nodeType":"VariableDeclaration","scope":436,"src":"1731:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"assetType","nameLocation":"1781:9:4","nodeType":"VariableDeclaration","scope":436,"src":"1755:35:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":434,"nodeType":"UserDefinedTypeName","pathNode":{"id":433,"name":"CoverLib.AssetDepositType","nameLocations":["1755:8:4","1764:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":400,"src":"1755:25:4"},"referencedDeclaration":400,"src":"1755:25:4","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"}],"name":"Pool","nameLocation":"1353:4:4","nodeType":"StructDefinition","scope":506,"src":"1346:452:4","visibility":"public"},{"canonicalName":"CoverLib.PoolParams","id":457,"members":[{"constant":false,"id":438,"mutability":"mutable","name":"poolId","nameLocation":"1843:6:4","nodeType":"VariableDeclaration","scope":457,"src":"1835:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1835:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":441,"mutability":"mutable","name":"riskType","nameLocation":"1878:8:4","nodeType":"VariableDeclaration","scope":457,"src":"1860:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"},"typeName":{"id":440,"nodeType":"UserDefinedTypeName","pathNode":{"id":439,"name":"CoverLib.RiskType","nameLocations":["1860:8:4","1869:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":391,"src":"1860:17:4"},"referencedDeclaration":391,"src":"1860:17:4","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"poolName","nameLocation":"1904:8:4","nodeType":"VariableDeclaration","scope":457,"src":"1897:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":442,"name":"string","nodeType":"ElementaryTypeName","src":"1897:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"apy","nameLocation":"1931:3:4","nodeType":"VariableDeclaration","scope":457,"src":"1923:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"minPeriod","nameLocation":"1953:9:4","nodeType":"VariableDeclaration","scope":457,"src":"1945:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"leverage","nameLocation":"1979:8:4","nodeType":"VariableDeclaration","scope":457,"src":"1973:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":448,"name":"uint8","nodeType":"ElementaryTypeName","src":"1973:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"investmentArm","nameLocation":"2006:13:4","nodeType":"VariableDeclaration","scope":457,"src":"1998:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1998:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"adt","nameLocation":"2056:3:4","nodeType":"VariableDeclaration","scope":457,"src":"2030:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":453,"nodeType":"UserDefinedTypeName","pathNode":{"id":452,"name":"CoverLib.AssetDepositType","nameLocations":["2030:8:4","2039:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":400,"src":"2030:25:4"},"referencedDeclaration":400,"src":"2030:25:4","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"asset","nameLocation":"2078:5:4","nodeType":"VariableDeclaration","scope":457,"src":"2070:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"2070:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"PoolParams","nameLocation":"1813:10:4","nodeType":"StructDefinition","scope":506,"src":"1806:285:4","visibility":"public"},{"canonicalName":"CoverLib.Deposits","id":480,"members":[{"constant":false,"id":459,"mutability":"mutable","name":"lp","nameLocation":"2134:2:4","nodeType":"VariableDeclaration","scope":480,"src":"2126:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"amount","nameLocation":"2155:6:4","nodeType":"VariableDeclaration","scope":480,"src":"2147:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"2147:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"poolId","nameLocation":"2180:6:4","nodeType":"VariableDeclaration","scope":480,"src":"2172:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"2172:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"dailyPayout","nameLocation":"2205:11:4","nodeType":"VariableDeclaration","scope":480,"src":"2197:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"2197:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"status","nameLocation":"2243:6:4","nodeType":"VariableDeclaration","scope":480,"src":"2227:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"},"typeName":{"id":467,"nodeType":"UserDefinedTypeName","pathNode":{"id":466,"name":"CoverLib.Status","nameLocations":["2227:8:4","2236:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":505,"src":"2227:15:4"},"referencedDeclaration":505,"src":"2227:15:4","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"daysLeft","nameLocation":"2268:8:4","nodeType":"VariableDeclaration","scope":480,"src":"2260:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"startDate","nameLocation":"2295:9:4","nodeType":"VariableDeclaration","scope":480,"src":"2287:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"expiryDate","nameLocation":"2323:10:4","nodeType":"VariableDeclaration","scope":480,"src":"2315:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2315:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"accruedPayout","nameLocation":"2352:13:4","nodeType":"VariableDeclaration","scope":480,"src":"2344:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"pdt","nameLocation":"2397:3:4","nodeType":"VariableDeclaration","scope":480,"src":"2376:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"},"typeName":{"id":478,"nodeType":"UserDefinedTypeName","pathNode":{"id":477,"name":"CoverLib.DepositType","nameLocations":["2376:8:4","2385:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"2376:20:4"},"referencedDeclaration":403,"src":"2376:20:4","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"visibility":"internal"}],"name":"Deposits","nameLocation":"2106:8:4","nodeType":"StructDefinition","scope":506,"src":"2099:350:4","visibility":"public"},{"canonicalName":"CoverLib.PoolInfo","id":501,"members":[{"constant":false,"id":482,"mutability":"mutable","name":"poolName","nameLocation":"2491:8:4","nodeType":"VariableDeclaration","scope":501,"src":"2484:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":481,"name":"string","nodeType":"ElementaryTypeName","src":"2484:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"poolId","nameLocation":"2518:6:4","nodeType":"VariableDeclaration","scope":501,"src":"2510:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"2510:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"dailyPayout","nameLocation":"2543:11:4","nodeType":"VariableDeclaration","scope":501,"src":"2535:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"depositAmount","nameLocation":"2573:13:4","nodeType":"VariableDeclaration","scope":501,"src":"2565:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2565:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"apy","nameLocation":"2605:3:4","nodeType":"VariableDeclaration","scope":501,"src":"2597:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"minPeriod","nameLocation":"2627:9:4","nodeType":"VariableDeclaration","scope":501,"src":"2619:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"tvl","nameLocation":"2655:3:4","nodeType":"VariableDeclaration","scope":501,"src":"2647:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2647:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"tcp","nameLocation":"2677:3:4","nodeType":"VariableDeclaration","scope":501,"src":"2669:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":498,"mutability":"mutable","name":"isActive","nameLocation":"2725:8:4","nodeType":"VariableDeclaration","scope":501,"src":"2720:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"2720:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":500,"mutability":"mutable","name":"accruedPayout","nameLocation":"2791:13:4","nodeType":"VariableDeclaration","scope":501,"src":"2783:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"2783:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"2464:8:4","nodeType":"StructDefinition","scope":506,"src":"2457:355:4","visibility":"public"},{"canonicalName":"CoverLib.Status","id":505,"members":[{"id":502,"name":"Active","nameLocation":"2843:6:4","nodeType":"EnumValue","src":"2843:6:4"},{"id":503,"name":"Due","nameLocation":"2860:3:4","nodeType":"EnumValue","src":"2860:3:4"},{"id":504,"name":"Withdrawn","nameLocation":"2874:9:4","nodeType":"EnumValue","src":"2874:9:4"}],"name":"Status","nameLocation":"2825:6:4","nodeType":"EnumDefinition","src":"2820:70:4"}],"scope":507,"src":"60:2833:4","usedErrors":[],"usedEvents":[]}],"src":"33:2860:4"},"id":4},"contracts/InsurancePool.sol":{"ast":{"absolutePath":"contracts/InsurancePool.sol","exportedSymbols":{"Context":[255],"CoverLib":[506],"ICover":[536],"IERC20":[225],"IGov":[718],"IVault":[628],"IbqBTC":[654],"InsurancePool":[2715],"Ownable":[147],"ReentrancyGuard":[324]},"id":2716,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":508,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"32:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":509,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2716,"sourceUnit":226,"src":"57:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2716,"sourceUnit":325,"src":"114:59:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":511,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2716,"sourceUnit":148,"src":"174:52:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CoverLib.sol","file":"./CoverLib.sol","id":512,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2716,"sourceUnit":507,"src":"227:24:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ICover","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":536,"linearizedBaseContracts":[536],"name":"ICover","nameLocation":"263:6:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"106b5da1","id":517,"implemented":false,"kind":"function","modifiers":[],"name":"updateMaxAmount","nameLocation":"285:15:5","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"_coverId","nameLocation":"309:8:5","nodeType":"VariableDeclaration","scope":517,"src":"301:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"301:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"300:18:5"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"327:0:5"},"scope":536,"src":"276:52:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"73cce3ee","id":526,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositClaimableDays","nameLocation":"342:23:5","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"user","nameLocation":"383:4:5","nodeType":"VariableDeclaration","scope":526,"src":"375:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"375:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"_poolId","nameLocation":"405:7:5","nodeType":"VariableDeclaration","scope":526,"src":"397:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"365:53:5"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":526,"src":"442:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"441:9:5"},"scope":536,"src":"333:118:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"10525814","id":535,"implemented":false,"kind":"function","modifiers":[],"name":"getLastClaimTime","nameLocation":"465:16:5","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"user","nameLocation":"499:4:5","nodeType":"VariableDeclaration","scope":535,"src":"491:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"491:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"_poolId","nameLocation":"521:7:5","nodeType":"VariableDeclaration","scope":535,"src":"513:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:53:5"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":535,"src":"558:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"557:9:5"},"scope":536,"src":"456:111:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2716,"src":"253:316:5","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":628,"linearizedBaseContracts":[628],"name":"IVault","nameLocation":"581:6:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IVault.Pool","id":569,"members":[{"constant":false,"id":538,"mutability":"mutable","name":"id","nameLocation":"624:2:5","nodeType":"VariableDeclaration","scope":569,"src":"616:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"poolName","nameLocation":"643:8:5","nodeType":"VariableDeclaration","scope":569,"src":"636:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":539,"name":"string","nodeType":"ElementaryTypeName","src":"636:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"riskType","nameLocation":"679:8:5","nodeType":"VariableDeclaration","scope":569,"src":"661:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"},"typeName":{"id":542,"nodeType":"UserDefinedTypeName","pathNode":{"id":541,"name":"CoverLib.RiskType","nameLocations":["661:8:5","670:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":391,"src":"661:17:5"},"referencedDeclaration":391,"src":"661:17:5","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"apy","nameLocation":"705:3:5","nodeType":"VariableDeclaration","scope":569,"src":"697:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"minPeriod","nameLocation":"726:9:5","nodeType":"VariableDeclaration","scope":569,"src":"718:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"tvl","nameLocation":"753:3:5","nodeType":"VariableDeclaration","scope":569,"src":"745:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"baseValue","nameLocation":"774:9:5","nodeType":"VariableDeclaration","scope":569,"src":"766:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"coverTvl","nameLocation":"801:8:5","nodeType":"VariableDeclaration","scope":569,"src":"793:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"tcp","nameLocation":"827:3:5","nodeType":"VariableDeclaration","scope":569,"src":"819:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":557,"mutability":"mutable","name":"isActive","nameLocation":"845:8:5","nodeType":"VariableDeclaration","scope":569,"src":"840:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":556,"name":"bool","nodeType":"ElementaryTypeName","src":"840:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"percentageSplitBalance","nameLocation":"871:22:5","nodeType":"VariableDeclaration","scope":569,"src":"863:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"investmentArmPercent","nameLocation":"911:20:5","nodeType":"VariableDeclaration","scope":569,"src":"903:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"leverage","nameLocation":"947:8:5","nodeType":"VariableDeclaration","scope":569,"src":"941:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":562,"name":"uint8","nodeType":"ElementaryTypeName","src":"941:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"asset","nameLocation":"973:5:5","nodeType":"VariableDeclaration","scope":569,"src":"965:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"assetType","nameLocation":"1014:9:5","nodeType":"VariableDeclaration","scope":569,"src":"988:35:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":567,"nodeType":"UserDefinedTypeName","pathNode":{"id":566,"name":"CoverLib.AssetDepositType","nameLocations":["988:8:5","997:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":400,"src":"988:25:5"},"referencedDeclaration":400,"src":"988:25:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"}],"name":"Pool","nameLocation":"601:4:5","nodeType":"StructDefinition","scope":628,"src":"594:436:5","visibility":"public"},{"canonicalName":"IVault.Vault","id":589,"members":[{"constant":false,"id":571,"mutability":"mutable","name":"id","nameLocation":"1067:2:5","nodeType":"VariableDeclaration","scope":589,"src":"1059:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"vaultName","nameLocation":"1086:9:5","nodeType":"VariableDeclaration","scope":589,"src":"1079:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":572,"name":"string","nodeType":"ElementaryTypeName","src":"1079:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"pools","nameLocation":"1112:5:5","nodeType":"VariableDeclaration","scope":589,"src":"1105:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$569_storage_$dyn_storage_ptr","typeString":"struct IVault.Pool[]"},"typeName":{"baseType":{"id":575,"nodeType":"UserDefinedTypeName","pathNode":{"id":574,"name":"Pool","nameLocations":["1105:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":569,"src":"1105:4:5"},"referencedDeclaration":569,"src":"1105:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$569_storage_ptr","typeString":"struct IVault.Pool"}},"id":576,"nodeType":"ArrayTypeName","src":"1105:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$569_storage_$dyn_storage_ptr","typeString":"struct IVault.Pool[]"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"minInv","nameLocation":"1135:6:5","nodeType":"VariableDeclaration","scope":589,"src":"1127:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"maxInv","nameLocation":"1159:6:5","nodeType":"VariableDeclaration","scope":589,"src":"1151:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"minPeriod","nameLocation":"1183:9:5","nodeType":"VariableDeclaration","scope":589,"src":"1175:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"assetType","nameLocation":"1228:9:5","nodeType":"VariableDeclaration","scope":589,"src":"1202:35:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":585,"nodeType":"UserDefinedTypeName","pathNode":{"id":584,"name":"CoverLib.AssetDepositType","nameLocations":["1202:8:5","1211:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":400,"src":"1202:25:5"},"referencedDeclaration":400,"src":"1202:25:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"asset","nameLocation":"1255:5:5","nodeType":"VariableDeclaration","scope":589,"src":"1247:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Vault","nameLocation":"1043:5:5","nodeType":"StructDefinition","scope":628,"src":"1036:231:5","visibility":"public"},{"canonicalName":"IVault.VaultDeposit","id":609,"members":[{"constant":false,"id":591,"mutability":"mutable","name":"lp","nameLocation":"1311:2:5","nodeType":"VariableDeclaration","scope":609,"src":"1303:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"1303:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"amount","nameLocation":"1331:6:5","nodeType":"VariableDeclaration","scope":609,"src":"1323:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"vaultId","nameLocation":"1355:7:5","nodeType":"VariableDeclaration","scope":609,"src":"1347:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"dailyPayout","nameLocation":"1380:11:5","nodeType":"VariableDeclaration","scope":609,"src":"1372:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"status","nameLocation":"1417:6:5","nodeType":"VariableDeclaration","scope":609,"src":"1401:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"},"typeName":{"id":599,"nodeType":"UserDefinedTypeName","pathNode":{"id":598,"name":"CoverLib.Status","nameLocations":["1401:8:5","1410:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":505,"src":"1401:15:5"},"referencedDeclaration":505,"src":"1401:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"daysLeft","nameLocation":"1441:8:5","nodeType":"VariableDeclaration","scope":609,"src":"1433:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"startDate","nameLocation":"1467:9:5","nodeType":"VariableDeclaration","scope":609,"src":"1459:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"expiryDate","nameLocation":"1494:10:5","nodeType":"VariableDeclaration","scope":609,"src":"1486:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1486:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"accruedPayout","nameLocation":"1522:13:5","nodeType":"VariableDeclaration","scope":609,"src":"1514:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"1514:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VaultDeposit","nameLocation":"1280:12:5","nodeType":"StructDefinition","scope":628,"src":"1273:269:5","visibility":"public"},{"functionSelector":"9403b634","id":617,"implemented":false,"kind":"function","modifiers":[],"name":"getVault","nameLocation":"1557:8:5","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"vaultId","nameLocation":"1574:7:5","nodeType":"VariableDeclaration","scope":617,"src":"1566:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1565:17:5"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"1606:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$589_memory_ptr","typeString":"struct IVault.Vault"},"typeName":{"id":614,"nodeType":"UserDefinedTypeName","pathNode":{"id":613,"name":"Vault","nameLocations":["1606:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":589,"src":"1606:5:5"},"referencedDeclaration":589,"src":"1606:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$589_storage_ptr","typeString":"struct IVault.Vault"}},"visibility":"internal"}],"src":"1605:14:5"},"scope":628,"src":"1548:72:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"57656486","id":627,"implemented":false,"kind":"function","modifiers":[],"name":"getUserVaultDeposit","nameLocation":"1634:19:5","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"vaultId","nameLocation":"1671:7:5","nodeType":"VariableDeclaration","scope":627,"src":"1663:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"user","nameLocation":"1696:4:5","nodeType":"VariableDeclaration","scope":627,"src":"1688:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1653:53:5"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":627,"src":"1730:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$609_memory_ptr","typeString":"struct IVault.VaultDeposit"},"typeName":{"id":624,"nodeType":"UserDefinedTypeName","pathNode":{"id":623,"name":"VaultDeposit","nameLocations":["1730:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":609,"src":"1730:12:5"},"referencedDeclaration":609,"src":"1730:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$609_storage_ptr","typeString":"struct IVault.VaultDeposit"}},"visibility":"internal"}],"src":"1729:21:5"},"scope":628,"src":"1625:126:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2716,"src":"571:1182:5","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IbqBTC","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":654,"linearizedBaseContracts":[654],"name":"IbqBTC","nameLocation":"1765:6:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e2094eda","id":635,"implemented":false,"kind":"function","modifiers":[],"name":"bqMint","nameLocation":"1787:6:5","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"account","nameLocation":"1802:7:5","nodeType":"VariableDeclaration","scope":635,"src":"1794:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"amount","nameLocation":"1819:6:5","nodeType":"VariableDeclaration","scope":635,"src":"1811:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1811:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1793:33:5"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"1835:0:5"},"scope":654,"src":"1778:58:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9dc29fac","id":642,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1850:4:5","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"account","nameLocation":"1863:7:5","nodeType":"VariableDeclaration","scope":642,"src":"1855:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"1855:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"amount","nameLocation":"1880:6:5","nodeType":"VariableDeclaration","scope":642,"src":"1872:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1854:33:5"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"1896:0:5"},"scope":654,"src":"1841:56:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":653,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1911:12:5","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"from","nameLocation":"1941:4:5","nodeType":"VariableDeclaration","scope":653,"src":"1933:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"to","nameLocation":"1963:2:5","nodeType":"VariableDeclaration","scope":653,"src":"1955:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"1955:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"amount","nameLocation":"1983:6:5","nodeType":"VariableDeclaration","scope":653,"src":"1975:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:72:5"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":653,"src":"2014:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":650,"name":"bool","nodeType":"ElementaryTypeName","src":"2014:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2013:6:5"},"scope":654,"src":"1902:118:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2716,"src":"1755:267:5","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IGov","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":718,"linearizedBaseContracts":[718],"name":"IGov","nameLocation":"2034:4:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IGov.ProposalParams","id":670,"members":[{"constant":false,"id":656,"mutability":"mutable","name":"user","nameLocation":"2085:4:5","nodeType":"VariableDeclaration","scope":670,"src":"2077:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2077:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"riskType","nameLocation":"2117:8:5","nodeType":"VariableDeclaration","scope":670,"src":"2099:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"},"typeName":{"id":658,"nodeType":"UserDefinedTypeName","pathNode":{"id":657,"name":"CoverLib.RiskType","nameLocations":["2099:8:5","2108:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":391,"src":"2099:17:5"},"referencedDeclaration":391,"src":"2099:17:5","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"coverId","nameLocation":"2143:7:5","nodeType":"VariableDeclaration","scope":670,"src":"2135:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"txHash","nameLocation":"2167:6:5","nodeType":"VariableDeclaration","scope":670,"src":"2160:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":662,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"description","nameLocation":"2190:11:5","nodeType":"VariableDeclaration","scope":670,"src":"2183:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":664,"name":"string","nodeType":"ElementaryTypeName","src":"2183:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":667,"mutability":"mutable","name":"poolId","nameLocation":"2219:6:5","nodeType":"VariableDeclaration","scope":670,"src":"2211:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"claimAmount","nameLocation":"2243:11:5","nodeType":"VariableDeclaration","scope":670,"src":"2235:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ProposalParams","nameLocation":"2052:14:5","nodeType":"StructDefinition","scope":718,"src":"2045:216:5","visibility":"public"},{"canonicalName":"IGov.Proposal","id":691,"members":[{"constant":false,"id":672,"mutability":"mutable","name":"id","nameLocation":"2301:2:5","nodeType":"VariableDeclaration","scope":691,"src":"2293:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2293:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"votesFor","nameLocation":"2321:8:5","nodeType":"VariableDeclaration","scope":691,"src":"2313:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"2313:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"votesAgainst","nameLocation":"2347:12:5","nodeType":"VariableDeclaration","scope":691,"src":"2339:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"2339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"createdAt","nameLocation":"2377:9:5","nodeType":"VariableDeclaration","scope":691,"src":"2369:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"2369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"deadline","nameLocation":"2404:8:5","nodeType":"VariableDeclaration","scope":691,"src":"2396:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2396:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"timeleft","nameLocation":"2430:8:5","nodeType":"VariableDeclaration","scope":691,"src":"2422:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"2422:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"status","nameLocation":"2462:6:5","nodeType":"VariableDeclaration","scope":691,"src":"2448:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalStaus_$697","typeString":"enum IGov.ProposalStaus"},"typeName":{"id":684,"nodeType":"UserDefinedTypeName","pathNode":{"id":683,"name":"ProposalStaus","nameLocations":["2448:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"2448:13:5"},"referencedDeclaration":697,"src":"2448:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalStaus_$697","typeString":"enum IGov.ProposalStaus"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"executed","nameLocation":"2483:8:5","nodeType":"VariableDeclaration","scope":691,"src":"2478:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":686,"name":"bool","nodeType":"ElementaryTypeName","src":"2478:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"proposalParam","nameLocation":"2516:13:5","nodeType":"VariableDeclaration","scope":691,"src":"2501:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_storage_ptr","typeString":"struct IGov.ProposalParams"},"typeName":{"id":689,"nodeType":"UserDefinedTypeName","pathNode":{"id":688,"name":"ProposalParams","nameLocations":["2501:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":670,"src":"2501:14:5"},"referencedDeclaration":670,"src":"2501:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_storage_ptr","typeString":"struct IGov.ProposalParams"}},"visibility":"internal"}],"name":"Proposal","nameLocation":"2274:8:5","nodeType":"StructDefinition","scope":718,"src":"2267:269:5","visibility":"public"},{"canonicalName":"IGov.ProposalStaus","id":697,"members":[{"id":692,"name":"Submitted","nameLocation":"2571:9:5","nodeType":"EnumValue","src":"2571:9:5"},{"id":693,"name":"Pending","nameLocation":"2590:7:5","nodeType":"EnumValue","src":"2590:7:5"},{"id":694,"name":"Approved","nameLocation":"2607:8:5","nodeType":"EnumValue","src":"2607:8:5"},{"id":695,"name":"Claimed","nameLocation":"2625:7:5","nodeType":"EnumValue","src":"2625:7:5"},{"id":696,"name":"Rejected","nameLocation":"2642:8:5","nodeType":"EnumValue","src":"2642:8:5"}],"name":"ProposalStaus","nameLocation":"2547:13:5","nodeType":"EnumDefinition","src":"2542:114:5"},{"functionSelector":"3b4d01a7","id":705,"implemented":false,"kind":"function","modifiers":[],"name":"getProposalDetails","nameLocation":"2671:18:5","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"_proposalId","nameLocation":"2707:11:5","nodeType":"VariableDeclaration","scope":705,"src":"2699:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2689:35:5"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":705,"src":"2743:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$691_memory_ptr","typeString":"struct IGov.Proposal"},"typeName":{"id":702,"nodeType":"UserDefinedTypeName","pathNode":{"id":701,"name":"Proposal","nameLocations":["2743:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":691,"src":"2743:8:5"},"referencedDeclaration":691,"src":"2743:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$691_storage_ptr","typeString":"struct IGov.Proposal"}},"visibility":"internal"}],"src":"2742:17:5"},"scope":718,"src":"2662:98:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1b4bf9d","id":710,"implemented":false,"kind":"function","modifiers":[],"name":"updateProposalStatusToClaimed","nameLocation":"2774:29:5","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"proposalId","nameLocation":"2812:10:5","nodeType":"VariableDeclaration","scope":710,"src":"2804:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2804:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2803:20:5"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"2832:0:5"},"scope":718,"src":"2765:68:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1f8be73c","id":717,"implemented":false,"kind":"function","modifiers":[],"name":"setUserVaultDepositToZero","nameLocation":"2847:25:5","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"vaultId","nameLocation":"2881:7:5","nodeType":"VariableDeclaration","scope":717,"src":"2873:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2873:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"user","nameLocation":"2898:4:5","nodeType":"VariableDeclaration","scope":717,"src":"2890:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"2890:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2872:31:5"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"2912:0:5"},"scope":718,"src":"2838:75:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2716,"src":"2024:891:5","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":719,"name":"ReentrancyGuard","nameLocations":["2943:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":324,"src":"2943:15:5"},"id":720,"nodeType":"InheritanceSpecifier","src":"2943:15:5"},{"baseName":{"id":721,"name":"Ownable","nameLocations":["2960:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2960:7:5"},"id":722,"nodeType":"InheritanceSpecifier","src":"2960:7:5"}],"canonicalName":"InsurancePool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2715,"linearizedBaseContracts":[2715,147,255,324],"name":"InsurancePool","nameLocation":"2926:13:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":724,"libraryName":{"id":723,"name":"CoverLib","nameLocations":["2980:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":506,"src":"2980:8:5"},"nodeType":"UsingForDirective","src":"2974:21:5"},{"constant":false,"id":734,"mutability":"mutable","name":"deposits","nameLocation":"3092:8:5","nodeType":"VariableDeclaration","scope":2715,"src":"3001:99:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits)))"},"typeName":{"id":733,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"3009:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3001:90:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":732,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"3028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3020:70:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":731,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":728,"nodeType":"UserDefinedTypeName","pathNode":{"id":727,"name":"CoverLib.DepositType","nameLocations":["3047:8:5","3056:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"3047:20:5"},"referencedDeclaration":403,"src":"3047:20:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"nodeType":"Mapping","src":"3039:50:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":730,"nodeType":"UserDefinedTypeName","pathNode":{"id":729,"name":"CoverLib.Deposits","nameLocations":["3071:8:5","3080:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"3071:17:5"},"referencedDeclaration":480,"src":"3071:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits"}}}}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"poolToCovers","nameLocation":"3143:12:5","nodeType":"VariableDeclaration","scope":2715,"src":"3106:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$367_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover[])"},"typeName":{"id":739,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3106:36:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$367_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":737,"nodeType":"UserDefinedTypeName","pathNode":{"id":736,"name":"CoverLib.Cover","nameLocations":["3125:8:5","3134:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"3125:14:5"},"referencedDeclaration":367,"src":"3125:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":738,"nodeType":"ArrayTypeName","src":"3125:16:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}}},"visibility":"internal"},{"constant":false,"functionSelector":"ac4afa38","id":745,"mutability":"mutable","name":"pools","nameLocation":"3202:5:5","nodeType":"VariableDeclaration","scope":2715,"src":"3161:46:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool)"},"typeName":{"id":744,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3161:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":743,"nodeType":"UserDefinedTypeName","pathNode":{"id":742,"name":"CoverLib.Pool","nameLocations":["3180:8:5","3189:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"3180:13:5"},"referencedDeclaration":436,"src":"3180:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}}},"visibility":"public"},{"constant":false,"functionSelector":"f525cb68","id":747,"mutability":"mutable","name":"poolCount","nameLocation":"3228:9:5","nodeType":"VariableDeclaration","scope":2715,"src":"3213:24:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5aa6e675","id":749,"mutability":"mutable","name":"governance","nameLocation":"3258:10:5","nodeType":"VariableDeclaration","scope":2715,"src":"3243:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"3243:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f6e80558","id":752,"mutability":"mutable","name":"ICoverContract","nameLocation":"3288:14:5","nodeType":"VariableDeclaration","scope":2715,"src":"3274:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"},"typeName":{"id":751,"nodeType":"UserDefinedTypeName","pathNode":{"id":750,"name":"ICover","nameLocations":["3274:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"3274:6:5"},"referencedDeclaration":536,"src":"3274:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"}},"visibility":"public"},{"constant":false,"functionSelector":"6f60537d","id":755,"mutability":"mutable","name":"IVaultContract","nameLocation":"3322:14:5","nodeType":"VariableDeclaration","scope":2715,"src":"3308:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$628","typeString":"contract IVault"},"typeName":{"id":754,"nodeType":"UserDefinedTypeName","pathNode":{"id":753,"name":"IVault","nameLocations":["3308:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":628,"src":"3308:6:5"},"referencedDeclaration":628,"src":"3308:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$628","typeString":"contract IVault"}},"visibility":"public"},{"constant":false,"functionSelector":"b5d90c28","id":758,"mutability":"mutable","name":"IGovernanceContract","nameLocation":"3354:19:5","nodeType":"VariableDeclaration","scope":2715,"src":"3342:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$718","typeString":"contract IGov"},"typeName":{"id":757,"nodeType":"UserDefinedTypeName","pathNode":{"id":756,"name":"IGov","nameLocations":["3342:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":718,"src":"3342:4:5"},"referencedDeclaration":718,"src":"3342:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$718","typeString":"contract IGov"}},"visibility":"public"},{"constant":false,"functionSelector":"34808ec3","id":761,"mutability":"mutable","name":"bqBTC","nameLocation":"3393:5:5","nodeType":"VariableDeclaration","scope":2715,"src":"3379:19:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$654","typeString":"contract IbqBTC"},"typeName":{"id":760,"nodeType":"UserDefinedTypeName","pathNode":{"id":759,"name":"IbqBTC","nameLocations":["3379:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":654,"src":"3379:6:5"},"referencedDeclaration":654,"src":"3379:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$654","typeString":"contract IbqBTC"}},"visibility":"public"},{"constant":false,"functionSelector":"996b8a6f","id":763,"mutability":"mutable","name":"bqBTCAddress","nameLocation":"3419:12:5","nodeType":"VariableDeclaration","scope":2715,"src":"3404:27:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"3404:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"248a75b7","id":765,"mutability":"mutable","name":"coverContract","nameLocation":"3452:13:5","nodeType":"VariableDeclaration","scope":2715,"src":"3437:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"3437:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2274346b","id":767,"mutability":"mutable","name":"vaultContract","nameLocation":"3486:13:5","nodeType":"VariableDeclaration","scope":2715,"src":"3471:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"3471:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"29ba7bb2","id":769,"mutability":"mutable","name":"initialOwner","nameLocation":"3520:12:5","nodeType":"VariableDeclaration","scope":2715,"src":"3505:27:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"3505:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"35c1d349","id":772,"mutability":"mutable","name":"participants","nameLocation":"3555:12:5","nodeType":"VariableDeclaration","scope":2715,"src":"3538:29:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"3538:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":771,"nodeType":"ArrayTypeName","src":"3538:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"96f3a8ad","id":776,"mutability":"mutable","name":"participation","nameLocation":"3608:13:5","nodeType":"VariableDeclaration","scope":2715,"src":"3573:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":775,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"3581:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3573:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"3592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"6f85d9948d6ca3dd6ce6ce7d175da22b4e865827ae6fcd530ec7edac1240f928","id":784,"name":"Deposited","nameLocation":"3634:9:5","nodeType":"EventDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3660:4:5","nodeType":"VariableDeclaration","scope":784,"src":"3644:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"3644:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3674:6:5","nodeType":"VariableDeclaration","scope":784,"src":"3666:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3666:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":782,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"3689:4:5","nodeType":"VariableDeclaration","scope":784,"src":"3682:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":781,"name":"string","nodeType":"ElementaryTypeName","src":"3682:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3643:51:5"},"src":"3628:67:5"},{"anonymous":false,"eventSelector":"485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d9751","id":792,"name":"Withdraw","nameLocation":"3706:8:5","nodeType":"EventDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3731:4:5","nodeType":"VariableDeclaration","scope":792,"src":"3715:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"3715:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3745:6:5","nodeType":"VariableDeclaration","scope":792,"src":"3737:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"3737:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":790,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"3760:4:5","nodeType":"VariableDeclaration","scope":792,"src":"3753:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":789,"name":"string","nodeType":"ElementaryTypeName","src":"3753:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3714:51:5"},"src":"3700:66:5"},{"anonymous":false,"eventSelector":"415071086c9ea63f7f39884c21a8af430af53bfd511a362dff69cabcb1b8bcc1","id":800,"name":"ClaimPaid","nameLocation":"3777:9:5","nodeType":"EventDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"3803:9:5","nodeType":"VariableDeclaration","scope":800,"src":"3787:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"3787:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"3821:4:5","nodeType":"VariableDeclaration","scope":800,"src":"3814:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":795,"name":"string","nodeType":"ElementaryTypeName","src":"3814:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":798,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3835:6:5","nodeType":"VariableDeclaration","scope":800,"src":"3827:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"3827:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3786:56:5"},"src":"3771:72:5"},{"anonymous":false,"eventSelector":"f01906dc0ac306fa816e50166a7ed46af1f05721cb90cea30beebdd8dede3a6d","id":806,"name":"PoolCreated","nameLocation":"3854:11:5","nodeType":"EventDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3882:2:5","nodeType":"VariableDeclaration","scope":806,"src":"3866:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3866:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":804,"indexed":false,"mutability":"mutable","name":"poolName","nameLocation":"3893:8:5","nodeType":"VariableDeclaration","scope":806,"src":"3886:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":803,"name":"string","nodeType":"ElementaryTypeName","src":"3886:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3865:37:5"},"src":"3848:55:5"},{"anonymous":false,"eventSelector":"17b8644f386d1c7c7138ef98b3c8035622bbe94d7be9b26f71d2654a547c2943","id":814,"name":"PoolUpdated","nameLocation":"3914:11:5","nodeType":"EventDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3942:6:5","nodeType":"VariableDeclaration","scope":814,"src":"3926:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":810,"indexed":false,"mutability":"mutable","name":"apy","nameLocation":"3958:3:5","nodeType":"VariableDeclaration","scope":814,"src":"3950:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"3950:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":812,"indexed":false,"mutability":"mutable","name":"_minPeriod","nameLocation":"3971:10:5","nodeType":"VariableDeclaration","scope":814,"src":"3963:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"3963:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:57:5"},"src":"3908:75:5"},{"anonymous":false,"eventSelector":"eef4955e8b18dcb6d1c19905b7b86e5fe56138ad1ce2c5e540ce4e959312f511","id":822,"name":"ClaimAttempt","nameLocation":"3994:12:5","nodeType":"EventDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"4007:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"4007:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"4016:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"4016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"4025:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"4025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4006:27:5"},"src":"3988:46:5"},{"body":{"id":834,"nodeType":"Block","src":"4098:45:5","statements":[{"expression":{"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":830,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"4108:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":831,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"4123:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4108:28:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":833,"nodeType":"ExpressionStatement","src":"4108:28:5"}]},"id":835,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":827,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"4083:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":828,"kind":"baseConstructorSpecifier","modifierName":{"id":826,"name":"Ownable","nameLocations":["4075:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"4075:7:5"},"nodeType":"ModifierInvocation","src":"4075:22:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"_initialOwner","nameLocation":"4060:13:5","nodeType":"VariableDeclaration","scope":835,"src":"4052:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4051:23:5"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[],"src":"4098:0:5"},"scope":2715,"src":"4040:103:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":971,"nodeType":"Block","src":"4235:846:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":844,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4266:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4273:3:5","memberName":"adt","nodeType":"MemberAccess","referencedDeclaration":454,"src":"4266:10:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":846,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"4280:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4289:16:5","memberName":"AssetDepositType","nodeType":"MemberAccess","referencedDeclaration":400,"src":"4280:25:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetDepositType_$400_$","typeString":"type(enum CoverLib.AssetDepositType)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4306:6:5","memberName":"Native","nodeType":"MemberAccess","referencedDeclaration":398,"src":"4280:32:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"src":"4266:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":850,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4316:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4323:5:5","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":456,"src":"4316:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4340:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4332:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"4332:7:5","typeDescriptions":{}}},"id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4332:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4316:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4266:76:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e6720417373657420666f72204465706f736974","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4356:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2725478d0a8223273c0f3d239ff3817e1392b4a0ae6e5f3fd8f8710d7c55881","typeString":"literal_string \"Wrong Asset for Deposit\""},"value":"Wrong Asset for Deposit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2725478d0a8223273c0f3d239ff3817e1392b4a0ae6e5f3fd8f8710d7c55881","typeString":"literal_string \"Wrong Asset for Deposit\""}],"id":843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4245:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4245:146:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"ExpressionStatement","src":"4245:146:5"},{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":861,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"4402:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4415:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4402:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":864,"nodeType":"ExpressionStatement","src":"4402:14:5"},{"assignments":[869],"declarations":[{"constant":false,"id":869,"mutability":"mutable","name":"newPool","nameLocation":"4448:7:5","nodeType":"VariableDeclaration","scope":971,"src":"4426:29:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":868,"nodeType":"UserDefinedTypeName","pathNode":{"id":867,"name":"CoverLib.Pool","nameLocations":["4426:8:5","4435:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"4426:13:5"},"referencedDeclaration":436,"src":"4426:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":874,"initialValue":{"baseExpression":{"id":870,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"4458:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":873,"indexExpression":{"expression":{"id":871,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4464:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4471:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":438,"src":"4464:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4458:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4426:52:5"},{"expression":{"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":875,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4488:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4496:2:5","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":405,"src":"4488:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":878,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4501:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4508:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":438,"src":"4501:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4488:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":881,"nodeType":"ExpressionStatement","src":"4488:26:5"},{"expression":{"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":882,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4524:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4532:8:5","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":407,"src":"4524:16:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":885,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4543:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4550:8:5","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":443,"src":"4543:15:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4524:34:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":888,"nodeType":"ExpressionStatement","src":"4524:34:5"},{"expression":{"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":889,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4568:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4576:3:5","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":412,"src":"4568:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":892,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4582:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4589:3:5","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":445,"src":"4582:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4568:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":895,"nodeType":"ExpressionStatement","src":"4568:24:5"},{"expression":{"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":896,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4602:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4610:9:5","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":414,"src":"4602:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":899,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4622:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4629:9:5","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":447,"src":"4622:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4602:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":902,"nodeType":"ExpressionStatement","src":"4602:36:5"},{"expression":{"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":903,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4648:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4656:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"4648:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4662:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4648:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":908,"nodeType":"ExpressionStatement","src":"4648:15:5"},{"expression":{"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":909,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4673:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4681:8:5","memberName":"coverTvl","nodeType":"MemberAccess","referencedDeclaration":420,"src":"4673:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4692:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4673:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":914,"nodeType":"ExpressionStatement","src":"4673:20:5"},{"expression":{"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":915,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4703:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4711:9:5","memberName":"baseValue","nodeType":"MemberAccess","referencedDeclaration":418,"src":"4703:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4723:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4703:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":920,"nodeType":"ExpressionStatement","src":"4703:21:5"},{"expression":{"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":921,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4734:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4742:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":424,"src":"4734:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4753:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4734:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"ExpressionStatement","src":"4734:23:5"},{"expression":{"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":927,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4767:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4775:8:5","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":410,"src":"4767:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":930,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4786:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4793:8:5","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":441,"src":"4786:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},"src":"4767:34:5","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},"id":933,"nodeType":"ExpressionStatement","src":"4767:34:5"},{"expression":{"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":934,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4811:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4819:20:5","memberName":"investmentArmPercent","nodeType":"MemberAccess","referencedDeclaration":428,"src":"4811:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":937,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4842:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4849:13:5","memberName":"investmentArm","nodeType":"MemberAccess","referencedDeclaration":451,"src":"4842:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4811:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":940,"nodeType":"ExpressionStatement","src":"4811:51:5"},{"expression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":941,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4872:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4880:8:5","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":430,"src":"4872:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":944,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4891:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4898:8:5","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":449,"src":"4891:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4872:34:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":947,"nodeType":"ExpressionStatement","src":"4872:34:5"},{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":948,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4916:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4924:22:5","memberName":"percentageSplitBalance","nodeType":"MemberAccess","referencedDeclaration":426,"src":"4916:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4949:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":952,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4955:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4962:13:5","memberName":"investmentArm","nodeType":"MemberAccess","referencedDeclaration":451,"src":"4955:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4949:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4916:59:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":956,"nodeType":"ExpressionStatement","src":"4916:59:5"},{"expression":{"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":957,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4985:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4993:9:5","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":435,"src":"4985:17:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":960,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"5005:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5012:3:5","memberName":"adt","nodeType":"MemberAccess","referencedDeclaration":454,"src":"5005:10:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"src":"4985:30:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"id":963,"nodeType":"ExpressionStatement","src":"4985:30:5"},{"eventCall":{"arguments":[{"expression":{"id":965,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"5043:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5050:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":438,"src":"5043:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":967,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"5058:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams memory"}},"id":968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5065:8:5","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":443,"src":"5058:15:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":964,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5031:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5031:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"EmitStatement","src":"5026:48:5"}]},"functionSelector":"5cfab35c","id":972,"implemented":true,"kind":"function","modifiers":[{"id":841,"kind":"modifierInvocation","modifierName":{"id":840,"name":"onlyOwner","nameLocations":["4225:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4225:9:5"},"nodeType":"ModifierInvocation","src":"4225:9:5"}],"name":"createPool","nameLocation":"4158:10:5","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"params","nameLocation":"4205:6:5","nodeType":"VariableDeclaration","scope":972,"src":"4178:33:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_memory_ptr","typeString":"struct CoverLib.PoolParams"},"typeName":{"id":837,"nodeType":"UserDefinedTypeName","pathNode":{"id":836,"name":"CoverLib.PoolParams","nameLocations":["4178:8:5","4187:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":457,"src":"4178:19:5"},"referencedDeclaration":457,"src":"4178:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolParams_$457_storage_ptr","typeString":"struct CoverLib.PoolParams"}},"visibility":"internal"}],"src":"4168:49:5"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[],"src":"4235:0:5"},"scope":2715,"src":"4149:932:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1025,"nodeType":"Block","src":"5205:325:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":984,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"5223:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":986,"indexExpression":{"id":985,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5229:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5223:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5238:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":424,"src":"5223:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20646f6573206e6f74206578697374206f7220697320696e616374697665","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5248:36:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2940762bf1bac80c596a56bbb2d85ac68911df141fe803aff3e93f289d5739f","typeString":"literal_string \"Pool does not exist or is inactive\""},"value":"Pool does not exist or is inactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b2940762bf1bac80c596a56bbb2d85ac68911df141fe803aff3e93f289d5739f","typeString":"literal_string \"Pool does not exist or is inactive\""}],"id":983,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5215:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5215:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":990,"nodeType":"ExpressionStatement","src":"5215:70:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"_apy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"5303:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5310:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5303:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420415059","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5313:13:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1","typeString":"literal_string \"Invalid APY\""},"value":"Invalid APY"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1","typeString":"literal_string \"Invalid APY\""}],"id":991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5295:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5295:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":997,"nodeType":"ExpressionStatement","src":"5295:32:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"_minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"5345:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5358:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5345:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d696e696d756d20706572696f64","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5361:24:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5acc54009ab235ca6a617c23a4e0586f8c9f965177524470c1c60705c333e09","typeString":"literal_string \"Invalid minimum period\""},"value":"Invalid minimum period"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f5acc54009ab235ca6a617c23a4e0586f8c9f965177524470c1c60705c333e09","typeString":"literal_string \"Invalid minimum period\""}],"id":998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5337:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5337:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"ExpressionStatement","src":"5337:49:5"},{"expression":{"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1005,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"5397:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1007,"indexExpression":{"id":1006,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5403:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5397:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":1008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5412:3:5","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":412,"src":"5397:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1009,"name":"_apy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"5418:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5397:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1011,"nodeType":"ExpressionStatement","src":"5397:25:5"},{"expression":{"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1012,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"5432:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1014,"indexExpression":{"id":1013,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5438:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5432:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":1015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5447:9:5","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":414,"src":"5432:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1016,"name":"_minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"5459:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5432:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1018,"nodeType":"ExpressionStatement","src":"5432:37:5"},{"eventCall":{"arguments":[{"id":1020,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5497:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1021,"name":"_apy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"5506:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1022,"name":"_minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"5512:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1019,"name":"PoolUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"5485:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5485:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"EmitStatement","src":"5480:43:5"}]},"functionSelector":"d86c0444","id":1026,"implemented":true,"kind":"function","modifiers":[{"id":981,"kind":"modifierInvocation","modifierName":{"id":980,"name":"onlyOwner","nameLocations":["5195:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5195:9:5"},"nodeType":"ModifierInvocation","src":"5195:9:5"}],"name":"updatePool","nameLocation":"5096:10:5","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"_poolId","nameLocation":"5124:7:5","nodeType":"VariableDeclaration","scope":1026,"src":"5116:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"5116:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"_apy","nameLocation":"5149:4:5","nodeType":"VariableDeclaration","scope":1026,"src":"5141:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"5141:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"_minPeriod","nameLocation":"5171:10:5","nodeType":"VariableDeclaration","scope":1026,"src":"5163:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"5163:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5106:81:5"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"5205:0:5"},"scope":2715,"src":"5087:443:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1042,"nodeType":"Block","src":"5654:79:5","statements":[{"expression":{"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1035,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"5664:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1037,"indexExpression":{"id":1036,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"5670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5664:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":1038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5679:22:5","memberName":"percentageSplitBalance","nodeType":"MemberAccess","referencedDeclaration":426,"src":"5664:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1039,"name":"__poolPercentageSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5705:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5664:62:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1041,"nodeType":"ExpressionStatement","src":"5664:62:5"}]},"functionSelector":"a4948d85","id":1043,"implemented":true,"kind":"function","modifiers":[{"id":1033,"kind":"modifierInvocation","modifierName":{"id":1032,"name":"onlyCover","nameLocations":["5644:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":2697,"src":"5644:9:5"},"nodeType":"ModifierInvocation","src":"5644:9:5"}],"name":"reducePercentageSplit","nameLocation":"5545:21:5","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"_poolId","nameLocation":"5584:7:5","nodeType":"VariableDeclaration","scope":1043,"src":"5576:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"5576:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"__poolPercentageSplit","nameLocation":"5609:21:5","nodeType":"VariableDeclaration","scope":1043,"src":"5601:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"5601:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5566:70:5"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"5654:0:5"},"scope":2715,"src":"5536:197:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1059,"nodeType":"Block","src":"5859:79:5","statements":[{"expression":{"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1052,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"5869:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1054,"indexExpression":{"id":1053,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"5875:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5869:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":1055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5884:22:5","memberName":"percentageSplitBalance","nodeType":"MemberAccess","referencedDeclaration":426,"src":"5869:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1056,"name":"__poolPercentageSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"5910:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5869:62:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1058,"nodeType":"ExpressionStatement","src":"5869:62:5"}]},"functionSelector":"9fd36b15","id":1060,"implemented":true,"kind":"function","modifiers":[{"id":1050,"kind":"modifierInvocation","modifierName":{"id":1049,"name":"onlyCover","nameLocations":["5849:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":2697,"src":"5849:9:5"},"nodeType":"ModifierInvocation","src":"5849:9:5"}],"name":"increasePercentageSplit","nameLocation":"5748:23:5","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"_poolId","nameLocation":"5789:7:5","nodeType":"VariableDeclaration","scope":1060,"src":"5781:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"5781:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"__poolPercentageSplit","nameLocation":"5814:21:5","nodeType":"VariableDeclaration","scope":1060,"src":"5806:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"5806:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5771:70:5"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"5859:0:5"},"scope":2715,"src":"5739:199:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1082,"nodeType":"Block","src":"6002:112:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1068,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"6020:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1070,"indexExpression":{"id":1069,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6026:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6020:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":1071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6035:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":424,"src":"6020:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c206973206e6f7420616374697665","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6045:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767","typeString":"literal_string \"Pool is not active\""},"value":"Pool is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767","typeString":"literal_string \"Pool is not active\""}],"id":1067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6012:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1074,"nodeType":"ExpressionStatement","src":"6012:54:5"},{"expression":{"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1075,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"6076:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1077,"indexExpression":{"id":1076,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6082:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6076:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":1078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6091:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":424,"src":"6076:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6102:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6076:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1081,"nodeType":"ExpressionStatement","src":"6076:31:5"}]},"functionSelector":"9abd9b05","id":1083,"implemented":true,"kind":"function","modifiers":[{"id":1065,"kind":"modifierInvocation","modifierName":{"id":1064,"name":"onlyOwner","nameLocations":["5992:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5992:9:5"},"nodeType":"ModifierInvocation","src":"5992:9:5"}],"name":"deactivatePool","nameLocation":"5953:14:5","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"_poolId","nameLocation":"5976:7:5","nodeType":"VariableDeclaration","scope":1083,"src":"5968:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"5968:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:17:5"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"6002:0:5"},"scope":2715,"src":"5944:170:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1095,"nodeType":"Block","src":"6211:38:5","statements":[{"expression":{"baseExpression":{"id":1091,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"6228:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1093,"indexExpression":{"id":1092,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"6234:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6228:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"functionReturnParameters":1090,"id":1094,"nodeType":"Return","src":"6221:21:5"}]},"functionSelector":"068bcd8d","id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"6129:7:5","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"_poolId","nameLocation":"6154:7:5","nodeType":"VariableDeclaration","scope":1096,"src":"6146:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"6146:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6136:31:5"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1096,"src":"6189:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":1088,"nodeType":"UserDefinedTypeName","pathNode":{"id":1087,"name":"CoverLib.Pool","nameLocations":["6189:8:5","6198:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"6189:13:5"},"referencedDeclaration":436,"src":"6189:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"src":"6188:22:5"},"scope":2715,"src":"6120:129:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1178,"nodeType":"Block","src":"6323:891:5","statements":[{"assignments":[1108],"declarations":[{"constant":false,"id":1108,"mutability":"mutable","name":"result","nameLocation":"6356:6:5","nodeType":"VariableDeclaration","scope":1178,"src":"6333:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool[]"},"typeName":{"baseType":{"id":1106,"nodeType":"UserDefinedTypeName","pathNode":{"id":1105,"name":"CoverLib.Pool","nameLocations":["6333:8:5","6342:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"6333:13:5"},"referencedDeclaration":436,"src":"6333:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"id":1107,"nodeType":"ArrayTypeName","src":"6333:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$436_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"}},"visibility":"internal"}],"id":1115,"initialValue":{"arguments":[{"id":1113,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6385:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6365:19:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Pool_$436_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct CoverLib.Pool memory[] memory)"},"typeName":{"baseType":{"id":1110,"nodeType":"UserDefinedTypeName","pathNode":{"id":1109,"name":"CoverLib.Pool","nameLocations":["6369:8:5","6378:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"6369:13:5"},"referencedDeclaration":436,"src":"6369:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"id":1111,"nodeType":"ArrayTypeName","src":"6369:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$436_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"}}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6365:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6333:62:5"},{"body":{"id":1174,"nodeType":"Block","src":"6446:739:5","statements":[{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"pool","nameLocation":"6481:4:5","nodeType":"VariableDeclaration","scope":1174,"src":"6460:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":1129,"nodeType":"UserDefinedTypeName","pathNode":{"id":1128,"name":"CoverLib.Pool","nameLocations":["6460:8:5","6469:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"6460:13:5"},"referencedDeclaration":436,"src":"6460:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":1134,"initialValue":{"baseExpression":{"id":1131,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"6488:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1133,"indexExpression":{"id":1132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"6494:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6488:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6460:36:5"},{"expression":{"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"6510:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"id":1139,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"6517:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6521:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6517:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6510:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"6562:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1143,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6591:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6596:8:5","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":407,"src":"6591:13:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1145,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6632:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6637:8:5","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":410,"src":"6632:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"}},{"expression":{"id":1147,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6668:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6673:3:5","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":412,"src":"6668:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1149,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6705:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6710:9:5","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":414,"src":"6705:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1151,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6742:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6747:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"6742:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1153,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6779:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6784:9:5","memberName":"baseValue","nodeType":"MemberAccess","referencedDeclaration":418,"src":"6779:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1155,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6821:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6826:8:5","memberName":"coverTvl","nodeType":"MemberAccess","referencedDeclaration":420,"src":"6821:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1157,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6857:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6862:3:5","memberName":"tcp","nodeType":"MemberAccess","referencedDeclaration":422,"src":"6857:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1159,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6893:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6898:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":424,"src":"6893:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1161,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6948:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6953:22:5","memberName":"percentageSplitBalance","nodeType":"MemberAccess","referencedDeclaration":426,"src":"6948:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1163,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"7015:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7020:20:5","memberName":"investmentArmPercent","nodeType":"MemberAccess","referencedDeclaration":428,"src":"7015:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1165,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"7068:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7073:8:5","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":430,"src":"7068:13:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":1167,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"7106:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7111:5:5","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":432,"src":"7106:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1169,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"7145:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7150:9:5","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":435,"src":"7145:14:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_RiskType_$391","typeString":"enum CoverLib.RiskType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}],"expression":{"id":1140,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"6526:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6535:4:5","memberName":"Pool","nodeType":"MemberAccess","referencedDeclaration":436,"src":"6526:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Pool_$436_storage_ptr_$","typeString":"type(struct CoverLib.Pool storage pointer)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6558:2:5","6581:8:5","6622:8:5","6663:3:5","6694:9:5","6737:3:5","6768:9:5","6811:8:5","6852:3:5","6883:8:5","6924:22:5","6993:20:5","7058:8:5","7099:5:5","7134:9:5"],"names":["id","poolName","riskType","apy","minPeriod","tvl","baseValue","coverTvl","tcp","isActive","percentageSplitBalance","investmentArmPercent","leverage","asset","assetType"],"nodeType":"FunctionCall","src":"6526:648:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"src":"6510:664:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":1173,"nodeType":"ExpressionStatement","src":"6510:664:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"6425:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1121,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6430:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6425:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1175,"initializationExpression":{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"i","nameLocation":"6418:1:5","nodeType":"VariableDeclaration","scope":1175,"src":"6410:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"6410:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1119,"initialValue":{"hexValue":"31","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6422:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"6410:13:5"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6441:3:5","subExpression":{"id":1123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"6441:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1125,"nodeType":"ExpressionStatement","src":"6441:3:5"},"nodeType":"ForStatement","src":"6405:780:5"},{"expression":{"id":1176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"7201:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"functionReturnParameters":1102,"id":1177,"nodeType":"Return","src":"7194:13:5"}]},"functionSelector":"d88ff1f4","id":1179,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"6264:11:5","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"6275:2:5"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1179,"src":"6299:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool[]"},"typeName":{"baseType":{"id":1099,"nodeType":"UserDefinedTypeName","pathNode":{"id":1098,"name":"CoverLib.Pool","nameLocations":["6299:8:5","6308:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"6299:13:5"},"referencedDeclaration":436,"src":"6299:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"id":1100,"nodeType":"ArrayTypeName","src":"6299:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$436_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"}},"visibility":"internal"}],"src":"6298:24:5"},"scope":2715,"src":"6255:959:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1224,"nodeType":"Block","src":"7332:231:5","statements":[{"body":{"id":1222,"nodeType":"Block","src":"7398:159:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1202,"name":"poolToCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7416:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$367_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref[] storage ref)"}},"id":1204,"indexExpression":{"id":1203,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7429:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7416:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage","typeString":"struct CoverLib.Cover storage ref[] storage ref"}},"id":1206,"indexExpression":{"id":1205,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7438:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7416:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":1207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7441:2:5","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":345,"src":"7416:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1208,"name":"_cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"7447:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":1209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7454:2:5","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":345,"src":"7447:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7416:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1221,"nodeType":"IfStatement","src":"7412:135:5","trueBody":{"id":1220,"nodeType":"Block","src":"7458:89:5","statements":[{"expression":{"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1211,"name":"poolToCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7476:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$367_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref[] storage ref)"}},"id":1214,"indexExpression":{"id":1212,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7476:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage","typeString":"struct CoverLib.Cover storage ref[] storage ref"}},"id":1215,"indexExpression":{"id":1213,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7498:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7476:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage","typeString":"struct CoverLib.Cover storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1216,"name":"_cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"7503:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"src":"7476:33:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":1218,"nodeType":"ExpressionStatement","src":"7476:33:5"},{"id":1219,"nodeType":"Break","src":"7527:5:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7359:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":1194,"name":"poolToCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7363:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$367_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref[] storage ref)"}},"id":1196,"indexExpression":{"id":1195,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7376:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7363:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage","typeString":"struct CoverLib.Cover storage ref[] storage ref"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7385:6:5","memberName":"length","nodeType":"MemberAccess","src":"7363:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7359:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1223,"initializationExpression":{"assignments":[1190],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"i","nameLocation":"7352:1:5","nodeType":"VariableDeclaration","scope":1223,"src":"7347:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint","nodeType":"ElementaryTypeName","src":"7347:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1192,"initialValue":{"hexValue":"30","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7356:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7347:10:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7393:3:5","subExpression":{"id":1199,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7393:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1201,"nodeType":"ExpressionStatement","src":"7393:3:5"},"nodeType":"ForStatement","src":"7342:215:5"}]},"functionSelector":"a14764d0","id":1225,"implemented":true,"kind":"function","modifiers":[{"id":1187,"kind":"modifierInvocation","modifierName":{"id":1186,"name":"onlyCover","nameLocations":["7322:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":2697,"src":"7322:9:5"},"nodeType":"ModifierInvocation","src":"7322:9:5"}],"name":"updatePoolCovers","nameLocation":"7229:16:5","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"_poolId","nameLocation":"7263:7:5","nodeType":"VariableDeclaration","scope":1225,"src":"7255:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"7255:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"_cover","nameLocation":"7302:6:5","nodeType":"VariableDeclaration","scope":1225,"src":"7280:28:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":1183,"nodeType":"UserDefinedTypeName","pathNode":{"id":1182,"name":"CoverLib.Cover","nameLocations":["7280:8:5","7289:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"7280:14:5"},"referencedDeclaration":367,"src":"7280:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"src":"7245:69:5"},"returnParameters":{"id":1188,"nodeType":"ParameterList","parameters":[],"src":"7332:0:5"},"scope":2715,"src":"7220:343:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1242,"nodeType":"Block","src":"7677:51:5","statements":[{"expression":{"arguments":[{"id":1239,"name":"_cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"7714:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_memory_ptr","typeString":"struct CoverLib.Cover memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Cover_$367_memory_ptr","typeString":"struct CoverLib.Cover memory"}],"expression":{"baseExpression":{"id":1235,"name":"poolToCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7687:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$367_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref[] storage ref)"}},"id":1237,"indexExpression":{"id":1236,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"7700:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7687:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage","typeString":"struct CoverLib.Cover storage ref[] storage ref"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7709:4:5","memberName":"push","nodeType":"MemberAccess","src":"7687:26:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Cover_$367_storage_$dyn_storage_ptr_$_t_struct$_Cover_$367_storage_$returns$__$attached_to$_t_array$_t_struct$_Cover_$367_storage_$dyn_storage_ptr_$","typeString":"function (struct CoverLib.Cover storage ref[] storage pointer,struct CoverLib.Cover storage ref)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7687:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"ExpressionStatement","src":"7687:34:5"}]},"functionSelector":"c7aa9874","id":1243,"implemented":true,"kind":"function","modifiers":[{"id":1233,"kind":"modifierInvocation","modifierName":{"id":1232,"name":"onlyCover","nameLocations":["7667:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":2697,"src":"7667:9:5"},"nodeType":"ModifierInvocation","src":"7667:9:5"}],"name":"addPoolCover","nameLocation":"7578:12:5","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"_poolId","nameLocation":"7608:7:5","nodeType":"VariableDeclaration","scope":1243,"src":"7600:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"7600:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"_cover","nameLocation":"7647:6:5","nodeType":"VariableDeclaration","scope":1243,"src":"7625:28:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":1229,"nodeType":"UserDefinedTypeName","pathNode":{"id":1228,"name":"CoverLib.Cover","nameLocations":["7625:8:5","7634:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"7625:14:5"},"referencedDeclaration":367,"src":"7625:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"src":"7590:69:5"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[],"src":"7677:0:5"},"scope":2715,"src":"7569:159:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1256,"nodeType":"Block","src":"7834:45:5","statements":[{"expression":{"baseExpression":{"id":1252,"name":"poolToCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7851:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$367_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref[] storage ref)"}},"id":1254,"indexExpression":{"id":1253,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"7864:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7851:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage","typeString":"struct CoverLib.Cover storage ref[] storage ref"}},"functionReturnParameters":1251,"id":1255,"nodeType":"Return","src":"7844:28:5"}]},"functionSelector":"7eb111f0","id":1257,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolCovers","nameLocation":"7743:13:5","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"_poolId","nameLocation":"7774:7:5","nodeType":"VariableDeclaration","scope":1257,"src":"7766:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"7766:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7756:31:5"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1257,"src":"7809:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":1248,"nodeType":"UserDefinedTypeName","pathNode":{"id":1247,"name":"CoverLib.Cover","nameLocations":["7809:8:5","7818:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"7809:14:5"},"referencedDeclaration":367,"src":"7809:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":1249,"nodeType":"ArrayTypeName","src":"7809:16:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"src":"7808:25:5"},"scope":2715,"src":"7734:145:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1426,"nodeType":"Block","src":"7997:1721:5","statements":[{"assignments":[1267],"declarations":[{"constant":false,"id":1267,"mutability":"mutable","name":"resultCount","nameLocation":"8015:11:5","nodeType":"VariableDeclaration","scope":1426,"src":"8007:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"8007:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1269,"initialValue":{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8007:23:5"},{"body":{"id":1297,"nodeType":"Block","src":"8081:187:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1280,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"8116:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":1282,"indexExpression":{"id":1281,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"8125:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8116:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":1284,"indexExpression":{"id":1283,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"8139:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8116:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":1288,"indexExpression":{"expression":{"expression":{"id":1285,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"8142:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8151:11:5","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":403,"src":"8142:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$403_$","typeString":"type(enum CoverLib.DepositType)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8163:6:5","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":401,"src":"8142:27:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8116:54:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"id":1289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8171:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"8116:61:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8196:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8116:81:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1296,"nodeType":"IfStatement","src":"8095:163:5","trueBody":{"id":1295,"nodeType":"Block","src":"8212:46:5","statements":[{"expression":{"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8230:13:5","subExpression":{"id":1292,"name":"resultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"8230:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1294,"nodeType":"ExpressionStatement","src":"8230:13:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"8060:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1275,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"8065:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8060:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1298,"initializationExpression":{"assignments":[1271],"declarations":[{"constant":false,"id":1271,"mutability":"mutable","name":"i","nameLocation":"8053:1:5","nodeType":"VariableDeclaration","scope":1298,"src":"8045:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"8045:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1273,"initialValue":{"hexValue":"31","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8057:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"8045:13:5"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8076:3:5","subExpression":{"id":1277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"8076:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1279,"nodeType":"ExpressionStatement","src":"8076:3:5"},"nodeType":"ForStatement","src":"8040:228:5"},{"assignments":[1304],"declarations":[{"constant":false,"id":1304,"mutability":"mutable","name":"result","nameLocation":"8305:6:5","nodeType":"VariableDeclaration","scope":1426,"src":"8278:33:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$501_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.PoolInfo[]"},"typeName":{"baseType":{"id":1302,"nodeType":"UserDefinedTypeName","pathNode":{"id":1301,"name":"CoverLib.PoolInfo","nameLocations":["8278:8:5","8287:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"8278:17:5"},"referencedDeclaration":501,"src":"8278:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$501_storage_ptr","typeString":"struct CoverLib.PoolInfo"}},"id":1303,"nodeType":"ArrayTypeName","src":"8278:19:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$501_storage_$dyn_storage_ptr","typeString":"struct CoverLib.PoolInfo[]"}},"visibility":"internal"}],"id":1311,"initialValue":{"arguments":[{"id":1309,"name":"resultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"8338:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8314:23:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PoolInfo_$501_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct CoverLib.PoolInfo memory[] memory)"},"typeName":{"baseType":{"id":1306,"nodeType":"UserDefinedTypeName","pathNode":{"id":1305,"name":"CoverLib.PoolInfo","nameLocations":["8318:8:5","8327:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"8318:17:5"},"referencedDeclaration":501,"src":"8318:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$501_storage_ptr","typeString":"struct CoverLib.PoolInfo"}},"id":1307,"nodeType":"ArrayTypeName","src":"8318:19:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$501_storage_$dyn_storage_ptr","typeString":"struct CoverLib.PoolInfo[]"}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8314:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$501_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.PoolInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8278:72:5"},{"assignments":[1313],"declarations":[{"constant":false,"id":1313,"mutability":"mutable","name":"resultIndex","nameLocation":"8369:11:5","nodeType":"VariableDeclaration","scope":1426,"src":"8361:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"8361:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1315,"initialValue":{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8383:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8361:23:5"},{"body":{"id":1422,"nodeType":"Block","src":"8436:1253:5","statements":[{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"pool","nameLocation":"8472:4:5","nodeType":"VariableDeclaration","scope":1422,"src":"8450:26:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":1329,"nodeType":"UserDefinedTypeName","pathNode":{"id":1328,"name":"CoverLib.Pool","nameLocations":["8450:8:5","8459:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"8450:13:5"},"referencedDeclaration":436,"src":"8450:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":1334,"initialValue":{"baseExpression":{"id":1331,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"8479:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1333,"indexExpression":{"id":1332,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"8485:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8479:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8450:37:5"},{"assignments":[1339],"declarations":[{"constant":false,"id":1339,"mutability":"mutable","name":"userDeposit","nameLocation":"8526:11:5","nodeType":"VariableDeclaration","scope":1422,"src":"8501:36:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits"},"typeName":{"id":1338,"nodeType":"UserDefinedTypeName","pathNode":{"id":1337,"name":"CoverLib.Deposits","nameLocations":["8501:8:5","8510:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"8501:17:5"},"referencedDeclaration":480,"src":"8501:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits"}},"visibility":"internal"}],"id":1349,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1340,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"8540:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":1342,"indexExpression":{"id":1341,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"8549:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8540:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":1344,"indexExpression":{"id":1343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"8563:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8540:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":1348,"indexExpression":{"expression":{"expression":{"id":1345,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"8583:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8592:11:5","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":403,"src":"8583:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$403_$","typeString":"type(enum CoverLib.DepositType)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8604:6:5","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":401,"src":"8583:27:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8540:84:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8501:123:5"},{"assignments":[1351],"declarations":[{"constant":false,"id":1351,"mutability":"mutable","name":"claimableDays","nameLocation":"8646:13:5","nodeType":"VariableDeclaration","scope":1422,"src":"8638:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8638:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1357,"initialValue":{"arguments":[{"id":1354,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"8718:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"8748:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1352,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8662:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8677:23:5","memberName":"getDepositClaimableDays","nodeType":"MemberAccess","referencedDeclaration":526,"src":"8662:38:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8662:101:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8638:125:5"},{"assignments":[1359],"declarations":[{"constant":false,"id":1359,"mutability":"mutable","name":"accruedPayout","nameLocation":"8785:13:5","nodeType":"VariableDeclaration","scope":1422,"src":"8777:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"8777:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1364,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1360,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"8801:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"id":1361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8813:11:5","memberName":"dailyPayout","nodeType":"MemberAccess","referencedDeclaration":465,"src":"8801:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1362,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"8827:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8801:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8777:63:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1365,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"8875:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":1367,"indexExpression":{"id":1366,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"8884:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8875:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":1369,"indexExpression":{"id":1368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"8898:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8875:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":1373,"indexExpression":{"expression":{"expression":{"id":1370,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"8901:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8910:11:5","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":403,"src":"8901:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$403_$","typeString":"type(enum CoverLib.DepositType)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8922:6:5","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":401,"src":"8901:27:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8875:54:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"id":1374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8930:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"8875:61:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8955:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8875:81:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1421,"nodeType":"IfStatement","src":"8854:825:5","trueBody":{"id":1420,"nodeType":"Block","src":"8971:708:5","statements":[{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8989:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$501_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.PoolInfo memory[] memory"}},"id":1380,"indexExpression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8996:13:5","subExpression":{"id":1378,"name":"resultIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"8996:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8989:21:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$501_memory_ptr","typeString":"struct CoverLib.PoolInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1383,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9063:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9068:8:5","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":407,"src":"9063:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":1385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"9106:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1386,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"9142:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":1388,"indexExpression":{"id":1387,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"9151:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9142:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":1390,"indexExpression":{"id":1389,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"9165:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9142:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":1394,"indexExpression":{"expression":{"expression":{"id":1391,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"9193:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9202:11:5","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":403,"src":"9193:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$403_$","typeString":"type(enum CoverLib.DepositType)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9214:6:5","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":401,"src":"9193:27:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9142:100:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"id":1395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9243:11:5","memberName":"dailyPayout","nodeType":"MemberAccess","referencedDeclaration":465,"src":"9142:112:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1396,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"9291:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":1398,"indexExpression":{"id":1397,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"9300:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9291:22:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":1400,"indexExpression":{"id":1399,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"9314:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9291:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":1404,"indexExpression":{"expression":{"expression":{"id":1401,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"9342:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9351:11:5","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":403,"src":"9342:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$403_$","typeString":"type(enum CoverLib.DepositType)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9363:6:5","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":401,"src":"9342:27:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9291:100:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"id":1405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9392:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"9291:107:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1406,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9425:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9430:3:5","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":412,"src":"9425:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1408,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9466:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9471:9:5","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":414,"src":"9466:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1410,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9507:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9512:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"9507:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1412,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9542:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9547:3:5","memberName":"tcp","nodeType":"MemberAccess","referencedDeclaration":422,"src":"9542:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1414,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9582:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9587:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":424,"src":"9582:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1416,"name":"accruedPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"9632:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1381,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"9013:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9022:8:5","memberName":"PoolInfo","nodeType":"MemberAccess","referencedDeclaration":501,"src":"9013:17:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolInfo_$501_storage_ptr_$","typeString":"type(struct CoverLib.PoolInfo storage pointer)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9053:8:5","9098:6:5","9129:11:5","9276:13:5","9420:3:5","9455:9:5","9502:3:5","9537:3:5","9572:8:5","9617:13:5"],"names":["poolName","poolId","dailyPayout","depositAmount","apy","minPeriod","tvl","tcp","isActive","accruedPayout"],"nodeType":"FunctionCall","src":"9013:651:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$501_memory_ptr","typeString":"struct CoverLib.PoolInfo memory"}},"src":"8989:675:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$501_memory_ptr","typeString":"struct CoverLib.PoolInfo memory"}},"id":1419,"nodeType":"ExpressionStatement","src":"8989:675:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"8415:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1321,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"8420:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8415:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1423,"initializationExpression":{"assignments":[1317],"declarations":[{"constant":false,"id":1317,"mutability":"mutable","name":"i","nameLocation":"8408:1:5","nodeType":"VariableDeclaration","scope":1423,"src":"8400:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"8400:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1319,"initialValue":{"hexValue":"31","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8412:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"8400:13:5"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8431:3:5","subExpression":{"id":1323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"8431:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ExpressionStatement","src":"8431:3:5"},"nodeType":"ForStatement","src":"8395:1294:5"},{"expression":{"id":1424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"9705:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$501_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.PoolInfo memory[] memory"}},"functionReturnParameters":1265,"id":1425,"nodeType":"Return","src":"9698:13:5"}]},"functionSelector":"31866763","id":1427,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsByAddress","nameLocation":"7894:17:5","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"_userAddress","nameLocation":"7929:12:5","nodeType":"VariableDeclaration","scope":1427,"src":"7921:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"7921:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7911:36:5"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1427,"src":"7969:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$501_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.PoolInfo[]"},"typeName":{"baseType":{"id":1262,"nodeType":"UserDefinedTypeName","pathNode":{"id":1261,"name":"CoverLib.PoolInfo","nameLocations":["7969:8:5","7978:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"7969:17:5"},"referencedDeclaration":501,"src":"7969:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$501_storage_ptr","typeString":"struct CoverLib.PoolInfo"}},"id":1263,"nodeType":"ArrayTypeName","src":"7969:19:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$501_storage_$dyn_storage_ptr","typeString":"struct CoverLib.PoolInfo[]"}},"visibility":"internal"}],"src":"7968:28:5"},"scope":2715,"src":"7885:1833:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1619,"nodeType":"Block","src":"9783:1616:5","statements":[{"assignments":[1438],"declarations":[{"constant":false,"id":1438,"mutability":"mutable","name":"selectedPool","nameLocation":"9815:12:5","nodeType":"VariableDeclaration","scope":1619,"src":"9793:34:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":1437,"nodeType":"UserDefinedTypeName","pathNode":{"id":1436,"name":"CoverLib.Pool","nameLocations":["9793:8:5","9802:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"9793:13:5"},"referencedDeclaration":436,"src":"9793:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":1442,"initialValue":{"baseExpression":{"id":1439,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"9830:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1441,"indexExpression":{"id":1440,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"9836:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9830:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9793:51:5"},{"assignments":[1447],"declarations":[{"constant":false,"id":1447,"mutability":"mutable","name":"userDeposit","nameLocation":"9880:11:5","nodeType":"VariableDeclaration","scope":1619,"src":"9854:37:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits"},"typeName":{"id":1446,"nodeType":"UserDefinedTypeName","pathNode":{"id":1445,"name":"CoverLib.Deposits","nameLocations":["9854:8:5","9863:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"9854:17:5"},"referencedDeclaration":480,"src":"9854:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits"}},"visibility":"internal"}],"id":1458,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1448,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"9894:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":1451,"indexExpression":{"expression":{"id":1449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9903:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9907:6:5","memberName":"sender","nodeType":"MemberAccess","src":"9903:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9894:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":1453,"indexExpression":{"id":1452,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"9915:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9894:29:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":1457,"indexExpression":{"expression":{"expression":{"id":1454,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"9937:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9946:11:5","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":403,"src":"9937:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$403_$","typeString":"type(enum CoverLib.DepositType)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9958:6:5","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":401,"src":"9937:27:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9894:80:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9854:120:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1460,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"9993:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10005:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"9993:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10014:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9993:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206465706f73697420666f756e6420666f7220746869732061646472657373","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10017:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_58da2d5c87749dee667e828643fdf1b2656a13f77a7007ea1881f4f567aa7703","typeString":"literal_string \"No deposit found for this address\""},"value":"No deposit found for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58da2d5c87749dee667e828643fdf1b2656a13f77a7007ea1881f4f567aa7703","typeString":"literal_string \"No deposit found for this address\""}],"id":1459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9985:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9985:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1466,"nodeType":"ExpressionStatement","src":"9985:68:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1468,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"10084:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10096:6:5","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":468,"src":"10084:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1470,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"10106:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10115:6:5","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":505,"src":"10106:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$505_$","typeString":"type(enum CoverLib.Status)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10122:6:5","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":502,"src":"10106:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"src":"10084:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974206973206e6f7420616374697665","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10142:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_48296a4ed98d5eb43248b4110e3a654fc331dd606ad671651b762665c62bbd71","typeString":"literal_string \"Deposit is not active\""},"value":"Deposit is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48296a4ed98d5eb43248b4110e3a654fc331dd606ad671651b762665c62bbd71","typeString":"literal_string \"Deposit is not active\""}],"id":1467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10063:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10063:112:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1476,"nodeType":"ExpressionStatement","src":"10063:112:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1478,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10206:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10212:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"10206:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1480,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"10225:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10237:10:5","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":474,"src":"10225:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10206:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420706572696f6420686173206e6f7420656e646564","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10261:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_407b518a5440c6945dd5b5dcce4b15951da5cd4e0775edb7adb21c0f2b995362","typeString":"literal_string \"Deposit period has not ended\""},"value":"Deposit period has not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_407b518a5440c6945dd5b5dcce4b15951da5cd4e0775edb7adb21c0f2b995362","typeString":"literal_string \"Deposit period has not ended\""}],"id":1477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10185:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10185:116:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"10185:116:5"},{"expression":{"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1486,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"10312:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10324:6:5","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":468,"src":"10312:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1489,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"10333:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10342:6:5","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":505,"src":"10333:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$505_$","typeString":"type(enum CoverLib.Status)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10349:9:5","memberName":"Withdrawn","nodeType":"MemberAccess","referencedDeclaration":504,"src":"10333:25:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"src":"10312:46:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"id":1493,"nodeType":"ExpressionStatement","src":"10312:46:5"},{"expression":{"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1494,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10368:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10381:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"10368:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":1497,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"10388:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10400:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"10388:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10368:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1500,"nodeType":"ExpressionStatement","src":"10368:38:5"},{"assignments":[1502],"declarations":[{"constant":false,"id":1502,"mutability":"mutable","name":"baseValue","nameLocation":"10424:9:5","nodeType":"VariableDeclaration","scope":1619,"src":"10416:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"10416:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1515,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1503,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10436:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10449:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"10436:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1505,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10469:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10482:20:5","memberName":"investmentArmPercent","nodeType":"MemberAccess","referencedDeclaration":428,"src":"10469:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1507,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10505:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10518:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"10505:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10469:52:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:54:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"10468:60:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10467:62:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10436:93:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10416:113:5"},{"assignments":[1517],"declarations":[{"constant":false,"id":1517,"mutability":"mutable","name":"coverTvl","nameLocation":"10548:8:5","nodeType":"VariableDeclaration","scope":1619,"src":"10540:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"10540:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1522,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1518,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"10559:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1519,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10571:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10584:8:5","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":430,"src":"10571:21:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10559:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10540:52:5"},{"expression":{"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1523,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10602:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10615:8:5","memberName":"coverTvl","nodeType":"MemberAccess","referencedDeclaration":420,"src":"10602:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1526,"name":"coverTvl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"10626:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10602:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1528,"nodeType":"ExpressionStatement","src":"10602:32:5"},{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1529,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10644:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10657:9:5","memberName":"baseValue","nodeType":"MemberAccess","referencedDeclaration":418,"src":"10644:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1532,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"10669:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10644:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1534,"nodeType":"ExpressionStatement","src":"10644:34:5"},{"assignments":[1540],"declarations":[{"constant":false,"id":1540,"mutability":"mutable","name":"poolCovers","nameLocation":"10712:10:5","nodeType":"VariableDeclaration","scope":1619,"src":"10688:34:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":1538,"nodeType":"UserDefinedTypeName","pathNode":{"id":1537,"name":"CoverLib.Cover","nameLocations":["10688:8:5","10697:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"10688:14:5"},"referencedDeclaration":367,"src":"10688:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":1539,"nodeType":"ArrayTypeName","src":"10688:16:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":1544,"initialValue":{"arguments":[{"id":1542,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"10739:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1541,"name":"getPoolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"10725:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (struct CoverLib.Cover memory[] memory)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10725:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10688:59:5"},{"body":{"id":1565,"nodeType":"Block","src":"10802:73:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1559,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"10847:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":1561,"indexExpression":{"id":1560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"10858:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10847:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":1562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10861:2:5","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":345,"src":"10847:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1556,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10816:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10831:15:5","memberName":"updateMaxAmount","nodeType":"MemberAccess","referencedDeclaration":517,"src":"10816:30:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10816:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1564,"nodeType":"ExpressionStatement","src":"10816:48:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"10774:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1550,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"10778:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10789:6:5","memberName":"length","nodeType":"MemberAccess","src":"10778:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10774:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1566,"initializationExpression":{"assignments":[1546],"declarations":[{"constant":false,"id":1546,"mutability":"mutable","name":"i","nameLocation":"10767:1:5","nodeType":"VariableDeclaration","scope":1566,"src":"10762:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint","nodeType":"ElementaryTypeName","src":"10762:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1548,"initialValue":{"hexValue":"30","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10771:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10762:10:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10797:3:5","subExpression":{"id":1553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"10797:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1555,"nodeType":"ExpressionStatement","src":"10797:3:5"},"nodeType":"ForStatement","src":"10757:118:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1567,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10889:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10902:9:5","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":435,"src":"10889:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1569,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"10915:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10924:16:5","memberName":"AssetDepositType","nodeType":"MemberAccess","referencedDeclaration":400,"src":"10915:25:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetDepositType_$400_$","typeString":"type(enum CoverLib.AssetDepositType)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10941:5:5","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":399,"src":"10915:31:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"src":"10889:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1608,"nodeType":"Block","src":"11162:152:5","statements":[{"assignments":[1593,null],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"success","nameLocation":"11182:7:5","nodeType":"VariableDeclaration","scope":1608,"src":"11177:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1592,"name":"bool","nodeType":"ElementaryTypeName","src":"11177:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1602,"initialValue":{"arguments":[{"hexValue":"","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11238:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1594,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11195:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11199:6:5","memberName":"sender","nodeType":"MemberAccess","src":"11195:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11206:4:5","memberName":"call","nodeType":"MemberAccess","src":"11195:15:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1597,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"11218:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11230:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"11218:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11195:42:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11195:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11176:65:5"},{"expression":{"arguments":[{"id":1604,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"11263:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6174697665206173736574207472616e73666572206661696c6564","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11272:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_fffe776d94f2ccd51a28b9d8a3f3d28cf446dbfa854545f140d0c269f5cfbd82","typeString":"literal_string \"Native asset transfer failed\""},"value":"Native asset transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fffe776d94f2ccd51a28b9d8a3f3d28cf446dbfa854545f140d0c269f5cfbd82","typeString":"literal_string \"Native asset transfer failed\""}],"id":1603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11255:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1607,"nodeType":"ExpressionStatement","src":"11255:48:5"}]},"id":1609,"nodeType":"IfStatement","src":"10885:429:5","trueBody":{"id":1591,"nodeType":"Block","src":"10948:208:5","statements":[{"assignments":[1574],"declarations":[{"constant":false,"id":1574,"mutability":"mutable","name":"success","nameLocation":"10967:7:5","nodeType":"VariableDeclaration","scope":1591,"src":"10962:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1573,"name":"bool","nodeType":"ElementaryTypeName","src":"10962:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1585,"initialValue":{"arguments":[{"expression":{"id":1580,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11030:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11034:6:5","memberName":"sender","nodeType":"MemberAccess","src":"11030:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1582,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"11058:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11070:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"11058:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1576,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10984:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10997:5:5","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":432,"src":"10984:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"10977:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10977:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11004:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":192,"src":"10977:35:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10977:113:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10962:128:5"},{"expression":{"arguments":[{"id":1587,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"11112:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230207472616e73666572206661696c6564","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11121:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff","typeString":"literal_string \"ERC20 transfer failed\""},"value":"ERC20 transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff","typeString":"literal_string \"ERC20 transfer failed\""}],"id":1586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11104:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11104:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1590,"nodeType":"ExpressionStatement","src":"11104:41:5"}]}},{"eventCall":{"arguments":[{"expression":{"id":1611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11338:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11342:6:5","memberName":"sender","nodeType":"MemberAccess","src":"11338:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1613,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"11350:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11362:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"11350:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1615,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"11370:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11383:8:5","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":407,"src":"11370:21:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1610,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"11329:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11329:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1618,"nodeType":"EmitStatement","src":"11324:68:5"}]},"functionSelector":"3dc66ad3","id":1620,"implemented":true,"kind":"function","modifiers":[{"id":1432,"kind":"modifierInvocation","modifierName":{"id":1431,"name":"nonReentrant","nameLocations":["9770:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"9770:12:5"},"nodeType":"ModifierInvocation","src":"9770:12:5"}],"name":"poolWithdraw","nameLocation":"9733:12:5","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"_poolId","nameLocation":"9754:7:5","nodeType":"VariableDeclaration","scope":1620,"src":"9746:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"9746:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9745:17:5"},"returnParameters":{"id":1433,"nodeType":"ParameterList","parameters":[],"src":"9783:0:5"},"scope":2715,"src":"9724:1675:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1772,"nodeType":"Block","src":"11551:1123:5","statements":[{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"mutability":"mutable","name":"selectedPool","nameLocation":"11583:12:5","nodeType":"VariableDeclaration","scope":1772,"src":"11561:34:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":1637,"nodeType":"UserDefinedTypeName","pathNode":{"id":1636,"name":"CoverLib.Pool","nameLocations":["11561:8:5","11570:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"11561:13:5"},"referencedDeclaration":436,"src":"11561:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":1642,"initialValue":{"baseExpression":{"id":1639,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"11598:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1641,"indexExpression":{"id":1640,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"11604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11598:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11561:51:5"},{"assignments":[1647],"declarations":[{"constant":false,"id":1647,"mutability":"mutable","name":"userDeposit","nameLocation":"11648:11:5","nodeType":"VariableDeclaration","scope":1772,"src":"11622:37:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits"},"typeName":{"id":1646,"nodeType":"UserDefinedTypeName","pathNode":{"id":1645,"name":"CoverLib.Deposits","nameLocations":["11622:8:5","11631:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"11622:17:5"},"referencedDeclaration":480,"src":"11622:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits"}},"visibility":"internal"}],"id":1655,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1648,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"11662:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":1650,"indexExpression":{"id":1649,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"11671:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11662:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":1652,"indexExpression":{"id":1651,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"11682:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11662:28:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":1654,"indexExpression":{"id":1653,"name":"pdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11691:3:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11662:33:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11622:73:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1657,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"11714:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11726:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"11714:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11735:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11714:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206465706f73697420666f756e6420666f7220746869732061646472657373","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11738:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_58da2d5c87749dee667e828643fdf1b2656a13f77a7007ea1881f4f567aa7703","typeString":"literal_string \"No deposit found for this address\""},"value":"No deposit found for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58da2d5c87749dee667e828643fdf1b2656a13f77a7007ea1881f4f567aa7703","typeString":"literal_string \"No deposit found for this address\""}],"id":1656,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11706:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11706:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1663,"nodeType":"ExpressionStatement","src":"11706:68:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1665,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"11805:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11817:6:5","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":468,"src":"11805:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1667,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"11827:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11836:6:5","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":505,"src":"11827:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$505_$","typeString":"type(enum CoverLib.Status)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11843:6:5","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":502,"src":"11827:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"src":"11805:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974206973206e6f7420616374697665","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11863:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_48296a4ed98d5eb43248b4110e3a654fc331dd606ad671651b762665c62bbd71","typeString":"literal_string \"Deposit is not active\""},"value":"Deposit is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48296a4ed98d5eb43248b4110e3a654fc331dd606ad671651b762665c62bbd71","typeString":"literal_string \"Deposit is not active\""}],"id":1664,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11784:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11784:112:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1673,"nodeType":"ExpressionStatement","src":"11784:112:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1675,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11927:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11933:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"11927:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1677,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"11946:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11958:10:5","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":474,"src":"11946:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11927:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420706572696f6420686173206e6f7420656e646564","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11982:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_407b518a5440c6945dd5b5dcce4b15951da5cd4e0775edb7adb21c0f2b995362","typeString":"literal_string \"Deposit period has not ended\""},"value":"Deposit period has not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_407b518a5440c6945dd5b5dcce4b15951da5cd4e0775edb7adb21c0f2b995362","typeString":"literal_string \"Deposit period has not ended\""}],"id":1674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11906:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11906:116:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1682,"nodeType":"ExpressionStatement","src":"11906:116:5"},{"expression":{"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1683,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"12033:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12045:6:5","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":468,"src":"12033:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1686,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"12054:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12063:6:5","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":505,"src":"12054:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$505_$","typeString":"type(enum CoverLib.Status)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12070:3:5","memberName":"Due","nodeType":"MemberAccess","referencedDeclaration":503,"src":"12054:19:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"src":"12033:40:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},"id":1690,"nodeType":"ExpressionStatement","src":"12033:40:5"},{"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1691,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12083:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12096:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"12083:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":1694,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"12103:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12115:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"12103:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12083:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"nodeType":"ExpressionStatement","src":"12083:38:5"},{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"baseValue","nameLocation":"12139:9:5","nodeType":"VariableDeclaration","scope":1772,"src":"12131:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"12131:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1712,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1700,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12151:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12164:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"12151:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1702,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12184:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12197:20:5","memberName":"investmentArmPercent","nodeType":"MemberAccess","referencedDeclaration":428,"src":"12184:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1704,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12220:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12233:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"12220:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12184:52:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12183:54:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12240:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"12183:60:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12182:62:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12151:93:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12131:113:5"},{"assignments":[1714],"declarations":[{"constant":false,"id":1714,"mutability":"mutable","name":"coverTvl","nameLocation":"12263:8:5","nodeType":"VariableDeclaration","scope":1772,"src":"12255:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"12255:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1719,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1715,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"12274:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1716,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12286:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12299:8:5","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":430,"src":"12286:21:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12274:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12255:52:5"},{"expression":{"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1720,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12317:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12330:8:5","memberName":"coverTvl","nodeType":"MemberAccess","referencedDeclaration":420,"src":"12317:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1723,"name":"coverTvl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"12341:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12317:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1725,"nodeType":"ExpressionStatement","src":"12317:32:5"},{"expression":{"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1726,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12359:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12372:9:5","memberName":"baseValue","nodeType":"MemberAccess","referencedDeclaration":418,"src":"12359:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1729,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"12384:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12359:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1731,"nodeType":"ExpressionStatement","src":"12359:34:5"},{"assignments":[1737],"declarations":[{"constant":false,"id":1737,"mutability":"mutable","name":"poolCovers","nameLocation":"12427:10:5","nodeType":"VariableDeclaration","scope":1772,"src":"12403:34:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":1735,"nodeType":"UserDefinedTypeName","pathNode":{"id":1734,"name":"CoverLib.Cover","nameLocations":["12403:8:5","12412:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"12403:14:5"},"referencedDeclaration":367,"src":"12403:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":1736,"nodeType":"ArrayTypeName","src":"12403:16:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":1741,"initialValue":{"arguments":[{"id":1739,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"12454:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1738,"name":"getPoolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"12440:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (struct CoverLib.Cover memory[] memory)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12440:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12403:59:5"},{"body":{"id":1762,"nodeType":"Block","src":"12517:73:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1756,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"12562:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":1758,"indexExpression":{"id":1757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"12573:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12562:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":1759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12576:2:5","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":345,"src":"12562:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1753,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"12531:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12546:15:5","memberName":"updateMaxAmount","nodeType":"MemberAccess","referencedDeclaration":517,"src":"12531:30:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12531:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"ExpressionStatement","src":"12531:48:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"12489:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1747,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"12493:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12504:6:5","memberName":"length","nodeType":"MemberAccess","src":"12493:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12489:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1763,"initializationExpression":{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"i","nameLocation":"12482:1:5","nodeType":"VariableDeclaration","scope":1763,"src":"12477:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint","nodeType":"ElementaryTypeName","src":"12477:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1745,"initialValue":{"hexValue":"30","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12486:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12477:10:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12512:3:5","subExpression":{"id":1750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"12512:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1752,"nodeType":"ExpressionStatement","src":"12512:3:5"},"nodeType":"ForStatement","src":"12472:118:5"},{"eventCall":{"arguments":[{"id":1765,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"12614:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1766,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"12625:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits storage pointer"}},"id":1767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12637:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"12625:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1768,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12645:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12658:8:5","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":407,"src":"12645:21:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1764,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"12605:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12605:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1771,"nodeType":"EmitStatement","src":"12600:67:5"}]},"functionSelector":"83bc6357","id":1773,"implemented":true,"kind":"function","modifiers":[{"id":1630,"kind":"modifierInvocation","modifierName":{"id":1629,"name":"nonReentrant","nameLocations":["11528:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"11528:12:5"},"nodeType":"ModifierInvocation","src":"11528:12:5"},{"id":1632,"kind":"modifierInvocation","modifierName":{"id":1631,"name":"onlyVault","nameLocations":["11541:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":2714,"src":"11541:9:5"},"nodeType":"ModifierInvocation","src":"11541:9:5"}],"name":"withdrawUpdate","nameLocation":"11414:14:5","nodeType":"FunctionDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"depositor","nameLocation":"11446:9:5","nodeType":"VariableDeclaration","scope":1773,"src":"11438:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"11438:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"_poolId","nameLocation":"11473:7:5","nodeType":"VariableDeclaration","scope":1773,"src":"11465:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"11465:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"pdt","nameLocation":"11511:3:5","nodeType":"VariableDeclaration","scope":1773,"src":"11490:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"},"typeName":{"id":1626,"nodeType":"UserDefinedTypeName","pathNode":{"id":1625,"name":"CoverLib.DepositType","nameLocations":["11490:8:5","11499:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"11490:20:5"},"referencedDeclaration":403,"src":"11490:20:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"visibility":"internal"}],"src":"11428:92:5"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[],"src":"11551:0:5"},"scope":2715,"src":"11405:1269:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1868,"nodeType":"Block","src":"12741:858:5","statements":[{"assignments":[1784],"declarations":[{"constant":false,"id":1784,"mutability":"mutable","name":"userVaultDeposit","nameLocation":"12778:16:5","nodeType":"VariableDeclaration","scope":1868,"src":"12751:43:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$609_memory_ptr","typeString":"struct IVault.VaultDeposit"},"typeName":{"id":1783,"nodeType":"UserDefinedTypeName","pathNode":{"id":1782,"name":"IVault.VaultDeposit","nameLocations":["12751:6:5","12758:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":609,"src":"12751:19:5"},"referencedDeclaration":609,"src":"12751:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$609_storage_ptr","typeString":"struct IVault.VaultDeposit"}},"visibility":"internal"}],"id":1791,"initialValue":{"arguments":[{"id":1787,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"12845:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12855:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12859:6:5","memberName":"sender","nodeType":"MemberAccess","src":"12855:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1785,"name":"IVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"12797:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$628","typeString":"contract IVault"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12825:19:5","memberName":"getUserVaultDeposit","nodeType":"MemberAccess","referencedDeclaration":627,"src":"12797:47:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_struct$_VaultDeposit_$609_memory_ptr_$","typeString":"function (uint256,address) view external returns (struct IVault.VaultDeposit memory)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12797:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$609_memory_ptr","typeString":"struct IVault.VaultDeposit memory"}},"nodeType":"VariableDeclarationStatement","src":"12751:115:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1793,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12884:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$609_memory_ptr","typeString":"struct IVault.VaultDeposit memory"}},"id":1794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12901:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":593,"src":"12884:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12910:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12884:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20616374697665207769746864726177616c20666f722075736572","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12913:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a2d11a456ba91e4c4e8314580c8accd4f391e83095084b4f5db69e0bee713d6","typeString":"literal_string \"No active withdrawal for user\""},"value":"No active withdrawal for user"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a2d11a456ba91e4c4e8314580c8accd4f391e83095084b4f5db69e0bee713d6","typeString":"literal_string \"No active withdrawal for user\""}],"id":1792,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12876:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12876:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1799,"nodeType":"ExpressionStatement","src":"12876:69:5"},{"assignments":[1804],"declarations":[{"constant":false,"id":1804,"mutability":"mutable","name":"vault","nameLocation":"12975:5:5","nodeType":"VariableDeclaration","scope":1868,"src":"12955:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$589_memory_ptr","typeString":"struct IVault.Vault"},"typeName":{"id":1803,"nodeType":"UserDefinedTypeName","pathNode":{"id":1802,"name":"IVault.Vault","nameLocations":["12955:6:5","12962:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":589,"src":"12955:12:5"},"referencedDeclaration":589,"src":"12955:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$589_storage_ptr","typeString":"struct IVault.Vault"}},"visibility":"internal"}],"id":1809,"initialValue":{"arguments":[{"id":1807,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"13007:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1805,"name":"IVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"12983:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$628","typeString":"contract IVault"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12998:8:5","memberName":"getVault","nodeType":"MemberAccess","referencedDeclaration":617,"src":"12983:23:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$589_memory_ptr_$","typeString":"function (uint256) view external returns (struct IVault.Vault memory)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$589_memory_ptr","typeString":"struct IVault.Vault memory"}},"nodeType":"VariableDeclarationStatement","src":"12955:61:5"},{"assignments":[1814],"declarations":[{"constant":false,"id":1814,"mutability":"mutable","name":"adt","nameLocation":"13052:3:5","nodeType":"VariableDeclaration","scope":1868,"src":"13026:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":1813,"nodeType":"UserDefinedTypeName","pathNode":{"id":1812,"name":"CoverLib.AssetDepositType","nameLocations":["13026:8:5","13035:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":400,"src":"13026:25:5"},"referencedDeclaration":400,"src":"13026:25:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"}],"id":1817,"initialValue":{"expression":{"id":1815,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"13058:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$589_memory_ptr","typeString":"struct IVault.Vault memory"}},"id":1816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13064:9:5","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":586,"src":"13058:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"VariableDeclarationStatement","src":"13026:47:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1818,"name":"adt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"13087:3:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1819,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"13094:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13103:16:5","memberName":"AssetDepositType","nodeType":"MemberAccess","referencedDeclaration":400,"src":"13094:25:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetDepositType_$400_$","typeString":"type(enum CoverLib.AssetDepositType)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13120:5:5","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":399,"src":"13094:31:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"src":"13087:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1858,"nodeType":"Block","src":"13339:187:5","statements":[{"assignments":[1843,null],"declarations":[{"constant":false,"id":1843,"mutability":"mutable","name":"success","nameLocation":"13359:7:5","nodeType":"VariableDeclaration","scope":1858,"src":"13354:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1842,"name":"bool","nodeType":"ElementaryTypeName","src":"13354:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1852,"initialValue":{"arguments":[{"hexValue":"","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13437:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13372:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13376:6:5","memberName":"sender","nodeType":"MemberAccess","src":"13372:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13383:4:5","memberName":"call","nodeType":"MemberAccess","src":"13372:15:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1847,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"13395:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$609_memory_ptr","typeString":"struct IVault.VaultDeposit memory"}},"id":1848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13412:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":593,"src":"13395:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13372:47:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13372:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13353:100:5"},{"expression":{"arguments":[{"id":1854,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"13475:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6174697665206173736574207472616e73666572206661696c6564","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13484:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_fffe776d94f2ccd51a28b9d8a3f3d28cf446dbfa854545f140d0c269f5cfbd82","typeString":"literal_string \"Native asset transfer failed\""},"value":"Native asset transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fffe776d94f2ccd51a28b9d8a3f3d28cf446dbfa854545f140d0c269f5cfbd82","typeString":"literal_string \"Native asset transfer failed\""}],"id":1853,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13467:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13467:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1857,"nodeType":"ExpressionStatement","src":"13467:48:5"}]},"id":1859,"nodeType":"IfStatement","src":"13083:443:5","trueBody":{"id":1841,"nodeType":"Block","src":"13127:206:5","statements":[{"assignments":[1824],"declarations":[{"constant":false,"id":1824,"mutability":"mutable","name":"success","nameLocation":"13146:7:5","nodeType":"VariableDeclaration","scope":1841,"src":"13141:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1823,"name":"bool","nodeType":"ElementaryTypeName","src":"13141:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1835,"initialValue":{"arguments":[{"expression":{"id":1830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13202:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13206:6:5","memberName":"sender","nodeType":"MemberAccess","src":"13202:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1832,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"13230:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$609_memory_ptr","typeString":"struct IVault.VaultDeposit memory"}},"id":1833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13247:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":593,"src":"13230:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1826,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"13163:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$589_memory_ptr","typeString":"struct IVault.Vault memory"}},"id":1827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13169:5:5","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":588,"src":"13163:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1825,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"13156:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13156:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13176:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":192,"src":"13156:28:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13156:111:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13141:126:5"},{"expression":{"arguments":[{"id":1837,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"13289:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230207472616e73666572206661696c6564","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13298:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff","typeString":"literal_string \"ERC20 transfer failed\""},"value":"ERC20 transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff","typeString":"literal_string \"ERC20 transfer failed\""}],"id":1836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13281:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13281:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1840,"nodeType":"ExpressionStatement","src":"13281:41:5"}]}},{"expression":{"arguments":[{"id":1863,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"13571:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1864,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13581:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13585:6:5","memberName":"sender","nodeType":"MemberAccess","src":"13581:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1860,"name":"IVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"13536:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$628","typeString":"contract IVault"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13551:19:5","memberName":"getUserVaultDeposit","nodeType":"MemberAccess","referencedDeclaration":627,"src":"13536:34:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_struct$_VaultDeposit_$609_memory_ptr_$","typeString":"function (uint256,address) view external returns (struct IVault.VaultDeposit memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13536:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$609_memory_ptr","typeString":"struct IVault.VaultDeposit memory"}},"id":1867,"nodeType":"ExpressionStatement","src":"13536:56:5"}]},"functionSelector":"fb839dda","id":1869,"implemented":true,"kind":"function","modifiers":[{"id":1778,"kind":"modifierInvocation","modifierName":{"id":1777,"name":"nonReentrant","nameLocations":["12728:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"12728:12:5"},"nodeType":"ModifierInvocation","src":"12728:12:5"}],"name":"vaultWithdraw","nameLocation":"12689:13:5","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"_vaultId","nameLocation":"12711:8:5","nodeType":"VariableDeclaration","scope":1869,"src":"12703:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"12703:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12702:18:5"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[],"src":"12741:0:5"},"scope":2715,"src":"12680:919:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2218,"nodeType":"Block","src":"13735:3333:5","statements":[{"assignments":[1885],"declarations":[{"constant":false,"id":1885,"mutability":"mutable","name":"selectedPool","nameLocation":"13767:12:5","nodeType":"VariableDeclaration","scope":2218,"src":"13745:34:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":1884,"nodeType":"UserDefinedTypeName","pathNode":{"id":1883,"name":"CoverLib.Pool","nameLocations":["13745:8:5","13754:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"13745:13:5"},"referencedDeclaration":436,"src":"13745:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":1890,"initialValue":{"baseExpression":{"id":1886,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"13782:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":1889,"indexExpression":{"expression":{"id":1887,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"13788:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13801:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":330,"src":"13788:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13782:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13745:63:5"},{"expression":{"arguments":[{"expression":{"id":1892,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"13827:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13840:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":424,"src":"13827:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20697320696e616374697665206f7220646f6573206e6f74206578697374","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13850:36:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3bdbe02ca2c319551cf3c55fb82f04752a3d92a6c0da8425b86f1cad70392d3","typeString":"literal_string \"Pool is inactive or does not exist\""},"value":"Pool is inactive or does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3bdbe02ca2c319551cf3c55fb82f04752a3d92a6c0da8425b86f1cad70392d3","typeString":"literal_string \"Pool is inactive or does not exist\""}],"id":1891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13819:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1896,"nodeType":"ExpressionStatement","src":"13819:68:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1898,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"13918:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13931:9:5","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":435,"src":"13918:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1900,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"13944:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13957:3:5","memberName":"adt","nodeType":"MemberAccess","referencedDeclaration":340,"src":"13944:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"src":"13918:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20646f6573206e6f74206163636570742074686973206465706f7369742074797065","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13974:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6bf4a2c12578cc6bfbdb7b81697b5b10f97298a8f87195107d238f015a7b6bef","typeString":"literal_string \"Pool does not accept this deposit type\""},"value":"Pool does not accept this deposit type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6bf4a2c12578cc6bfbdb7b81697b5b10f97298a8f87195107d238f015a7b6bef","typeString":"literal_string \"Pool does not accept this deposit type\""}],"id":1897,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13897:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13897:127:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1905,"nodeType":"ExpressionStatement","src":"13897:127:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1907,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14055:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14068:6:5","memberName":"period","nodeType":"MemberAccess","referencedDeclaration":334,"src":"14055:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1909,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"14078:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14091:9:5","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":414,"src":"14078:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14055:45:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506572696f6420746f6f2073686f7274","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14114:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_21de13501f6c9101077616c240a2e1030bb87907f13a0dee34093ff4454ce498","typeString":"literal_string \"Period too short\""},"value":"Period too short"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21de13501f6c9101077616c240a2e1030bb87907f13a0dee34093ff4454ce498","typeString":"literal_string \"Period too short\""}],"id":1906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14034:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14034:108:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1914,"nodeType":"ExpressionStatement","src":"14034:108:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1916,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"14173:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14186:5:5","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":432,"src":"14173:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1918,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14195:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14208:5:5","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":342,"src":"14195:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14173:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20646f6573206e6f74206163636570742074686973206173736574","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14227:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7048929c06a2228d5230585f11fdf18bf39d8f92f838f3a09898b19221671c54","typeString":"literal_string \"Pool does not accept this asset\""},"value":"Pool does not accept this asset"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7048929c06a2228d5230585f11fdf18bf39d8f92f838f3a09898b19221671c54","typeString":"literal_string \"Pool does not accept this asset\""}],"id":1915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14152:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14152:118:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1923,"nodeType":"ExpressionStatement","src":"14152:118:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1925,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"14301:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":1928,"indexExpression":{"expression":{"id":1926,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14310:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14323:9:5","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":328,"src":"14310:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14301:32:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":1931,"indexExpression":{"expression":{"id":1929,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14334:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14347:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":330,"src":"14334:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14301:53:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":1934,"indexExpression":{"expression":{"id":1932,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14372:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14385:3:5","memberName":"pdt","nodeType":"MemberAccess","referencedDeclaration":337,"src":"14372:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14301:101:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"id":1935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14403:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":461,"src":"14301:108:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14413:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14301:113:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365722068617320616c7265616479206465706f736974656420696e746f207468697320706f6f6c","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14428:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_346264bd86700370944e67c832547fe302e13eab8a0f3e5a838a19c6481e067c","typeString":"literal_string \"User has already deposited into this pool\""},"value":"User has already deposited into this pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_346264bd86700370944e67c832547fe302e13eab8a0f3e5a838a19c6481e067c","typeString":"literal_string \"User has already deposited into this pool\""}],"id":1924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14280:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14280:201:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1940,"nodeType":"ExpressionStatement","src":"14280:201:5"},{"assignments":[1942],"declarations":[{"constant":false,"id":1942,"mutability":"mutable","name":"price","nameLocation":"14500:5:5","nodeType":"VariableDeclaration","scope":2218,"src":"14492:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"14492:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1943,"nodeType":"VariableDeclarationStatement","src":"14492:13:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1944,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"14520:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14533:9:5","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":435,"src":"14520:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1946,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"14546:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14555:16:5","memberName":"AssetDepositType","nodeType":"MemberAccess","referencedDeclaration":400,"src":"14546:25:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetDepositType_$400_$","typeString":"type(enum CoverLib.AssetDepositType)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14572:5:5","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":399,"src":"14546:31:5","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$400","typeString":"enum CoverLib.AssetDepositType"}},"src":"14520:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2006,"nodeType":"Block","src":"14944:147:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1987,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14966:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14970:5:5","memberName":"value","nodeType":"MemberAccess","src":"14966:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14978:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14966:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f7369742063616e6e6f74206265207a65726f","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14981:24:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fa56e6d851c20a6032b89a91e69ca21eef4e69d4e4bad687ca29256d1abd984","typeString":"literal_string \"Deposit cannot be zero\""},"value":"Deposit cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fa56e6d851c20a6032b89a91e69ca21eef4e69d4e4bad687ca29256d1abd984","typeString":"literal_string \"Deposit cannot be zero\""}],"id":1986,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14958:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14958:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1993,"nodeType":"ExpressionStatement","src":"14958:48:5"},{"expression":{"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1994,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"15020:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15033:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"15020:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1997,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15040:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15044:5:5","memberName":"value","nodeType":"MemberAccess","src":"15040:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15020:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2000,"nodeType":"ExpressionStatement","src":"15020:29:5"},{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2001,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"15063:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15071:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15075:5:5","memberName":"value","nodeType":"MemberAccess","src":"15071:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15063:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"15063:17:5"}]},"id":2007,"nodeType":"IfStatement","src":"14516:575:5","trueBody":{"id":1985,"nodeType":"Block","src":"14579:359:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1951,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14601:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14614:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":332,"src":"14601:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14623:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14601:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14626:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":1950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14593:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14593:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1957,"nodeType":"ExpressionStatement","src":"14593:65:5"},{"expression":{"arguments":[{"expression":{"id":1963,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14729:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14742:9:5","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":328,"src":"14729:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1967,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14777:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_InsurancePool_$2715","typeString":"contract InsurancePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsurancePool_$2715","typeString":"contract InsurancePool"}],"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14769:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"14769:7:5","typeDescriptions":{}}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14769:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1969,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14800:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14813:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":332,"src":"14800:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1959,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14679:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14692:5:5","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":342,"src":"14679:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1958,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"14672:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14672:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14699:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":224,"src":"14672:39:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14672:161:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1972,"nodeType":"ExpressionStatement","src":"14672:161:5"},{"expression":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1973,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"14847:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":1975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14860:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"14847:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1976,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14867:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14880:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":332,"src":"14867:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14847:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1979,"nodeType":"ExpressionStatement","src":"14847:39:5"},{"expression":{"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1980,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"14900:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1981,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"14908:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":1982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14921:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":332,"src":"14908:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14900:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1984,"nodeType":"ExpressionStatement","src":"14900:27:5"}]}},{"assignments":[2009],"declarations":[{"constant":false,"id":2009,"mutability":"mutable","name":"baseValue","nameLocation":"15109:9:5","nodeType":"VariableDeclaration","scope":2218,"src":"15101:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"15101:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2022,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2010,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"15121:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15134:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"15121:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2012,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"15154:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15167:20:5","memberName":"investmentArmPercent","nodeType":"MemberAccess","referencedDeclaration":428,"src":"15154:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2014,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"15190:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15203:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"15190:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15154:52:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15153:54:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15210:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"15153:60:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15152:62:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15121:93:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15101:113:5"},{"assignments":[2024],"declarations":[{"constant":false,"id":2024,"mutability":"mutable","name":"coverTvl","nameLocation":"15233:8:5","nodeType":"VariableDeclaration","scope":2218,"src":"15225:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"15225:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2029,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2025,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"15244:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2026,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"15256:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15269:8:5","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":430,"src":"15256:21:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"15244:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15225:52:5"},{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2030,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"15288:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15301:8:5","memberName":"coverTvl","nodeType":"MemberAccess","referencedDeclaration":420,"src":"15288:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2033,"name":"coverTvl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"15312:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15288:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"15288:32:5"},{"expression":{"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2036,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"15330:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15343:9:5","memberName":"baseValue","nodeType":"MemberAccess","referencedDeclaration":418,"src":"15330:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2039,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"15355:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15330:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2041,"nodeType":"ExpressionStatement","src":"15330:34:5"},{"assignments":[2043],"declarations":[{"constant":false,"id":2043,"mutability":"mutable","name":"dailyPayout","nameLocation":"15383:11:5","nodeType":"VariableDeclaration","scope":2218,"src":"15375:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"15375:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2053,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"15398:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2045,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"15406:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15419:3:5","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":412,"src":"15406:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15398:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15397:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15426:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"15397:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"333635","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15432:3:5","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"src":"15397:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15375:60:5"},{"assignments":[2058],"declarations":[{"constant":false,"id":2058,"mutability":"mutable","name":"userDeposit","nameLocation":"15470:11:5","nodeType":"VariableDeclaration","scope":2218,"src":"15445:36:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits"},"typeName":{"id":2057,"nodeType":"UserDefinedTypeName","pathNode":{"id":2056,"name":"CoverLib.Deposits","nameLocations":["15445:8:5","15454:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"15445:17:5"},"referencedDeclaration":480,"src":"15445:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits"}},"visibility":"internal"}],"id":2086,"initialValue":{"arguments":[{"expression":{"id":2061,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"15520:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15533:9:5","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":328,"src":"15520:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2063,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"15564:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2064,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"15591:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15604:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":330,"src":"15591:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2066,"name":"dailyPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"15637:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":2067,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"15670:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15679:6:5","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":505,"src":"15670:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$505_$","typeString":"type(enum CoverLib.Status)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15686:6:5","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":502,"src":"15670:22:5","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"}},{"expression":{"id":2070,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"15716:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15729:6:5","memberName":"period","nodeType":"MemberAccess","referencedDeclaration":334,"src":"15716:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2072,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15760:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15766:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"15760:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2074,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15801:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15807:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"15801:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2076,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"15820:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15833:6:5","memberName":"period","nodeType":"MemberAccess","referencedDeclaration":334,"src":"15820:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15842:6:5","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"15820:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15819:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:48:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15878:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":2083,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"15898:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15911:3:5","memberName":"pdt","nodeType":"MemberAccess","referencedDeclaration":337,"src":"15898:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$505","typeString":"enum CoverLib.Status"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}],"expression":{"id":2059,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"15484:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15493:8:5","memberName":"Deposits","nodeType":"MemberAccess","referencedDeclaration":480,"src":"15484:17:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Deposits_$480_storage_ptr_$","typeString":"type(struct CoverLib.Deposits storage pointer)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15516:2:5","15556:6:5","15583:6:5","15624:11:5","15662:6:5","15706:8:5","15749:9:5","15789:10:5","15863:13:5","15893:3:5"],"names":["lp","amount","poolId","dailyPayout","status","daysLeft","startDate","expiryDate","accruedPayout","pdt"],"nodeType":"FunctionCall","src":"15484:441:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"nodeType":"VariableDeclarationStatement","src":"15445:480:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2087,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"15940:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15953:3:5","memberName":"pdt","nodeType":"MemberAccess","referencedDeclaration":337,"src":"15940:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2089,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"15960:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15969:11:5","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":403,"src":"15960:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$403_$","typeString":"type(enum CoverLib.DepositType)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15981:6:5","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":401,"src":"15960:27:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"src":"15940:47:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2122,"nodeType":"Block","src":"16146:150:5","statements":[{"expression":{"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2108,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"16160:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":2116,"indexExpression":{"expression":{"id":2109,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16169:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16182:9:5","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":328,"src":"16169:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16160:32:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":2117,"indexExpression":{"expression":{"id":2111,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16193:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16206:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":330,"src":"16193:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16160:53:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":2118,"indexExpression":{"expression":{"expression":{"id":2113,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"16231:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16240:11:5","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":403,"src":"16231:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$403_$","typeString":"type(enum CoverLib.DepositType)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16252:5:5","memberName":"Vault","nodeType":"MemberAccess","referencedDeclaration":402,"src":"16231:26:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16160:111:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2119,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"16274:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"src":"16160:125:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"id":2121,"nodeType":"ExpressionStatement","src":"16160:125:5"}]},"id":2123,"nodeType":"IfStatement","src":"15936:360:5","trueBody":{"id":2107,"nodeType":"Block","src":"15989:151:5","statements":[{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2093,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"16003:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":2101,"indexExpression":{"expression":{"id":2094,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16012:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16025:9:5","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":328,"src":"16012:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16003:32:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":2102,"indexExpression":{"expression":{"id":2096,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16036:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16049:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":330,"src":"16036:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16003:53:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":2103,"indexExpression":{"expression":{"expression":{"id":2098,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"16074:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16083:11:5","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":403,"src":"16074:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$403_$","typeString":"type(enum CoverLib.DepositType)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16095:6:5","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":401,"src":"16074:27:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16003:112:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2104,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"16118:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"src":"16003:126:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"id":2106,"nodeType":"ExpressionStatement","src":"16003:126:5"}]}},{"assignments":[2129],"declarations":[{"constant":false,"id":2129,"mutability":"mutable","name":"poolCovers","nameLocation":"16330:10:5","nodeType":"VariableDeclaration","scope":2218,"src":"16306:34:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":2127,"nodeType":"UserDefinedTypeName","pathNode":{"id":2126,"name":"CoverLib.Cover","nameLocations":["16306:8:5","16315:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"16306:14:5"},"referencedDeclaration":367,"src":"16306:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":2128,"nodeType":"ArrayTypeName","src":"16306:16:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":2134,"initialValue":{"arguments":[{"expression":{"id":2131,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16357:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16370:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":330,"src":"16357:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2130,"name":"getPoolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"16343:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (struct CoverLib.Cover memory[] memory)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16343:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16306:71:5"},{"body":{"id":2155,"nodeType":"Block","src":"16432:73:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2149,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"16477:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":2151,"indexExpression":{"id":2150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"16488:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16477:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":2152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16491:2:5","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":345,"src":"16477:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2146,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"16446:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16461:15:5","memberName":"updateMaxAmount","nodeType":"MemberAccess","referencedDeclaration":517,"src":"16446:30:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16446:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2154,"nodeType":"ExpressionStatement","src":"16446:48:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"16404:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2140,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"16408:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16419:6:5","memberName":"length","nodeType":"MemberAccess","src":"16408:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16404:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2156,"initializationExpression":{"assignments":[2136],"declarations":[{"constant":false,"id":2136,"mutability":"mutable","name":"i","nameLocation":"16397:1:5","nodeType":"VariableDeclaration","scope":2156,"src":"16392:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint","nodeType":"ElementaryTypeName","src":"16392:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2138,"initialValue":{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16401:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16392:10:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16427:3:5","subExpression":{"id":2143,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"16427:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2145,"nodeType":"ExpressionStatement","src":"16427:3:5"},"nodeType":"ForStatement","src":"16387:118:5"},{"assignments":[2158],"declarations":[{"constant":false,"id":2158,"mutability":"mutable","name":"userExists","nameLocation":"16520:10:5","nodeType":"VariableDeclaration","scope":2218,"src":"16515:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2157,"name":"bool","nodeType":"ElementaryTypeName","src":"16515:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2160,"initialValue":{"hexValue":"66616c7365","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16533:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"16515:23:5"},{"body":{"id":2185,"nodeType":"Block","src":"16595:144:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2172,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"16613:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2174,"indexExpression":{"id":2173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"16626:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16613:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2175,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16632:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16645:9:5","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":328,"src":"16632:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16613:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2184,"nodeType":"IfStatement","src":"16609:120:5","trueBody":{"id":2183,"nodeType":"Block","src":"16656:73:5","statements":[{"expression":{"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2178,"name":"userExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"16674:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16687:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"16674:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2181,"nodeType":"ExpressionStatement","src":"16674:17:5"},{"id":2182,"nodeType":"Break","src":"16709:5:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"16565:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2166,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"16569:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16582:6:5","memberName":"length","nodeType":"MemberAccess","src":"16569:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16565:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2186,"initializationExpression":{"assignments":[2162],"declarations":[{"constant":false,"id":2162,"mutability":"mutable","name":"i","nameLocation":"16558:1:5","nodeType":"VariableDeclaration","scope":2186,"src":"16553:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint","nodeType":"ElementaryTypeName","src":"16553:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2164,"initialValue":{"hexValue":"30","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16562:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16553:10:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16590:3:5","subExpression":{"id":2169,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"16590:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2171,"nodeType":"ExpressionStatement","src":"16590:3:5"},"nodeType":"ForStatement","src":"16548:191:5"},{"condition":{"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16753:11:5","subExpression":{"id":2187,"name":"userExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"16754:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2197,"nodeType":"IfStatement","src":"16749:83:5","trueBody":{"id":2196,"nodeType":"Block","src":"16766:66:5","statements":[{"expression":{"arguments":[{"expression":{"id":2192,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16798:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16811:9:5","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":328,"src":"16798:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2189,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"16780:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16793:4:5","memberName":"push","nodeType":"MemberAccess","src":"16780:17:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16780:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2195,"nodeType":"ExpressionStatement","src":"16780:41:5"}]}},{"expression":{"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2198,"name":"participation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"16842:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2201,"indexExpression":{"expression":{"id":2199,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16856:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16869:9:5","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":328,"src":"16856:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16842:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16883:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16842:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2204,"nodeType":"ExpressionStatement","src":"16842:42:5"},{"eventCall":{"arguments":[{"expression":{"id":2206,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16923:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16936:9:5","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":328,"src":"16923:22:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2208,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"16959:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":2209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16972:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":332,"src":"16959:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2210,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"16992:12:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17005:8:5","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":407,"src":"16992:21:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2205,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"16900:9:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16900:123:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2213,"nodeType":"EmitStatement","src":"16895:128:5"},{"expression":{"components":[{"id":2214,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"17042:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2215,"name":"dailyPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"17049:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17041:20:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":1880,"id":2217,"nodeType":"Return","src":"17034:27:5"}]},"functionSelector":"2607b539","id":2219,"implemented":true,"kind":"function","modifiers":[{"id":1875,"kind":"modifierInvocation","modifierName":{"id":1874,"name":"nonReentrant","nameLocations":["13695:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"13695:12:5"},"nodeType":"ModifierInvocation","src":"13695:12:5"}],"name":"deposit","nameLocation":"13614:7:5","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"depositParam","nameLocation":"13661:12:5","nodeType":"VariableDeclaration","scope":2219,"src":"13631:42:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_memory_ptr","typeString":"struct CoverLib.DepositParams"},"typeName":{"id":1871,"nodeType":"UserDefinedTypeName","pathNode":{"id":1870,"name":"CoverLib.DepositParams","nameLocations":["13631:8:5","13640:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":343,"src":"13631:22:5"},"referencedDeclaration":343,"src":"13631:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$343_storage_ptr","typeString":"struct CoverLib.DepositParams"}},"visibility":"internal"}],"src":"13621:58:5"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2219,"src":"13717:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"13717:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2219,"src":"13726:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"13726:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13716:18:5"},"scope":2715,"src":"13605:3463:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2371,"nodeType":"Block","src":"17143:1342:5","statements":[{"assignments":[2230],"declarations":[{"constant":false,"id":2230,"mutability":"mutable","name":"proposal","nameLocation":"17174:8:5","nodeType":"VariableDeclaration","scope":2371,"src":"17153:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$691_memory_ptr","typeString":"struct IGov.Proposal"},"typeName":{"id":2229,"nodeType":"UserDefinedTypeName","pathNode":{"id":2228,"name":"IGov.Proposal","nameLocations":["17153:4:5","17158:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":691,"src":"17153:13:5"},"referencedDeclaration":691,"src":"17153:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$691_storage_ptr","typeString":"struct IGov.Proposal"}},"visibility":"internal"}],"id":2235,"initialValue":{"arguments":[{"id":2233,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"17237:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2231,"name":"IGovernanceContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"17185:19:5","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$718","typeString":"contract IGov"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17205:18:5","memberName":"getProposalDetails","nodeType":"MemberAccess","referencedDeclaration":705,"src":"17185:38:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$_t_struct$_Proposal_$691_memory_ptr_$","typeString":"function (uint256) external returns (struct IGov.Proposal memory)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17185:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$691_memory_ptr","typeString":"struct IGov.Proposal memory"}},"nodeType":"VariableDeclarationStatement","src":"17153:105:5"},{"assignments":[2240],"declarations":[{"constant":false,"id":2240,"mutability":"mutable","name":"proposalParam","nameLocation":"17295:13:5","nodeType":"VariableDeclaration","scope":2371,"src":"17268:40:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams"},"typeName":{"id":2239,"nodeType":"UserDefinedTypeName","pathNode":{"id":2238,"name":"IGov.ProposalParams","nameLocations":["17268:4:5","17273:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":670,"src":"17268:19:5"},"referencedDeclaration":670,"src":"17268:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_storage_ptr","typeString":"struct IGov.ProposalParams"}},"visibility":"internal"}],"id":2243,"initialValue":{"expression":{"id":2241,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"17311:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$691_memory_ptr","typeString":"struct IGov.Proposal memory"}},"id":2242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17320:13:5","memberName":"proposalParam","nodeType":"MemberAccess","referencedDeclaration":690,"src":"17311:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"nodeType":"VariableDeclarationStatement","src":"17268:65:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalStaus_$697","typeString":"enum IGov.ProposalStaus"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2245,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"17364:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$691_memory_ptr","typeString":"struct IGov.Proposal memory"}},"id":2246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17373:6:5","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":685,"src":"17364:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalStaus_$697","typeString":"enum IGov.ProposalStaus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2247,"name":"IGov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"17383:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGov_$718_$","typeString":"type(contract IGov)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17388:13:5","memberName":"ProposalStaus","nodeType":"MemberAccess","referencedDeclaration":697,"src":"17383:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalStaus_$697_$","typeString":"type(enum IGov.ProposalStaus)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17402:8:5","memberName":"Approved","nodeType":"MemberAccess","referencedDeclaration":694,"src":"17383:27:5","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalStaus_$697","typeString":"enum IGov.ProposalStaus"}},"src":"17364:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":2251,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"17414:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$691_memory_ptr","typeString":"struct IGov.Proposal memory"}},"id":2252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17423:8:5","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":687,"src":"17414:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17364:67:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206e6f7420617070726f766564","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17445:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f177eda02be1742eefba0406153f330748d4145cbb1de623a041aa2ef2fae791","typeString":"literal_string \"Proposal not approved\""},"value":"Proposal not approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f177eda02be1742eefba0406153f330748d4145cbb1de623a041aa2ef2fae791","typeString":"literal_string \"Proposal not approved\""}],"id":2244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17343:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:135:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2256,"nodeType":"ExpressionStatement","src":"17343:135:5"},{"assignments":[2261],"declarations":[{"constant":false,"id":2261,"mutability":"mutable","name":"pool","nameLocation":"17510:4:5","nodeType":"VariableDeclaration","scope":2371,"src":"17488:26:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":2260,"nodeType":"UserDefinedTypeName","pathNode":{"id":2259,"name":"CoverLib.Pool","nameLocations":["17488:8:5","17497:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"17488:13:5"},"referencedDeclaration":436,"src":"17488:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":2266,"initialValue":{"baseExpression":{"id":2262,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"17517:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":2265,"indexExpression":{"expression":{"id":2263,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"17523:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17537:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":667,"src":"17523:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17517:27:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17488:56:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2268,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17562:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17566:6:5","memberName":"sender","nodeType":"MemberAccess","src":"17562:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2270,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"17576:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17590:4:5","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":656,"src":"17576:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17562:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612076616c69642070726f706f73616c","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17596:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_209c70671bd902cdf2bc9a9744a79fac0cb112816b37468741249b8a2648d1b5","typeString":"literal_string \"Not a valid proposal\""},"value":"Not a valid proposal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_209c70671bd902cdf2bc9a9744a79fac0cb112816b37468741249b8a2648d1b5","typeString":"literal_string \"Not a valid proposal\""}],"id":2267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17554:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17554:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2275,"nodeType":"ExpressionStatement","src":"17554:65:5"},{"expression":{"arguments":[{"expression":{"id":2277,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"17637:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17642:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":424,"src":"17637:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c206973206e6f7420616374697665","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17652:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767","typeString":"literal_string \"Pool is not active\""},"value":"Pool is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767","typeString":"literal_string \"Pool is not active\""}],"id":2276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17629:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17629:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2281,"nodeType":"ExpressionStatement","src":"17629:44:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2283,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"17704:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17709:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"17704:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2285,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"17716:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17730:11:5","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":669,"src":"17716:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17704:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682066756e647320696e2074686520706f6f6c","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17755:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_efba8b617baaf06ff0aa6bcdef7f669e29141363d290aaeed034d62f040868cf","typeString":"literal_string \"Not enough funds in the pool\""},"value":"Not enough funds in the pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efba8b617baaf06ff0aa6bcdef7f669e29141363d290aaeed034d62f040868cf","typeString":"literal_string \"Not enough funds in the pool\""}],"id":2282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17683:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17683:112:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2290,"nodeType":"ExpressionStatement","src":"17683:112:5"},{"expression":{"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2291,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"17806:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17811:3:5","memberName":"tcp","nodeType":"MemberAccess","referencedDeclaration":422,"src":"17806:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2294,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"17818:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17832:11:5","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":669,"src":"17818:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17806:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2297,"nodeType":"ExpressionStatement","src":"17806:37:5"},{"expression":{"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2298,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"17853:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17858:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"17853:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":2301,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"17865:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17879:11:5","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":669,"src":"17865:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17853:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2304,"nodeType":"ExpressionStatement","src":"17853:37:5"},{"assignments":[2310],"declarations":[{"constant":false,"id":2310,"mutability":"mutable","name":"poolCovers","nameLocation":"17924:10:5","nodeType":"VariableDeclaration","scope":2371,"src":"17900:34:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":2308,"nodeType":"UserDefinedTypeName","pathNode":{"id":2307,"name":"CoverLib.Cover","nameLocations":["17900:8:5","17909:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"17900:14:5"},"referencedDeclaration":367,"src":"17900:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":2309,"nodeType":"ArrayTypeName","src":"17900:16:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":2315,"initialValue":{"arguments":[{"expression":{"id":2312,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"17964:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17978:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":667,"src":"17964:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2311,"name":"getPoolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"17937:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (struct CoverLib.Cover memory[] memory)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17937:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17900:94:5"},{"body":{"id":2336,"nodeType":"Block","src":"18049:73:5","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2330,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"18094:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":2332,"indexExpression":{"id":2331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"18105:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18094:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$367_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":2333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18108:2:5","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":345,"src":"18094:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2327,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"18063:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18078:15:5","memberName":"updateMaxAmount","nodeType":"MemberAccess","referencedDeclaration":517,"src":"18063:30:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18063:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2335,"nodeType":"ExpressionStatement","src":"18063:48:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"18021:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2321,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"18025:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$367_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18036:6:5","memberName":"length","nodeType":"MemberAccess","src":"18025:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18021:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2337,"initializationExpression":{"assignments":[2317],"declarations":[{"constant":false,"id":2317,"mutability":"mutable","name":"i","nameLocation":"18014:1:5","nodeType":"VariableDeclaration","scope":2337,"src":"18009:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint","nodeType":"ElementaryTypeName","src":"18009:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2319,"initialValue":{"hexValue":"30","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18018:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18009:10:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18044:3:5","subExpression":{"id":2324,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"18044:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"nodeType":"ExpressionStatement","src":"18044:3:5"},"nodeType":"ForStatement","src":"18004:118:5"},{"expression":{"arguments":[{"id":2341,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"18182:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2338,"name":"IGovernanceContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"18132:19:5","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$718","typeString":"contract IGov"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18152:29:5","memberName":"updateProposalStatusToClaimed","nodeType":"MemberAccess","referencedDeclaration":710,"src":"18132:49:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18132:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2343,"nodeType":"ExpressionStatement","src":"18132:62:5"},{"eventCall":{"arguments":[{"expression":{"id":2345,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"18236:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18250:6:5","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":667,"src":"18236:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2347,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"18270:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18284:11:5","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":669,"src":"18270:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2349,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"18309:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18323:4:5","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":656,"src":"18309:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2344,"name":"ClaimAttempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"18210:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18210:127:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2352,"nodeType":"EmitStatement","src":"18205:132:5"},{"expression":{"arguments":[{"expression":{"id":2356,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18361:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18365:6:5","memberName":"sender","nodeType":"MemberAccess","src":"18361:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2358,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"18373:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18387:11:5","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":669,"src":"18373:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2353,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"18348:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$654","typeString":"contract IbqBTC"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:5","memberName":"bqMint","nodeType":"MemberAccess","referencedDeclaration":635,"src":"18348:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18348:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2361,"nodeType":"ExpressionStatement","src":"18348:51:5"},{"eventCall":{"arguments":[{"expression":{"id":2363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18425:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18429:6:5","memberName":"sender","nodeType":"MemberAccess","src":"18425:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2365,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"18437:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18442:8:5","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":407,"src":"18437:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":2367,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"18452:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$670_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":2368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18466:11:5","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":669,"src":"18452:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2362,"name":"ClaimPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"18415:9:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,string memory,uint256)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18415:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2370,"nodeType":"EmitStatement","src":"18410:68:5"}]},"functionSelector":"e35f8129","id":2372,"implemented":true,"kind":"function","modifiers":[{"id":2224,"kind":"modifierInvocation","modifierName":{"id":2223,"name":"nonReentrant","nameLocations":["17130:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"17130:12:5"},"nodeType":"ModifierInvocation","src":"17130:12:5"}],"name":"claimProposalFunds","nameLocation":"17083:18:5","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"_proposalId","nameLocation":"17110:11:5","nodeType":"VariableDeclaration","scope":2372,"src":"17102:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"17102:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17101:21:5"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[],"src":"17143:0:5"},"scope":2715,"src":"17074:1411:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2494,"nodeType":"Block","src":"18616:986:5","statements":[{"assignments":[2386],"declarations":[{"constant":false,"id":2386,"mutability":"mutable","name":"userDeposit","nameLocation":"18651:11:5","nodeType":"VariableDeclaration","scope":2494,"src":"18626:36:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits"},"typeName":{"id":2385,"nodeType":"UserDefinedTypeName","pathNode":{"id":2384,"name":"CoverLib.Deposits","nameLocations":["18626:8:5","18635:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"18626:17:5"},"referencedDeclaration":480,"src":"18626:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits"}},"visibility":"internal"}],"id":2396,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2387,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"18665:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)))"}},"id":2389,"indexExpression":{"id":2388,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"18674:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18665:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref))"}},"id":2391,"indexExpression":{"id":2390,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"18681:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18665:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$403_$_t_struct$_Deposits_$480_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct CoverLib.Deposits storage ref)"}},"id":2395,"indexExpression":{"expression":{"expression":{"id":2392,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"18703:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$506_$","typeString":"type(library CoverLib)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18712:11:5","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":403,"src":"18703:20:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$403_$","typeString":"type(enum CoverLib.DepositType)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18724:6:5","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":401,"src":"18703:27:5","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$403","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18665:75:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage","typeString":"struct CoverLib.Deposits storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18626:114:5"},{"assignments":[2398],"declarations":[{"constant":false,"id":2398,"mutability":"mutable","name":"claimTime","nameLocation":"18758:9:5","nodeType":"VariableDeclaration","scope":2494,"src":"18750:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"18750:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2404,"initialValue":{"arguments":[{"id":2401,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"18802:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2402,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"18809:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2399,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"18770:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18785:16:5","memberName":"getLastClaimTime","nodeType":"MemberAccess","referencedDeclaration":535,"src":"18770:31:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18770:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18750:67:5"},{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"lastClaimTime","nameLocation":"18832:13:5","nodeType":"VariableDeclaration","scope":2494,"src":"18827:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint","nodeType":"ElementaryTypeName","src":"18827:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2407,"nodeType":"VariableDeclarationStatement","src":"18827:18:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2408,"name":"claimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"18859:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18872:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18859:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2421,"nodeType":"Block","src":"18943:50:5","statements":[{"expression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2417,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"18957:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2418,"name":"claimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"18973:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18957:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2420,"nodeType":"ExpressionStatement","src":"18957:25:5"}]},"id":2422,"nodeType":"IfStatement","src":"18855:138:5","trueBody":{"id":2416,"nodeType":"Block","src":"18875:62:5","statements":[{"expression":{"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2411,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"18889:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2412,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"18905:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"id":2413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18917:9:5","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":472,"src":"18905:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18889:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2415,"nodeType":"ExpressionStatement","src":"18889:37:5"}]}},{"assignments":[2424],"declarations":[{"constant":false,"id":2424,"mutability":"mutable","name":"currentTime","nameLocation":"19010:11:5","nodeType":"VariableDeclaration","scope":2494,"src":"19002:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"19002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2427,"initialValue":{"expression":{"id":2425,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"19024:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19030:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"19024:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19002:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2428,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"19053:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2429,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"19067:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"id":2430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19079:10:5","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":474,"src":"19067:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19053:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2438,"nodeType":"IfStatement","src":"19049:103:5","trueBody":{"id":2437,"nodeType":"Block","src":"19091:61:5","statements":[{"expression":{"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2432,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"19105:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2433,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"19119:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"id":2434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19131:10:5","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":474,"src":"19119:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19105:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2436,"nodeType":"ExpressionStatement","src":"19105:36:5"}]}},{"assignments":[2440],"declarations":[{"constant":false,"id":2440,"mutability":"mutable","name":"claimableDays","nameLocation":"19169:13:5","nodeType":"VariableDeclaration","scope":2494,"src":"19161:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"19161:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2447,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"19186:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2442,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"19200:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19186:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19185:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19217:9:5","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"src":"19185:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19161:65:5"},{"expression":{"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2448,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"19236:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"id":2450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19248:13:5","memberName":"accruedPayout","nodeType":"MemberAccess","referencedDeclaration":476,"src":"19236:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2451,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"19264:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"id":2452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19276:11:5","memberName":"dailyPayout","nodeType":"MemberAccess","referencedDeclaration":465,"src":"19264:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2453,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"19290:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19264:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19236:67:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2456,"nodeType":"ExpressionStatement","src":"19236:67:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2457,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"19317:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"id":2458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19329:10:5","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":474,"src":"19317:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"19343:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19349:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"19343:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19317:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2490,"nodeType":"Block","src":"19415:153:5","statements":[{"assignments":[2470],"declarations":[{"constant":false,"id":2470,"mutability":"mutable","name":"timeLeft","nameLocation":"19437:8:5","nodeType":"VariableDeclaration","scope":2490,"src":"19429:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"19429:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2476,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2471,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"19448:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"id":2472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19460:10:5","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":474,"src":"19448:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2473,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"19473:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19479:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"19473:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19448:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19429:59:5"},{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2477,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"19502:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"id":2479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19514:8:5","memberName":"daysLeft","nodeType":"MemberAccess","referencedDeclaration":470,"src":"19502:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"timeLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"19526:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19537:6:5","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"19526:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19546:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19526:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19525:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19551:6:5","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"19525:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19502:55:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"19502:55:5"}]},"id":2491,"nodeType":"IfStatement","src":"19313:255:5","trueBody":{"id":2468,"nodeType":"Block","src":"19360:49:5","statements":[{"expression":{"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2462,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"19374:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"id":2464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19386:8:5","memberName":"daysLeft","nodeType":"MemberAccess","referencedDeclaration":470,"src":"19374:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19397:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19374:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2467,"nodeType":"ExpressionStatement","src":"19374:24:5"}]}},{"expression":{"id":2492,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"19584:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits memory"}},"functionReturnParameters":2381,"id":2493,"nodeType":"Return","src":"19577:18:5"}]},"functionSelector":"4e055244","id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"getUserDeposit","nameLocation":"18500:14:5","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"_poolId","nameLocation":"18532:7:5","nodeType":"VariableDeclaration","scope":2495,"src":"18524:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"18524:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"_user","nameLocation":"18557:5:5","nodeType":"VariableDeclaration","scope":2495,"src":"18549:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2375,"name":"address","nodeType":"ElementaryTypeName","src":"18549:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18514:54:5"},"returnParameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2495,"src":"18590:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_memory_ptr","typeString":"struct CoverLib.Deposits"},"typeName":{"id":2379,"nodeType":"UserDefinedTypeName","pathNode":{"id":2378,"name":"CoverLib.Deposits","nameLocations":["18590:8:5","18599:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"18590:17:5"},"referencedDeclaration":480,"src":"18590:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$480_storage_ptr","typeString":"struct CoverLib.Deposits"}},"visibility":"internal"}],"src":"18589:26:5"},"scope":2715,"src":"18491:1111:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2507,"nodeType":"Block","src":"19675:42:5","statements":[{"expression":{"expression":{"baseExpression":{"id":2502,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"19692:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":2504,"indexExpression":{"id":2503,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"19698:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19692:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":2505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19707:3:5","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":416,"src":"19692:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2501,"id":2506,"nodeType":"Return","src":"19685:25:5"}]},"functionSelector":"8f244630","id":2508,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolTVL","nameLocation":"19617:10:5","nodeType":"FunctionDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"_poolId","nameLocation":"19636:7:5","nodeType":"VariableDeclaration","scope":2508,"src":"19628:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"19628:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19627:17:5"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2508,"src":"19666:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"19666:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19665:9:5"},"scope":2715,"src":"19608:109:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2527,"nodeType":"Block","src":"19786:89:5","statements":[{"assignments":[2519],"declarations":[{"constant":false,"id":2519,"mutability":"mutable","name":"pool","nameLocation":"19818:4:5","nodeType":"VariableDeclaration","scope":2527,"src":"19796:26:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":2518,"nodeType":"UserDefinedTypeName","pathNode":{"id":2517,"name":"CoverLib.Pool","nameLocations":["19796:8:5","19805:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"19796:13:5"},"referencedDeclaration":436,"src":"19796:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":2523,"initialValue":{"baseExpression":{"id":2520,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"19825:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$436_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":2522,"indexExpression":{"id":2521,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"19831:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19825:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19796:42:5"},{"expression":{"expression":{"id":2524,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"19855:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$436_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":2525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19860:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":424,"src":"19855:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2514,"id":2526,"nodeType":"Return","src":"19848:20:5"}]},"functionSelector":"25f11e8d","id":2528,"implemented":true,"kind":"function","modifiers":[],"name":"poolActive","nameLocation":"19732:10:5","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"poolId","nameLocation":"19751:6:5","nodeType":"VariableDeclaration","scope":2528,"src":"19743:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"19743:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19742:16:5"},"returnParameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2528,"src":"19780:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2512,"name":"bool","nodeType":"ElementaryTypeName","src":"19780:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19779:6:5"},"scope":2715,"src":"19723:152:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2536,"nodeType":"Block","src":"19950:36:5","statements":[{"expression":{"id":2534,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"19967:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":2533,"id":2535,"nodeType":"Return","src":"19960:19:5"}]},"functionSelector":"195ec9ee","id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"getAllParticipants","nameLocation":"19890:18:5","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[],"src":"19908:2:5"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"19932:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2530,"name":"address","nodeType":"ElementaryTypeName","src":"19932:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2531,"nodeType":"ArrayTypeName","src":"19932:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"19931:18:5"},"scope":2715,"src":"19881:105:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2548,"nodeType":"Block","src":"20066:43:5","statements":[{"expression":{"baseExpression":{"id":2544,"name":"participation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"20083:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2546,"indexExpression":{"id":2545,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"20097:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20083:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2543,"id":2547,"nodeType":"Return","src":"20076:26:5"}]},"functionSelector":"46f84795","id":2549,"implemented":true,"kind":"function","modifiers":[],"name":"getUserParticipation","nameLocation":"20001:20:5","nodeType":"FunctionDefinition","parameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"user","nameLocation":"20030:4:5","nodeType":"VariableDeclaration","scope":2549,"src":"20022:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2538,"name":"address","nodeType":"ElementaryTypeName","src":"20022:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20021:14:5"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2549,"src":"20057:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"20057:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20056:9:5"},"scope":2715,"src":"19992:117:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2586,"nodeType":"Block","src":"20178:240:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2557,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"20196:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20218:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20210:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2558,"name":"address","nodeType":"ElementaryTypeName","src":"20210:7:5","typeDescriptions":{}}},"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20210:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20196:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e616e636520616c726561647920736574","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20222:24:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_256d4bbc7883dafee56b1b5b430f2928ee11abc3dac304a43bb764d90df40708","typeString":"literal_string \"Governance already set\""},"value":"Governance already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_256d4bbc7883dafee56b1b5b430f2928ee11abc3dac304a43bb764d90df40708","typeString":"literal_string \"Governance already set\""}],"id":2556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20188:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20188:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2565,"nodeType":"ExpressionStatement","src":"20188:59:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2567,"name":"_governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"20265:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20288:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20280:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"20280:7:5","typeDescriptions":{}}},"id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20280:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20265:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e616e636520616464726573732063616e6e6f74206265207a65726f","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20292:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3aa1986b808de47282cda149f786d426662cb8137be11b0930bd660fe9ff4a19","typeString":"literal_string \"Governance address cannot be zero\""},"value":"Governance address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3aa1986b808de47282cda149f786d426662cb8137be11b0930bd660fe9ff4a19","typeString":"literal_string \"Governance address cannot be zero\""}],"id":2566,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20257:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20257:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2575,"nodeType":"ExpressionStatement","src":"20257:71:5"},{"expression":{"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2576,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"20338:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2577,"name":"_governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"20351:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20338:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2579,"nodeType":"ExpressionStatement","src":"20338:24:5"},{"expression":{"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2580,"name":"IGovernanceContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"20372:19:5","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$718","typeString":"contract IGov"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2582,"name":"_governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"20399:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2581,"name":"IGov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"20394:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGov_$718_$","typeString":"type(contract IGov)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20394:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$718","typeString":"contract IGov"}},"src":"20372:39:5","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$718","typeString":"contract IGov"}},"id":2585,"nodeType":"ExpressionStatement","src":"20372:39:5"}]},"functionSelector":"ab033ea9","id":2587,"implemented":true,"kind":"function","modifiers":[{"id":2554,"kind":"modifierInvocation","modifierName":{"id":2553,"name":"onlyOwner","nameLocations":["20168:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"20168:9:5"},"nodeType":"ModifierInvocation","src":"20168:9:5"}],"name":"setGovernance","nameLocation":"20124:13:5","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"_governance","nameLocation":"20146:11:5","nodeType":"VariableDeclaration","scope":2587,"src":"20138:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"20138:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20137:21:5"},"returnParameters":{"id":2555,"nodeType":"ParameterList","parameters":[],"src":"20178:0:5"},"scope":2715,"src":"20115:303:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2624,"nodeType":"Block","src":"20485:242:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2595,"name":"coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"20503:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20528:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20520:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"20520:7:5","typeDescriptions":{}}},"id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20520:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20503:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f76657220616c726561647920736574","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20532:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf06969982625d13a5dac592e3869aa65eee244234efcd23ed5819f8fa87ed21","typeString":"literal_string \"Cover already set\""},"value":"Cover already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf06969982625d13a5dac592e3869aa65eee244234efcd23ed5819f8fa87ed21","typeString":"literal_string \"Cover already set\""}],"id":2594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20495:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20495:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2603,"nodeType":"ExpressionStatement","src":"20495:57:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"_coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"20570:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20596:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20588:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"20588:7:5","typeDescriptions":{}}},"id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20570:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f76657220616464726573732063616e6e6f74206265207a65726f","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20600:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d56cc69f27f22cbf2480d52112cfa7186be3676c47e4ce574a575630c6a87b70","typeString":"literal_string \"Cover address cannot be zero\""},"value":"Cover address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d56cc69f27f22cbf2480d52112cfa7186be3676c47e4ce574a575630c6a87b70","typeString":"literal_string \"Cover address cannot be zero\""}],"id":2604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20562:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20562:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2613,"nodeType":"ExpressionStatement","src":"20562:69:5"},{"expression":{"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2614,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"20641:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2616,"name":"_coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"20665:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2615,"name":"ICover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"20658:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICover_$536_$","typeString":"type(contract ICover)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20658:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"}},"src":"20641:39:5","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$536","typeString":"contract ICover"}},"id":2619,"nodeType":"ExpressionStatement","src":"20641:39:5"},{"expression":{"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2620,"name":"coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"20690:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2621,"name":"_coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"20706:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20690:30:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2623,"nodeType":"ExpressionStatement","src":"20690:30:5"}]},"functionSelector":"7c366cc6","id":2625,"implemented":true,"kind":"function","modifiers":[{"id":2592,"kind":"modifierInvocation","modifierName":{"id":2591,"name":"onlyOwner","nameLocations":["20475:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"20475:9:5"},"nodeType":"ModifierInvocation","src":"20475:9:5"}],"name":"setCover","nameLocation":"20433:8:5","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"_coverContract","nameLocation":"20450:14:5","nodeType":"VariableDeclaration","scope":2625,"src":"20442:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2588,"name":"address","nodeType":"ElementaryTypeName","src":"20442:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20441:24:5"},"returnParameters":{"id":2593,"nodeType":"ParameterList","parameters":[],"src":"20485:0:5"},"scope":2715,"src":"20424:303:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2662,"nodeType":"Block","src":"20794:242:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2633,"name":"vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"20812:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20837:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20829:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2634,"name":"address","nodeType":"ElementaryTypeName","src":"20829:7:5","typeDescriptions":{}}},"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20829:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20812:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c7420616c726561647920736574","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20841:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e38982e17d63c9cd56d683e451db7cf94d5da609636149268849933c3fcb1d61","typeString":"literal_string \"Vault already set\""},"value":"Vault already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e38982e17d63c9cd56d683e451db7cf94d5da609636149268849933c3fcb1d61","typeString":"literal_string \"Vault already set\""}],"id":2632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20804:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20804:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2641,"nodeType":"ExpressionStatement","src":"20804:57:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"_vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"20879:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20905:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20897:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2644,"name":"address","nodeType":"ElementaryTypeName","src":"20897:7:5","typeDescriptions":{}}},"id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20897:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20879:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c7420616464726573732063616e6e6f74206265207a65726f","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20909:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4c6e46ca7903998c69e6bde104e79846c229e93f765588cbede69d118c18e30","typeString":"literal_string \"Vault address cannot be zero\""},"value":"Vault address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4c6e46ca7903998c69e6bde104e79846c229e93f765588cbede69d118c18e30","typeString":"literal_string \"Vault address cannot be zero\""}],"id":2642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20871:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20871:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2651,"nodeType":"ExpressionStatement","src":"20871:69:5"},{"expression":{"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2652,"name":"IVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"20950:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$628","typeString":"contract IVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2654,"name":"_vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"20974:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2653,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"20967:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$628_$","typeString":"type(contract IVault)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20967:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$628","typeString":"contract IVault"}},"src":"20950:39:5","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$628","typeString":"contract IVault"}},"id":2657,"nodeType":"ExpressionStatement","src":"20950:39:5"},{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2658,"name":"vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"20999:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2659,"name":"_vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"21015:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20999:30:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2661,"nodeType":"ExpressionStatement","src":"20999:30:5"}]},"functionSelector":"6817031b","id":2663,"implemented":true,"kind":"function","modifiers":[{"id":2630,"kind":"modifierInvocation","modifierName":{"id":2629,"name":"onlyOwner","nameLocations":["20784:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"20784:9:5"},"nodeType":"ModifierInvocation","src":"20784:9:5"}],"name":"setVault","nameLocation":"20742:8:5","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"_vaultContract","nameLocation":"20759:14:5","nodeType":"VariableDeclaration","scope":2663,"src":"20751:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"20751:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20750:24:5"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"20794:0:5"},"scope":2715,"src":"20733:303:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2679,"nodeType":"Block","src":"21068:166:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2666,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21099:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21103:6:5","memberName":"sender","nodeType":"MemberAccess","src":"21099:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2668,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"21113:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21099:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2670,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21127:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21131:6:5","memberName":"sender","nodeType":"MemberAccess","src":"21127:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2672,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"21141:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21127:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21099:54:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f742074686520676f7665726e616e636520636f6e7472616374","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21167:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7258deee4e3e974e8adb937bcf0525c89cfdc8dffe55df968eaf3010e43c2203","typeString":"literal_string \"Caller is not the governance contract\""},"value":"Caller is not the governance contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7258deee4e3e974e8adb937bcf0525c89cfdc8dffe55df968eaf3010e43c2203","typeString":"literal_string \"Caller is not the governance contract\""}],"id":2665,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21078:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21078:138:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2677,"nodeType":"ExpressionStatement","src":"21078:138:5"},{"id":2678,"nodeType":"PlaceholderStatement","src":"21226:1:5"}]},"id":2680,"name":"onlyGovernance","nameLocation":"21051:14:5","nodeType":"ModifierDefinition","parameters":{"id":2664,"nodeType":"ParameterList","parameters":[],"src":"21065:2:5"},"src":"21042:192:5","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"21261:164:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2683,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21292:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21296:6:5","memberName":"sender","nodeType":"MemberAccess","src":"21292:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2685,"name":"coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"21306:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21292:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2687,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21323:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21327:6:5","memberName":"sender","nodeType":"MemberAccess","src":"21323:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2689,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"21337:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21323:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21292:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f742074686520636f76657220636f6e7472616374","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21363:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4105b43f484ce35ef93573a79e584e52503f039987e7bd0078d5289b73bfbe65","typeString":"literal_string \"Caller is not the cover contract\""},"value":"Caller is not the cover contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4105b43f484ce35ef93573a79e584e52503f039987e7bd0078d5289b73bfbe65","typeString":"literal_string \"Caller is not the cover contract\""}],"id":2682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21271:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21271:136:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2694,"nodeType":"ExpressionStatement","src":"21271:136:5"},{"id":2695,"nodeType":"PlaceholderStatement","src":"21417:1:5"}]},"id":2697,"name":"onlyCover","nameLocation":"21249:9:5","nodeType":"ModifierDefinition","parameters":{"id":2681,"nodeType":"ParameterList","parameters":[],"src":"21258:2:5"},"src":"21240:185:5","virtual":false,"visibility":"internal"},{"body":{"id":2713,"nodeType":"Block","src":"21452:164:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21483:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21487:6:5","memberName":"sender","nodeType":"MemberAccess","src":"21483:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2702,"name":"vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"21497:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21483:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2704,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21514:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21518:6:5","memberName":"sender","nodeType":"MemberAccess","src":"21514:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2706,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"21528:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21514:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21483:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420746865207661756c7420636f6e7472616374","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21554:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe939ee76b103de45e0c8c4da2b2ea630a7678d905f1fa29f2723abfbf838b6c","typeString":"literal_string \"Caller is not the vault contract\""},"value":"Caller is not the vault contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fe939ee76b103de45e0c8c4da2b2ea630a7678d905f1fa29f2723abfbf838b6c","typeString":"literal_string \"Caller is not the vault contract\""}],"id":2699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21462:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21462:136:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2711,"nodeType":"ExpressionStatement","src":"21462:136:5"},{"id":2712,"nodeType":"PlaceholderStatement","src":"21608:1:5"}]},"id":2714,"name":"onlyVault","nameLocation":"21440:9:5","nodeType":"ModifierDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[],"src":"21449:2:5"},"src":"21431:185:5","virtual":false,"visibility":"internal"}],"scope":2716,"src":"2917:18701:5","usedErrors":[13,18,269],"usedEvents":[24,784,792,800,806,814,822]}],"src":"32:21586:5"},"id":5}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"contracts/CoverLib.sol":{"CoverLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b9588cae9dca6139e64f590676436a33ff36b81b45ca358229e345d570bd81f364736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PC DUP13 0xAE SWAP14 0xCA PUSH2 0x39E6 0x4F MSIZE MOD PUSH23 0x436A33FF36B81B45CA358229E345D570BD81F364736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"60:2833:4:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b9588cae9dca6139e64f590676436a33ff36b81b45ca358229e345d570bd81f364736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PC DUP13 0xAE SWAP14 0xCA PUSH2 0x39E6 0x4F MSIZE MOD PUSH23 0x436A33FF36B81B45CA358229E345D570BD81F364736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"60:2833:4:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoverLib.sol\":\"CoverLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/CoverLib.sol\":{\"keccak256\":\"0x5138397d8fe6477ca504eacf0b9a9f9273319a1927872d4b67a4cce9d4a1dc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5669416dad2b358d3309144ad62ae8e9d58cadc62c7101e01929c7a8e3d1bd39\",\"dweb:/ipfs/QmXK6Dy6Drr4SnDGBjL8VzKp8t41WagTcnTuavf1q58FpG\"]}},\"version\":1}"}},"contracts/InsurancePool.sol":{"ICover":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getDepositClaimableDays","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getLastClaimTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"}],"name":"updateMaxAmount","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDepositClaimableDays(address,uint256)":"73cce3ee","getLastClaimTime(address,uint256)":"10525814","updateMaxAmount(uint256)":"106b5da1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getDepositClaimableDays\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getLastClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"}],\"name\":\"updateMaxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsurancePool.sol\":\"ICover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x5138397d8fe6477ca504eacf0b9a9f9273319a1927872d4b67a4cce9d4a1dc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5669416dad2b358d3309144ad62ae8e9d58cadc62c7101e01929c7a8e3d1bd39\",\"dweb:/ipfs/QmXK6Dy6Drr4SnDGBjL8VzKp8t41WagTcnTuavf1q58FpG\"]},\"contracts/InsurancePool.sol\":{\"keccak256\":\"0xaa1f66b39e2ee7d62bcda4d8027d5eb41109e554632f5482a7b2727c703f4985\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e69d205d0a2b28ad0b794ea634bd1c8ac351aafdeaefa50999ca645565e0a12\",\"dweb:/ipfs/QmbKF5NMDqVr1mcJAdPakdgqFcDbw6W6VJWgEe3UXXtT6W\"]}},\"version\":1}"},"IGov":{"abi":[{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"getProposalDetails","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"votesFor","type":"uint256"},{"internalType":"uint256","name":"votesAgainst","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"timeleft","type":"uint256"},{"internalType":"enum IGov.ProposalStaus","name":"status","type":"uint8"},{"internalType":"bool","name":"executed","type":"bool"},{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"string","name":"txHash","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"claimAmount","type":"uint256"}],"internalType":"struct IGov.ProposalParams","name":"proposalParam","type":"tuple"}],"internalType":"struct IGov.Proposal","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"setUserVaultDepositToZero","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"updateProposalStatusToClaimed","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getProposalDetails(uint256)":"3b4d01a7","setUserVaultDepositToZero(uint256,address)":"1f8be73c","updateProposalStatusToClaimed(uint256)":"f1b4bf9d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeleft\",\"type\":\"uint256\"},{\"internalType\":\"enum IGov.ProposalStaus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"txHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IGov.ProposalParams\",\"name\":\"proposalParam\",\"type\":\"tuple\"}],\"internalType\":\"struct IGov.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setUserVaultDepositToZero\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"updateProposalStatusToClaimed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsurancePool.sol\":\"IGov\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x5138397d8fe6477ca504eacf0b9a9f9273319a1927872d4b67a4cce9d4a1dc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5669416dad2b358d3309144ad62ae8e9d58cadc62c7101e01929c7a8e3d1bd39\",\"dweb:/ipfs/QmXK6Dy6Drr4SnDGBjL8VzKp8t41WagTcnTuavf1q58FpG\"]},\"contracts/InsurancePool.sol\":{\"keccak256\":\"0xaa1f66b39e2ee7d62bcda4d8027d5eb41109e554632f5482a7b2727c703f4985\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e69d205d0a2b28ad0b794ea634bd1c8ac351aafdeaefa50999ca645565e0a12\",\"dweb:/ipfs/QmbKF5NMDqVr1mcJAdPakdgqFcDbw6W6VJWgEe3UXXtT6W\"]}},\"version\":1}"},"IVault":{"abi":[{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserVaultDeposit","outputs":[{"components":[{"internalType":"address","name":"lp","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"enum CoverLib.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"daysLeft","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"}],"internalType":"struct IVault.VaultDeposit","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"}],"name":"getVault","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"vaultName","type":"string"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct IVault.Pool[]","name":"pools","type":"tuple[]"},{"internalType":"uint256","name":"minInv","type":"uint256"},{"internalType":"uint256","name":"maxInv","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"internalType":"struct IVault.Vault","name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getUserVaultDeposit(uint256,address)":"57656486","getVault(uint256)":"9403b634"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserVaultDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"daysLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.VaultDeposit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"getVault\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"vaultName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct IVault.Pool[]\",\"name\":\"pools\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"minInv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct IVault.Vault\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsurancePool.sol\":\"IVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x5138397d8fe6477ca504eacf0b9a9f9273319a1927872d4b67a4cce9d4a1dc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5669416dad2b358d3309144ad62ae8e9d58cadc62c7101e01929c7a8e3d1bd39\",\"dweb:/ipfs/QmXK6Dy6Drr4SnDGBjL8VzKp8t41WagTcnTuavf1q58FpG\"]},\"contracts/InsurancePool.sol\":{\"keccak256\":\"0xaa1f66b39e2ee7d62bcda4d8027d5eb41109e554632f5482a7b2727c703f4985\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e69d205d0a2b28ad0b794ea634bd1c8ac351aafdeaefa50999ca645565e0a12\",\"dweb:/ipfs/QmbKF5NMDqVr1mcJAdPakdgqFcDbw6W6VJWgEe3UXXtT6W\"]}},\"version\":1}"},"IbqBTC":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"bqMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"bqMint(address,uint256)":"e2094eda","burn(address,uint256)":"9dc29fac","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bqMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsurancePool.sol\":\"IbqBTC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x5138397d8fe6477ca504eacf0b9a9f9273319a1927872d4b67a4cce9d4a1dc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5669416dad2b358d3309144ad62ae8e9d58cadc62c7101e01929c7a8e3d1bd39\",\"dweb:/ipfs/QmXK6Dy6Drr4SnDGBjL8VzKp8t41WagTcnTuavf1q58FpG\"]},\"contracts/InsurancePool.sol\":{\"keccak256\":\"0xaa1f66b39e2ee7d62bcda4d8027d5eb41109e554632f5482a7b2727c703f4985\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e69d205d0a2b28ad0b794ea634bd1c8ac351aafdeaefa50999ca645565e0a12\",\"dweb:/ipfs/QmbKF5NMDqVr1mcJAdPakdgqFcDbw6W6VJWgEe3UXXtT6W\"]}},\"version\":1}"},"InsurancePool":{"abi":[{"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"},{"indexed":false,"internalType":"address","name":"","type":"address"}],"name":"ClaimAttempt","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"string","name":"pool","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"pool","type":"string"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"poolName","type":"string"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"apy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_minPeriod","type":"uint256"}],"name":"PoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"pool","type":"string"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ICoverContract","outputs":[{"internalType":"contract ICover","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"IGovernanceContract","outputs":[{"internalType":"contract IGov","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"IVaultContract","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover","name":"_cover","type":"tuple"}],"name":"addPoolCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"bqBTC","outputs":[{"internalType":"contract IbqBTC","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bqBTCAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"claimProposalFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"coverContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"uint256","name":"investmentArm","type":"uint256"},{"internalType":"enum CoverLib.AssetDepositType","name":"adt","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"internalType":"struct CoverLib.PoolParams","name":"params","type":"tuple"}],"name":"createPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"deactivatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"enum CoverLib.DepositType","name":"pdt","type":"uint8"},{"internalType":"enum CoverLib.AssetDepositType","name":"adt","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"internalType":"struct CoverLib.DepositParams","name":"depositParam","type":"tuple"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getAllParticipants","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllPools","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct CoverLib.Pool[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPool","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct CoverLib.Pool","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPoolCovers","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPoolTVL","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"getPoolsByAddress","outputs":[{"components":[{"internalType":"string","name":"poolName","type":"string"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"}],"internalType":"struct CoverLib.PoolInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"getUserDeposit","outputs":[{"components":[{"internalType":"address","name":"lp","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"enum CoverLib.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"daysLeft","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"},{"internalType":"enum CoverLib.DepositType","name":"pdt","type":"uint8"}],"internalType":"struct CoverLib.Deposits","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserParticipation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"__poolPercentageSplit","type":"uint256"}],"name":"increasePercentageSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"participants","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"participation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}],"name":"poolActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"poolWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pools","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"__poolPercentageSplit","type":"uint256"}],"name":"reducePercentageSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_coverContract","type":"address"}],"name":"setCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_governance","type":"address"}],"name":"setGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_vaultContract","type":"address"}],"name":"setVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_apy","type":"uint256"},{"internalType":"uint256","name":"_minPeriod","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover","name":"_cover","type":"tuple"}],"name":"updatePoolCovers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vaultContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"vaultWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"enum CoverLib.DepositType","name":"pdt","type":"uint8"}],"name":"withdrawUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803460d657601f61454938819003918201601f19168301916001600160401b0383118484101760db5780849260209460405283398101031260d657516001600160a01b0381169081900360d6576001600055801560c057600180546001600160a01b031981168317909155604051919081906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600e80546001600160a01b03191691909117905561445790816100f28239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60a0604052600436101561001257600080fd5b60003560e01c8063068bcd8d14613523578063195ec9ee146134575780632274346b1461342e578063248a75b71461340557806325f11e8d146133d15780632607b53914612b9557806329ba7bb214612b6c578063318667631461270357806334808ec3146126da57806335c1d349146126985780633dc66ad31461233857806346f84795146115ad5780634e0552441461208a5780635aa6e675146120615780635cfab35c14611cc55780636817031b14611be85780636f60537d14611bbf578063715018a614611b625780637c366cc614611a855780637eb111f01461196c57806383bc63571461163f5780638da5cb5b146116165780638f244630146115e757806396f3a8ad146115ad578063996b8a6f146115845780639abd9b05146115305780639fd36b15146114d5578063a14764d01461143a578063a4948d85146113db578063ab033ea9146112ec578063ac4afa38146111ce578063b5d90c28146111a5578063c7aa987414611117578063d86c044414610fb8578063d88ff1f414610cb9578063e35f81291461079d578063f2fde38b14610713578063f525cb68146106f5578063f6e80558146106cc5763fb839dda146101d457600080fd5b346103ab5760203660031901126103ab576004356101f06143b6565b600854604051632bb2b24360e11b8152600481018390523360248201526001600160a01b039091169061012081604481855afa8015610360576020916000916106ad575b50019081511561066857600060249160405192838092632500ed8d60e21b82528760048301525afa908115610360576000916103e0575b50600160c082015161027c81613692565b61028581613692565b036103b85760e00151905160405163a9059cbb60e01b8152336004820152602481019190915290602090829060449082906000906001600160a01b03165af19081156103605760009161036c575b5061031b916102e461012092613d1c565b600854604051632bb2b24360e11b81526004810192909252336024830152909283916001600160a01b031690829081906044820190565b03915afa801561036057610331575b6001600055005b610352906101203d8111610359575b61034a81836137f7565b810190614333565b503861032a565b503d610340565b6040513d6000823e3d90fd5b90506020813d6020116103b0575b81610387602093836137f7565b810103126103ab5761031b916102e46103a261012093613b21565b925050916102d3565b600080fd5b3d915061037a565b5061031b916103db60008080806101209651335af16103d5613ca0565b50613cd0565b6102e4565b903d8082843e6103f081846137f7565b820191602081840312610664578051906001600160401b03821161064c57019061010082840312610514576040519261010084018481106001600160401b03821117610650576040528251845260208301516001600160401b03811161064c578161045c9185016142f1565b602085015260408301516001600160401b03811161064c5783019080601f8301121561064c5781519161048e83613ba3565b9261049c60405194856137f7565b80845260208085019160051b830101918383116106485760208101915b8383106105175750505050506040840152606082015160608401526080820151608084015260a082015160a084015260c0820151906002821015610514575060c08301526105099060e0016142dd565b60e08201523861026b565b80fd5b82516001600160401b0381116106445782016101e0818703601f19011261064457604051906105458261376c565b6020810151825260408101516001600160401b0381116106405787602061056e928401016142f1565b6020830152606081015160038110156106405760408301526080810151606083015260a0810151608083015260c081015160a083015260e081015160c083015261010081015160e08301526101208101516101008301526105d26101408201613b21565b6101208301526101608101516101408301526101808101516101608301526101a081015160ff81168103610640576101808301526101e0906106176101c082016142dd565b6101a08401520151600281101561063c576101c08201528152602092830192016104b9565b8880fd5b8980fd5b8780fd5b8580fd5b8280fd5b634e487b7160e01b83526041600452602483fd5b5080fd5b60405162461bcd60e51b815260206004820152601d60248201527f4e6f20616374697665207769746864726177616c20666f7220757365720000006044820152606490fd5b6106c691506101203d81116103595761034a81836137f7565b38610234565b346103ab5760003660031901126103ab576007546040516001600160a01b039091168152602090f35b346103ab5760003660031901126103ab576020600554604051908152f35b346103ab5760203660031901126103ab5761072c613818565b6107346143d8565b6001600160a01b0316801561078757600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b346103ab5760203660031901126103ab5760006004356107bb6143b6565b600954604051633b4d01a760e01b81526004810183905292908390602490829084906001600160a01b03165af191821561036057600092610b55575b506101008201519060c0830151926005841015610b3f576002600094149081610b31575b5015610af45760a082018051845260046020526040842083516001600160a01b03163303610ab85761085360ff600983015416613e6b565b6005810180549360c086019182518610610a73576108878896845161087d60088801918254613b14565b9055845190613b41565b90556108938451613d60565b93855b8551811015610911576007546001600160a01b0316906108b68188613b66565b5151823b1561063c57889260248492604051958693849263106b5da160e01b845260048401525af191821561090657886001936108f6575b505001610896565b6108ff916137f7565b8a886108ee565b6040513d8a823e3d90fd5b50919350919460018060a01b036009541692833b1561064857859360248592604051968793849263f1b4bf9d60e01b845260048401525af1918215610a68577feef4955e8b18dcb6d1c19905b7b86e5fe56138ad1ce2c5e540ce4e959312f5119386606094610a58575b5050519084519060018060a01b039051169060405192835260208301526040820152a160018060a01b03600a54168151813b15610a5457604051637104a76d60e11b8152336004820152602481019190915292908390604490829084905af191848315610a48577f415071086c9ea63f7f39884c21a8af430af53bfd511a362dff69cabcb1b8bcc193610a38575b50505191610a2560405191604083526001604084019101613a22565b9260208201528033930390a26001815580f35b610a41916137f7565b8484610a09565b604051903d90823e3d90fd5b8380fd5b610a61916137f7565b888661097b565b6040513d87823e3d90fd5b60405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f7567682066756e647320696e2074686520706f6f6c000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273139bdd0818481d985b1a59081c1c9bdc1bdcd85b60621b6044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274141c9bdc1bdcd85b081b9bdd08185c1c1c9bdd9959605a1b6044820152606490fd5b60e09150015115158461081b565b634e487b7160e01b600052602160045260246000fd5b90913d8082843e610b6681846137f7565b820191602081840312610664578051906001600160401b03821161064c570191610120838203126106645760405192610b9e846137db565b805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c08101516005811015610a545760c0850152610bf360e08201613b21565b60e0850152610100810151906001600160401b038211610a5457019060e08282031261064c5760405192610c2684613788565b610c2f836142dd565b8452602083015160038110156106645760208501526040830151604085015260608301516001600160401b0381116106645782610c6d9185016142f1565b60608501526080830151906001600160401b03821161051457508291610c969160c094016142f1565b608084015260a081015160a0840152015160c082015261010082015290826107f7565b346103ab5760003660031901126103ab57600554610cd681613ba3565b90610ce460405192836137f7565b808252601f19610cf382613ba3565b0160005b818110610fa157505060015b81811115610d7357826040518091602082016020835281518091526040830190602060408260051b8601019301916000905b828210610d4457505050500390f35b91936001919395506020610d638192603f198a8203018652885161369c565b9601920192018594939192610d35565b80600052600460205280604060002060405190610d8f8261376c565b8054825260405180610da48160018501613a22565b03610daf90826137f7565b60208301908152600282015460ff16916040840192610dcd81613688565b8352600381015460608501908152600482015460808601908152600583015460a08701908152600684015460c0880190815260078501549060e089019182526008860154926101008a01938452600987015460ff16946101208b019515158652600a880154966101408c01978852600b890154986101608d01998a52600c01549a8b9a8d61018081019c60ff168d526101a0019c8d600160a01b600190038260081c16905260a81c60ff169d6101c0019d8e610e8882613692565b5251905191610e9683613688565b519251935194519551965197511515985199519a5160ff169b600160a01b600190039051169c519d610ec78f613692565b604051608052608051610ed99061376c565b6080515260805160200152610eed81613688565b60805160400152608051606001526080516080015260805160a0015260805160c0015260805160e00152608051610100015260805161012001526080516101400152608051610160015260805161018001526080516101a00152610f5081613692565b6080516101c00152600019810190808211610f8b57610f80610f8692608051610f798288613b66565b5285613b66565b50613b94565b610d03565b634e487b7160e01b600052601160045260246000fd5b602090610fac613aa5565b82828701015201610cf7565b346103ab5760603660031901126103ab57600435602435604435610fda6143d8565b82600052600460205260ff60096040600020015416156110c7578115611094578015611056577f17b8644f386d1c7c7138ef98b3c8035622bbe94d7be9b26f71d2654a547c29439160409184600052600460205281600384600020015584600052600460205280600484600020015582519182526020820152a2005b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081b5a5b9a5b5d5b481c195c9a5bd960521b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642041505960a81b6044820152606490fd5b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c20646f6573206e6f74206578697374206f7220697320696e61637469604482015261766560f01b6064820152608490fd5b346103ab57611125366138d7565b9060018060a01b03600c541633148015611191575b61114390613eac565b6000526003602052604060002090815491600160401b83101561117b578261117391600161117995018155613ef7565b90613f13565b005b634e487b7160e01b600052604160045260246000fd5b50600e546001600160a01b0316331461113a565b346103ab5760003660031901126103ab576009546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab57600435600052600460205260406000208054604051918280600183019061120591613a22565b0361121090846137f7565b600281015460ff1690600381015490600481015490600581015460068201546007830154600884015490600985015460ff1692600a86015494600b87015496600c0154978860a81c60ff16996040519d8e9d8e528d602081016101e090526101e00161127b91613663565b9b8d61128682613688565b6040015260608d015260808c015260a08b015260c08a015260e0890152610100880152151561012087015261014086015261016085015260ff811661018085015260081c6001600160a01b03166101a08401526112e281613692565b6101c08301520390f35b346103ab5760203660031901126103ab57611305613818565b61130d6143d8565b600654906001600160a01b03821661139d576001600160a01b031690811561134e576001600160a01b03199081168217600655600980549091169091179055005b60405162461bcd60e51b815260206004820152602160248201527f476f7665726e616e636520616464726573732063616e6e6f74206265207a65726044820152606f60f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601660248201527511dbdd995c9b985b98d948185b1c9958591e481cd95d60521b6044820152606490fd5b346103ab576113e9366138c1565b9060018060a01b03600c541633148015611426575b61140790613eac565b6000526004602052611422600a604060002001918254613b41565b9055005b50600e546001600160a01b031633146113fe565b346103ab57611448366138d7565b600c546001600160a01b0316331480156114c1575b61146690613eac565b60005b82600052600360205260406000205481101561117957826000526003602052611496816040600020613ef7565b50548251146114a757600101611469565b611173906111799360005260036020526040600020613ef7565b50600e546001600160a01b0316331461145d565b346103ab576114e3366138c1565b9060018060a01b03600c54163314801561151c575b61150190613eac565b6000526004602052611422600a604060002001918254613b14565b50600e546001600160a01b031633146114f8565b346103ab5760203660031901126103ab5760043561154c6143d8565b80600052600460205261156960ff60096040600020015416613e6b565b6000908152600460205260409020600901805460ff19169055005b346103ab5760003660031901126103ab57600b546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab576001600160a01b036115ce613818565b1660005260106020526020604060002054604051908152f35b346103ab5760203660031901126103ab5760043560005260046020526020600560406000200154604051908152f35b346103ab5760003660031901126103ab576001546040516001600160a01b039091168152602090f35b346103ab5760603660031901126103ab57611658613818565b60243560443560028110156103ab5761166f6143b6565b600d546001600160a01b031633148015611958575b156119145781600052600460205260406000209260018060a01b0316908160005260026020526040600020836000526020526040600020906116c581613692565b60005260205260406000209161174660018401938454906116e7821515613bba565b60016004820191611716600784549261170c60ff851661170681613688565b15613c10565b0154421015613c54565b60ff191617905561172c60058701918254613b41565b809155606461173f82600b890154613b2e565b0490613b41565b61175760ff600c8701541682613b2e565b600786015560068501556000526003602052604060002092835461177a81613ba3565b9461178860405196876137f7565b818652602086019060005260206000206000915b83831061184a575050505060005b845181101561181a576007546001600160a01b0316906117ca8187613b66565b5151823b156103ab5760009260248492604051958693849263106b5da160e01b845260048401525af191821561036057600192611809575b50016117aa565b6000611814916137f7565b86611802565b506001600080516020614402833981519152916118408554604051938493019083613b7a565b0390a26001600055005b600b602060019260405161185d816137bf565b8554815260405161187b8161187481898b01613a22565b03826137f7565b8382015260ff60028701541661189081613688565b60408201526040516118a9816118748160038b01613a22565b606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e0820152600886015461010082015260098601546101208201526040516119008161187481600a8b01613a22565b61014082015281520192019201919061179c565b606460405162461bcd60e51b815260206004820152602060248201527f43616c6c6572206973206e6f7420746865207661756c7420636f6e74726163746044820152fd5b50600e546001600160a01b03163314611684565b346103ab5760203660031901126103ab57611988600435613d60565b6040518091602082016020835281518091526040830190602060408260051b8601019301916000905b8282106119c057505050500390f35b91936001919395506020611a758192603f198a820301865288519081518152610140611a236119fe8685015161016088860152610160850190613663565b6040850151611a0c81613688565b604085015260608501518482036060860152613663565b926080810151608084015260a081015160a084015260c081015160c084015260e081015160e0840152610100810151610100840152610120810151610120840152015190610140818403910152613663565b96019201920185949391926119b1565b346103ab5760203660031901126103ab57611a9e613818565b611aa66143d8565b600c54906001600160a01b038216611b29576001600160a01b0316908115611ae457600780546001600160a01b031990811684179091551617600c55005b60405162461bcd60e51b815260206004820152601c60248201527f436f76657220616464726573732063616e6e6f74206265207a65726f000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527010dbdd995c88185b1c9958591e481cd95d607a1b6044820152606490fd5b346103ab5760003660031901126103ab57611b7b6143d8565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346103ab5760003660031901126103ab576008546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab57611c01613818565b611c096143d8565b600d54906001600160a01b038216611c8c576001600160a01b0316908115611c4757600880546001600160a01b031990811684179091551617600d55005b60405162461bcd60e51b815260206004820152601c60248201527f5661756c7420616464726573732063616e6e6f74206265207a65726f000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527015985d5b1d08185b1c9958591e481cd95d607a1b6044820152606490fd5b346103ab5760203660031901126103ab576004356001600160401b0381116103ab5761012060031982360301126103ab5760405190611d03826137db565b80600401358252602481013560038110156103ab576020830190815260448201356001600160401b0381116103ab57611d42906004369185010161387a565b9260408101938452606081019160648401358352608082016084850135815260a48501359160ff831683036103ab5760a0840192835260c084019160c4870135835260e48701359660028810156103ab5760e0860197885261010401356001600160a01b03811681036103ab576101008601908152611dbf6143d8565b8751611dca81613692565b611dd381613692565b1590811561204d575b50156120085760055460018101809111610f8b576005558451600052600460205260406000209585518755885160018801908051906001600160401b03821161117b57611e2983546139e8565b601f8111611fc0575b50602090601f8311600114611f4f579180611eae96949260ff99989694600092611f44575b50508160011b916000199060031b1c19161790555b516003890155516004880155600060058801556000600788015560006006880155600987016001851982541617905551611ea581613688565b60028701613b4e565b519182600b860155511690600c8401918254916064039560648711610f8b577ff01906dc0ac306fa816e50166a7ed46af1f05721cb90cea30beebdd8dede3a6d96600a611f3f97015551611f0181613692565b611f0a81613692565b60ff60ff60a81b01199092161760a89190911b60ff60a81b161790555192516040516020808252909283929091830190613663565b0390a2005b015190508e80611e57565b90601f1983169184600052816000209260005b818110611fa8575092600192859260ff9b9a9896611eae9a989610611f8f575b505050811b019055611e6c565b015160001960f88460031b161c191690558e8080611f82565b92936020600181928786015181550195019301611f62565b836000526020600020601f840160051c81019160208510611ffe575b601f0160051c01905b818110611ff25750611e32565b60008155600101611fe5565b9091508190611fdc565b60405162461bcd60e51b815260206004820152601760248201527f57726f6e6720417373657420666f72204465706f7369740000000000000000006044820152606490fd5b516001600160a01b03161515905089611ddc565b346103ab5760003660031901126103ab576006546040516001600160a01b039091168152602090f35b346103ab5760403660031901126103ab576004356024356001600160a01b0381168082036103ab5760006101206040516120c3816137a3565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015201526000526002602052604060002082600052602052604060002060008052602052604060002090604051809261212d826137a3565b80546001600160a01b03168252600181015460208301908152600282015460408401908152600383015460608501908152600484015492979260808601919060ff1661217881613688565b825260058501549260a08701938452612207602060068801549660c08a0197885260ff600960078b01549a60e08d019b8c5261010060088201549d019c8d520154169a6101208d019b6121ca81613692565b8c52600754604051630414960560e21b81526001600160a01b03928316600482015260248101939093529193849290911690829081906044820190565b03915afa90811561036057600091612306575b50806122f7575061224661012c61223e87515b428a518042116122ef575b50613b41565b048351613b2e565b875285514281116122b9575061014099600085525b604080519a516001600160a01b03168b52905160208b01529051908901525160608801525161228981613688565b60808701525160a08601525160c08501525160e084015251610100830152516122b181613692565b610120820152f35b6122c4904290613b41565b99620151808b019a8b8111610f8b576201517f019a8b11610f8b57620151806101409b04855261225b565b90508f612238565b61012c61223e6122469261222d565b906020823d602011612330575b81612320602093836137f7565b810103126105145750518b61221a565b3d9150612313565b346103ab5760203660031901126103ab576004356123546143b6565b8060005260046020526040600020903360005260026020526040600020816000526020526040600020600080526020526040600020916123e860018401938454906123a0821515613bba565b600260048201916123bf600784549261170c60ff851661170681613688565b60ff19161790556123d560058401918254613b41565b809155606461173f82600b860154613b2e565b91600c8201926123fc60ff85541682613b2e565b600784015560068301556000526003602052604060002092835461241f81613ba3565b9461242d60405196876137f7565b818652602086019060005260206000206000915b8383106125d5575050505060005b84518110156124bf576007546001600160a01b03169061246f8187613b66565b5151823b156103ab5760009260248492604051958693849263106b5da160e01b845260048401525af1918215610360576001926124ae575b500161244f565b60006124b9916137f7565b866124a7565b5082600160ff825460a81c166124d481613692565b036125a75754815460405163a9059cbb60e01b8152336004820152602481019190915290602090829060081c6001600160a01b0316816000816044810103925af190811561036057600091612554575b506000805160206144028339815191529161254161184092613d1c565b5460405191829160013396019083613b7a565b90506020813d60201161259f575b8161256f602093836137f7565b810103126103ab576000805160206144028339815191529161254161259661184093613b21565b92505091612524565b3d9150612562565b50611840816125d060008080806000805160206144028339815191529754335af16103d5613ca0565b612541565b600b60206001926040516125e8816137bf565b855481526040516125ff8161187481898b01613a22565b8382015260ff60028701541661261481613688565b604082015260405161262d816118748160038b01613a22565b606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e0820152600886015461010082015260098601546101208201526040516126848161187481600a8b01613a22565b610140820152815201920192019190612441565b346103ab5760203660031901126103ab57600435600f548110156103ab576126c160209161382e565b905460405160039290921b1c6001600160a01b03168152f35b346103ab5760003660031901126103ab57600a546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab5761271c613818565b600554600091906001600160a01b03821660015b82811115612b14575061274284613ba3565b9361275060405195866137f7565b80855261275f601f1991613ba3565b0160005b818110612aaf5750506007546001600160a01b03169260009060015b8481111561285957866040518091602082016020835281518091526040830190602060408260051b8601019301916000905b8282106127c057505050500390f35b919360019193955060208091603f19898203018552875190610120806127f184516101408552610140850190613663565b93858101518685015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e08501526101008101511515610100850152015191015296019201920185949391926127b1565b80600052600460205260406000208460005260026020526040600020826000526020526040600020600080526020526040600020604051612899816137a3565b60018060a01b038254168152600182015460208201526002820154604082015261012060ff600960038501549460608501958652826004820154166128dd81613688565b6080860152600581015460a0860152600681015460c0860152600781015460e086015260088101546101008601520154169161291883613692565b01526040516339e671f760e11b81526001600160a01b0385166004820152602481018490526020816044818c5afa90811561036057600091612a7c575b506129609151613b2e565b85600052600260205260406000208360005260205260406000206000805260205260016040600020015461299f575b505061299a90613b94565b61277f565b600086815260026020908152604080832086845282528083208380529091529081902060038082015460019092015490850154600486015460058701546008880154600989015496519b9860ff90971696909591949293929190612a028d6137a3565b60405180600181930190612a1591613a22565b03612a2090826137f7565b8c528960208d015260408c015260608b015260808a015260a089015260c088015260e0870152151561010086015261012085015280612a5e90613b94565b93612a69828a613b66565b52612a749088613b66565b50878061298f565b906020823d8211612aa7575b81612a95602093836137f7565b81010312610514575051612960612955565b3d9150612a88565b602090604095949551612ac1816137a3565b60608152600083820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e08201526000610100820152600061012082015282828901015201939293612763565b816000949394526002602052604060002081600052602052604060002060008052602052600160406000200154612b57575b612b4f90613b94565b929192612730565b93612b64612b4f91613b94565b949050612b46565b346103ab5760003660031901126103ab57600e546040516001600160a01b039091168152602090f35b60e03660031901126103ab576040516000612baf82613788565b612bb7613818565b8252602082019160243583526040810160443581526060820190606435825260843560028110156133cd576080840190815260a4359160028310156106485760a0850192835260c435936001600160a01b03851685036133c95760c08601948552612c206143b6565b875187526004602052604087209460ff6009870154161561337957600c860194855460ff8160a81c169151612c5481613692565b612c5d81613692565b612c6683613692565b82036133255783516004890154116132ed5782516001600160a01b0390811660089290921c16036132a85787516001600160a01b03168952600260209081526040808b208c518c5290915289208551612cbe81613692565b612cc781613692565b8a52602052600160408a20015461325157600190612ce481613692565b036131f4578251156131af5751865183516040516323b872dd60e01b81526001600160a01b039283166004820152306024820152604481019190915291602091839160649183918d91165af1801561090657613178575b508151612d4d60058701918254613b14565b90558151935b612d7960ff612d706005890154606461173f82600b8d0154613b2e565b92541682613b2e565b6007870155600686015561016d6064612d96600388015487613b2e565b04049260018060a01b0387511690895192516201518081028181046201518014821517156131645792612f0a94926009928b612dd78e9f979e9d9e42613b14565b918d8c8c865199612de78b613692565b60405198612df48a6137a3565b8952602089019283526040890190815260608901918252608089019284845260a08a019586528c60c08b019742895260e08c01998a526101008c019a878c526101208d019e8f612e4382613692565b5251612e4e81613692565b612e5781613692565b6130c157516001600160a01b039081168752600260208181526040808a2094518a529381528389208980529052919096209a518b546001600160a01b0319169616959095178a555160018a015551928801929092559051600387015551612eca90612ec181613688565b60048701613b4e565b516005850155516006840155516007830155516008820155019051612eee81613692565b612ef781613692565b60ff801983541691161790555b51613d60565b93855b8551811015612f7d576007546001600160a01b031690612f2d8188613b66565b5151823b1561063c57889260248492604051958693849263106b5da160e01b845260048401525af19182156109065788600193612f6d575b505001612f0d565b612f76916137f7565b8a88612f65565b50600f54869550879086805b828110613089575b5015613029575b5080516001600160a01b03168652601060205260408620805460018101919082106130155760409793613005600196947f6f85d9948d6ca3dd6ce6ce7d175da22b4e865827ae6fcd530ec7edac1240f92894889455838060a01b0390511694518a51938493019083613b7a565b0390a25582519182526020820152f35b634e487b7160e01b88526011600452602488fd5b81516001600160a01b031690600160401b811015613075578060016130519201600f5561382e565b81546001600160a01b0360039290921b91821b191692901b91909117905586612f98565b634e487b7160e01b88526041600452602488fd5b6130928161382e565b9054855160039290921b1c6001600160a01b039081169116146130b757600101612f89565b5050600188612f91565b516001600160a01b039081168752600260208181526040808a2094518a529381528389206001808b529152929097209b518c546001600160a01b0319169116178b559051908a01555192880192909255905160038701555161312690612ec181613688565b51600585015551600684015551600783015551600882015501905161314a81613692565b61315381613692565b60ff80198354169116179055612f04565b634e487b7160e01b8b52601160045260248bfd5b6020813d6020116131a7575b81613191602093836137f7565b81010312610644576131a290613b21565b612d3b565b3d9150613184565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b503415613213576005850161320a348254613b14565b90553493612d53565b60405162461bcd60e51b81526020600482015260166024820152754465706f7369742063616e6e6f74206265207a65726f60501b6044820152606490fd5b60405162461bcd60e51b815260206004820152602960248201527f557365722068617320616c7265616479206465706f736974656420696e746f206044820152681d1a1a5cc81c1bdbdb60ba1b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f506f6f6c20646f6573206e6f74206163636570742074686973206173736574006044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f14195c9a5bd9081d1bdbc81cda1bdc9d60821b6044820152606490fd5b60405162461bcd60e51b815260206004820152602660248201527f506f6f6c20646f6573206e6f74206163636570742074686973206465706f736960448201526574207479706560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c20697320696e616374697665206f7220646f6573206e6f74206578696044820152611cdd60f21b6064820152608490fd5b8680fd5b8480fd5b346103ab5760203660031901126103ab576004356000526004602052602060ff600960406000200154166040519015158152f35b346103ab5760003660031901126103ab57600c546040516001600160a01b039091168152602090f35b346103ab5760003660031901126103ab57600d546040516001600160a01b039091168152602090f35b346103ab5760003660031901126103ab57604051806020600f5492838152018092600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8029060005b81811061350457505050816134b89103826137f7565b6040519182916020830190602084525180915260408301919060005b8181106134e2575050500390f35b82516001600160a01b03168452859450602093840193909201916001016134d4565b82546001600160a01b03168452602090930192600192830192016134a2565b346103ab5760203660031901126103ab5761353c613aa5565b50600435600052600460205261363c604060002060ff600c604051926135618461376c565b80548452604051613579816118748160018601613a22565b60208501528260028201541661358e81613688565b60408501526003810154606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e0850152600880820154610100860152600982015484161515610120860152600a820154610140860152600b8201546101608601529101548083166101808501529081901c6001600160a01b03166101a084015260a81c1661362281613692565b6101c082015260405191829160208352602083019061369c565b0390f35b60005b8381106136535750506000910152565b8181015183820152602001613643565b9060209161367c81518092818552858086019101613640565b601f01601f1916010190565b60031115610b3f57565b60021115610b3f57565b90815181526101c0806136c060208501516101e060208601526101e0850190613663565b9360408101516136cf81613688565b6040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610100810151610100850152610120810151151561012085015261014081015161014085015261016081015161016085015260ff6101808201511661018085015260018060a01b036101a0820151166101a085015201519161376783613692565b015290565b6101e081019081106001600160401b0382111761117b57604052565b60e081019081106001600160401b0382111761117b57604052565b61014081019081106001600160401b0382111761117b57604052565b61016081019081106001600160401b0382111761117b57604052565b61012081019081106001600160401b0382111761117b57604052565b90601f801991011681019081106001600160401b0382111761117b57604052565b600435906001600160a01b03821682036103ab57565b600f5481101561384957600f60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160401b03811161117b57601f01601f191660200190565b81601f820112156103ab578035906138918261385f565b9261389f60405194856137f7565b828452602083830101116103ab57816000926020809301838601378301015290565b60409060031901126103ab576004359060243590565b9060406003198301126103ab57600435916024356001600160401b0381116103ab5761016081830360031901126103ab5760405191613915836137bf565b8160040135835260248201356001600160401b0381116103ab5781600461393e9285010161387a565b6020840152604482013560038110156103ab57604084015260648201356001600160401b0381116103ab578160046139789285010161387a565b60608401526084820135608084015260a482013560a084015260c482013560c084015260e482013560e0840152610104820135610100840152610124820135610120840152610144820135916001600160401b0383116103ab576139df920160040161387a565b61014082015290565b90600182811c92168015613a18575b6020831014613a0257565b634e487b7160e01b600052602260045260246000fd5b91607f16916139f7565b60009291815491613a32836139e8565b8083529260018116908115613a885750600114613a4e57505050565b60009081526020812093945091925b838310613a6e575060209250010190565b600181602092949394548385870101520191019190613a5d565b915050602093945060ff929192191683830152151560051b010190565b60405190613ab28261376c565b60006101c083828152606060208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a08201520152565b91908201809211610f8b57565b519081151582036103ab57565b81810292918115918404141715610f8b57565b91908203918211610f8b57565b90613b5881613688565b60ff80198354169116179055565b80518210156138495760209160051b010190565b604090613b91939281528160208201520190613a22565b90565b6000198114610f8b5760010190565b6001600160401b03811161117b5760051b60200190565b15613bc157565b60405162461bcd60e51b815260206004820152602160248201527f4e6f206465706f73697420666f756e6420666f722074686973206164647265736044820152607360f81b6064820152608490fd5b15613c1757565b60405162461bcd60e51b81526020600482015260156024820152744465706f736974206973206e6f742061637469766560581b6044820152606490fd5b15613c5b57565b60405162461bcd60e51b815260206004820152601c60248201527f4465706f73697420706572696f6420686173206e6f7420656e646564000000006044820152606490fd5b3d15613ccb573d90613cb18261385f565b91613cbf60405193846137f7565b82523d6000602084013e565b606090565b15613cd757565b60405162461bcd60e51b815260206004820152601c60248201527f4e6174697665206173736574207472616e73666572206661696c6564000000006044820152606490fd5b15613d2357565b60405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b600052600360205260406000208054613d7881613ba3565b91613d8660405193846137f7565b818352602083019060005260206000206000915b838310613da8575050505090565b600b6020600192604051613dbb816137bf565b85548152604051613dd28161187481898b01613a22565b8382015260ff600287015416613de781613688565b6040820152604051613e00816118748160038b01613a22565b606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e082015260088601546101008201526009860154610120820152604051613e578161187481600a8b01613a22565b610140820152815201920192019190613d9a565b15613e7257565b60405162461bcd60e51b8152602060048201526012602482015271506f6f6c206973206e6f742061637469766560701b6044820152606490fd5b15613eb357565b606460405162461bcd60e51b815260206004820152602060248201527f43616c6c6572206973206e6f742074686520636f76657220636f6e74726163746044820152fd5b805482101561384957600052600b602060002091020190600090565b909291926142c757825181556001810160208401518051906001600160401b03821161117b578190613f4584546139e8565b601f8111614274575b50602090601f831160011461420f57600092614204575b50508160011b916000199060031b1c19161790555b613f946040840151613f8b81613688565b60028301613b4e565b6003810160608401518051906001600160401b03821161117b57613fb883546139e8565b601f81116141bc575b50602090601f831160011461414e579180600a94926101409694600092614143575b50508160011b916000199060031b1c19161790555b6080850151600482015560a0850151600582015560c0850151600682015560e0850151600782015561010085015160088201556101208501516009820155019201519182516001600160401b03811161117b5761405582546139e8565b601f81116140fb575b506020601f8211600114614099578192939460009261408e575b50508160011b916000199060031b1c1916179055565b015190503880614078565b601f1982169083600052806000209160005b8181106140e3575095836001959697106140ca575b505050811b019055565b015160001960f88460031b161c191690553880806140c0565b9192602060018192868b0151815501940192016140ab565b826000526020600020601f830160051c81019160208410614139575b601f0160051c01905b81811061412d575061405e565b60008155600101614120565b9091508190614117565b015190503880613fe3565b90601f1983169184600052816000209260005b8181106141a457509260019285926101409896600a98961061418b575b505050811b019055613ff8565b015160001960f88460031b161c1916905538808061417e565b92936020600181928786015181550195019301614161565b836000526020600020601f840160051c810191602085106141fa575b601f0160051c01905b8181106141ee5750613fc1565b600081556001016141e1565b90915081906141d8565b015190503880613f65565b60008581528281209350601f198516905b81811061425c5750908460019594939210614243575b505050811b019055613f7a565b015160001960f88460031b161c19169055388080614236565b92936020600181928786015181550195019301614220565b909150836000526020600020601f840160051c810191602085106142bd575b90601f859493920160051c01905b8181106142ae5750613f4e565b600081558493506001016142a1565b9091508190614293565b634e487b7160e01b600052600060045260246000fd5b51906001600160a01b03821682036103ab57565b81601f820112156103ab5780516143078161385f565b9261431560405194856137f7565b818452602082840101116103ab57613b919160208085019101613640565b90816101209103126103ab576040519061434c826137db565b614355816142dd565b825260208101516020830152604081015160408301526060810151606083015260808101519060038210156103ab5761010091608084015260a081015160a084015260c081015160c084015260e081015160e0840152015161010082015290565b6002600054146143c7576002600055565b633ee5aeb560e01b60005260046000fd5b6001546001600160a01b031633036143ec57565b63118cdaa760e01b6000523360045260246000fdfe485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d9751a264697066735822122042d79dae9cf020fc50369ca492d46e6bdc18406fb1a2c77fda7e497e9235449964736f6c634300081c0033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0xD6 JUMPI PUSH1 0x1F PUSH2 0x4549 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xDB JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xD6 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xD6 JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE DUP1 ISZERO PUSH1 0xC0 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4457 SWAP1 DUP2 PUSH2 0xF2 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68BCD8D EQ PUSH2 0x3523 JUMPI DUP1 PUSH4 0x195EC9EE EQ PUSH2 0x3457 JUMPI DUP1 PUSH4 0x2274346B EQ PUSH2 0x342E JUMPI DUP1 PUSH4 0x248A75B7 EQ PUSH2 0x3405 JUMPI DUP1 PUSH4 0x25F11E8D EQ PUSH2 0x33D1 JUMPI DUP1 PUSH4 0x2607B539 EQ PUSH2 0x2B95 JUMPI DUP1 PUSH4 0x29BA7BB2 EQ PUSH2 0x2B6C JUMPI DUP1 PUSH4 0x31866763 EQ PUSH2 0x2703 JUMPI DUP1 PUSH4 0x34808EC3 EQ PUSH2 0x26DA JUMPI DUP1 PUSH4 0x35C1D349 EQ PUSH2 0x2698 JUMPI DUP1 PUSH4 0x3DC66AD3 EQ PUSH2 0x2338 JUMPI DUP1 PUSH4 0x46F84795 EQ PUSH2 0x15AD JUMPI DUP1 PUSH4 0x4E055244 EQ PUSH2 0x208A JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x2061 JUMPI DUP1 PUSH4 0x5CFAB35C EQ PUSH2 0x1CC5 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x1BE8 JUMPI DUP1 PUSH4 0x6F60537D EQ PUSH2 0x1BBF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B62 JUMPI DUP1 PUSH4 0x7C366CC6 EQ PUSH2 0x1A85 JUMPI DUP1 PUSH4 0x7EB111F0 EQ PUSH2 0x196C JUMPI DUP1 PUSH4 0x83BC6357 EQ PUSH2 0x163F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1616 JUMPI DUP1 PUSH4 0x8F244630 EQ PUSH2 0x15E7 JUMPI DUP1 PUSH4 0x96F3A8AD EQ PUSH2 0x15AD JUMPI DUP1 PUSH4 0x996B8A6F EQ PUSH2 0x1584 JUMPI DUP1 PUSH4 0x9ABD9B05 EQ PUSH2 0x1530 JUMPI DUP1 PUSH4 0x9FD36B15 EQ PUSH2 0x14D5 JUMPI DUP1 PUSH4 0xA14764D0 EQ PUSH2 0x143A JUMPI DUP1 PUSH4 0xA4948D85 EQ PUSH2 0x13DB JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x12EC JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x11CE JUMPI DUP1 PUSH4 0xB5D90C28 EQ PUSH2 0x11A5 JUMPI DUP1 PUSH4 0xC7AA9874 EQ PUSH2 0x1117 JUMPI DUP1 PUSH4 0xD86C0444 EQ PUSH2 0xFB8 JUMPI DUP1 PUSH4 0xD88FF1F4 EQ PUSH2 0xCB9 JUMPI DUP1 PUSH4 0xE35F8129 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xF525CB68 EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xF6E80558 EQ PUSH2 0x6CC JUMPI PUSH4 0xFB839DDA EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1F0 PUSH2 0x43B6 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BB2B243 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x120 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x6AD JUMPI JUMPDEST POP ADD SWAP1 DUP2 MLOAD ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x2500ED8D PUSH1 0xE2 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3E0 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x27C DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x285 DUP2 PUSH2 0x3692 JUMP JUMPDEST SUB PUSH2 0x3B8 JUMPI PUSH1 0xE0 ADD MLOAD SWAP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x36C JUMPI JUMPDEST POP PUSH2 0x31B SWAP2 PUSH2 0x2E4 PUSH2 0x120 SWAP3 PUSH2 0x3D1C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BB2B243 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x360 JUMPI PUSH2 0x331 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x359 JUMPI JUMPDEST PUSH2 0x34A DUP2 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x4333 JUMP JUMPDEST POP CODESIZE PUSH2 0x32A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3B0 JUMPI JUMPDEST DUP2 PUSH2 0x387 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3AB JUMPI PUSH2 0x31B SWAP2 PUSH2 0x2E4 PUSH2 0x3A2 PUSH2 0x120 SWAP4 PUSH2 0x3B21 JUMP JUMPDEST SWAP3 POP POP SWAP2 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x37A JUMP JUMPDEST POP PUSH2 0x31B SWAP2 PUSH2 0x3DB PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x120 SWAP7 MLOAD CALLER GAS CALL PUSH2 0x3D5 PUSH2 0x3CA0 JUMP JUMPDEST POP PUSH2 0x3CD0 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST SWAP1 RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0x3F0 DUP2 DUP5 PUSH2 0x37F7 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x664 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x64C JUMPI ADD SWAP1 PUSH2 0x100 DUP3 DUP5 SUB SLT PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x100 DUP5 ADD DUP5 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x650 JUMPI PUSH1 0x40 MSTORE DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x64C JUMPI DUP2 PUSH2 0x45C SWAP2 DUP6 ADD PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x64C JUMPI DUP4 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x64C JUMPI DUP2 MLOAD SWAP2 PUSH2 0x48E DUP4 PUSH2 0x3BA3 JUMP JUMPDEST SWAP3 PUSH2 0x49C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x37F7 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x648 JUMPI PUSH1 0x20 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x517 JUMPI POP POP POP POP POP PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x514 JUMPI POP PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x509 SWAP1 PUSH1 0xE0 ADD PUSH2 0x42DD JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE CODESIZE PUSH2 0x26B JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x644 JUMPI DUP3 ADD PUSH2 0x1E0 DUP2 DUP8 SUB PUSH1 0x1F NOT ADD SLT PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x545 DUP3 PUSH2 0x376C JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x640 JUMPI DUP8 PUSH1 0x20 PUSH2 0x56E SWAP3 DUP5 ADD ADD PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x640 JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x5D2 PUSH2 0x140 DUP3 ADD PUSH2 0x3B21 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x640 JUMPI PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1E0 SWAP1 PUSH2 0x617 PUSH2 0x1C0 DUP3 ADD PUSH2 0x42DD JUMP JUMPDEST PUSH2 0x1A0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x63C JUMPI PUSH2 0x1C0 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x4B9 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20616374697665207769746864726177616C20666F722075736572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x6C6 SWAP2 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x359 JUMPI PUSH2 0x34A DUP2 DUP4 PUSH2 0x37F7 JUMP JUMPDEST CODESIZE PUSH2 0x234 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x72C PUSH2 0x3818 JUMP JUMPDEST PUSH2 0x734 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH2 0x7BB PUSH2 0x43B6 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3B4D01A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xB55 JUMPI JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD SWAP1 PUSH1 0xC0 DUP4 ADD MLOAD SWAP3 PUSH1 0x5 DUP5 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x2 PUSH1 0x0 SWAP5 EQ SWAP1 DUP2 PUSH2 0xB31 JUMPI JUMPDEST POP ISZERO PUSH2 0xAF4 JUMPI PUSH1 0xA0 DUP3 ADD DUP1 MLOAD DUP5 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xAB8 JUMPI PUSH2 0x853 PUSH1 0xFF PUSH1 0x9 DUP4 ADD SLOAD AND PUSH2 0x3E6B JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD SWAP4 PUSH1 0xC0 DUP7 ADD SWAP2 DUP3 MLOAD DUP7 LT PUSH2 0xA73 JUMPI PUSH2 0x887 DUP9 SWAP7 DUP5 MLOAD PUSH2 0x87D PUSH1 0x8 DUP9 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B14 JUMP JUMPDEST SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH2 0x3B41 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x893 DUP5 MLOAD PUSH2 0x3D60 JUMP JUMPDEST SWAP4 DUP6 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x911 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x8B6 DUP2 DUP9 PUSH2 0x3B66 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x63C JUMPI DUP9 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x906 JUMPI DUP9 PUSH1 0x1 SWAP4 PUSH2 0x8F6 JUMPI JUMPDEST POP POP ADD PUSH2 0x896 JUMP JUMPDEST PUSH2 0x8FF SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP11 DUP9 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP4 POP SWAP2 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x648 JUMPI DUP6 SWAP4 PUSH1 0x24 DUP6 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP4 DUP5 SWAP3 PUSH4 0xF1B4BF9D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xA68 JUMPI PUSH32 0xEEF4955E8B18DCB6D1C19905B7B86E5FE56138AD1CE2C5E540CE4E959312F511 SWAP4 DUP7 PUSH1 0x60 SWAP5 PUSH2 0xA58 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP5 MLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND DUP2 MLOAD DUP2 EXTCODESIZE ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP2 DUP5 DUP4 ISZERO PUSH2 0xA48 JUMPI PUSH32 0x415071086C9EA63F7F39884C21A8AF430AF53BFD511A362DFF69CABCB1B8BCC1 SWAP4 PUSH2 0xA38 JUMPI JUMPDEST POP POP MLOAD SWAP2 PUSH2 0xA25 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x1 PUSH1 0x40 DUP5 ADD SWAP2 ADD PUSH2 0x3A22 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD MSTORE DUP1 CALLER SWAP4 SUB SWAP1 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xA41 SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0xA61 SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP9 DUP7 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320696E2074686520706F6F6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BDD0818481D985B1A59081C1C9BDC1BDCD85B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x141C9BDC1BDCD85B081B9BDD08185C1C1C9BDD9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE0 SWAP2 POP ADD MLOAD ISZERO ISZERO DUP5 PUSH2 0x81B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0xB66 DUP2 DUP5 PUSH2 0x37F7 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x664 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x64C JUMPI ADD SWAP2 PUSH2 0x120 DUP4 DUP3 SUB SLT PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xB9E DUP5 PUSH2 0x37DB JUMP JUMPDEST DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xA54 JUMPI PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xBF3 PUSH1 0xE0 DUP3 ADD PUSH2 0x3B21 JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xA54 JUMPI ADD SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC26 DUP5 PUSH2 0x3788 JUMP JUMPDEST PUSH2 0xC2F DUP4 PUSH2 0x42DD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x664 JUMPI PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x664 JUMPI DUP3 PUSH2 0xC6D SWAP2 DUP6 ADD PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x514 JUMPI POP DUP3 SWAP2 PUSH2 0xC96 SWAP2 PUSH1 0xC0 SWAP5 ADD PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE SWAP1 DUP3 PUSH2 0x7F7 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x5 SLOAD PUSH2 0xCD6 DUP2 PUSH2 0x3BA3 JUMP JUMPDEST SWAP1 PUSH2 0xCE4 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0xCF3 DUP3 PUSH2 0x3BA3 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xFA1 JUMPI POP POP PUSH1 0x1 JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD73 JUMPI DUP3 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xD44 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0xD63 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x369C JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0xD35 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD8F DUP3 PUSH2 0x376C JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xDA4 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x3A22 JUMP JUMPDEST SUB PUSH2 0xDAF SWAP1 DUP3 PUSH2 0x37F7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF AND SWAP2 PUSH1 0x40 DUP5 ADD SWAP3 PUSH2 0xDCD DUP2 PUSH2 0x3688 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xC0 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP6 ADD SLOAD SWAP1 PUSH1 0xE0 DUP10 ADD SWAP2 DUP3 MSTORE PUSH1 0x8 DUP7 ADD SLOAD SWAP3 PUSH2 0x100 DUP11 ADD SWAP4 DUP5 MSTORE PUSH1 0x9 DUP8 ADD SLOAD PUSH1 0xFF AND SWAP5 PUSH2 0x120 DUP12 ADD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0xA DUP9 ADD SLOAD SWAP7 PUSH2 0x140 DUP13 ADD SWAP8 DUP9 MSTORE PUSH1 0xB DUP10 ADD SLOAD SWAP9 PUSH2 0x160 DUP14 ADD SWAP10 DUP11 MSTORE PUSH1 0xC ADD SLOAD SWAP11 DUP12 SWAP11 DUP14 PUSH2 0x180 DUP2 ADD SWAP13 PUSH1 0xFF AND DUP14 MSTORE PUSH2 0x1A0 ADD SWAP13 DUP14 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB DUP3 PUSH1 0x8 SHR AND SWAP1 MSTORE PUSH1 0xA8 SHR PUSH1 0xFF AND SWAP14 PUSH2 0x1C0 ADD SWAP14 DUP15 PUSH2 0xE88 DUP3 PUSH2 0x3692 JUMP JUMPDEST MSTORE MLOAD SWAP1 MLOAD SWAP2 PUSH2 0xE96 DUP4 PUSH2 0x3688 JUMP JUMPDEST MLOAD SWAP3 MLOAD SWAP4 MLOAD SWAP5 MLOAD SWAP6 MLOAD SWAP7 MLOAD SWAP8 MLOAD ISZERO ISZERO SWAP9 MLOAD SWAP10 MLOAD SWAP11 MLOAD PUSH1 0xFF AND SWAP12 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 MLOAD AND SWAP13 MLOAD SWAP14 PUSH2 0xEC7 DUP16 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0xED9 SWAP1 PUSH2 0x376C JUMP JUMPDEST PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 ADD MSTORE PUSH2 0xEED DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x40 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0x60 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0x80 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0xC0 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0xE0 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x100 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x120 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x140 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x160 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x180 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x1A0 ADD MSTORE PUSH2 0xF50 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1C0 ADD MSTORE PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP1 DUP3 GT PUSH2 0xF8B JUMPI PUSH2 0xF80 PUSH2 0xF86 SWAP3 PUSH1 0x80 MLOAD PUSH2 0xF79 DUP3 DUP9 PUSH2 0x3B66 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x3B66 JUMP JUMPDEST POP PUSH2 0x3B94 JUMP JUMPDEST PUSH2 0xD03 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0xFAC PUSH2 0x3AA5 JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0xCF7 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xFDA PUSH2 0x43D8 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x10C7 JUMPI DUP2 ISZERO PUSH2 0x1094 JUMPI DUP1 ISZERO PUSH2 0x1056 JUMPI PUSH32 0x17B8644F386D1C7C7138EF98B3C8035622BBE94D7BE9B26F71D2654A547C2943 SWAP2 PUSH1 0x40 SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x3 DUP5 PUSH1 0x0 KECCAK256 ADD SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x4 DUP5 PUSH1 0x0 KECCAK256 ADD SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081B5A5B9A5B5D5B481C195C9A5BD9 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x496E76616C696420415059 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F74206578697374206F7220697320696E61637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7665 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x1125 CALLDATASIZE PUSH2 0x38D7 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1191 JUMPI JUMPDEST PUSH2 0x1143 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x117B JUMPI DUP3 PUSH2 0x1173 SWAP2 PUSH1 0x1 PUSH2 0x1179 SWAP6 ADD DUP2 SSTORE PUSH2 0x3EF7 JUMP JUMPDEST SWAP1 PUSH2 0x3F13 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x113A JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 PUSH1 0x1 DUP4 ADD SWAP1 PUSH2 0x1205 SWAP2 PUSH2 0x3A22 JUMP JUMPDEST SUB PUSH2 0x1210 SWAP1 DUP5 PUSH2 0x37F7 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x3 DUP2 ADD SLOAD SWAP1 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x8 DUP5 ADD SLOAD SWAP1 PUSH1 0x9 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP3 PUSH1 0xA DUP7 ADD SLOAD SWAP5 PUSH1 0xB DUP8 ADD SLOAD SWAP7 PUSH1 0xC ADD SLOAD SWAP8 DUP9 PUSH1 0xA8 SHR PUSH1 0xFF AND SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE DUP14 PUSH1 0x20 DUP2 ADD PUSH2 0x1E0 SWAP1 MSTORE PUSH2 0x1E0 ADD PUSH2 0x127B SWAP2 PUSH2 0x3663 JUMP JUMPDEST SWAP12 DUP14 PUSH2 0x1286 DUP3 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 ADD MSTORE PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF DUP2 AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x12E2 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x1C0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1305 PUSH2 0x3818 JUMP JUMPDEST PUSH2 0x130D PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x139D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x134E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 OR PUSH1 0x6 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636520616464726573732063616E6E6F74206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11DBDD995C9B985B98D948185B1C9958591E481CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x13E9 CALLDATASIZE PUSH2 0x38C1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1426 JUMPI JUMPDEST PUSH2 0x1407 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x1422 PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B41 JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13FE JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x1448 CALLDATASIZE PUSH2 0x38D7 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x14C1 JUMPI JUMPDEST PUSH2 0x1466 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1179 JUMPI DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x1496 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3EF7 JUMP JUMPDEST POP SLOAD DUP3 MLOAD EQ PUSH2 0x14A7 JUMPI PUSH1 0x1 ADD PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x1173 SWAP1 PUSH2 0x1179 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3EF7 JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x145D JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x14E3 CALLDATASIZE PUSH2 0x38C1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x151C JUMPI JUMPDEST PUSH2 0x1501 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x1422 PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B14 JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14F8 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x154C PUSH2 0x43D8 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x1569 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x3E6B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15CE PUSH2 0x3818 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1658 PUSH2 0x3818 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x166F PUSH2 0x43B6 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1958 JUMPI JUMPDEST ISZERO PUSH2 0x1914 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x16C5 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x1746 PUSH1 0x1 DUP5 ADD SWAP4 DUP5 SLOAD SWAP1 PUSH2 0x16E7 DUP3 ISZERO ISZERO PUSH2 0x3BBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP3 ADD SWAP2 PUSH2 0x1716 PUSH1 0x7 DUP5 SLOAD SWAP3 PUSH2 0x170C PUSH1 0xFF DUP6 AND PUSH2 0x1706 DUP2 PUSH2 0x3688 JUMP JUMPDEST ISZERO PUSH2 0x3C10 JUMP JUMPDEST ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x3C54 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x172C PUSH1 0x5 DUP8 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B41 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x64 PUSH2 0x173F DUP3 PUSH1 0xB DUP10 ADD SLOAD PUSH2 0x3B2E JUMP JUMPDEST DIV SWAP1 PUSH2 0x3B41 JUMP JUMPDEST PUSH2 0x1757 PUSH1 0xFF PUSH1 0xC DUP8 ADD SLOAD AND DUP3 PUSH2 0x3B2E JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SSTORE PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD PUSH2 0x177A DUP2 PUSH2 0x3BA3 JUMP JUMPDEST SWAP5 PUSH2 0x1788 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x37F7 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x184A JUMPI POP POP POP POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x181A JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x17CA DUP2 DUP8 PUSH2 0x3B66 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1809 JUMPI JUMPDEST POP ADD PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1814 SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP7 PUSH2 0x1802 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4402 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x1840 DUP6 SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 ADD SWAP1 DUP4 PUSH2 0x3B7A JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x185D DUP2 PUSH2 0x37BF JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x187B DUP2 PUSH2 0x1874 DUP2 DUP10 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST SUB DUP3 PUSH2 0x37F7 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x1890 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x18A9 DUP2 PUSH2 0x1874 DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1900 DUP2 PUSH2 0x1874 DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x179C JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865207661756C7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1684 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1988 PUSH1 0x4 CALLDATALOAD PUSH2 0x3D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x19C0 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x1A75 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH2 0x140 PUSH2 0x1A23 PUSH2 0x19FE DUP7 DUP6 ADD MLOAD PUSH2 0x160 DUP9 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD SWAP1 PUSH2 0x3663 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x1A0C DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x3663 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH2 0x140 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3663 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x19B1 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1A9E PUSH2 0x3818 JUMP JUMPDEST PUSH2 0x1AA6 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B29 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1AE4 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND OR PUSH1 0xC SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F76657220616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x10DBDD995C88185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1B7B PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1C01 PUSH2 0x3818 JUMP JUMPDEST PUSH2 0x1C09 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C8C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1C47 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND OR PUSH1 0xD SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15985D5B1D08185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI PUSH2 0x120 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1D03 DUP3 PUSH2 0x37DB JUMP JUMPDEST DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI PUSH2 0x1D42 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH2 0x387A JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 PUSH1 0x64 DUP5 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x80 DUP3 ADD PUSH1 0x84 DUP6 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0xA4 DUP6 ADD CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x3AB JUMPI PUSH1 0xA0 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0xC0 DUP5 ADD SWAP2 PUSH1 0xC4 DUP8 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0xE4 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x2 DUP9 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0xE0 DUP7 ADD SWAP8 DUP9 MSTORE PUSH2 0x104 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x3AB JUMPI PUSH2 0x100 DUP7 ADD SWAP1 DUP2 MSTORE PUSH2 0x1DBF PUSH2 0x43D8 JUMP JUMPDEST DUP8 MLOAD PUSH2 0x1DCA DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x1DD3 DUP2 PUSH2 0x3692 JUMP JUMPDEST ISZERO SWAP1 DUP2 ISZERO PUSH2 0x204D JUMPI JUMPDEST POP ISZERO PUSH2 0x2008 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xF8B JUMPI PUSH1 0x5 SSTORE DUP5 MLOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP6 DUP6 MLOAD DUP8 SSTORE DUP9 MLOAD PUSH1 0x1 DUP9 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x117B JUMPI PUSH2 0x1E29 DUP4 SLOAD PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1FC0 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F4F JUMPI SWAP2 DUP1 PUSH2 0x1EAE SWAP7 SWAP5 SWAP3 PUSH1 0xFF SWAP10 SWAP9 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1F44 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH1 0x3 DUP10 ADD SSTORE MLOAD PUSH1 0x4 DUP9 ADD SSTORE PUSH1 0x0 PUSH1 0x5 DUP9 ADD SSTORE PUSH1 0x0 PUSH1 0x7 DUP9 ADD SSTORE PUSH1 0x0 PUSH1 0x6 DUP9 ADD SSTORE PUSH1 0x9 DUP8 ADD PUSH1 0x1 DUP6 NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH2 0x1EA5 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x3B4E JUMP JUMPDEST MLOAD SWAP2 DUP3 PUSH1 0xB DUP7 ADD SSTORE MLOAD AND SWAP1 PUSH1 0xC DUP5 ADD SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x64 SUB SWAP6 PUSH1 0x64 DUP8 GT PUSH2 0xF8B JUMPI PUSH32 0xF01906DC0AC306FA816E50166A7ED46AF1F05721CB90CEA30BEEBDD8DEDE3A6D SWAP7 PUSH1 0xA PUSH2 0x1F3F SWAP8 ADD SSTORE MLOAD PUSH2 0x1F01 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x1F0A DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xFF PUSH1 0xA8 SHL ADD NOT SWAP1 SWAP3 AND OR PUSH1 0xA8 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA8 SHL AND OR SWAP1 SSTORE MLOAD SWAP3 MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE SWAP1 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 DUP4 ADD SWAP1 PUSH2 0x3663 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x1E57 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FA8 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0xFF SWAP12 SWAP11 SWAP9 SWAP7 PUSH2 0x1EAE SWAP11 SWAP9 SWAP7 LT PUSH2 0x1F8F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E6C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1F62 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1FFE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FF2 JUMPI POP PUSH2 0x1E32 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720417373657420666F72204465706F736974000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 POP DUP10 PUSH2 0x1DDC JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x3AB JUMPI PUSH1 0x0 PUSH2 0x120 PUSH1 0x40 MLOAD PUSH2 0x20C3 DUP2 PUSH2 0x37A3 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x212D DUP3 PUSH2 0x37A3 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD SLOAD SWAP3 SWAP8 SWAP3 PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x2178 DUP2 PUSH2 0x3688 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x5 DUP6 ADD SLOAD SWAP3 PUSH1 0xA0 DUP8 ADD SWAP4 DUP5 MSTORE PUSH2 0x2207 PUSH1 0x20 PUSH1 0x6 DUP9 ADD SLOAD SWAP7 PUSH1 0xC0 DUP11 ADD SWAP8 DUP9 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x7 DUP12 ADD SLOAD SWAP11 PUSH1 0xE0 DUP14 ADD SWAP12 DUP13 MSTORE PUSH2 0x100 PUSH1 0x8 DUP3 ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE ADD SLOAD AND SWAP11 PUSH2 0x120 DUP14 ADD SWAP12 PUSH2 0x21CA DUP2 PUSH2 0x3692 JUMP JUMPDEST DUP13 MSTORE PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4149605 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 DUP5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2306 JUMPI JUMPDEST POP DUP1 PUSH2 0x22F7 JUMPI POP PUSH2 0x2246 PUSH2 0x12C PUSH2 0x223E DUP8 MLOAD JUMPDEST TIMESTAMP DUP11 MLOAD DUP1 TIMESTAMP GT PUSH2 0x22EF JUMPI JUMPDEST POP PUSH2 0x3B41 JUMP JUMPDEST DIV DUP4 MLOAD PUSH2 0x3B2E JUMP JUMPDEST DUP8 MSTORE DUP6 MLOAD TIMESTAMP DUP2 GT PUSH2 0x22B9 JUMPI POP PUSH2 0x140 SWAP10 PUSH1 0x0 DUP6 MSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP11 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 MSTORE SWAP1 MLOAD PUSH1 0x20 DUP12 ADD MSTORE SWAP1 MLOAD SWAP1 DUP10 ADD MSTORE MLOAD PUSH1 0x60 DUP9 ADD MSTORE MLOAD PUSH2 0x2289 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE MLOAD PUSH1 0xA0 DUP7 ADD MSTORE MLOAD PUSH1 0xC0 DUP6 ADD MSTORE MLOAD PUSH1 0xE0 DUP5 ADD MSTORE MLOAD PUSH2 0x100 DUP4 ADD MSTORE MLOAD PUSH2 0x22B1 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x22C4 SWAP1 TIMESTAMP SWAP1 PUSH2 0x3B41 JUMP JUMPDEST SWAP10 PUSH3 0x15180 DUP12 ADD SWAP11 DUP12 DUP2 GT PUSH2 0xF8B JUMPI PUSH3 0x1517F ADD SWAP11 DUP12 GT PUSH2 0xF8B JUMPI PUSH3 0x15180 PUSH2 0x140 SWAP12 DIV DUP6 MSTORE PUSH2 0x225B JUMP JUMPDEST SWAP1 POP DUP16 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x223E PUSH2 0x2246 SWAP3 PUSH2 0x222D JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2330 JUMPI JUMPDEST DUP2 PUSH2 0x2320 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x514 JUMPI POP MLOAD DUP12 PUSH2 0x221A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2313 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2354 PUSH2 0x43B6 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x23E8 PUSH1 0x1 DUP5 ADD SWAP4 DUP5 SLOAD SWAP1 PUSH2 0x23A0 DUP3 ISZERO ISZERO PUSH2 0x3BBA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP3 ADD SWAP2 PUSH2 0x23BF PUSH1 0x7 DUP5 SLOAD SWAP3 PUSH2 0x170C PUSH1 0xFF DUP6 AND PUSH2 0x1706 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x23D5 PUSH1 0x5 DUP5 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B41 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x64 PUSH2 0x173F DUP3 PUSH1 0xB DUP7 ADD SLOAD PUSH2 0x3B2E JUMP JUMPDEST SWAP2 PUSH1 0xC DUP3 ADD SWAP3 PUSH2 0x23FC PUSH1 0xFF DUP6 SLOAD AND DUP3 PUSH2 0x3B2E JUMP JUMPDEST PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD PUSH2 0x241F DUP2 PUSH2 0x3BA3 JUMP JUMPDEST SWAP5 PUSH2 0x242D PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x37F7 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x25D5 JUMPI POP POP POP POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x24BF JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x246F DUP2 DUP8 PUSH2 0x3B66 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x24AE JUMPI JUMPDEST POP ADD PUSH2 0x244F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B9 SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP7 PUSH2 0x24A7 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD PUSH1 0xA8 SHR AND PUSH2 0x24D4 DUP2 PUSH2 0x3692 JUMP JUMPDEST SUB PUSH2 0x25A7 JUMPI SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2554 JUMPI JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4402 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2541 PUSH2 0x1840 SWAP3 PUSH2 0x3D1C JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x1 CALLER SWAP7 ADD SWAP1 DUP4 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x259F JUMPI JUMPDEST DUP2 PUSH2 0x256F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4402 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2541 PUSH2 0x2596 PUSH2 0x1840 SWAP4 PUSH2 0x3B21 JUMP JUMPDEST SWAP3 POP POP SWAP2 PUSH2 0x2524 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2562 JUMP JUMPDEST POP PUSH2 0x1840 DUP2 PUSH2 0x25D0 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4402 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SLOAD CALLER GAS CALL PUSH2 0x3D5 PUSH2 0x3CA0 JUMP JUMPDEST PUSH2 0x2541 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x25E8 DUP2 PUSH2 0x37BF JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x25FF DUP2 PUSH2 0x1874 DUP2 DUP10 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x2614 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x262D DUP2 PUSH2 0x1874 DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x2684 DUP2 PUSH2 0x1874 DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x2441 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xF SLOAD DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x26C1 PUSH1 0x20 SWAP2 PUSH2 0x382E JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x271C PUSH2 0x3818 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2B14 JUMPI POP PUSH2 0x2742 DUP5 PUSH2 0x3BA3 JUMP JUMPDEST SWAP4 PUSH2 0x2750 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x37F7 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x275F PUSH1 0x1F NOT SWAP2 PUSH2 0x3BA3 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2AAF JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x0 SWAP1 PUSH1 0x1 JUMPDEST DUP5 DUP2 GT ISZERO PUSH2 0x2859 JUMPI DUP7 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x27C0 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 PUSH2 0x120 DUP1 PUSH2 0x27F1 DUP5 MLOAD PUSH2 0x140 DUP6 MSTORE PUSH2 0x140 DUP6 ADD SWAP1 PUSH2 0x3663 JUMP JUMPDEST SWAP4 DUP6 DUP2 ADD MLOAD DUP7 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x27B1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2899 DUP2 PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x120 PUSH1 0xFF PUSH1 0x9 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP6 ADD SWAP6 DUP7 MSTORE DUP3 PUSH1 0x4 DUP3 ADD SLOAD AND PUSH2 0x28DD DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE ADD SLOAD AND SWAP2 PUSH2 0x2918 DUP4 PUSH2 0x3692 JUMP JUMPDEST ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x39E671F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP13 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A7C JUMPI JUMPDEST POP PUSH2 0x2960 SWAP2 MLOAD PUSH2 0x3B2E JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x299F JUMPI JUMPDEST POP POP PUSH2 0x299A SWAP1 PUSH2 0x3B94 JUMP JUMPDEST PUSH2 0x277F JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 DUP1 DUP3 ADD SLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD SWAP1 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x8 DUP9 ADD SLOAD PUSH1 0x9 DUP10 ADD SLOAD SWAP7 MLOAD SWAP12 SWAP9 PUSH1 0xFF SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP6 SWAP2 SWAP5 SWAP3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A02 DUP14 PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 DUP2 SWAP4 ADD SWAP1 PUSH2 0x2A15 SWAP2 PUSH2 0x3A22 JUMP JUMPDEST SUB PUSH2 0x2A20 SWAP1 DUP3 PUSH2 0x37F7 JUMP JUMPDEST DUP13 MSTORE DUP10 PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE DUP1 PUSH2 0x2A5E SWAP1 PUSH2 0x3B94 JUMP JUMPDEST SWAP4 PUSH2 0x2A69 DUP3 DUP11 PUSH2 0x3B66 JUMP JUMPDEST MSTORE PUSH2 0x2A74 SWAP1 DUP9 PUSH2 0x3B66 JUMP JUMPDEST POP DUP8 DUP1 PUSH2 0x298F JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2AA7 JUMPI JUMPDEST DUP2 PUSH2 0x2A95 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x514 JUMPI POP MLOAD PUSH2 0x2960 PUSH2 0x2955 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP6 SWAP5 SWAP6 MLOAD PUSH2 0x2AC1 DUP2 PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE DUP3 DUP3 DUP10 ADD ADD MSTORE ADD SWAP4 SWAP3 SWAP4 PUSH2 0x2763 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP5 SWAP4 SWAP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2B57 JUMPI JUMPDEST PUSH2 0x2B4F SWAP1 PUSH2 0x3B94 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2730 JUMP JUMPDEST SWAP4 PUSH2 0x2B64 PUSH2 0x2B4F SWAP2 PUSH2 0x3B94 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x2B46 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x2BAF DUP3 PUSH2 0x3788 JUMP JUMPDEST PUSH2 0x2BB7 PUSH2 0x3818 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x44 CALLDATALOAD DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 PUSH1 0x64 CALLDATALOAD DUP3 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x33CD JUMPI PUSH1 0x80 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x2 DUP4 LT ISZERO PUSH2 0x648 JUMPI PUSH1 0xA0 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH2 0x33C9 JUMPI PUSH1 0xC0 DUP7 ADD SWAP5 DUP6 MSTORE PUSH2 0x2C20 PUSH2 0x43B6 JUMP JUMPDEST DUP8 MLOAD DUP8 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP5 PUSH1 0xFF PUSH1 0x9 DUP8 ADD SLOAD AND ISZERO PUSH2 0x3379 JUMPI PUSH1 0xC DUP7 ADD SWAP5 DUP6 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND SWAP2 MLOAD PUSH2 0x2C54 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x2C5D DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x2C66 DUP4 PUSH2 0x3692 JUMP JUMPDEST DUP3 SUB PUSH2 0x3325 JUMPI DUP4 MLOAD PUSH1 0x4 DUP10 ADD SLOAD GT PUSH2 0x32ED JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR AND SUB PUSH2 0x32A8 JUMPI DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP12 KECCAK256 DUP13 MLOAD DUP13 MSTORE SWAP1 SWAP2 MSTORE DUP10 KECCAK256 DUP6 MLOAD PUSH2 0x2CBE DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x2CC7 DUP2 PUSH2 0x3692 JUMP JUMPDEST DUP11 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD PUSH2 0x3251 JUMPI PUSH1 0x1 SWAP1 PUSH2 0x2CE4 DUP2 PUSH2 0x3692 JUMP JUMPDEST SUB PUSH2 0x31F4 JUMPI DUP3 MLOAD ISZERO PUSH2 0x31AF JUMPI MLOAD DUP7 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP14 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x906 JUMPI PUSH2 0x3178 JUMPI JUMPDEST POP DUP2 MLOAD PUSH2 0x2D4D PUSH1 0x5 DUP8 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B14 JUMP JUMPDEST SWAP1 SSTORE DUP2 MLOAD SWAP4 JUMPDEST PUSH2 0x2D79 PUSH1 0xFF PUSH2 0x2D70 PUSH1 0x5 DUP10 ADD SLOAD PUSH1 0x64 PUSH2 0x173F DUP3 PUSH1 0xB DUP14 ADD SLOAD PUSH2 0x3B2E JUMP JUMPDEST SWAP3 SLOAD AND DUP3 PUSH2 0x3B2E JUMP JUMPDEST PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0x6 DUP7 ADD SSTORE PUSH2 0x16D PUSH1 0x64 PUSH2 0x2D96 PUSH1 0x3 DUP9 ADD SLOAD DUP8 PUSH2 0x3B2E JUMP JUMPDEST DIV DIV SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 MLOAD AND SWAP1 DUP10 MLOAD SWAP3 MLOAD PUSH3 0x15180 DUP2 MUL DUP2 DUP2 DIV PUSH3 0x15180 EQ DUP3 ISZERO OR ISZERO PUSH2 0x3164 JUMPI SWAP3 PUSH2 0x2F0A SWAP5 SWAP3 PUSH1 0x9 SWAP3 DUP12 PUSH2 0x2DD7 DUP15 SWAP16 SWAP8 SWAP15 SWAP14 SWAP15 TIMESTAMP PUSH2 0x3B14 JUMP JUMPDEST SWAP2 DUP14 DUP13 DUP13 DUP7 MLOAD SWAP10 PUSH2 0x2DE7 DUP12 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP9 PUSH2 0x2DF4 DUP11 PUSH2 0x37A3 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP10 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP10 ADD SWAP3 DUP5 DUP5 MSTORE PUSH1 0xA0 DUP11 ADD SWAP6 DUP7 MSTORE DUP13 PUSH1 0xC0 DUP12 ADD SWAP8 TIMESTAMP DUP10 MSTORE PUSH1 0xE0 DUP13 ADD SWAP10 DUP11 MSTORE PUSH2 0x100 DUP13 ADD SWAP11 DUP8 DUP13 MSTORE PUSH2 0x120 DUP14 ADD SWAP15 DUP16 PUSH2 0x2E43 DUP3 PUSH2 0x3692 JUMP JUMPDEST MSTORE MLOAD PUSH2 0x2E4E DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x2E57 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x30C1 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 SWAP5 MLOAD DUP11 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP10 KECCAK256 DUP10 DUP1 MSTORE SWAP1 MSTORE SWAP2 SWAP1 SWAP7 KECCAK256 SWAP11 MLOAD DUP12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR DUP11 SSTORE MLOAD PUSH1 0x1 DUP11 ADD SSTORE MLOAD SWAP3 DUP9 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x3 DUP8 ADD SSTORE MLOAD PUSH2 0x2ECA SWAP1 PUSH2 0x2EC1 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x3B4E JUMP JUMPDEST MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD PUSH1 0x8 DUP3 ADD SSTORE ADD SWAP1 MLOAD PUSH2 0x2EEE DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x2EF7 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH2 0x3D60 JUMP JUMPDEST SWAP4 DUP6 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x2F7D JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2F2D DUP2 DUP9 PUSH2 0x3B66 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x63C JUMPI DUP9 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x906 JUMPI DUP9 PUSH1 0x1 SWAP4 PUSH2 0x2F6D JUMPI JUMPDEST POP POP ADD PUSH2 0x2F0D JUMP JUMPDEST PUSH2 0x2F76 SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP11 DUP9 PUSH2 0x2F65 JUMP JUMPDEST POP PUSH1 0xF SLOAD DUP7 SWAP6 POP DUP8 SWAP1 DUP7 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x3089 JUMPI JUMPDEST POP ISZERO PUSH2 0x3029 JUMPI JUMPDEST POP DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP2 SWAP1 DUP3 LT PUSH2 0x3015 JUMPI PUSH1 0x40 SWAP8 SWAP4 PUSH2 0x3005 PUSH1 0x1 SWAP7 SWAP5 PUSH32 0x6F85D9948D6CA3DD6CE6CE7D175DA22B4E865827AE6FCD530EC7EDAC1240F928 SWAP5 DUP9 SWAP5 SSTORE DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP5 MLOAD DUP11 MLOAD SWAP4 DUP5 SWAP4 ADD SWAP1 DUP4 PUSH2 0x3B7A JUMP JUMPDEST SUB SWAP1 LOG2 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x3075 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3051 SWAP3 ADD PUSH1 0xF SSTORE PUSH2 0x382E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP3 SWAP1 SHL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP7 PUSH2 0x2F98 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH2 0x3092 DUP2 PUSH2 0x382E JUMP JUMPDEST SWAP1 SLOAD DUP6 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x30B7 JUMPI PUSH1 0x1 ADD PUSH2 0x2F89 JUMP JUMPDEST POP POP PUSH1 0x1 DUP9 PUSH2 0x2F91 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 SWAP5 MLOAD DUP11 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP10 KECCAK256 PUSH1 0x1 DUP1 DUP12 MSTORE SWAP2 MSTORE SWAP3 SWAP1 SWAP8 KECCAK256 SWAP12 MLOAD DUP13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 AND OR DUP12 SSTORE SWAP1 MLOAD SWAP1 DUP11 ADD SSTORE MLOAD SWAP3 DUP9 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x3 DUP8 ADD SSTORE MLOAD PUSH2 0x3126 SWAP1 PUSH2 0x2EC1 DUP2 PUSH2 0x3688 JUMP JUMPDEST MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD PUSH1 0x8 DUP3 ADD SSTORE ADD SWAP1 MLOAD PUSH2 0x314A DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x3153 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x2F04 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x31A7 JUMPI JUMPDEST DUP2 PUSH2 0x3191 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x644 JUMPI PUSH2 0x31A2 SWAP1 PUSH2 0x3B21 JUMP JUMPDEST PUSH2 0x2D3B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE ISZERO PUSH2 0x3213 JUMPI PUSH1 0x5 DUP6 ADD PUSH2 0x320A CALLVALUE DUP3 SLOAD PUSH2 0x3B14 JUMP JUMPDEST SWAP1 SSTORE CALLVALUE SWAP4 PUSH2 0x2D53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4465706F7369742063616E6E6F74206265207A65726F PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C7265616479206465706F736974656420696E746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1D1A1A5CC81C1BDBDB PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F7420616363657074207468697320617373657400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14195C9A5BD9081D1BDBC81CDA1BDC9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F74206163636570742074686973206465706F7369 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x742074797065 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20697320696E616374697665206F7220646F6573206E6F7420657869 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1CDD PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0xF SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3504 JUMPI POP POP POP DUP2 PUSH2 0x34B8 SWAP2 SUB DUP3 PUSH2 0x37F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x34E2 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x34D4 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x34A2 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x353C PUSH2 0x3AA5 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x363C PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xC PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3561 DUP5 PUSH2 0x376C JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3579 DUP2 PUSH2 0x1874 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE DUP3 PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x358E DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP1 DUP3 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD DUP5 AND ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP7 ADD MSTORE SWAP2 ADD SLOAD DUP1 DUP4 AND PUSH2 0x180 DUP6 ADD MSTORE SWAP1 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0xA8 SHR AND PUSH2 0x3622 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x369C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3653 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3643 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x367C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x3640 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0xB3F JUMPI JUMP JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0xB3F JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH2 0x1C0 DUP1 PUSH2 0x36C0 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x1E0 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1E0 DUP6 ADD SWAP1 PUSH2 0x3663 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x36CF DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF PUSH2 0x180 DUP3 ADD MLOAD AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x1A0 DUP3 ADD MLOAD AND PUSH2 0x1A0 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x3767 DUP4 PUSH2 0x3692 JUMP JUMPDEST ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 LT ISZERO PUSH2 0x3849 JUMPI PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x117B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3AB JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x3891 DUP3 PUSH2 0x385F JUMP JUMPDEST SWAP3 PUSH2 0x389F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x37F7 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI PUSH2 0x160 DUP2 DUP4 SUB PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3915 DUP4 PUSH2 0x37BF JUMP JUMPDEST DUP2 PUSH1 0x4 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x24 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x4 PUSH2 0x393E SWAP3 DUP6 ADD ADD PUSH2 0x387A JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x64 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x4 PUSH2 0x3978 SWAP3 DUP6 ADD ADD PUSH2 0x387A JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x84 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA4 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC4 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x104 DUP3 ADD CALLDATALOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x124 DUP3 ADD CALLDATALOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x144 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3AB JUMPI PUSH2 0x39DF SWAP3 ADD PUSH1 0x4 ADD PUSH2 0x387A JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3A18 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3A02 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x39F7 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x3A32 DUP4 PUSH2 0x39E8 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3A88 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3A4E JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x3A6E JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x3A5D JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3AB2 DUP3 PUSH2 0x376C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP4 DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xF8B JUMPI JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xF8B JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xF8B JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x3B58 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3849 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x3B91 SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x3A22 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xF8B JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x117B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3BC1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206465706F73697420666F756E6420666F72207468697320616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C17 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4465706F736974206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C5B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F73697420706572696F6420686173206E6F7420656E64656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3CCB JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3CB1 DUP3 PUSH2 0x385F JUMP JUMPDEST SWAP2 PUSH2 0x3CBF PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x37F7 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3CD7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6174697665206173736574207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D23 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x3D78 DUP2 PUSH2 0x3BA3 JUMP JUMPDEST SWAP2 PUSH2 0x3D86 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x37F7 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3DA8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x3DBB DUP2 PUSH2 0x37BF JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3DD2 DUP2 PUSH2 0x1874 DUP2 DUP10 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x3DE7 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3E00 DUP2 PUSH2 0x1874 DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3E57 DUP2 PUSH2 0x1874 DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x3D9A JUMP JUMPDEST ISZERO PUSH2 0x3E72 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x506F6F6C206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3EB3 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520636F76657220636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x3849 JUMPI PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x42C7 JUMPI DUP3 MLOAD DUP2 SSTORE PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x117B JUMPI DUP2 SWAP1 PUSH2 0x3F45 DUP5 SLOAD PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x4274 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x420F JUMPI PUSH1 0x0 SWAP3 PUSH2 0x4204 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x3F94 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x3F8B DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD PUSH2 0x3B4E JUMP JUMPDEST PUSH1 0x3 DUP2 ADD PUSH1 0x60 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x117B JUMPI PUSH2 0x3FB8 DUP4 SLOAD PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x41BC JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x414E JUMPI SWAP2 DUP1 PUSH1 0xA SWAP5 SWAP3 PUSH2 0x140 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x4143 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP6 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP6 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE ADD SWAP3 ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x117B JUMPI PUSH2 0x4055 DUP3 SLOAD PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x40FB JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x4099 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x408E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x40E3 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x40CA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x40C0 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x40AB JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x4139 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x412D JUMPI POP PUSH2 0x405E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4120 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x4117 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3FE3 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x41A4 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH2 0x140 SWAP9 SWAP7 PUSH1 0xA SWAP9 SWAP7 LT PUSH2 0x418B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3FF8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x417E JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x4161 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x41FA JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x41EE JUMPI POP PUSH2 0x3FC1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x41E1 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x41D8 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3F65 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x425C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x4243 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3F7A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x4236 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x4220 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x42BD JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x42AE JUMPI POP PUSH2 0x3F4E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x42A1 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x4293 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3AB JUMPI DUP1 MLOAD PUSH2 0x4307 DUP2 PUSH2 0x385F JUMP JUMPDEST SWAP3 PUSH2 0x4315 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x37F7 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x3AB JUMPI PUSH2 0x3B91 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x3640 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x120 SWAP2 SUB SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x434C DUP3 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x4355 DUP2 PUSH2 0x42DD JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x100 SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x43C7 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x43EC JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID BASEFEE PUSH0 SHL 0xB6 MSTORE 0x4C PUSH7 0x3555797E00171A LT RETURN COINBASE PUSH6 0x6E59B02D6B55 PUSH27 0xA38BA7D5D9751A264697066735822122042D79DAE9CF020FC5036 SWAP13 LOG4 SWAP3 0xD4 PUSH15 0x6BDC18406FB1A2C77FDA7E497E9235 PREVRANDAO SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"2917:18701:5:-:0;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;1857:1:3;-1:-1:-1;1857:1:3;1273:26:0;;1269:95;;1857:1:3;2917:18701:5;;-1:-1:-1;;;;;;2917:18701:5;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;3052:40:0;-1:-1:-1;;3052:40:0;4108:28:5;2917:18701;;-1:-1:-1;;;;;;2917:18701:5;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;2917:18701:5;;-1:-1:-1;1322:31:0;2917:18701:5;-1:-1:-1;2917:18701:5;;;;;;-1:-1:-1;2917:18701:5;;;;;-1:-1:-1;2917:18701:5"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":14360,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":17117,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":15137,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":14458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":17137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_VaultDeposit_fromMemory":{"entryPoint":17203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_struct_Cover":{"entryPoint":14551,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint256t_uint256":{"entryPoint":14529,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":13923,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":14882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Pool":{"entryPoint":13980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_string_storage":{"entryPoint":15226,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Pool":{"entryPoint":15013,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_PoolInfo_dyn":{"entryPoint":15267,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":14431,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":15124,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":15150,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":15169,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":13888,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":14824,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":15520,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":14327,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_65714":{"entryPoint":14188,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_65715":{"entryPoint":14216,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_65719":{"entryPoint":14243,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_65739":{"entryPoint":14271,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_65746":{"entryPoint":14299,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":17368,"id":84,"parameterSlots":0,"returnSlots":0},"fun_getPoolCovers":{"entryPoint":15712,"id":1257,"parameterSlots":1,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":17334,"id":304,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":15252,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_Cover_dyn":{"entryPoint":15206,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":16044,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_149f":{"entryPoint":15644,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_20be":{"entryPoint":15979,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_407b":{"entryPoint":15444,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4829":{"entryPoint":15376,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_58da":{"entryPoint":15290,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fffe":{"entryPoint":15568,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":14382,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_struct_Cover__dyn":{"entryPoint":16119,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offset_enum_Status_to_enum_Status":{"entryPoint":15182,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_struct_Cover_to_struct_Cover":{"entryPoint":16147,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_enum_AssetDepositType":{"entryPoint":13970,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_RiskType":{"entryPoint":13960,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60a0604052600436101561001257600080fd5b60003560e01c8063068bcd8d14613523578063195ec9ee146134575780632274346b1461342e578063248a75b71461340557806325f11e8d146133d15780632607b53914612b9557806329ba7bb214612b6c578063318667631461270357806334808ec3146126da57806335c1d349146126985780633dc66ad31461233857806346f84795146115ad5780634e0552441461208a5780635aa6e675146120615780635cfab35c14611cc55780636817031b14611be85780636f60537d14611bbf578063715018a614611b625780637c366cc614611a855780637eb111f01461196c57806383bc63571461163f5780638da5cb5b146116165780638f244630146115e757806396f3a8ad146115ad578063996b8a6f146115845780639abd9b05146115305780639fd36b15146114d5578063a14764d01461143a578063a4948d85146113db578063ab033ea9146112ec578063ac4afa38146111ce578063b5d90c28146111a5578063c7aa987414611117578063d86c044414610fb8578063d88ff1f414610cb9578063e35f81291461079d578063f2fde38b14610713578063f525cb68146106f5578063f6e80558146106cc5763fb839dda146101d457600080fd5b346103ab5760203660031901126103ab576004356101f06143b6565b600854604051632bb2b24360e11b8152600481018390523360248201526001600160a01b039091169061012081604481855afa8015610360576020916000916106ad575b50019081511561066857600060249160405192838092632500ed8d60e21b82528760048301525afa908115610360576000916103e0575b50600160c082015161027c81613692565b61028581613692565b036103b85760e00151905160405163a9059cbb60e01b8152336004820152602481019190915290602090829060449082906000906001600160a01b03165af19081156103605760009161036c575b5061031b916102e461012092613d1c565b600854604051632bb2b24360e11b81526004810192909252336024830152909283916001600160a01b031690829081906044820190565b03915afa801561036057610331575b6001600055005b610352906101203d8111610359575b61034a81836137f7565b810190614333565b503861032a565b503d610340565b6040513d6000823e3d90fd5b90506020813d6020116103b0575b81610387602093836137f7565b810103126103ab5761031b916102e46103a261012093613b21565b925050916102d3565b600080fd5b3d915061037a565b5061031b916103db60008080806101209651335af16103d5613ca0565b50613cd0565b6102e4565b903d8082843e6103f081846137f7565b820191602081840312610664578051906001600160401b03821161064c57019061010082840312610514576040519261010084018481106001600160401b03821117610650576040528251845260208301516001600160401b03811161064c578161045c9185016142f1565b602085015260408301516001600160401b03811161064c5783019080601f8301121561064c5781519161048e83613ba3565b9261049c60405194856137f7565b80845260208085019160051b830101918383116106485760208101915b8383106105175750505050506040840152606082015160608401526080820151608084015260a082015160a084015260c0820151906002821015610514575060c08301526105099060e0016142dd565b60e08201523861026b565b80fd5b82516001600160401b0381116106445782016101e0818703601f19011261064457604051906105458261376c565b6020810151825260408101516001600160401b0381116106405787602061056e928401016142f1565b6020830152606081015160038110156106405760408301526080810151606083015260a0810151608083015260c081015160a083015260e081015160c083015261010081015160e08301526101208101516101008301526105d26101408201613b21565b6101208301526101608101516101408301526101808101516101608301526101a081015160ff81168103610640576101808301526101e0906106176101c082016142dd565b6101a08401520151600281101561063c576101c08201528152602092830192016104b9565b8880fd5b8980fd5b8780fd5b8580fd5b8280fd5b634e487b7160e01b83526041600452602483fd5b5080fd5b60405162461bcd60e51b815260206004820152601d60248201527f4e6f20616374697665207769746864726177616c20666f7220757365720000006044820152606490fd5b6106c691506101203d81116103595761034a81836137f7565b38610234565b346103ab5760003660031901126103ab576007546040516001600160a01b039091168152602090f35b346103ab5760003660031901126103ab576020600554604051908152f35b346103ab5760203660031901126103ab5761072c613818565b6107346143d8565b6001600160a01b0316801561078757600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b346103ab5760203660031901126103ab5760006004356107bb6143b6565b600954604051633b4d01a760e01b81526004810183905292908390602490829084906001600160a01b03165af191821561036057600092610b55575b506101008201519060c0830151926005841015610b3f576002600094149081610b31575b5015610af45760a082018051845260046020526040842083516001600160a01b03163303610ab85761085360ff600983015416613e6b565b6005810180549360c086019182518610610a73576108878896845161087d60088801918254613b14565b9055845190613b41565b90556108938451613d60565b93855b8551811015610911576007546001600160a01b0316906108b68188613b66565b5151823b1561063c57889260248492604051958693849263106b5da160e01b845260048401525af191821561090657886001936108f6575b505001610896565b6108ff916137f7565b8a886108ee565b6040513d8a823e3d90fd5b50919350919460018060a01b036009541692833b1561064857859360248592604051968793849263f1b4bf9d60e01b845260048401525af1918215610a68577feef4955e8b18dcb6d1c19905b7b86e5fe56138ad1ce2c5e540ce4e959312f5119386606094610a58575b5050519084519060018060a01b039051169060405192835260208301526040820152a160018060a01b03600a54168151813b15610a5457604051637104a76d60e11b8152336004820152602481019190915292908390604490829084905af191848315610a48577f415071086c9ea63f7f39884c21a8af430af53bfd511a362dff69cabcb1b8bcc193610a38575b50505191610a2560405191604083526001604084019101613a22565b9260208201528033930390a26001815580f35b610a41916137f7565b8484610a09565b604051903d90823e3d90fd5b8380fd5b610a61916137f7565b888661097b565b6040513d87823e3d90fd5b60405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f7567682066756e647320696e2074686520706f6f6c000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273139bdd0818481d985b1a59081c1c9bdc1bdcd85b60621b6044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274141c9bdc1bdcd85b081b9bdd08185c1c1c9bdd9959605a1b6044820152606490fd5b60e09150015115158461081b565b634e487b7160e01b600052602160045260246000fd5b90913d8082843e610b6681846137f7565b820191602081840312610664578051906001600160401b03821161064c570191610120838203126106645760405192610b9e846137db565b805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c08101516005811015610a545760c0850152610bf360e08201613b21565b60e0850152610100810151906001600160401b038211610a5457019060e08282031261064c5760405192610c2684613788565b610c2f836142dd565b8452602083015160038110156106645760208501526040830151604085015260608301516001600160401b0381116106645782610c6d9185016142f1565b60608501526080830151906001600160401b03821161051457508291610c969160c094016142f1565b608084015260a081015160a0840152015160c082015261010082015290826107f7565b346103ab5760003660031901126103ab57600554610cd681613ba3565b90610ce460405192836137f7565b808252601f19610cf382613ba3565b0160005b818110610fa157505060015b81811115610d7357826040518091602082016020835281518091526040830190602060408260051b8601019301916000905b828210610d4457505050500390f35b91936001919395506020610d638192603f198a8203018652885161369c565b9601920192018594939192610d35565b80600052600460205280604060002060405190610d8f8261376c565b8054825260405180610da48160018501613a22565b03610daf90826137f7565b60208301908152600282015460ff16916040840192610dcd81613688565b8352600381015460608501908152600482015460808601908152600583015460a08701908152600684015460c0880190815260078501549060e089019182526008860154926101008a01938452600987015460ff16946101208b019515158652600a880154966101408c01978852600b890154986101608d01998a52600c01549a8b9a8d61018081019c60ff168d526101a0019c8d600160a01b600190038260081c16905260a81c60ff169d6101c0019d8e610e8882613692565b5251905191610e9683613688565b519251935194519551965197511515985199519a5160ff169b600160a01b600190039051169c519d610ec78f613692565b604051608052608051610ed99061376c565b6080515260805160200152610eed81613688565b60805160400152608051606001526080516080015260805160a0015260805160c0015260805160e00152608051610100015260805161012001526080516101400152608051610160015260805161018001526080516101a00152610f5081613692565b6080516101c00152600019810190808211610f8b57610f80610f8692608051610f798288613b66565b5285613b66565b50613b94565b610d03565b634e487b7160e01b600052601160045260246000fd5b602090610fac613aa5565b82828701015201610cf7565b346103ab5760603660031901126103ab57600435602435604435610fda6143d8565b82600052600460205260ff60096040600020015416156110c7578115611094578015611056577f17b8644f386d1c7c7138ef98b3c8035622bbe94d7be9b26f71d2654a547c29439160409184600052600460205281600384600020015584600052600460205280600484600020015582519182526020820152a2005b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081b5a5b9a5b5d5b481c195c9a5bd960521b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642041505960a81b6044820152606490fd5b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c20646f6573206e6f74206578697374206f7220697320696e61637469604482015261766560f01b6064820152608490fd5b346103ab57611125366138d7565b9060018060a01b03600c541633148015611191575b61114390613eac565b6000526003602052604060002090815491600160401b83101561117b578261117391600161117995018155613ef7565b90613f13565b005b634e487b7160e01b600052604160045260246000fd5b50600e546001600160a01b0316331461113a565b346103ab5760003660031901126103ab576009546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab57600435600052600460205260406000208054604051918280600183019061120591613a22565b0361121090846137f7565b600281015460ff1690600381015490600481015490600581015460068201546007830154600884015490600985015460ff1692600a86015494600b87015496600c0154978860a81c60ff16996040519d8e9d8e528d602081016101e090526101e00161127b91613663565b9b8d61128682613688565b6040015260608d015260808c015260a08b015260c08a015260e0890152610100880152151561012087015261014086015261016085015260ff811661018085015260081c6001600160a01b03166101a08401526112e281613692565b6101c08301520390f35b346103ab5760203660031901126103ab57611305613818565b61130d6143d8565b600654906001600160a01b03821661139d576001600160a01b031690811561134e576001600160a01b03199081168217600655600980549091169091179055005b60405162461bcd60e51b815260206004820152602160248201527f476f7665726e616e636520616464726573732063616e6e6f74206265207a65726044820152606f60f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601660248201527511dbdd995c9b985b98d948185b1c9958591e481cd95d60521b6044820152606490fd5b346103ab576113e9366138c1565b9060018060a01b03600c541633148015611426575b61140790613eac565b6000526004602052611422600a604060002001918254613b41565b9055005b50600e546001600160a01b031633146113fe565b346103ab57611448366138d7565b600c546001600160a01b0316331480156114c1575b61146690613eac565b60005b82600052600360205260406000205481101561117957826000526003602052611496816040600020613ef7565b50548251146114a757600101611469565b611173906111799360005260036020526040600020613ef7565b50600e546001600160a01b0316331461145d565b346103ab576114e3366138c1565b9060018060a01b03600c54163314801561151c575b61150190613eac565b6000526004602052611422600a604060002001918254613b14565b50600e546001600160a01b031633146114f8565b346103ab5760203660031901126103ab5760043561154c6143d8565b80600052600460205261156960ff60096040600020015416613e6b565b6000908152600460205260409020600901805460ff19169055005b346103ab5760003660031901126103ab57600b546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab576001600160a01b036115ce613818565b1660005260106020526020604060002054604051908152f35b346103ab5760203660031901126103ab5760043560005260046020526020600560406000200154604051908152f35b346103ab5760003660031901126103ab576001546040516001600160a01b039091168152602090f35b346103ab5760603660031901126103ab57611658613818565b60243560443560028110156103ab5761166f6143b6565b600d546001600160a01b031633148015611958575b156119145781600052600460205260406000209260018060a01b0316908160005260026020526040600020836000526020526040600020906116c581613692565b60005260205260406000209161174660018401938454906116e7821515613bba565b60016004820191611716600784549261170c60ff851661170681613688565b15613c10565b0154421015613c54565b60ff191617905561172c60058701918254613b41565b809155606461173f82600b890154613b2e565b0490613b41565b61175760ff600c8701541682613b2e565b600786015560068501556000526003602052604060002092835461177a81613ba3565b9461178860405196876137f7565b818652602086019060005260206000206000915b83831061184a575050505060005b845181101561181a576007546001600160a01b0316906117ca8187613b66565b5151823b156103ab5760009260248492604051958693849263106b5da160e01b845260048401525af191821561036057600192611809575b50016117aa565b6000611814916137f7565b86611802565b506001600080516020614402833981519152916118408554604051938493019083613b7a565b0390a26001600055005b600b602060019260405161185d816137bf565b8554815260405161187b8161187481898b01613a22565b03826137f7565b8382015260ff60028701541661189081613688565b60408201526040516118a9816118748160038b01613a22565b606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e0820152600886015461010082015260098601546101208201526040516119008161187481600a8b01613a22565b61014082015281520192019201919061179c565b606460405162461bcd60e51b815260206004820152602060248201527f43616c6c6572206973206e6f7420746865207661756c7420636f6e74726163746044820152fd5b50600e546001600160a01b03163314611684565b346103ab5760203660031901126103ab57611988600435613d60565b6040518091602082016020835281518091526040830190602060408260051b8601019301916000905b8282106119c057505050500390f35b91936001919395506020611a758192603f198a820301865288519081518152610140611a236119fe8685015161016088860152610160850190613663565b6040850151611a0c81613688565b604085015260608501518482036060860152613663565b926080810151608084015260a081015160a084015260c081015160c084015260e081015160e0840152610100810151610100840152610120810151610120840152015190610140818403910152613663565b96019201920185949391926119b1565b346103ab5760203660031901126103ab57611a9e613818565b611aa66143d8565b600c54906001600160a01b038216611b29576001600160a01b0316908115611ae457600780546001600160a01b031990811684179091551617600c55005b60405162461bcd60e51b815260206004820152601c60248201527f436f76657220616464726573732063616e6e6f74206265207a65726f000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527010dbdd995c88185b1c9958591e481cd95d607a1b6044820152606490fd5b346103ab5760003660031901126103ab57611b7b6143d8565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346103ab5760003660031901126103ab576008546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab57611c01613818565b611c096143d8565b600d54906001600160a01b038216611c8c576001600160a01b0316908115611c4757600880546001600160a01b031990811684179091551617600d55005b60405162461bcd60e51b815260206004820152601c60248201527f5661756c7420616464726573732063616e6e6f74206265207a65726f000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527015985d5b1d08185b1c9958591e481cd95d607a1b6044820152606490fd5b346103ab5760203660031901126103ab576004356001600160401b0381116103ab5761012060031982360301126103ab5760405190611d03826137db565b80600401358252602481013560038110156103ab576020830190815260448201356001600160401b0381116103ab57611d42906004369185010161387a565b9260408101938452606081019160648401358352608082016084850135815260a48501359160ff831683036103ab5760a0840192835260c084019160c4870135835260e48701359660028810156103ab5760e0860197885261010401356001600160a01b03811681036103ab576101008601908152611dbf6143d8565b8751611dca81613692565b611dd381613692565b1590811561204d575b50156120085760055460018101809111610f8b576005558451600052600460205260406000209585518755885160018801908051906001600160401b03821161117b57611e2983546139e8565b601f8111611fc0575b50602090601f8311600114611f4f579180611eae96949260ff99989694600092611f44575b50508160011b916000199060031b1c19161790555b516003890155516004880155600060058801556000600788015560006006880155600987016001851982541617905551611ea581613688565b60028701613b4e565b519182600b860155511690600c8401918254916064039560648711610f8b577ff01906dc0ac306fa816e50166a7ed46af1f05721cb90cea30beebdd8dede3a6d96600a611f3f97015551611f0181613692565b611f0a81613692565b60ff60ff60a81b01199092161760a89190911b60ff60a81b161790555192516040516020808252909283929091830190613663565b0390a2005b015190508e80611e57565b90601f1983169184600052816000209260005b818110611fa8575092600192859260ff9b9a9896611eae9a989610611f8f575b505050811b019055611e6c565b015160001960f88460031b161c191690558e8080611f82565b92936020600181928786015181550195019301611f62565b836000526020600020601f840160051c81019160208510611ffe575b601f0160051c01905b818110611ff25750611e32565b60008155600101611fe5565b9091508190611fdc565b60405162461bcd60e51b815260206004820152601760248201527f57726f6e6720417373657420666f72204465706f7369740000000000000000006044820152606490fd5b516001600160a01b03161515905089611ddc565b346103ab5760003660031901126103ab576006546040516001600160a01b039091168152602090f35b346103ab5760403660031901126103ab576004356024356001600160a01b0381168082036103ab5760006101206040516120c3816137a3565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015201526000526002602052604060002082600052602052604060002060008052602052604060002090604051809261212d826137a3565b80546001600160a01b03168252600181015460208301908152600282015460408401908152600383015460608501908152600484015492979260808601919060ff1661217881613688565b825260058501549260a08701938452612207602060068801549660c08a0197885260ff600960078b01549a60e08d019b8c5261010060088201549d019c8d520154169a6101208d019b6121ca81613692565b8c52600754604051630414960560e21b81526001600160a01b03928316600482015260248101939093529193849290911690829081906044820190565b03915afa90811561036057600091612306575b50806122f7575061224661012c61223e87515b428a518042116122ef575b50613b41565b048351613b2e565b875285514281116122b9575061014099600085525b604080519a516001600160a01b03168b52905160208b01529051908901525160608801525161228981613688565b60808701525160a08601525160c08501525160e084015251610100830152516122b181613692565b610120820152f35b6122c4904290613b41565b99620151808b019a8b8111610f8b576201517f019a8b11610f8b57620151806101409b04855261225b565b90508f612238565b61012c61223e6122469261222d565b906020823d602011612330575b81612320602093836137f7565b810103126105145750518b61221a565b3d9150612313565b346103ab5760203660031901126103ab576004356123546143b6565b8060005260046020526040600020903360005260026020526040600020816000526020526040600020600080526020526040600020916123e860018401938454906123a0821515613bba565b600260048201916123bf600784549261170c60ff851661170681613688565b60ff19161790556123d560058401918254613b41565b809155606461173f82600b860154613b2e565b91600c8201926123fc60ff85541682613b2e565b600784015560068301556000526003602052604060002092835461241f81613ba3565b9461242d60405196876137f7565b818652602086019060005260206000206000915b8383106125d5575050505060005b84518110156124bf576007546001600160a01b03169061246f8187613b66565b5151823b156103ab5760009260248492604051958693849263106b5da160e01b845260048401525af1918215610360576001926124ae575b500161244f565b60006124b9916137f7565b866124a7565b5082600160ff825460a81c166124d481613692565b036125a75754815460405163a9059cbb60e01b8152336004820152602481019190915290602090829060081c6001600160a01b0316816000816044810103925af190811561036057600091612554575b506000805160206144028339815191529161254161184092613d1c565b5460405191829160013396019083613b7a565b90506020813d60201161259f575b8161256f602093836137f7565b810103126103ab576000805160206144028339815191529161254161259661184093613b21565b92505091612524565b3d9150612562565b50611840816125d060008080806000805160206144028339815191529754335af16103d5613ca0565b612541565b600b60206001926040516125e8816137bf565b855481526040516125ff8161187481898b01613a22565b8382015260ff60028701541661261481613688565b604082015260405161262d816118748160038b01613a22565b606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e0820152600886015461010082015260098601546101208201526040516126848161187481600a8b01613a22565b610140820152815201920192019190612441565b346103ab5760203660031901126103ab57600435600f548110156103ab576126c160209161382e565b905460405160039290921b1c6001600160a01b03168152f35b346103ab5760003660031901126103ab57600a546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab5761271c613818565b600554600091906001600160a01b03821660015b82811115612b14575061274284613ba3565b9361275060405195866137f7565b80855261275f601f1991613ba3565b0160005b818110612aaf5750506007546001600160a01b03169260009060015b8481111561285957866040518091602082016020835281518091526040830190602060408260051b8601019301916000905b8282106127c057505050500390f35b919360019193955060208091603f19898203018552875190610120806127f184516101408552610140850190613663565b93858101518685015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e08501526101008101511515610100850152015191015296019201920185949391926127b1565b80600052600460205260406000208460005260026020526040600020826000526020526040600020600080526020526040600020604051612899816137a3565b60018060a01b038254168152600182015460208201526002820154604082015261012060ff600960038501549460608501958652826004820154166128dd81613688565b6080860152600581015460a0860152600681015460c0860152600781015460e086015260088101546101008601520154169161291883613692565b01526040516339e671f760e11b81526001600160a01b0385166004820152602481018490526020816044818c5afa90811561036057600091612a7c575b506129609151613b2e565b85600052600260205260406000208360005260205260406000206000805260205260016040600020015461299f575b505061299a90613b94565b61277f565b600086815260026020908152604080832086845282528083208380529091529081902060038082015460019092015490850154600486015460058701546008880154600989015496519b9860ff90971696909591949293929190612a028d6137a3565b60405180600181930190612a1591613a22565b03612a2090826137f7565b8c528960208d015260408c015260608b015260808a015260a089015260c088015260e0870152151561010086015261012085015280612a5e90613b94565b93612a69828a613b66565b52612a749088613b66565b50878061298f565b906020823d8211612aa7575b81612a95602093836137f7565b81010312610514575051612960612955565b3d9150612a88565b602090604095949551612ac1816137a3565b60608152600083820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e08201526000610100820152600061012082015282828901015201939293612763565b816000949394526002602052604060002081600052602052604060002060008052602052600160406000200154612b57575b612b4f90613b94565b929192612730565b93612b64612b4f91613b94565b949050612b46565b346103ab5760003660031901126103ab57600e546040516001600160a01b039091168152602090f35b60e03660031901126103ab576040516000612baf82613788565b612bb7613818565b8252602082019160243583526040810160443581526060820190606435825260843560028110156133cd576080840190815260a4359160028310156106485760a0850192835260c435936001600160a01b03851685036133c95760c08601948552612c206143b6565b875187526004602052604087209460ff6009870154161561337957600c860194855460ff8160a81c169151612c5481613692565b612c5d81613692565b612c6683613692565b82036133255783516004890154116132ed5782516001600160a01b0390811660089290921c16036132a85787516001600160a01b03168952600260209081526040808b208c518c5290915289208551612cbe81613692565b612cc781613692565b8a52602052600160408a20015461325157600190612ce481613692565b036131f4578251156131af5751865183516040516323b872dd60e01b81526001600160a01b039283166004820152306024820152604481019190915291602091839160649183918d91165af1801561090657613178575b508151612d4d60058701918254613b14565b90558151935b612d7960ff612d706005890154606461173f82600b8d0154613b2e565b92541682613b2e565b6007870155600686015561016d6064612d96600388015487613b2e565b04049260018060a01b0387511690895192516201518081028181046201518014821517156131645792612f0a94926009928b612dd78e9f979e9d9e42613b14565b918d8c8c865199612de78b613692565b60405198612df48a6137a3565b8952602089019283526040890190815260608901918252608089019284845260a08a019586528c60c08b019742895260e08c01998a526101008c019a878c526101208d019e8f612e4382613692565b5251612e4e81613692565b612e5781613692565b6130c157516001600160a01b039081168752600260208181526040808a2094518a529381528389208980529052919096209a518b546001600160a01b0319169616959095178a555160018a015551928801929092559051600387015551612eca90612ec181613688565b60048701613b4e565b516005850155516006840155516007830155516008820155019051612eee81613692565b612ef781613692565b60ff801983541691161790555b51613d60565b93855b8551811015612f7d576007546001600160a01b031690612f2d8188613b66565b5151823b1561063c57889260248492604051958693849263106b5da160e01b845260048401525af19182156109065788600193612f6d575b505001612f0d565b612f76916137f7565b8a88612f65565b50600f54869550879086805b828110613089575b5015613029575b5080516001600160a01b03168652601060205260408620805460018101919082106130155760409793613005600196947f6f85d9948d6ca3dd6ce6ce7d175da22b4e865827ae6fcd530ec7edac1240f92894889455838060a01b0390511694518a51938493019083613b7a565b0390a25582519182526020820152f35b634e487b7160e01b88526011600452602488fd5b81516001600160a01b031690600160401b811015613075578060016130519201600f5561382e565b81546001600160a01b0360039290921b91821b191692901b91909117905586612f98565b634e487b7160e01b88526041600452602488fd5b6130928161382e565b9054855160039290921b1c6001600160a01b039081169116146130b757600101612f89565b5050600188612f91565b516001600160a01b039081168752600260208181526040808a2094518a529381528389206001808b529152929097209b518c546001600160a01b0319169116178b559051908a01555192880192909255905160038701555161312690612ec181613688565b51600585015551600684015551600783015551600882015501905161314a81613692565b61315381613692565b60ff80198354169116179055612f04565b634e487b7160e01b8b52601160045260248bfd5b6020813d6020116131a7575b81613191602093836137f7565b81010312610644576131a290613b21565b612d3b565b3d9150613184565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b503415613213576005850161320a348254613b14565b90553493612d53565b60405162461bcd60e51b81526020600482015260166024820152754465706f7369742063616e6e6f74206265207a65726f60501b6044820152606490fd5b60405162461bcd60e51b815260206004820152602960248201527f557365722068617320616c7265616479206465706f736974656420696e746f206044820152681d1a1a5cc81c1bdbdb60ba1b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f506f6f6c20646f6573206e6f74206163636570742074686973206173736574006044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f14195c9a5bd9081d1bdbc81cda1bdc9d60821b6044820152606490fd5b60405162461bcd60e51b815260206004820152602660248201527f506f6f6c20646f6573206e6f74206163636570742074686973206465706f736960448201526574207479706560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c20697320696e616374697665206f7220646f6573206e6f74206578696044820152611cdd60f21b6064820152608490fd5b8680fd5b8480fd5b346103ab5760203660031901126103ab576004356000526004602052602060ff600960406000200154166040519015158152f35b346103ab5760003660031901126103ab57600c546040516001600160a01b039091168152602090f35b346103ab5760003660031901126103ab57600d546040516001600160a01b039091168152602090f35b346103ab5760003660031901126103ab57604051806020600f5492838152018092600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8029060005b81811061350457505050816134b89103826137f7565b6040519182916020830190602084525180915260408301919060005b8181106134e2575050500390f35b82516001600160a01b03168452859450602093840193909201916001016134d4565b82546001600160a01b03168452602090930192600192830192016134a2565b346103ab5760203660031901126103ab5761353c613aa5565b50600435600052600460205261363c604060002060ff600c604051926135618461376c565b80548452604051613579816118748160018601613a22565b60208501528260028201541661358e81613688565b60408501526003810154606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e0850152600880820154610100860152600982015484161515610120860152600a820154610140860152600b8201546101608601529101548083166101808501529081901c6001600160a01b03166101a084015260a81c1661362281613692565b6101c082015260405191829160208352602083019061369c565b0390f35b60005b8381106136535750506000910152565b8181015183820152602001613643565b9060209161367c81518092818552858086019101613640565b601f01601f1916010190565b60031115610b3f57565b60021115610b3f57565b90815181526101c0806136c060208501516101e060208601526101e0850190613663565b9360408101516136cf81613688565b6040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610100810151610100850152610120810151151561012085015261014081015161014085015261016081015161016085015260ff6101808201511661018085015260018060a01b036101a0820151166101a085015201519161376783613692565b015290565b6101e081019081106001600160401b0382111761117b57604052565b60e081019081106001600160401b0382111761117b57604052565b61014081019081106001600160401b0382111761117b57604052565b61016081019081106001600160401b0382111761117b57604052565b61012081019081106001600160401b0382111761117b57604052565b90601f801991011681019081106001600160401b0382111761117b57604052565b600435906001600160a01b03821682036103ab57565b600f5481101561384957600f60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160401b03811161117b57601f01601f191660200190565b81601f820112156103ab578035906138918261385f565b9261389f60405194856137f7565b828452602083830101116103ab57816000926020809301838601378301015290565b60409060031901126103ab576004359060243590565b9060406003198301126103ab57600435916024356001600160401b0381116103ab5761016081830360031901126103ab5760405191613915836137bf565b8160040135835260248201356001600160401b0381116103ab5781600461393e9285010161387a565b6020840152604482013560038110156103ab57604084015260648201356001600160401b0381116103ab578160046139789285010161387a565b60608401526084820135608084015260a482013560a084015260c482013560c084015260e482013560e0840152610104820135610100840152610124820135610120840152610144820135916001600160401b0383116103ab576139df920160040161387a565b61014082015290565b90600182811c92168015613a18575b6020831014613a0257565b634e487b7160e01b600052602260045260246000fd5b91607f16916139f7565b60009291815491613a32836139e8565b8083529260018116908115613a885750600114613a4e57505050565b60009081526020812093945091925b838310613a6e575060209250010190565b600181602092949394548385870101520191019190613a5d565b915050602093945060ff929192191683830152151560051b010190565b60405190613ab28261376c565b60006101c083828152606060208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a08201520152565b91908201809211610f8b57565b519081151582036103ab57565b81810292918115918404141715610f8b57565b91908203918211610f8b57565b90613b5881613688565b60ff80198354169116179055565b80518210156138495760209160051b010190565b604090613b91939281528160208201520190613a22565b90565b6000198114610f8b5760010190565b6001600160401b03811161117b5760051b60200190565b15613bc157565b60405162461bcd60e51b815260206004820152602160248201527f4e6f206465706f73697420666f756e6420666f722074686973206164647265736044820152607360f81b6064820152608490fd5b15613c1757565b60405162461bcd60e51b81526020600482015260156024820152744465706f736974206973206e6f742061637469766560581b6044820152606490fd5b15613c5b57565b60405162461bcd60e51b815260206004820152601c60248201527f4465706f73697420706572696f6420686173206e6f7420656e646564000000006044820152606490fd5b3d15613ccb573d90613cb18261385f565b91613cbf60405193846137f7565b82523d6000602084013e565b606090565b15613cd757565b60405162461bcd60e51b815260206004820152601c60248201527f4e6174697665206173736574207472616e73666572206661696c6564000000006044820152606490fd5b15613d2357565b60405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b600052600360205260406000208054613d7881613ba3565b91613d8660405193846137f7565b818352602083019060005260206000206000915b838310613da8575050505090565b600b6020600192604051613dbb816137bf565b85548152604051613dd28161187481898b01613a22565b8382015260ff600287015416613de781613688565b6040820152604051613e00816118748160038b01613a22565b606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e082015260088601546101008201526009860154610120820152604051613e578161187481600a8b01613a22565b610140820152815201920192019190613d9a565b15613e7257565b60405162461bcd60e51b8152602060048201526012602482015271506f6f6c206973206e6f742061637469766560701b6044820152606490fd5b15613eb357565b606460405162461bcd60e51b815260206004820152602060248201527f43616c6c6572206973206e6f742074686520636f76657220636f6e74726163746044820152fd5b805482101561384957600052600b602060002091020190600090565b909291926142c757825181556001810160208401518051906001600160401b03821161117b578190613f4584546139e8565b601f8111614274575b50602090601f831160011461420f57600092614204575b50508160011b916000199060031b1c19161790555b613f946040840151613f8b81613688565b60028301613b4e565b6003810160608401518051906001600160401b03821161117b57613fb883546139e8565b601f81116141bc575b50602090601f831160011461414e579180600a94926101409694600092614143575b50508160011b916000199060031b1c19161790555b6080850151600482015560a0850151600582015560c0850151600682015560e0850151600782015561010085015160088201556101208501516009820155019201519182516001600160401b03811161117b5761405582546139e8565b601f81116140fb575b506020601f8211600114614099578192939460009261408e575b50508160011b916000199060031b1c1916179055565b015190503880614078565b601f1982169083600052806000209160005b8181106140e3575095836001959697106140ca575b505050811b019055565b015160001960f88460031b161c191690553880806140c0565b9192602060018192868b0151815501940192016140ab565b826000526020600020601f830160051c81019160208410614139575b601f0160051c01905b81811061412d575061405e565b60008155600101614120565b9091508190614117565b015190503880613fe3565b90601f1983169184600052816000209260005b8181106141a457509260019285926101409896600a98961061418b575b505050811b019055613ff8565b015160001960f88460031b161c1916905538808061417e565b92936020600181928786015181550195019301614161565b836000526020600020601f840160051c810191602085106141fa575b601f0160051c01905b8181106141ee5750613fc1565b600081556001016141e1565b90915081906141d8565b015190503880613f65565b60008581528281209350601f198516905b81811061425c5750908460019594939210614243575b505050811b019055613f7a565b015160001960f88460031b161c19169055388080614236565b92936020600181928786015181550195019301614220565b909150836000526020600020601f840160051c810191602085106142bd575b90601f859493920160051c01905b8181106142ae5750613f4e565b600081558493506001016142a1565b9091508190614293565b634e487b7160e01b600052600060045260246000fd5b51906001600160a01b03821682036103ab57565b81601f820112156103ab5780516143078161385f565b9261431560405194856137f7565b818452602082840101116103ab57613b919160208085019101613640565b90816101209103126103ab576040519061434c826137db565b614355816142dd565b825260208101516020830152604081015160408301526060810151606083015260808101519060038210156103ab5761010091608084015260a081015160a084015260c081015160c084015260e081015160e0840152015161010082015290565b6002600054146143c7576002600055565b633ee5aeb560e01b60005260046000fd5b6001546001600160a01b031633036143ec57565b63118cdaa760e01b6000523360045260246000fdfe485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d9751a264697066735822122042d79dae9cf020fc50369ca492d46e6bdc18406fb1a2c77fda7e497e9235449964736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68BCD8D EQ PUSH2 0x3523 JUMPI DUP1 PUSH4 0x195EC9EE EQ PUSH2 0x3457 JUMPI DUP1 PUSH4 0x2274346B EQ PUSH2 0x342E JUMPI DUP1 PUSH4 0x248A75B7 EQ PUSH2 0x3405 JUMPI DUP1 PUSH4 0x25F11E8D EQ PUSH2 0x33D1 JUMPI DUP1 PUSH4 0x2607B539 EQ PUSH2 0x2B95 JUMPI DUP1 PUSH4 0x29BA7BB2 EQ PUSH2 0x2B6C JUMPI DUP1 PUSH4 0x31866763 EQ PUSH2 0x2703 JUMPI DUP1 PUSH4 0x34808EC3 EQ PUSH2 0x26DA JUMPI DUP1 PUSH4 0x35C1D349 EQ PUSH2 0x2698 JUMPI DUP1 PUSH4 0x3DC66AD3 EQ PUSH2 0x2338 JUMPI DUP1 PUSH4 0x46F84795 EQ PUSH2 0x15AD JUMPI DUP1 PUSH4 0x4E055244 EQ PUSH2 0x208A JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x2061 JUMPI DUP1 PUSH4 0x5CFAB35C EQ PUSH2 0x1CC5 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x1BE8 JUMPI DUP1 PUSH4 0x6F60537D EQ PUSH2 0x1BBF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B62 JUMPI DUP1 PUSH4 0x7C366CC6 EQ PUSH2 0x1A85 JUMPI DUP1 PUSH4 0x7EB111F0 EQ PUSH2 0x196C JUMPI DUP1 PUSH4 0x83BC6357 EQ PUSH2 0x163F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1616 JUMPI DUP1 PUSH4 0x8F244630 EQ PUSH2 0x15E7 JUMPI DUP1 PUSH4 0x96F3A8AD EQ PUSH2 0x15AD JUMPI DUP1 PUSH4 0x996B8A6F EQ PUSH2 0x1584 JUMPI DUP1 PUSH4 0x9ABD9B05 EQ PUSH2 0x1530 JUMPI DUP1 PUSH4 0x9FD36B15 EQ PUSH2 0x14D5 JUMPI DUP1 PUSH4 0xA14764D0 EQ PUSH2 0x143A JUMPI DUP1 PUSH4 0xA4948D85 EQ PUSH2 0x13DB JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x12EC JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x11CE JUMPI DUP1 PUSH4 0xB5D90C28 EQ PUSH2 0x11A5 JUMPI DUP1 PUSH4 0xC7AA9874 EQ PUSH2 0x1117 JUMPI DUP1 PUSH4 0xD86C0444 EQ PUSH2 0xFB8 JUMPI DUP1 PUSH4 0xD88FF1F4 EQ PUSH2 0xCB9 JUMPI DUP1 PUSH4 0xE35F8129 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xF525CB68 EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xF6E80558 EQ PUSH2 0x6CC JUMPI PUSH4 0xFB839DDA EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1F0 PUSH2 0x43B6 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BB2B243 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x120 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x6AD JUMPI JUMPDEST POP ADD SWAP1 DUP2 MLOAD ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x2500ED8D PUSH1 0xE2 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3E0 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x27C DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x285 DUP2 PUSH2 0x3692 JUMP JUMPDEST SUB PUSH2 0x3B8 JUMPI PUSH1 0xE0 ADD MLOAD SWAP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x36C JUMPI JUMPDEST POP PUSH2 0x31B SWAP2 PUSH2 0x2E4 PUSH2 0x120 SWAP3 PUSH2 0x3D1C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BB2B243 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x360 JUMPI PUSH2 0x331 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x359 JUMPI JUMPDEST PUSH2 0x34A DUP2 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x4333 JUMP JUMPDEST POP CODESIZE PUSH2 0x32A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3B0 JUMPI JUMPDEST DUP2 PUSH2 0x387 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3AB JUMPI PUSH2 0x31B SWAP2 PUSH2 0x2E4 PUSH2 0x3A2 PUSH2 0x120 SWAP4 PUSH2 0x3B21 JUMP JUMPDEST SWAP3 POP POP SWAP2 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x37A JUMP JUMPDEST POP PUSH2 0x31B SWAP2 PUSH2 0x3DB PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x120 SWAP7 MLOAD CALLER GAS CALL PUSH2 0x3D5 PUSH2 0x3CA0 JUMP JUMPDEST POP PUSH2 0x3CD0 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST SWAP1 RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0x3F0 DUP2 DUP5 PUSH2 0x37F7 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x664 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x64C JUMPI ADD SWAP1 PUSH2 0x100 DUP3 DUP5 SUB SLT PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x100 DUP5 ADD DUP5 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x650 JUMPI PUSH1 0x40 MSTORE DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x64C JUMPI DUP2 PUSH2 0x45C SWAP2 DUP6 ADD PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x64C JUMPI DUP4 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x64C JUMPI DUP2 MLOAD SWAP2 PUSH2 0x48E DUP4 PUSH2 0x3BA3 JUMP JUMPDEST SWAP3 PUSH2 0x49C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x37F7 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x648 JUMPI PUSH1 0x20 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x517 JUMPI POP POP POP POP POP PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x514 JUMPI POP PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x509 SWAP1 PUSH1 0xE0 ADD PUSH2 0x42DD JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE CODESIZE PUSH2 0x26B JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x644 JUMPI DUP3 ADD PUSH2 0x1E0 DUP2 DUP8 SUB PUSH1 0x1F NOT ADD SLT PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x545 DUP3 PUSH2 0x376C JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x640 JUMPI DUP8 PUSH1 0x20 PUSH2 0x56E SWAP3 DUP5 ADD ADD PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x640 JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x5D2 PUSH2 0x140 DUP3 ADD PUSH2 0x3B21 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x640 JUMPI PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1E0 SWAP1 PUSH2 0x617 PUSH2 0x1C0 DUP3 ADD PUSH2 0x42DD JUMP JUMPDEST PUSH2 0x1A0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x63C JUMPI PUSH2 0x1C0 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x4B9 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20616374697665207769746864726177616C20666F722075736572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x6C6 SWAP2 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x359 JUMPI PUSH2 0x34A DUP2 DUP4 PUSH2 0x37F7 JUMP JUMPDEST CODESIZE PUSH2 0x234 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x72C PUSH2 0x3818 JUMP JUMPDEST PUSH2 0x734 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH2 0x7BB PUSH2 0x43B6 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3B4D01A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xB55 JUMPI JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD SWAP1 PUSH1 0xC0 DUP4 ADD MLOAD SWAP3 PUSH1 0x5 DUP5 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x2 PUSH1 0x0 SWAP5 EQ SWAP1 DUP2 PUSH2 0xB31 JUMPI JUMPDEST POP ISZERO PUSH2 0xAF4 JUMPI PUSH1 0xA0 DUP3 ADD DUP1 MLOAD DUP5 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xAB8 JUMPI PUSH2 0x853 PUSH1 0xFF PUSH1 0x9 DUP4 ADD SLOAD AND PUSH2 0x3E6B JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD SWAP4 PUSH1 0xC0 DUP7 ADD SWAP2 DUP3 MLOAD DUP7 LT PUSH2 0xA73 JUMPI PUSH2 0x887 DUP9 SWAP7 DUP5 MLOAD PUSH2 0x87D PUSH1 0x8 DUP9 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B14 JUMP JUMPDEST SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH2 0x3B41 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x893 DUP5 MLOAD PUSH2 0x3D60 JUMP JUMPDEST SWAP4 DUP6 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x911 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x8B6 DUP2 DUP9 PUSH2 0x3B66 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x63C JUMPI DUP9 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x906 JUMPI DUP9 PUSH1 0x1 SWAP4 PUSH2 0x8F6 JUMPI JUMPDEST POP POP ADD PUSH2 0x896 JUMP JUMPDEST PUSH2 0x8FF SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP11 DUP9 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP4 POP SWAP2 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x648 JUMPI DUP6 SWAP4 PUSH1 0x24 DUP6 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP4 DUP5 SWAP3 PUSH4 0xF1B4BF9D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xA68 JUMPI PUSH32 0xEEF4955E8B18DCB6D1C19905B7B86E5FE56138AD1CE2C5E540CE4E959312F511 SWAP4 DUP7 PUSH1 0x60 SWAP5 PUSH2 0xA58 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP5 MLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND DUP2 MLOAD DUP2 EXTCODESIZE ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP2 DUP5 DUP4 ISZERO PUSH2 0xA48 JUMPI PUSH32 0x415071086C9EA63F7F39884C21A8AF430AF53BFD511A362DFF69CABCB1B8BCC1 SWAP4 PUSH2 0xA38 JUMPI JUMPDEST POP POP MLOAD SWAP2 PUSH2 0xA25 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x1 PUSH1 0x40 DUP5 ADD SWAP2 ADD PUSH2 0x3A22 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD MSTORE DUP1 CALLER SWAP4 SUB SWAP1 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xA41 SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0xA61 SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP9 DUP7 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320696E2074686520706F6F6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BDD0818481D985B1A59081C1C9BDC1BDCD85B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x141C9BDC1BDCD85B081B9BDD08185C1C1C9BDD9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE0 SWAP2 POP ADD MLOAD ISZERO ISZERO DUP5 PUSH2 0x81B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0xB66 DUP2 DUP5 PUSH2 0x37F7 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x664 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x64C JUMPI ADD SWAP2 PUSH2 0x120 DUP4 DUP3 SUB SLT PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xB9E DUP5 PUSH2 0x37DB JUMP JUMPDEST DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xA54 JUMPI PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xBF3 PUSH1 0xE0 DUP3 ADD PUSH2 0x3B21 JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xA54 JUMPI ADD SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC26 DUP5 PUSH2 0x3788 JUMP JUMPDEST PUSH2 0xC2F DUP4 PUSH2 0x42DD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x664 JUMPI PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x664 JUMPI DUP3 PUSH2 0xC6D SWAP2 DUP6 ADD PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x514 JUMPI POP DUP3 SWAP2 PUSH2 0xC96 SWAP2 PUSH1 0xC0 SWAP5 ADD PUSH2 0x42F1 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE SWAP1 DUP3 PUSH2 0x7F7 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x5 SLOAD PUSH2 0xCD6 DUP2 PUSH2 0x3BA3 JUMP JUMPDEST SWAP1 PUSH2 0xCE4 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0xCF3 DUP3 PUSH2 0x3BA3 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xFA1 JUMPI POP POP PUSH1 0x1 JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD73 JUMPI DUP3 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xD44 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0xD63 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x369C JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0xD35 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD8F DUP3 PUSH2 0x376C JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xDA4 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x3A22 JUMP JUMPDEST SUB PUSH2 0xDAF SWAP1 DUP3 PUSH2 0x37F7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF AND SWAP2 PUSH1 0x40 DUP5 ADD SWAP3 PUSH2 0xDCD DUP2 PUSH2 0x3688 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xC0 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP6 ADD SLOAD SWAP1 PUSH1 0xE0 DUP10 ADD SWAP2 DUP3 MSTORE PUSH1 0x8 DUP7 ADD SLOAD SWAP3 PUSH2 0x100 DUP11 ADD SWAP4 DUP5 MSTORE PUSH1 0x9 DUP8 ADD SLOAD PUSH1 0xFF AND SWAP5 PUSH2 0x120 DUP12 ADD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0xA DUP9 ADD SLOAD SWAP7 PUSH2 0x140 DUP13 ADD SWAP8 DUP9 MSTORE PUSH1 0xB DUP10 ADD SLOAD SWAP9 PUSH2 0x160 DUP14 ADD SWAP10 DUP11 MSTORE PUSH1 0xC ADD SLOAD SWAP11 DUP12 SWAP11 DUP14 PUSH2 0x180 DUP2 ADD SWAP13 PUSH1 0xFF AND DUP14 MSTORE PUSH2 0x1A0 ADD SWAP13 DUP14 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB DUP3 PUSH1 0x8 SHR AND SWAP1 MSTORE PUSH1 0xA8 SHR PUSH1 0xFF AND SWAP14 PUSH2 0x1C0 ADD SWAP14 DUP15 PUSH2 0xE88 DUP3 PUSH2 0x3692 JUMP JUMPDEST MSTORE MLOAD SWAP1 MLOAD SWAP2 PUSH2 0xE96 DUP4 PUSH2 0x3688 JUMP JUMPDEST MLOAD SWAP3 MLOAD SWAP4 MLOAD SWAP5 MLOAD SWAP6 MLOAD SWAP7 MLOAD SWAP8 MLOAD ISZERO ISZERO SWAP9 MLOAD SWAP10 MLOAD SWAP11 MLOAD PUSH1 0xFF AND SWAP12 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 MLOAD AND SWAP13 MLOAD SWAP14 PUSH2 0xEC7 DUP16 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0xED9 SWAP1 PUSH2 0x376C JUMP JUMPDEST PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD PUSH1 0x20 ADD MSTORE PUSH2 0xEED DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x40 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0x60 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0x80 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0xC0 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0xE0 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x100 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x120 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x140 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x160 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x180 ADD MSTORE PUSH1 0x80 MLOAD PUSH2 0x1A0 ADD MSTORE PUSH2 0xF50 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1C0 ADD MSTORE PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP1 DUP3 GT PUSH2 0xF8B JUMPI PUSH2 0xF80 PUSH2 0xF86 SWAP3 PUSH1 0x80 MLOAD PUSH2 0xF79 DUP3 DUP9 PUSH2 0x3B66 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x3B66 JUMP JUMPDEST POP PUSH2 0x3B94 JUMP JUMPDEST PUSH2 0xD03 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0xFAC PUSH2 0x3AA5 JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0xCF7 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xFDA PUSH2 0x43D8 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x10C7 JUMPI DUP2 ISZERO PUSH2 0x1094 JUMPI DUP1 ISZERO PUSH2 0x1056 JUMPI PUSH32 0x17B8644F386D1C7C7138EF98B3C8035622BBE94D7BE9B26F71D2654A547C2943 SWAP2 PUSH1 0x40 SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x3 DUP5 PUSH1 0x0 KECCAK256 ADD SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x4 DUP5 PUSH1 0x0 KECCAK256 ADD SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081B5A5B9A5B5D5B481C195C9A5BD9 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x496E76616C696420415059 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F74206578697374206F7220697320696E61637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7665 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x1125 CALLDATASIZE PUSH2 0x38D7 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1191 JUMPI JUMPDEST PUSH2 0x1143 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x117B JUMPI DUP3 PUSH2 0x1173 SWAP2 PUSH1 0x1 PUSH2 0x1179 SWAP6 ADD DUP2 SSTORE PUSH2 0x3EF7 JUMP JUMPDEST SWAP1 PUSH2 0x3F13 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x113A JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 PUSH1 0x1 DUP4 ADD SWAP1 PUSH2 0x1205 SWAP2 PUSH2 0x3A22 JUMP JUMPDEST SUB PUSH2 0x1210 SWAP1 DUP5 PUSH2 0x37F7 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x3 DUP2 ADD SLOAD SWAP1 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x8 DUP5 ADD SLOAD SWAP1 PUSH1 0x9 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP3 PUSH1 0xA DUP7 ADD SLOAD SWAP5 PUSH1 0xB DUP8 ADD SLOAD SWAP7 PUSH1 0xC ADD SLOAD SWAP8 DUP9 PUSH1 0xA8 SHR PUSH1 0xFF AND SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE DUP14 PUSH1 0x20 DUP2 ADD PUSH2 0x1E0 SWAP1 MSTORE PUSH2 0x1E0 ADD PUSH2 0x127B SWAP2 PUSH2 0x3663 JUMP JUMPDEST SWAP12 DUP14 PUSH2 0x1286 DUP3 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 ADD MSTORE PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF DUP2 AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x12E2 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x1C0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1305 PUSH2 0x3818 JUMP JUMPDEST PUSH2 0x130D PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x139D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x134E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 OR PUSH1 0x6 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636520616464726573732063616E6E6F74206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11DBDD995C9B985B98D948185B1C9958591E481CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x13E9 CALLDATASIZE PUSH2 0x38C1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1426 JUMPI JUMPDEST PUSH2 0x1407 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x1422 PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B41 JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13FE JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x1448 CALLDATASIZE PUSH2 0x38D7 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x14C1 JUMPI JUMPDEST PUSH2 0x1466 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1179 JUMPI DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x1496 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3EF7 JUMP JUMPDEST POP SLOAD DUP3 MLOAD EQ PUSH2 0x14A7 JUMPI PUSH1 0x1 ADD PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x1173 SWAP1 PUSH2 0x1179 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3EF7 JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x145D JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x14E3 CALLDATASIZE PUSH2 0x38C1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x151C JUMPI JUMPDEST PUSH2 0x1501 SWAP1 PUSH2 0x3EAC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x1422 PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B14 JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14F8 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x154C PUSH2 0x43D8 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x1569 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x3E6B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15CE PUSH2 0x3818 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1658 PUSH2 0x3818 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x166F PUSH2 0x43B6 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1958 JUMPI JUMPDEST ISZERO PUSH2 0x1914 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x16C5 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x1746 PUSH1 0x1 DUP5 ADD SWAP4 DUP5 SLOAD SWAP1 PUSH2 0x16E7 DUP3 ISZERO ISZERO PUSH2 0x3BBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP3 ADD SWAP2 PUSH2 0x1716 PUSH1 0x7 DUP5 SLOAD SWAP3 PUSH2 0x170C PUSH1 0xFF DUP6 AND PUSH2 0x1706 DUP2 PUSH2 0x3688 JUMP JUMPDEST ISZERO PUSH2 0x3C10 JUMP JUMPDEST ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x3C54 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x172C PUSH1 0x5 DUP8 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B41 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x64 PUSH2 0x173F DUP3 PUSH1 0xB DUP10 ADD SLOAD PUSH2 0x3B2E JUMP JUMPDEST DIV SWAP1 PUSH2 0x3B41 JUMP JUMPDEST PUSH2 0x1757 PUSH1 0xFF PUSH1 0xC DUP8 ADD SLOAD AND DUP3 PUSH2 0x3B2E JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SSTORE PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD PUSH2 0x177A DUP2 PUSH2 0x3BA3 JUMP JUMPDEST SWAP5 PUSH2 0x1788 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x37F7 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x184A JUMPI POP POP POP POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x181A JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x17CA DUP2 DUP8 PUSH2 0x3B66 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1809 JUMPI JUMPDEST POP ADD PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1814 SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP7 PUSH2 0x1802 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4402 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x1840 DUP6 SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 ADD SWAP1 DUP4 PUSH2 0x3B7A JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x185D DUP2 PUSH2 0x37BF JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x187B DUP2 PUSH2 0x1874 DUP2 DUP10 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST SUB DUP3 PUSH2 0x37F7 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x1890 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x18A9 DUP2 PUSH2 0x1874 DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1900 DUP2 PUSH2 0x1874 DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x179C JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865207661756C7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1684 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1988 PUSH1 0x4 CALLDATALOAD PUSH2 0x3D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x19C0 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x1A75 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH2 0x140 PUSH2 0x1A23 PUSH2 0x19FE DUP7 DUP6 ADD MLOAD PUSH2 0x160 DUP9 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD SWAP1 PUSH2 0x3663 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x1A0C DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x3663 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH2 0x140 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3663 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x19B1 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1A9E PUSH2 0x3818 JUMP JUMPDEST PUSH2 0x1AA6 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B29 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1AE4 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND OR PUSH1 0xC SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F76657220616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x10DBDD995C88185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1B7B PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1C01 PUSH2 0x3818 JUMP JUMPDEST PUSH2 0x1C09 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C8C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1C47 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND OR PUSH1 0xD SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15985D5B1D08185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI PUSH2 0x120 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1D03 DUP3 PUSH2 0x37DB JUMP JUMPDEST DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI PUSH2 0x1D42 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH2 0x387A JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 PUSH1 0x64 DUP5 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x80 DUP3 ADD PUSH1 0x84 DUP6 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0xA4 DUP6 ADD CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x3AB JUMPI PUSH1 0xA0 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0xC0 DUP5 ADD SWAP2 PUSH1 0xC4 DUP8 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0xE4 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x2 DUP9 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0xE0 DUP7 ADD SWAP8 DUP9 MSTORE PUSH2 0x104 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x3AB JUMPI PUSH2 0x100 DUP7 ADD SWAP1 DUP2 MSTORE PUSH2 0x1DBF PUSH2 0x43D8 JUMP JUMPDEST DUP8 MLOAD PUSH2 0x1DCA DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x1DD3 DUP2 PUSH2 0x3692 JUMP JUMPDEST ISZERO SWAP1 DUP2 ISZERO PUSH2 0x204D JUMPI JUMPDEST POP ISZERO PUSH2 0x2008 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xF8B JUMPI PUSH1 0x5 SSTORE DUP5 MLOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP6 DUP6 MLOAD DUP8 SSTORE DUP9 MLOAD PUSH1 0x1 DUP9 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x117B JUMPI PUSH2 0x1E29 DUP4 SLOAD PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1FC0 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F4F JUMPI SWAP2 DUP1 PUSH2 0x1EAE SWAP7 SWAP5 SWAP3 PUSH1 0xFF SWAP10 SWAP9 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1F44 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH1 0x3 DUP10 ADD SSTORE MLOAD PUSH1 0x4 DUP9 ADD SSTORE PUSH1 0x0 PUSH1 0x5 DUP9 ADD SSTORE PUSH1 0x0 PUSH1 0x7 DUP9 ADD SSTORE PUSH1 0x0 PUSH1 0x6 DUP9 ADD SSTORE PUSH1 0x9 DUP8 ADD PUSH1 0x1 DUP6 NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH2 0x1EA5 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x3B4E JUMP JUMPDEST MLOAD SWAP2 DUP3 PUSH1 0xB DUP7 ADD SSTORE MLOAD AND SWAP1 PUSH1 0xC DUP5 ADD SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x64 SUB SWAP6 PUSH1 0x64 DUP8 GT PUSH2 0xF8B JUMPI PUSH32 0xF01906DC0AC306FA816E50166A7ED46AF1F05721CB90CEA30BEEBDD8DEDE3A6D SWAP7 PUSH1 0xA PUSH2 0x1F3F SWAP8 ADD SSTORE MLOAD PUSH2 0x1F01 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x1F0A DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xFF PUSH1 0xA8 SHL ADD NOT SWAP1 SWAP3 AND OR PUSH1 0xA8 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA8 SHL AND OR SWAP1 SSTORE MLOAD SWAP3 MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE SWAP1 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 DUP4 ADD SWAP1 PUSH2 0x3663 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x1E57 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FA8 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0xFF SWAP12 SWAP11 SWAP9 SWAP7 PUSH2 0x1EAE SWAP11 SWAP9 SWAP7 LT PUSH2 0x1F8F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E6C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x1F82 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1F62 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1FFE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FF2 JUMPI POP PUSH2 0x1E32 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720417373657420666F72204465706F736974000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 POP DUP10 PUSH2 0x1DDC JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x3AB JUMPI PUSH1 0x0 PUSH2 0x120 PUSH1 0x40 MLOAD PUSH2 0x20C3 DUP2 PUSH2 0x37A3 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x212D DUP3 PUSH2 0x37A3 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD SLOAD SWAP3 SWAP8 SWAP3 PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x2178 DUP2 PUSH2 0x3688 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x5 DUP6 ADD SLOAD SWAP3 PUSH1 0xA0 DUP8 ADD SWAP4 DUP5 MSTORE PUSH2 0x2207 PUSH1 0x20 PUSH1 0x6 DUP9 ADD SLOAD SWAP7 PUSH1 0xC0 DUP11 ADD SWAP8 DUP9 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x7 DUP12 ADD SLOAD SWAP11 PUSH1 0xE0 DUP14 ADD SWAP12 DUP13 MSTORE PUSH2 0x100 PUSH1 0x8 DUP3 ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE ADD SLOAD AND SWAP11 PUSH2 0x120 DUP14 ADD SWAP12 PUSH2 0x21CA DUP2 PUSH2 0x3692 JUMP JUMPDEST DUP13 MSTORE PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4149605 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 DUP5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2306 JUMPI JUMPDEST POP DUP1 PUSH2 0x22F7 JUMPI POP PUSH2 0x2246 PUSH2 0x12C PUSH2 0x223E DUP8 MLOAD JUMPDEST TIMESTAMP DUP11 MLOAD DUP1 TIMESTAMP GT PUSH2 0x22EF JUMPI JUMPDEST POP PUSH2 0x3B41 JUMP JUMPDEST DIV DUP4 MLOAD PUSH2 0x3B2E JUMP JUMPDEST DUP8 MSTORE DUP6 MLOAD TIMESTAMP DUP2 GT PUSH2 0x22B9 JUMPI POP PUSH2 0x140 SWAP10 PUSH1 0x0 DUP6 MSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP11 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 MSTORE SWAP1 MLOAD PUSH1 0x20 DUP12 ADD MSTORE SWAP1 MLOAD SWAP1 DUP10 ADD MSTORE MLOAD PUSH1 0x60 DUP9 ADD MSTORE MLOAD PUSH2 0x2289 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE MLOAD PUSH1 0xA0 DUP7 ADD MSTORE MLOAD PUSH1 0xC0 DUP6 ADD MSTORE MLOAD PUSH1 0xE0 DUP5 ADD MSTORE MLOAD PUSH2 0x100 DUP4 ADD MSTORE MLOAD PUSH2 0x22B1 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x22C4 SWAP1 TIMESTAMP SWAP1 PUSH2 0x3B41 JUMP JUMPDEST SWAP10 PUSH3 0x15180 DUP12 ADD SWAP11 DUP12 DUP2 GT PUSH2 0xF8B JUMPI PUSH3 0x1517F ADD SWAP11 DUP12 GT PUSH2 0xF8B JUMPI PUSH3 0x15180 PUSH2 0x140 SWAP12 DIV DUP6 MSTORE PUSH2 0x225B JUMP JUMPDEST SWAP1 POP DUP16 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x223E PUSH2 0x2246 SWAP3 PUSH2 0x222D JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2330 JUMPI JUMPDEST DUP2 PUSH2 0x2320 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x514 JUMPI POP MLOAD DUP12 PUSH2 0x221A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2313 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2354 PUSH2 0x43B6 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x23E8 PUSH1 0x1 DUP5 ADD SWAP4 DUP5 SLOAD SWAP1 PUSH2 0x23A0 DUP3 ISZERO ISZERO PUSH2 0x3BBA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP3 ADD SWAP2 PUSH2 0x23BF PUSH1 0x7 DUP5 SLOAD SWAP3 PUSH2 0x170C PUSH1 0xFF DUP6 AND PUSH2 0x1706 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x23D5 PUSH1 0x5 DUP5 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B41 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x64 PUSH2 0x173F DUP3 PUSH1 0xB DUP7 ADD SLOAD PUSH2 0x3B2E JUMP JUMPDEST SWAP2 PUSH1 0xC DUP3 ADD SWAP3 PUSH2 0x23FC PUSH1 0xFF DUP6 SLOAD AND DUP3 PUSH2 0x3B2E JUMP JUMPDEST PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD PUSH2 0x241F DUP2 PUSH2 0x3BA3 JUMP JUMPDEST SWAP5 PUSH2 0x242D PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x37F7 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x25D5 JUMPI POP POP POP POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x24BF JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x246F DUP2 DUP8 PUSH2 0x3B66 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x24AE JUMPI JUMPDEST POP ADD PUSH2 0x244F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B9 SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP7 PUSH2 0x24A7 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD PUSH1 0xA8 SHR AND PUSH2 0x24D4 DUP2 PUSH2 0x3692 JUMP JUMPDEST SUB PUSH2 0x25A7 JUMPI SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2554 JUMPI JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4402 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2541 PUSH2 0x1840 SWAP3 PUSH2 0x3D1C JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x1 CALLER SWAP7 ADD SWAP1 DUP4 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x259F JUMPI JUMPDEST DUP2 PUSH2 0x256F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4402 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2541 PUSH2 0x2596 PUSH2 0x1840 SWAP4 PUSH2 0x3B21 JUMP JUMPDEST SWAP3 POP POP SWAP2 PUSH2 0x2524 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2562 JUMP JUMPDEST POP PUSH2 0x1840 DUP2 PUSH2 0x25D0 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4402 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SLOAD CALLER GAS CALL PUSH2 0x3D5 PUSH2 0x3CA0 JUMP JUMPDEST PUSH2 0x2541 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x25E8 DUP2 PUSH2 0x37BF JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x25FF DUP2 PUSH2 0x1874 DUP2 DUP10 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x2614 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x262D DUP2 PUSH2 0x1874 DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x2684 DUP2 PUSH2 0x1874 DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x2441 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xF SLOAD DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x26C1 PUSH1 0x20 SWAP2 PUSH2 0x382E JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x271C PUSH2 0x3818 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2B14 JUMPI POP PUSH2 0x2742 DUP5 PUSH2 0x3BA3 JUMP JUMPDEST SWAP4 PUSH2 0x2750 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x37F7 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x275F PUSH1 0x1F NOT SWAP2 PUSH2 0x3BA3 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2AAF JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x0 SWAP1 PUSH1 0x1 JUMPDEST DUP5 DUP2 GT ISZERO PUSH2 0x2859 JUMPI DUP7 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x27C0 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 PUSH2 0x120 DUP1 PUSH2 0x27F1 DUP5 MLOAD PUSH2 0x140 DUP6 MSTORE PUSH2 0x140 DUP6 ADD SWAP1 PUSH2 0x3663 JUMP JUMPDEST SWAP4 DUP6 DUP2 ADD MLOAD DUP7 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x27B1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2899 DUP2 PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x120 PUSH1 0xFF PUSH1 0x9 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP6 ADD SWAP6 DUP7 MSTORE DUP3 PUSH1 0x4 DUP3 ADD SLOAD AND PUSH2 0x28DD DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE ADD SLOAD AND SWAP2 PUSH2 0x2918 DUP4 PUSH2 0x3692 JUMP JUMPDEST ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x39E671F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP13 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A7C JUMPI JUMPDEST POP PUSH2 0x2960 SWAP2 MLOAD PUSH2 0x3B2E JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x299F JUMPI JUMPDEST POP POP PUSH2 0x299A SWAP1 PUSH2 0x3B94 JUMP JUMPDEST PUSH2 0x277F JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 DUP1 DUP3 ADD SLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD SWAP1 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x8 DUP9 ADD SLOAD PUSH1 0x9 DUP10 ADD SLOAD SWAP7 MLOAD SWAP12 SWAP9 PUSH1 0xFF SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP6 SWAP2 SWAP5 SWAP3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A02 DUP14 PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 DUP2 SWAP4 ADD SWAP1 PUSH2 0x2A15 SWAP2 PUSH2 0x3A22 JUMP JUMPDEST SUB PUSH2 0x2A20 SWAP1 DUP3 PUSH2 0x37F7 JUMP JUMPDEST DUP13 MSTORE DUP10 PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE DUP1 PUSH2 0x2A5E SWAP1 PUSH2 0x3B94 JUMP JUMPDEST SWAP4 PUSH2 0x2A69 DUP3 DUP11 PUSH2 0x3B66 JUMP JUMPDEST MSTORE PUSH2 0x2A74 SWAP1 DUP9 PUSH2 0x3B66 JUMP JUMPDEST POP DUP8 DUP1 PUSH2 0x298F JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2AA7 JUMPI JUMPDEST DUP2 PUSH2 0x2A95 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x514 JUMPI POP MLOAD PUSH2 0x2960 PUSH2 0x2955 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP6 SWAP5 SWAP6 MLOAD PUSH2 0x2AC1 DUP2 PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE DUP3 DUP3 DUP10 ADD ADD MSTORE ADD SWAP4 SWAP3 SWAP4 PUSH2 0x2763 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP5 SWAP4 SWAP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2B57 JUMPI JUMPDEST PUSH2 0x2B4F SWAP1 PUSH2 0x3B94 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2730 JUMP JUMPDEST SWAP4 PUSH2 0x2B64 PUSH2 0x2B4F SWAP2 PUSH2 0x3B94 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x2B46 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x2BAF DUP3 PUSH2 0x3788 JUMP JUMPDEST PUSH2 0x2BB7 PUSH2 0x3818 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x44 CALLDATALOAD DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 PUSH1 0x64 CALLDATALOAD DUP3 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x33CD JUMPI PUSH1 0x80 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x2 DUP4 LT ISZERO PUSH2 0x648 JUMPI PUSH1 0xA0 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH2 0x33C9 JUMPI PUSH1 0xC0 DUP7 ADD SWAP5 DUP6 MSTORE PUSH2 0x2C20 PUSH2 0x43B6 JUMP JUMPDEST DUP8 MLOAD DUP8 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP5 PUSH1 0xFF PUSH1 0x9 DUP8 ADD SLOAD AND ISZERO PUSH2 0x3379 JUMPI PUSH1 0xC DUP7 ADD SWAP5 DUP6 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND SWAP2 MLOAD PUSH2 0x2C54 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x2C5D DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x2C66 DUP4 PUSH2 0x3692 JUMP JUMPDEST DUP3 SUB PUSH2 0x3325 JUMPI DUP4 MLOAD PUSH1 0x4 DUP10 ADD SLOAD GT PUSH2 0x32ED JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR AND SUB PUSH2 0x32A8 JUMPI DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP12 KECCAK256 DUP13 MLOAD DUP13 MSTORE SWAP1 SWAP2 MSTORE DUP10 KECCAK256 DUP6 MLOAD PUSH2 0x2CBE DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x2CC7 DUP2 PUSH2 0x3692 JUMP JUMPDEST DUP11 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD PUSH2 0x3251 JUMPI PUSH1 0x1 SWAP1 PUSH2 0x2CE4 DUP2 PUSH2 0x3692 JUMP JUMPDEST SUB PUSH2 0x31F4 JUMPI DUP3 MLOAD ISZERO PUSH2 0x31AF JUMPI MLOAD DUP7 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP14 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x906 JUMPI PUSH2 0x3178 JUMPI JUMPDEST POP DUP2 MLOAD PUSH2 0x2D4D PUSH1 0x5 DUP8 ADD SWAP2 DUP3 SLOAD PUSH2 0x3B14 JUMP JUMPDEST SWAP1 SSTORE DUP2 MLOAD SWAP4 JUMPDEST PUSH2 0x2D79 PUSH1 0xFF PUSH2 0x2D70 PUSH1 0x5 DUP10 ADD SLOAD PUSH1 0x64 PUSH2 0x173F DUP3 PUSH1 0xB DUP14 ADD SLOAD PUSH2 0x3B2E JUMP JUMPDEST SWAP3 SLOAD AND DUP3 PUSH2 0x3B2E JUMP JUMPDEST PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0x6 DUP7 ADD SSTORE PUSH2 0x16D PUSH1 0x64 PUSH2 0x2D96 PUSH1 0x3 DUP9 ADD SLOAD DUP8 PUSH2 0x3B2E JUMP JUMPDEST DIV DIV SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 MLOAD AND SWAP1 DUP10 MLOAD SWAP3 MLOAD PUSH3 0x15180 DUP2 MUL DUP2 DUP2 DIV PUSH3 0x15180 EQ DUP3 ISZERO OR ISZERO PUSH2 0x3164 JUMPI SWAP3 PUSH2 0x2F0A SWAP5 SWAP3 PUSH1 0x9 SWAP3 DUP12 PUSH2 0x2DD7 DUP15 SWAP16 SWAP8 SWAP15 SWAP14 SWAP15 TIMESTAMP PUSH2 0x3B14 JUMP JUMPDEST SWAP2 DUP14 DUP13 DUP13 DUP7 MLOAD SWAP10 PUSH2 0x2DE7 DUP12 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP9 PUSH2 0x2DF4 DUP11 PUSH2 0x37A3 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP10 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP10 ADD SWAP3 DUP5 DUP5 MSTORE PUSH1 0xA0 DUP11 ADD SWAP6 DUP7 MSTORE DUP13 PUSH1 0xC0 DUP12 ADD SWAP8 TIMESTAMP DUP10 MSTORE PUSH1 0xE0 DUP13 ADD SWAP10 DUP11 MSTORE PUSH2 0x100 DUP13 ADD SWAP11 DUP8 DUP13 MSTORE PUSH2 0x120 DUP14 ADD SWAP15 DUP16 PUSH2 0x2E43 DUP3 PUSH2 0x3692 JUMP JUMPDEST MSTORE MLOAD PUSH2 0x2E4E DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x2E57 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x30C1 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 SWAP5 MLOAD DUP11 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP10 KECCAK256 DUP10 DUP1 MSTORE SWAP1 MSTORE SWAP2 SWAP1 SWAP7 KECCAK256 SWAP11 MLOAD DUP12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR DUP11 SSTORE MLOAD PUSH1 0x1 DUP11 ADD SSTORE MLOAD SWAP3 DUP9 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x3 DUP8 ADD SSTORE MLOAD PUSH2 0x2ECA SWAP1 PUSH2 0x2EC1 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x3B4E JUMP JUMPDEST MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD PUSH1 0x8 DUP3 ADD SSTORE ADD SWAP1 MLOAD PUSH2 0x2EEE DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x2EF7 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH2 0x3D60 JUMP JUMPDEST SWAP4 DUP6 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x2F7D JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2F2D DUP2 DUP9 PUSH2 0x3B66 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x63C JUMPI DUP9 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x906 JUMPI DUP9 PUSH1 0x1 SWAP4 PUSH2 0x2F6D JUMPI JUMPDEST POP POP ADD PUSH2 0x2F0D JUMP JUMPDEST PUSH2 0x2F76 SWAP2 PUSH2 0x37F7 JUMP JUMPDEST DUP11 DUP9 PUSH2 0x2F65 JUMP JUMPDEST POP PUSH1 0xF SLOAD DUP7 SWAP6 POP DUP8 SWAP1 DUP7 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x3089 JUMPI JUMPDEST POP ISZERO PUSH2 0x3029 JUMPI JUMPDEST POP DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP2 SWAP1 DUP3 LT PUSH2 0x3015 JUMPI PUSH1 0x40 SWAP8 SWAP4 PUSH2 0x3005 PUSH1 0x1 SWAP7 SWAP5 PUSH32 0x6F85D9948D6CA3DD6CE6CE7D175DA22B4E865827AE6FCD530EC7EDAC1240F928 SWAP5 DUP9 SWAP5 SSTORE DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP5 MLOAD DUP11 MLOAD SWAP4 DUP5 SWAP4 ADD SWAP1 DUP4 PUSH2 0x3B7A JUMP JUMPDEST SUB SWAP1 LOG2 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x3075 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3051 SWAP3 ADD PUSH1 0xF SSTORE PUSH2 0x382E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP3 SWAP1 SHL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP7 PUSH2 0x2F98 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH2 0x3092 DUP2 PUSH2 0x382E JUMP JUMPDEST SWAP1 SLOAD DUP6 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x30B7 JUMPI PUSH1 0x1 ADD PUSH2 0x2F89 JUMP JUMPDEST POP POP PUSH1 0x1 DUP9 PUSH2 0x2F91 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 SWAP5 MLOAD DUP11 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP10 KECCAK256 PUSH1 0x1 DUP1 DUP12 MSTORE SWAP2 MSTORE SWAP3 SWAP1 SWAP8 KECCAK256 SWAP12 MLOAD DUP13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 AND OR DUP12 SSTORE SWAP1 MLOAD SWAP1 DUP11 ADD SSTORE MLOAD SWAP3 DUP9 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x3 DUP8 ADD SSTORE MLOAD PUSH2 0x3126 SWAP1 PUSH2 0x2EC1 DUP2 PUSH2 0x3688 JUMP JUMPDEST MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD PUSH1 0x8 DUP3 ADD SSTORE ADD SWAP1 MLOAD PUSH2 0x314A DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x3153 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x2F04 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x31A7 JUMPI JUMPDEST DUP2 PUSH2 0x3191 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x37F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x644 JUMPI PUSH2 0x31A2 SWAP1 PUSH2 0x3B21 JUMP JUMPDEST PUSH2 0x2D3B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE ISZERO PUSH2 0x3213 JUMPI PUSH1 0x5 DUP6 ADD PUSH2 0x320A CALLVALUE DUP3 SLOAD PUSH2 0x3B14 JUMP JUMPDEST SWAP1 SSTORE CALLVALUE SWAP4 PUSH2 0x2D53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4465706F7369742063616E6E6F74206265207A65726F PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C7265616479206465706F736974656420696E746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1D1A1A5CC81C1BDBDB PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F7420616363657074207468697320617373657400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14195C9A5BD9081D1BDBC81CDA1BDC9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F74206163636570742074686973206465706F7369 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x742074797065 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20697320696E616374697665206F7220646F6573206E6F7420657869 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1CDD PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0xF SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3504 JUMPI POP POP POP DUP2 PUSH2 0x34B8 SWAP2 SUB DUP3 PUSH2 0x37F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x34E2 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x34D4 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x34A2 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x353C PUSH2 0x3AA5 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x363C PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xC PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3561 DUP5 PUSH2 0x376C JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3579 DUP2 PUSH2 0x1874 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE DUP3 PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x358E DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP1 DUP3 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD DUP5 AND ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP7 ADD MSTORE SWAP2 ADD SLOAD DUP1 DUP4 AND PUSH2 0x180 DUP6 ADD MSTORE SWAP1 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0xA8 SHR AND PUSH2 0x3622 DUP2 PUSH2 0x3692 JUMP JUMPDEST PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x369C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3653 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3643 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x367C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x3640 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0xB3F JUMPI JUMP JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0xB3F JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH2 0x1C0 DUP1 PUSH2 0x36C0 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x1E0 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1E0 DUP6 ADD SWAP1 PUSH2 0x3663 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x36CF DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF PUSH2 0x180 DUP3 ADD MLOAD AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x1A0 DUP3 ADD MLOAD AND PUSH2 0x1A0 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x3767 DUP4 PUSH2 0x3692 JUMP JUMPDEST ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x117B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 LT ISZERO PUSH2 0x3849 JUMPI PUSH1 0xF PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x117B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3AB JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x3891 DUP3 PUSH2 0x385F JUMP JUMPDEST SWAP3 PUSH2 0x389F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x37F7 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI PUSH2 0x160 DUP2 DUP4 SUB PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3915 DUP4 PUSH2 0x37BF JUMP JUMPDEST DUP2 PUSH1 0x4 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x24 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x4 PUSH2 0x393E SWAP3 DUP6 ADD ADD PUSH2 0x387A JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x64 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x4 PUSH2 0x3978 SWAP3 DUP6 ADD ADD PUSH2 0x387A JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x84 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA4 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC4 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x104 DUP3 ADD CALLDATALOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x124 DUP3 ADD CALLDATALOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x144 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3AB JUMPI PUSH2 0x39DF SWAP3 ADD PUSH1 0x4 ADD PUSH2 0x387A JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3A18 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3A02 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x39F7 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x3A32 DUP4 PUSH2 0x39E8 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3A88 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3A4E JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x3A6E JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x3A5D JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3AB2 DUP3 PUSH2 0x376C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP4 DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xF8B JUMPI JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xF8B JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xF8B JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x3B58 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3849 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x3B91 SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x3A22 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xF8B JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x117B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3BC1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206465706F73697420666F756E6420666F72207468697320616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C17 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4465706F736974206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C5B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F73697420706572696F6420686173206E6F7420656E64656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3CCB JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3CB1 DUP3 PUSH2 0x385F JUMP JUMPDEST SWAP2 PUSH2 0x3CBF PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x37F7 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3CD7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6174697665206173736574207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D23 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x3D78 DUP2 PUSH2 0x3BA3 JUMP JUMPDEST SWAP2 PUSH2 0x3D86 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x37F7 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3DA8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x3DBB DUP2 PUSH2 0x37BF JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3DD2 DUP2 PUSH2 0x1874 DUP2 DUP10 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x3DE7 DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3E00 DUP2 PUSH2 0x1874 DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3E57 DUP2 PUSH2 0x1874 DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3A22 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x3D9A JUMP JUMPDEST ISZERO PUSH2 0x3E72 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x506F6F6C206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3EB3 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520636F76657220636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x3849 JUMPI PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x42C7 JUMPI DUP3 MLOAD DUP2 SSTORE PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x117B JUMPI DUP2 SWAP1 PUSH2 0x3F45 DUP5 SLOAD PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x4274 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x420F JUMPI PUSH1 0x0 SWAP3 PUSH2 0x4204 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x3F94 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x3F8B DUP2 PUSH2 0x3688 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD PUSH2 0x3B4E JUMP JUMPDEST PUSH1 0x3 DUP2 ADD PUSH1 0x60 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x117B JUMPI PUSH2 0x3FB8 DUP4 SLOAD PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x41BC JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x414E JUMPI SWAP2 DUP1 PUSH1 0xA SWAP5 SWAP3 PUSH2 0x140 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x4143 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP6 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP6 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE ADD SWAP3 ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x117B JUMPI PUSH2 0x4055 DUP3 SLOAD PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x40FB JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x4099 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x408E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x4078 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x40E3 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x40CA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x40C0 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x40AB JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x4139 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x412D JUMPI POP PUSH2 0x405E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4120 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x4117 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3FE3 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x41A4 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH2 0x140 SWAP9 SWAP7 PUSH1 0xA SWAP9 SWAP7 LT PUSH2 0x418B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3FF8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x417E JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x4161 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x41FA JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x41EE JUMPI POP PUSH2 0x3FC1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x41E1 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x41D8 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3F65 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x425C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x4243 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3F7A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x4236 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x4220 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x42BD JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x42AE JUMPI POP PUSH2 0x3F4E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x42A1 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x4293 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3AB JUMPI DUP1 MLOAD PUSH2 0x4307 DUP2 PUSH2 0x385F JUMP JUMPDEST SWAP3 PUSH2 0x4315 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x37F7 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x3AB JUMPI PUSH2 0x3B91 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x3640 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x120 SWAP2 SUB SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x434C DUP3 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x4355 DUP2 PUSH2 0x42DD JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x100 SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x43C7 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x43EC JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID BASEFEE PUSH0 SHL 0xB6 MSTORE 0x4C PUSH7 0x3555797E00171A LT RETURN COINBASE PUSH6 0x6E59B02D6B55 PUSH27 0xA38BA7D5D9751A264697066735822122042D79DAE9CF020FC5036 SWAP13 LOG4 SWAP3 0xD4 PUSH15 0x6BDC18406FB1A2C77FDA7E497E9235 PREVRANDAO SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"2917:18701:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;2466:103:3;;:::i;:::-;12797:14:5;2917:18701;;;-1:-1:-1;;;12797:69:5;;2917:18701;12797:69;;2917:18701;;;12855:10;2917:18701;;;;-1:-1:-1;;;;;2917:18701:5;;;;12797:69;2917:18701;;;;12797:69;;;;;;2917:18701;12797:69;2917:18701;12797:69;;;2917:18701;12884:23;;2917:18701;;;12884:27;2917:18701;;;12983:33;2917:18701;;;;;;;;;;12983:33;;;2917:18701;12983:33;;2917:18701;12983:33;;;;;;;2917:18701;12983:33;;;2917:18701;13058:15;2917:18701;13058:15;;;2917:18701;;;;:::i;:::-;;;;:::i;:::-;13087:38;2917:18701;;;13163:11;2917:18701;;;;;-1:-1:-1;;;13156:111:5;;12855:10;2917:18701;13156:111;;2917:18701;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;2917:18701:5;13156:111;;;;;;;2917:18701;13156:111;;;13083:443;13281:41;13536:56;13281:41;;12797:69;13281:41;;:::i;:::-;12797:14;2917:18701;;;-1:-1:-1;;;13536:56:5;;2917:18701;13536:56;;2917:18701;;;;12855:10;2917:18701;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;13536:56;;;;;;;;;;;13083:443;2917:18701;;;;13536:56;;;12797:69;13536:56;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;2917:18701;;;;;;;;;13156:111;;;2917:18701;13156:111;;2917:18701;13156:111;;;;;;2917:18701;13156:111;;;:::i;:::-;;;2917:18701;;;;13536:56;2917:18701;13281:41;2917:18701;12797:69;2917:18701;;:::i;:::-;13156:111;;;;;;2917:18701;;;;13156:111;;;-1:-1:-1;13156:111:5;;13083:443;2917:18701;13536:56;2917:18701;13467:48;2917:18701;;;;12797:69;2917:18701;;12855:10;13372:81;;;;:::i;:::-;;13467:48;:::i;:::-;13083:443;;12983:33;;;;;;;;;;;:::i;:::-;;;2917:18701;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;:::i;:::-;;;;;12983:33;;;2917:18701;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12797:69;2917:18701;;;;;;;;;;;;:::i;:::-;12797:69;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;12983:33;2917:18701;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;12797:69;;;;;;;;;;;;;;:::i;:::-;;;;2917:18701;;;;;;-1:-1:-1;;2917:18701:5;;;;3274:28;2917:18701;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;3213:24;2917:18701;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;2917:18701:5;2627:22:0;;2623:91;;3004:6;2917:18701:5;;-1:-1:-1;;;;;;2917:18701:5;;;;;;;-1:-1:-1;;;;;2917:18701:5;3052:40:0;-1:-1:-1;;3052:40:0;2917:18701:5;2623:91:0;2672:31;;;2917:18701:5;2672:31:0;2917:18701:5;;;;;2672:31:0;2917:18701:5;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;2466:103:3;;:::i;:::-;17185:19:5;2917:18701;;;-1:-1:-1;;;17185:73:5;;2917:18701;17185:73;;2917:18701;;;;;;;17185:73;;2917:18701;;;;-1:-1:-1;;;;;2917:18701:5;17185:73;;;;;;;2917:18701;17185:73;;;2917:18701;17311:22;;;;;17364:15;;;;2917:18701;;;;;;;;17383:27;2917:18701;17364:46;;:67;;;;2917:18701;;;;;17523:20;;;2917:18701;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;17562:10;:32;2917:18701;;17629:44;2917:18701;17185:19;17637:13;;2917:18701;;17629:44;:::i;:::-;2917:18701;17704:8;;2917:18701;;17716:25;17364:15;17716:25;;2917:18701;;;17704:37;;2917:18701;;17853:37;2917:18701;;;;17806:37;:8;;;2917:18701;;;17806:37;:::i;:::-;2917:18701;;;;17853:37;;:::i;:::-;2917:18701;;17937:57;2917:18701;;17937:57;:::i;:::-;18009:10;;18044:3;2917:18701;;18021:21;;;;;18063:14;2917:18701;-1:-1:-1;;;;;2917:18701:5;;18094:13;;;;:::i;:::-;;2917:18701;18063:48;;;;;2917:18701;;17185:73;2917:18701;;;;;;;;;;;;18063:48;;2917:18701;18063:48;;2917:18701;18063:48;;;;;;;;2917:18701;18063:48;;;18044:3;;;2917:18701;18009:10;;18063:48;;;;:::i;:::-;;;;;;2917:18701;;;;;;;;;18021:21;;;;;;;2917:18701;;;;;17185:19;2917:18701;;18132:62;;;;;;2917:18701;;17185:73;2917:18701;;;;;;;;;;;;18132:62;;2917:18701;18132:62;;2917:18701;18132:62;;;;;;;18210:127;18132:62;;2917:18701;18132:62;;;18004:118;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18210:127;2917:18701;;;;;18348:5;2917:18701;;;;18348:51;;;;;2917:18701;;-1:-1:-1;;;18348:51:5;;17562:10;2917:18701;18348:51;;2917:18701;;;;;;;;;;;;;;;;;;18348:51;;;;;;;;18415:63;18348:51;;;18004:118;2917:18701;;;;;;;;;;;;;;;18437:13;;2917:18701;:::i;:::-;;;;;;17562:10;;18415:63;;;;2917:18701;;;;;18348:51;;;;:::i;:::-;;;;;;2917:18701;;;;;;;;;;18348:51;2917:18701;;;18132:62;;;;:::i;:::-;;;;;;2917:18701;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;17185:73;2917:18701;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;17185:73;2917:18701;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;17185:73;2917:18701;;;-1:-1:-1;;;2917:18701:5;;;;;;;17364:67;2917:18701;17414:17;;;2917:18701;;;17364:67;;;2917:18701;;;;;;;;;17185:73;2917:18701;;17185:73;;;;;;;;;;;;:::i;:::-;;;2917:18701;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17185:73;;;;2917:18701;;;;;;-1:-1:-1;;2917:18701:5;;;;6385:9;2917:18701;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2917:18701:5;;;:::i;:::-;;;;;;;;;6410:13;;6422:1;6425:14;;;;;;;2917:18701;;;;;;;;;;;;;;;;;;;;;;;6385:9;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;6422:1;2917:18701;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;6441:3;2917:18701;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6422:1;2917:18701;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6385:9;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6591:13;2917:18701;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;6526:648;;2917:18701;6526:648;2917:18701;;;;:::i;:::-;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;6526:648;;2917:18701;6526:648;2917:18701;;;;:::i;:::-;6526:648;;2917:18701;6526:648;2917:18701;-1:-1:-1;;2917:18701:5;;;;;;;;6510:664;6441:3;6510:664;;;;;;;:::i;:::-;;;;:::i;:::-;;6441:3;:::i;:::-;6410:13;;2917:18701;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;;;1500:62:0;;:::i;:::-;2917:18701:5;;;;;;;5223:23;2917:18701;;;5223:23;2917:18701;;;;;5303:8;;2917:18701;;5345:14;;2917:18701;;5485:38;2917:18701;;;;;;;;;;5397:18;2917:18701;;;5397:18;2917:18701;;;;;;;;;;;;5432:24;2917:18701;;;;;;;;;;5485:38;2917:18701;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;:::i;:::-;;;;;;;21306:13;2917:18701;;21292:10;:27;:57;;;;2917:18701;21271:136;;;:::i;:::-;2917:18701;;7687:12;2917:18701;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;21292:57;-1:-1:-1;21337:12:5;2917:18701;-1:-1:-1;;;;;2917:18701:5;21292:10;21323:26;21292:57;;2917:18701;;;;;;-1:-1:-1;;2917:18701:5;;;;3342:31;2917:18701;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;;;;;;;;;;;3161:46;;;2917:18701;3161:46;;2917:18701;;;;:::i;:::-;;;;;;:::i;:::-;3161:46;;;2917:18701;;;3161:46;;;;2917:18701;3161:46;2917:18701;3161:46;;2917:18701;3161:46;;;;2917:18701;3161:46;;;2917:18701;3161:46;;;2917:18701;3161:46;;;2917:18701;3161:46;;;;2917:18701;;;3161:46;;;;2917:18701;3161:46;;;;2917:18701;3161:46;;;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3161:46;2917:18701;-1:-1:-1;;;;;2917:18701:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;20196:10:5;2917:18701;;-1:-1:-1;;;;;2917:18701:5;;;;-1:-1:-1;;;;;2917:18701:5;;20265:25;;2917:18701;;-1:-1:-1;;;;;;2917:18701:5;;;;;20196:10;2917:18701;20372:39;2917:18701;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;:::i;:::-;;;;;;;21306:13;2917:18701;;21292:10;:27;:57;;;;2917:18701;21271:136;;;:::i;:::-;2917:18701;;;;;5664:62;:37;2917:18701;;;5664:37;2917:18701;;;5664:62;:::i;:::-;2917:18701;;;21292:57;-1:-1:-1;21337:12:5;2917:18701;-1:-1:-1;;;;;2917:18701:5;21292:10;21323:26;21292:57;;2917:18701;;;;;;;:::i;:::-;21306:13;2917:18701;-1:-1:-1;;;;;2917:18701:5;21292:10;:27;:57;;;;2917:18701;21271:136;;;:::i;:::-;2917:18701;7393:3;2917:18701;;;7363:12;2917:18701;;;;;;7359:32;;;;;2917:18701;;;7363:12;2917:18701;;7416:24;2917:18701;;;;7416:24;:::i;:::-;2917:18701;;;;7416:40;7412:135;;2917:18701;;7347:10;;7412:135;7476:24;2917:18701;7476:33;2917:18701;;;7363:12;2917:18701;;;;;7476:24;:::i;21292:57::-;-1:-1:-1;21337:12:5;2917:18701;-1:-1:-1;;;;;2917:18701:5;21292:10;21323:26;21292:57;;2917:18701;;;;;;;:::i;:::-;;;;;;;21306:13;2917:18701;;21292:10;:27;:57;;;;2917:18701;21271:136;;;:::i;:::-;2917:18701;;;;;5869:62;:37;2917:18701;;;5869:37;2917:18701;;;5869:62;:::i;21292:57::-;-1:-1:-1;21337:12:5;2917:18701;-1:-1:-1;;;;;2917:18701:5;21292:10;21323:26;21292:57;;2917:18701;;;;;;-1:-1:-1;;2917:18701:5;;;;;;1500:62:0;;:::i;:::-;2917:18701:5;;;;;;6012:54;2917:18701;6020:23;2917:18701;;;6020:23;2917:18701;;6012:54;:::i;:::-;2917:18701;;;;;;;;;;6020:23;6076;2917:18701;;-1:-1:-1;;2917:18701:5;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;3404:27;2917:18701;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;-1:-1:-1;;;;;2917:18701:5;;:::i;:::-;;;;3573:48;2917:18701;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;;;;;19692:18;2917:18701;;;19692:18;2917:18701;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;:::i;:::-;;;;;;;;;;;2466:103:3;;:::i;:::-;21497:13:5;2917:18701;-1:-1:-1;;;;;2917:18701:5;21483:10;:27;:57;;;;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;11714:18;12151:93;2917:18701;11714:18;;2917:18701;;;11714:22;11706:68;11714:22;;;11706:68;:::i;:::-;2917:18701;;11805:18;;2917:18701;11906:116;11946:22;2917:18701;;;11784:112;2917:18701;;;;;;:::i;:::-;11805:44;11784:112;:::i;:::-;11946:22;2917:18701;11927:15;:41;;11906:116;:::i;:::-;2917:18701;;;;;;12083:38;:16;;;2917:18701;;;12083:38;:::i;:::-;2917:18701;;;12240:3;12184:52;:33;;;;2917:18701;12184:52;:::i;:::-;2917:18701;12151:93;;:::i;:::-;12274:33;2917:18701;12286:21;;;2917:18701;;12274:33;;:::i;:::-;11946:22;12317:21;;2917:18701;12359:22;;;2917:18701;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12477:10;;;;2917:18701;12512:3;2917:18701;;12489:21;;;;;11946:22;2917:18701;-1:-1:-1;;;;;2917:18701:5;;12562:13;;;;:::i;:::-;;2917:18701;12531:48;;;;;2917:18701;;;;;;;;;;;;;;;12531:48;;2917:18701;12531:48;;2917:18701;12531:48;;;;;;;2917:18701;12531:48;;;12512:3;;2917:18701;12477:10;;12531:48;2917:18701;12531:48;;;:::i;:::-;;;;12489:21;;2917:18701;-1:-1:-1;;;;;;;;;;;12489:21:5;12605:62;12489:21;2917:18701;;;12645:21;;;;12605:62;;;:::i;:::-;;;;2917:18701;;;;;12184:33;2917:18701;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12083:16;2917:18701;;;;;;;12359:22;2917:18701;;;;;;;11946:22;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21483:57;-1:-1:-1;21528:12:5;2917:18701;-1:-1:-1;;;;;2917:18701:5;21483:10;21514:26;21483:57;;2917:18701;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;20503:13:5;2917:18701;;-1:-1:-1;;;;;2917:18701:5;;;;-1:-1:-1;;;;;2917:18701:5;;20570:28;;2917:18701;;20641:39;2917:18701;;-1:-1:-1;;;;;;2917:18701:5;;;;;;;;;;20503:13;2917:18701;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;1500:62:0;;:::i;:::-;3004:6;2917:18701:5;;-1:-1:-1;;;;;;2917:18701:5;;;;;;;-1:-1:-1;;;;;2917:18701:5;3052:40:0;2917:18701:5;;3052:40:0;2917:18701:5;;;;;;;-1:-1:-1;;2917:18701:5;;;;3308:28;2917:18701;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;20812:13:5;2917:18701;;-1:-1:-1;;;;;2917:18701:5;;;;-1:-1:-1;;;;;2917:18701:5;;20879:28;;2917:18701;;20950:39;2917:18701;;-1:-1:-1;;;;;;2917:18701:5;;;;;;;;;;20812:13;2917:18701;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;1500:62:0;;:::i;:::-;2917:18701:5;;;;;:::i;:::-;;;;:::i;:::-;4266:46;:76;;;;;2917:18701;;;;;4402:14;2917:18701;;;;;;;;;4402:14;2917:18701;;;;;;;;;;;;;;;;4543:15;;2917:18701;4524:16;;2917:18701;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4767:34;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4568:11;;2917:18701;;;4602:17;;2917:18701;;4402:14;4648:11;;2917:18701;;4673:16;;;2917:18701;;4703:17;;;2917:18701;4734:16;;;2917:18701;;;;;;;;;;;;;:::i;:::-;;4767:16;;:34;:::i;:::-;2917:18701;4811:28;;;;;2917:18701;;;4872:16;;;;2917:18701;;;;;;;;;;;;5031:43;4916:30;;2917:18701;4916:30;;2917:18701;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;;2917:18701:5;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;5058:15;;2917:18701;;;;;;;;;;;;;;;;:::i;:::-;5031:43;;;2917:18701;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4767:34;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4402:14;2917:18701;;;;;;;;;;;;4402:14;2917:18701;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;4266:76;2917:18701;-1:-1:-1;;;;;2917:18701:5;4316:26;;;-1:-1:-1;4266:76:5;;;2917:18701;;;;;;-1:-1:-1;;2917:18701:5;;;;3243:25;2917:18701;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18665:8;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;18665:8;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;18770:47;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;18770:47:5;;-1:-1:-1;;;;;2917:18701:5;;;;18770:47;;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;18770:47;;;;;;;;;;2917:18701;18770:47;;;2917:18701;-1:-1:-1;18859:14:5;;;2917:18701;19264:39;19217:9;19186:27;2917:18701;;18855:138;19024:15;2917:18701;;19024:15;;19053:36;19049:103;;18855:138;19186:27;;:::i;:::-;2917:18701;;;19264:39;:::i;:::-;2917:18701;;;;19024:15;19317:41;;19024:15;;2917:18701;;;;;;19313:255;2917:18701;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;19313:255;19448:40;19024:15;;19448:40;;:::i;:::-;2917:18701;19537:6;2917:18701;;;;;;;;;;;;;;;19537:6;2917:18701;;;;;19313:255;;19049:103;19105:36;;19049:103;;;18855:138;19217:9;19186:27;19264:39;18957:25;18855:138;;18770:47;;2917:18701;18770:47;;2917:18701;18770:47;;;;;;2917:18701;18770:47;;;:::i;:::-;;;2917:18701;;;;;;18770:47;;;;;;-1:-1:-1;18770:47:5;;2917:18701;;;;;;-1:-1:-1;;2917:18701:5;;;;;;2466:103:3;;:::i;:::-;2917:18701:5;;;;;;;;;9903:10;;2917:18701;;9894:8;2917:18701;;;;;;;;;;;;;;;;;;;;;9993:18;10436:93;2917:18701;9993:18;;2917:18701;;;9993:22;9985:68;9993:22;;;9985:68;:::i;:::-;9894:8;2917:18701;10084:18;;2917:18701;10185:116;10225:22;2917:18701;;;10063:112;2917:18701;;;;;;:::i;10185:116::-;2917:18701;;;;;;10368:38;:16;;;2917:18701;;;10368:38;:::i;:::-;2917:18701;;;10525:3;10469:52;:33;;;;2917:18701;10469:52;:::i;10436:93::-;10571:21;;;;2917:18701;10559:33;2917:18701;;;;10559:33;;:::i;:::-;10225:22;10602:21;;2917:18701;10644:22;;;2917:18701;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10762:10;;;;2917:18701;10797:3;2917:18701;;10774:21;;;;;10225:22;2917:18701;-1:-1:-1;;;;;2917:18701:5;;10847:13;;;;:::i;:::-;;2917:18701;10816:48;;;;;2917:18701;;10816:48;2917:18701;;;;;;;;;;;;10816:48;;2917:18701;10816:48;;2917:18701;10816:48;;;;;;;2917:18701;10816:48;;;10797:3;;2917:18701;10762:10;;10816:48;2917:18701;10816:48;;;:::i;:::-;;;;10774:21;;;2917:18701;;;;;;;;;;:::i;:::-;10889:57;2917:18701;;;;;;;-1:-1:-1;;;10977:113:5;;9903:10;2917:18701;10977:113;;2917:18701;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;10977:113;;;;;;;;;2917:18701;10977:113;;;10885:429;11104:41;-1:-1:-1;;;;;;;;;;;11104:41:5;;11329:63;11104:41;;:::i;:::-;2917:18701;;;9903:10;;;2917:18701;9903:10;11370:21;;11329:63;;;:::i;10977:113::-;;;2917:18701;10977:113;;2917:18701;10977:113;;;;;;2917:18701;10977:113;;;:::i;:::-;;;2917:18701;;;;-1:-1:-1;;;;;;;;;;;2917:18701:5;11104:41;2917:18701;11329:63;2917:18701;;:::i;:::-;10977:113;;;;;;;;;-1:-1:-1;10977:113:5;;10885:429;2917:18701;11329:63;2917:18701;11255:48;2917:18701;;;;-1:-1:-1;;;;;;;;;;;2917:18701:5;;9903:10;11195:46;;;;:::i;11255:48::-;10885:429;;2917:18701;10469:33;2917:18701;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;9894:8;2917:18701;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10368:16;2917:18701;;;;;;;10644:22;2917:18701;;;;;;;10225:22;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;3538:29;2917:18701;3538:29;;;;;;2917:18701;3538:29;;:::i;:::-;2917:18701;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;3379:19;2917:18701;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;:::i;:::-;8065:9;2917:18701;;;8045:13;-1:-1:-1;;;;;2917:18701:5;;8057:1;8060:14;;;;;;;2917:18701;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;8662:14:5;2917:18701;-1:-1:-1;;;;;2917:18701:5;;;;8057:1;8415:14;;;;;;;2917:18701;;;;;;;;;;;;;;;;;;;;;;;8065:9;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;8057:1;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8431:3;2917:18701;;;;;;;;;;;;8116:8;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;8057:1;2917:18701;;;;;;;8116:8;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;8065:9;2917:18701;;;;;;;;;;;;;;;8662:14;2917:18701;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;8662:101:5;;-1:-1:-1;;;;;2917:18701:5;;;8662:101;;2917:18701;;;;;;;;;;;8662:101;;;;;;;;2917:18701;8662:101;;;8431:3;2917:18701;8801:39;2917:18701;;8801:39;:::i;:::-;2917:18701;;;8116:8;2917:18701;;;;;;;;;;;;;;;;;;8057:1;2917:18701;;;8875:61;2917:18701;8854:825;;8431:3;;;;;;:::i;:::-;8400:13;;8854:825;2917:18701;;;;8116:8;2917:18701;;;;;;;;;;;;;;;;;;;;;;;;;;;9142:112;;;2917:18701;8057:1;9291:107;;;2917:18701;9425:8;;;2917:18701;;9466:14;;2917:18701;8065:9;9507:8;;2917:18701;;9542:8;;2917:18701;;9582:13;;2917:18701;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;9063:13;8057:1;9063:13;;;2917:18701;;;;:::i;:::-;;;;;;:::i;:::-;;;9013:651;2917:18701;9013:651;;2917:18701;;9013:651;;2917:18701;;9013:651;;2917:18701;;9013:651;;2917:18701;;9013:651;;2917:18701;;9013:651;;2917:18701;;9013:651;;2917:18701;;;;9013:651;;2917:18701;;9013:651;;2917:18701;8996:13;;;;:::i;:::-;8989:675;;;;;:::i;:::-;;;;;;:::i;:::-;;8854:825;;;;8662:101;;2917:18701;8662:101;;;;;;;;;2917:18701;8662:101;;;:::i;:::-;;;2917:18701;;;;-1:-1:-1;2917:18701:5;8801:39;8662:101;;;;;-1:-1:-1;8662:101:5;;2917:18701;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8076:3;2917:18701;;;;;;8116:8;2917:18701;;;;;;;;;;;;;;;;;;8057:1;2917:18701;;;8116:61;2917:18701;8095:163;;8076:3;;;;:::i;:::-;8045:13;;;;;8095:163;8230:13;;8076:3;8230:13;;:::i;:::-;8095:163;;;;;2917:18701;;;;;;-1:-1:-1;;2917:18701:5;;;;3505:27;2917:18701;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;2466:103:3;;:::i;:::-;2917:18701:5;;;;;;;;;;13827:21;2917:18701;13827:21;;;2917:18701;;;;;13918:22;;;2917:18701;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;13918:42;;2917:18701;;;;;14078:22;;2917:18701;-1:-1:-1;2917:18701:5;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;14173:40;2917:18701;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;14301:108;2917:18701;;;;14492:13;2917:18701;;;:::i;:::-;14520:57;2917:18701;;;;14601:23;2917:18701;;;;;;;;;-1:-1:-1;;;14672:161:5;;-1:-1:-1;;;;;2917:18701:5;;;;14672:161;;2917:18701;14777:4;2917:18701;;;;;;;;;;;;;;;;;;;;;;;14672:161;;;;;;;;14516:575;2917:18701;;;14847:39;:16;;;2917:18701;;;14847:39;:::i;:::-;2917:18701;;;;14516:575;;15244:33;2917:18701;15121:93;:16;;;2917:18701;;15154:52;:33;;;;2917:18701;15154:52;:::i;15121:93::-;2917:18701;;;15244:33;;:::i;:::-;15288:21;;;2917:18701;15330:22;;;2917:18701;15432:3;2917:18701;15398:24;15406:16;;;2917:18701;15398:24;;:::i;:::-;2917:18701;;;;;;;;;;;;;;;;15842:6;2917:18701;;;;;15842:6;2917:18701;;;;;;;15760:15;16343:34;15760:15;;13827:21;15760:15;;15801:48;15760:15;;;;;;;15801:48;:::i;:::-;2917:18701;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;15484:441;;2917:18701;;;;15484:441;;2917:18701;;;;15484:441;;2917:18701;;;;15484:441;;2917:18701;;;;;15484:441;;2917:18701;;;15484:441;2917:18701;15484:441;;15760:15;;2917:18701;;;15484:441;;2917:18701;;;15484:441;;;2917:18701;;;;15484:441;;;2917:18701;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;15940:47;;2917:18701;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;15406:16;2917:18701;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;15121:16;2917:18701;;;;15330:22;2917:18701;;;;15288:21;2917:18701;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;15936:360;2917:18701;16343:34;:::i;:::-;16392:10;;16427:3;2917:18701;;16404:21;;;;;15288;2917:18701;-1:-1:-1;;;;;2917:18701:5;;16477:13;;;;:::i;:::-;;2917:18701;16446:48;;;;;2917:18701;;;;;;;;;;;;;;;16446:48;;2917:18701;16446:48;;2917:18701;16446:48;;;;;;;;2917:18701;16446:48;;;16427:3;;;2917:18701;16392:10;;16446:48;;;;:::i;:::-;;;;;16404:21;-1:-1:-1;16569:12:5;2917:18701;16404:21;;-1:-1:-1;16404:21:5;;;;16565:23;;;;;;16548:191;16753:11;;16749:83;;16548:191;-1:-1:-1;2917:18701:5;;-1:-1:-1;;;;;2917:18701:5;;;16842:13;2917:18701;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;16900:123;2917:18701;;;16900:123;2917:18701;;;;;;;;;;;;;;;;16992:21;;;;16900:123;;;:::i;:::-;;;;2917:18701;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;16749:83;2917:18701;;-1:-1:-1;;;;;2917:18701:5;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;16569:12;2917:18701;;:::i;:::-;;;-1:-1:-1;;;;;15406:16:5;2917:18701;;;;;;;;;;;;;;;;;;16749:83;;;2917:18701;-1:-1:-1;;;2917:18701:5;;;;;;;;16590:3;16613:15;;;:::i;:::-;2917:18701;;;;15406:16;2917:18701;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;16613:41;16609:120;;2917:18701;;16553:10;;16609:120;16674:17;;2917:18701;16709:5;;;15936:360;2917:18701;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;15406:16;2917:18701;;;;;;;;;:::i;:::-;;15121:16;2917:18701;;;;15330:22;2917:18701;;;;15288:21;2917:18701;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;15936:360;;2917:18701;-1:-1:-1;;;2917:18701:5;;;;;;;;14672:161;2917:18701;14672:161;;2917:18701;14672:161;;;;;;2917:18701;14672:161;;;:::i;:::-;;;2917:18701;;;;;;;:::i;:::-;14672:161;;;;;-1:-1:-1;14672:161:5;;2917:18701;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;14516:575;14966:9;;:13;2917:18701;;15020:16;;;:29;14966:9;2917:18701;;15020:29;:::i;:::-;2917:18701;;14966:9;14516:575;;;2917:18701;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;;;;;;19855:13;2917:18701;;;19855:13;2917:18701;;;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;3437:28;2917:18701;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;3471:28;2917:18701;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;19967:12;2917:18701;;;;;;;;19967:12;2917:18701;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;2917:18701:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;2917:18701:5;;;;:::o;:::-;;-1:-1:-1;2917:18701:5;;;:::o;:::-;;-1:-1:-1;2917:18701:5;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;:::o;:::-;16569:12;2917:18701;;;;;;16569:12;-1:-1:-1;2917:18701:5;;-1:-1:-1;2917:18701:5;;;-1:-1:-1;2917:18701:5;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;-1:-1:-1;;2917:18701:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;2917:18701:5;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;-1:-1:-1;;2917:18701:5;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;2917:18701:5;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;-1:-1:-1;;2917:18701:5;;;;;;;:::o;:::-;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;2917:18701:5;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;7734:145;-1:-1:-1;2917:18701:5;7851:12;2917:18701;;;-1:-1:-1;2917:18701:5;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;2917:18701:5;;-1:-1:-1;2917:18701:5;-1:-1:-1;2917:18701:5;;;;;;;7844:28;;;;7734:145;:::o;2917:18701::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;7851:12;2917:18701;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;-1:-1:-1;2917:18701:5;;;;;-1:-1:-1;2917:18701:5;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;2917:18701:5;;;;;;;;;;;-1:-1:-1;2917:18701:5;;-1:-1:-1;2917:18701:5;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;-1:-1:-1;2917:18701:5;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;-1:-1:-1;2917:18701:5;;;;;-1:-1:-1;2917:18701:5;;;;;;;-1:-1:-1;;;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:18701:5;;;;-1:-1:-1;2917:18701:5;;;;;;;-1:-1:-1;2917:18701:5;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:18701:5;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2575:307:3:-;1899:1;2702:7;2917:18701:5;2702:18:3;2698:86;;1899:1;2702:7;2917:18701:5;2575:307:3:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;1796:162:0;2917:18701:5;;-1:-1:-1;;;;;2917:18701:5;735:10:2;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:2;1901:40:0;2917:18701:5;;-1:-1:-1;1901:40:0"},"methodIdentifiers":{"ICoverContract()":"f6e80558","IGovernanceContract()":"b5d90c28","IVaultContract()":"6f60537d","addPoolCover(uint256,(uint256,string,uint8,string,uint256,uint256,uint256,uint256,uint256,uint256,string))":"c7aa9874","bqBTC()":"34808ec3","bqBTCAddress()":"996b8a6f","claimProposalFunds(uint256)":"e35f8129","coverContract()":"248a75b7","createPool((uint256,uint8,string,uint256,uint256,uint8,uint256,uint8,address))":"5cfab35c","deactivatePool(uint256)":"9abd9b05","deposit((address,uint256,uint256,uint256,uint8,uint8,address))":"2607b539","getAllParticipants()":"195ec9ee","getAllPools()":"d88ff1f4","getPool(uint256)":"068bcd8d","getPoolCovers(uint256)":"7eb111f0","getPoolTVL(uint256)":"8f244630","getPoolsByAddress(address)":"31866763","getUserDeposit(uint256,address)":"4e055244","getUserParticipation(address)":"46f84795","governance()":"5aa6e675","increasePercentageSplit(uint256,uint256)":"9fd36b15","initialOwner()":"29ba7bb2","owner()":"8da5cb5b","participants(uint256)":"35c1d349","participation(address)":"96f3a8ad","poolActive(uint256)":"25f11e8d","poolCount()":"f525cb68","poolWithdraw(uint256)":"3dc66ad3","pools(uint256)":"ac4afa38","reducePercentageSplit(uint256,uint256)":"a4948d85","renounceOwnership()":"715018a6","setCover(address)":"7c366cc6","setGovernance(address)":"ab033ea9","setVault(address)":"6817031b","transferOwnership(address)":"f2fde38b","updatePool(uint256,uint256,uint256)":"d86c0444","updatePoolCovers(uint256,(uint256,string,uint8,string,uint256,uint256,uint256,uint256,uint256,uint256,string))":"a14764d0","vaultContract()":"2274346b","vaultWithdraw(uint256)":"fb839dda","withdrawUpdate(address,uint256,uint8)":"83bc6357"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ClaimAttempt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pool\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pool\",\"type\":\"string\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minPeriod\",\"type\":\"uint256\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pool\",\"type\":\"string\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ICoverContract\",\"outputs\":[{\"internalType\":\"contract ICover\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IGovernanceContract\",\"outputs\":[{\"internalType\":\"contract IGov\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IVaultContract\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover\",\"name\":\"_cover\",\"type\":\"tuple\"}],\"name\":\"addPoolCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bqBTC\",\"outputs\":[{\"internalType\":\"contract IbqBTC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bqBTCAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"claimProposalFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"investmentArm\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"adt\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct CoverLib.PoolParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"deactivatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.DepositType\",\"name\":\"pdt\",\"type\":\"uint8\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"adt\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct CoverLib.DepositParams\",\"name\":\"depositParam\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllParticipants\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct CoverLib.Pool[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct CoverLib.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPoolCovers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPoolTVL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getPoolsByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"}],\"internalType\":\"struct CoverLib.PoolInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"daysLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.DepositType\",\"name\":\"pdt\",\"type\":\"uint8\"}],\"internalType\":\"struct CoverLib.Deposits\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserParticipation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__poolPercentageSplit\",\"type\":\"uint256\"}],\"name\":\"increasePercentageSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"participation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"poolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"poolWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__poolPercentageSplit\",\"type\":\"uint256\"}],\"name\":\"reducePercentageSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coverContract\",\"type\":\"address\"}],\"name\":\"setCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultContract\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPeriod\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover\",\"name\":\"_cover\",\"type\":\"tuple\"}],\"name\":\"updatePoolCovers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"}],\"name\":\"vaultWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.DepositType\",\"name\":\"pdt\",\"type\":\"uint8\"}],\"name\":\"withdrawUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsurancePool.sol\":\"InsurancePool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x5138397d8fe6477ca504eacf0b9a9f9273319a1927872d4b67a4cce9d4a1dc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5669416dad2b358d3309144ad62ae8e9d58cadc62c7101e01929c7a8e3d1bd39\",\"dweb:/ipfs/QmXK6Dy6Drr4SnDGBjL8VzKp8t41WagTcnTuavf1q58FpG\"]},\"contracts/InsurancePool.sol\":{\"keccak256\":\"0xaa1f66b39e2ee7d62bcda4d8027d5eb41109e554632f5482a7b2727c703f4985\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e69d205d0a2b28ad0b794ea634bd1c8ac351aafdeaefa50999ca645565e0a12\",\"dweb:/ipfs/QmbKF5NMDqVr1mcJAdPakdgqFcDbw6W6VJWgEe3UXXtT6W\"]}},\"version\":1}"}}}}}