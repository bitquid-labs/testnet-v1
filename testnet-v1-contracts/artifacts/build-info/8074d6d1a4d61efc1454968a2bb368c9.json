{"id":"8074d6d1a4d61efc1454968a2bb368c9","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/CoverLib.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.28;\r\n\r\nlibrary CoverLib {\r\n    struct DepositParams {\r\n        address depositor;\r\n        uint256 poolId;\r\n        uint256 amount;\r\n        uint256 period;\r\n        CoverLib.DepositType pdt;\r\n        CoverLib.AssetDepositType adt;\r\n        address asset;\r\n    }\r\n\r\n    struct Cover {\r\n        uint256 id;\r\n        string coverName;\r\n        RiskType riskType;\r\n        string chains;\r\n        uint256 capacity;\r\n        uint256 cost;\r\n        uint256 capacityAmount;\r\n        uint256 coverValues;\r\n        uint256 maxAmount;\r\n        uint256 poolId;\r\n        string CID;\r\n    }\r\n\r\n    struct GenericCoverInfo {\r\n        address user;\r\n        uint256 coverId;\r\n        RiskType riskType;\r\n        string coverName;\r\n        uint256 coverValue; // This is the value of the cover purchased\r\n        uint256 claimPaid;\r\n        uint256 coverPeriod; // This is the period the cover is purchased for in days\r\n        uint256 endDay; // When the cover expires\r\n        bool isActive;\r\n    }\r\n\r\n    enum RiskType {\r\n        Low,\r\n        Medium,\r\n        High\r\n    }\r\n\r\n    struct GenericCover {\r\n        RiskType riskType;\r\n        bytes coverData;\r\n    }\r\n\r\n    enum AssetDepositType {\r\n        Native,\r\n        ERC20\r\n    }\r\n\r\n    enum DepositType {\r\n        Normal,\r\n        Vault\r\n    }\r\n\r\n    struct Pool {\r\n        uint256 id;\r\n        string poolName;\r\n        CoverLib.RiskType riskType;\r\n        uint256 apy;\r\n        uint256 minPeriod;\r\n        uint256 tvl;\r\n        uint256 baseValue;\r\n        uint256 coverTvl;\r\n        uint256 tcp;\r\n        bool isActive;\r\n        uint256 percentageSplitBalance;\r\n        uint256 investmentArmPercent;\r\n        uint8 leverage;\r\n        address asset;\r\n        CoverLib.AssetDepositType assetType;\r\n    }\r\n\r\n    struct PoolParams {\r\n        uint256 poolId;\r\n        CoverLib.RiskType riskType;\r\n        string poolName;\r\n        uint256 apy;\r\n        uint256 minPeriod;\r\n        uint8 leverage;\r\n        uint256 investmentArm;\r\n        CoverLib.AssetDepositType adt;\r\n        address asset;\r\n    }\r\n\r\n    struct Deposits {\r\n        address lp;\r\n        uint256 amount;\r\n        uint256 poolId;\r\n        uint256 dailyPayout;\r\n        CoverLib.Status status;\r\n        uint256 daysLeft;\r\n        uint256 startDate;\r\n        uint256 expiryDate;\r\n        uint256 accruedPayout;\r\n        CoverLib.DepositType pdt; // Vault deposit or normal pool deposit?\r\n    }\r\n\r\n    struct PoolInfo {\r\n        string poolName;\r\n        uint256 poolId;\r\n        uint256 dailyPayout;\r\n        uint256 depositAmount;\r\n        uint256 apy;\r\n        uint256 minPeriod;\r\n        uint256 tvl;\r\n        uint256 tcp; // Total claim paid to users\r\n        bool isActive; // Pool status to handle soft deletion\r\n        uint256 accruedPayout;\r\n    }\r\n\r\n    enum Status {\r\n        Active,\r\n        Due,\r\n        Withdrawn\r\n    }\r\n}"},"contracts/InsuranceCover.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"./CoverLib.sol\";\r\n\r\ninterface IbqBTC {\r\n    function bqMint(address account, uint256 amount) external;\r\n    function burn(address account, uint256 amount) external;\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\ninterface ILP {\r\n    struct Deposits {\r\n        address lp;\r\n        uint256 amount;\r\n        uint256 poolId;\r\n        uint256 dailyPayout;\r\n        Status status;\r\n        uint256 daysLeft;\r\n        uint256 startDate;\r\n        uint256 expiryDate;\r\n        uint256 accruedPayout;\r\n    }\r\n\r\n    struct Pool {\r\n        uint256 id;\r\n        string poolName;\r\n        CoverLib.RiskType riskType;\r\n        uint256 apy;\r\n        uint256 minPeriod;\r\n        uint256 tvl;\r\n        uint256 baseValue;\r\n        uint256 coverTvl;\r\n        uint256 tcp;\r\n        bool isActive;\r\n        uint256 percentageSplitBalance;\r\n        uint256 investmentArmPercent;\r\n        uint8 leverage;\r\n        address asset;\r\n        AssetDepositType assetType;\r\n    }\r\n\r\n    enum Status {\r\n        Active,\r\n        Expired\r\n    }\r\n\r\n    enum AssetDepositType {\r\n        Native,\r\n        ERC20\r\n    }\r\n\r\n    function getUserDeposit(\r\n        uint256 _poolId,\r\n        address _user\r\n    ) external view returns (Deposits memory);\r\n\r\n    function getVaultDeposits(\r\n        uint256 vaultId,\r\n        address user\r\n    ) external view returns (Deposits[] memory);\r\n\r\n    function getPool(\r\n        uint256 _poolId\r\n    )\r\n        external\r\n        view\r\n        returns (CoverLib.Pool memory);\r\n\r\n    function reducePercentageSplit(\r\n        uint256 _poolId,\r\n        uint256 __poolPercentageSplit\r\n    ) external;\r\n    function increasePercentageSplit(\r\n        uint256 _poolId,\r\n        uint256 __poolPercentageSplit\r\n    ) external;\r\n    function addPoolCover(\r\n        uint256 _poolId,\r\n        CoverLib.Cover memory _cover\r\n    ) external;\r\n    function updatePoolCovers(\r\n        uint256 _poolId,\r\n        CoverLib.Cover memory _cover\r\n    ) external;\r\n    function getPoolCovers(\r\n        uint256 _poolId\r\n    ) external view returns (CoverLib.Cover[] memory);\r\n}\r\n\r\ncontract InsuranceCover is ReentrancyGuard, Ownable {\r\n    using CoverLib for *;\r\n    using Math for uint256;\r\n\r\n    error LpNotActive();\r\n    error InsufficientPoolBalance();\r\n    error NoClaimableReward();\r\n    error InvalidCoverDuration();\r\n    error CoverNotAvailable();\r\n    error UserHaveAlreadyPurchasedCover();\r\n    error NameAlreadyExists();\r\n    error InvalidAmount();\r\n    error UnsupportedCoverType();\r\n    error WrongPool();\r\n\r\n    uint public coverFeeBalance;\r\n    ILP public lpContract;\r\n    IbqBTC public bqBTC;\r\n    address public bqBTCAddress;\r\n    address public lpAddress;\r\n    address public governance;\r\n    address[] public participants;\r\n    mapping(address => uint256) public participation;\r\n\r\n    mapping(uint256 => bool) public coverExists;\r\n    mapping(address => mapping(uint256 => uint256)) public NextLpClaimTime;\r\n    mapping(address => mapping(uint256 => uint256)) public LastVaultClaimTime;\r\n\r\n    mapping(address => mapping(uint256 => CoverLib.GenericCoverInfo))\r\n        public userCovers;\r\n    mapping(uint256 => CoverLib.Cover) public covers;\r\n\r\n    uint256 public coverCount;\r\n    uint256[] public coverIds;\r\n\r\n    event CoverCreated(\r\n        uint256 indexed coverId,\r\n        string name,\r\n        CoverLib.RiskType riskType\r\n    );\r\n    event CoverPurchased(\r\n        address indexed user,\r\n        uint256 coverValue,\r\n        uint256 coverFee,\r\n        CoverLib.RiskType riskType\r\n    );\r\n    event PayoutClaimed(\r\n        address indexed user,\r\n        uint256 indexed poolId,\r\n        uint256 amount\r\n    );\r\n    event CoverUpdated(\r\n        uint256 indexed coverId,\r\n        string coverName,\r\n        CoverLib.RiskType riskType\r\n    );\r\n\r\n    constructor(\r\n        address _lpContract,\r\n        address _initialOwner,\r\n        address _bqBTC\r\n    ) Ownable(_initialOwner) {\r\n        lpContract = ILP(_lpContract);\r\n        lpAddress = _lpContract;\r\n        bqBTC = IbqBTC(_bqBTC);\r\n        bqBTCAddress = _bqBTC;\r\n    }\r\n\r\n    function createCover(\r\n        uint256 coverId,\r\n        string memory _cid,\r\n        CoverLib.RiskType _riskType,\r\n        string memory _coverName,\r\n        string memory _chains,\r\n        uint256 _capacity,\r\n        uint256 _cost,\r\n        uint256 _poolId\r\n    ) public onlyOwner {\r\n        uint256 _maxAmount = _validateAndGetPoolInfo(\r\n            _coverName,\r\n            _poolId,\r\n            _riskType,\r\n            _capacity\r\n        );\r\n\r\n        lpContract.reducePercentageSplit(_poolId, _capacity);\r\n\r\n        coverCount++;\r\n        CoverLib.Cover memory cover = CoverLib.Cover({\r\n            id: coverId,\r\n            coverName: _coverName,\r\n            riskType: _riskType,\r\n            chains: _chains,\r\n            capacity: _capacity,\r\n            cost: _cost,\r\n            capacityAmount: _maxAmount,\r\n            coverValues: 0,\r\n            maxAmount: _maxAmount,\r\n            poolId: _poolId,\r\n            CID: _cid\r\n        });\r\n        covers[coverId] = cover;\r\n        coverIds.push(coverId);\r\n        lpContract.addPoolCover(_poolId, cover);\r\n        coverExists[coverId] = true;\r\n\r\n        emit CoverCreated(coverId, _coverName, _riskType);\r\n    }\r\n\r\n    function _validateAndGetPoolInfo(\r\n        string memory _coverName,\r\n        uint256 poolId,\r\n        CoverLib.RiskType riskType,\r\n        uint256 capacity\r\n    ) internal view returns (uint256) {\r\n        CoverLib.Cover[] memory coversInPool = lpContract.getPoolCovers(poolId);\r\n        for (uint256 i = 0; i < coversInPool.length; i++) {\r\n            if (\r\n                keccak256(abi.encodePacked(coversInPool[i].coverName)) ==\r\n                keccak256(abi.encodePacked(_coverName))\r\n            ) {\r\n                revert NameAlreadyExists();\r\n            }\r\n        }\r\n        CoverLib.Pool memory pool = lpContract.getPool(poolId);\r\n\r\n        if (pool.riskType != riskType || capacity > pool.percentageSplitBalance) {\r\n            revert WrongPool();\r\n        }\r\n\r\n        uint256 maxAmount = (pool.tvl * ((capacity * 1e18) / 100)) / 1e18;\r\n        return (maxAmount);\r\n    }\r\n\r\n    function updateCover(\r\n        uint256 _coverId,\r\n        string memory _coverName,\r\n        CoverLib.RiskType _riskType,\r\n        string memory _cid,\r\n        string memory _chains,\r\n        uint256 _capacity,\r\n        uint256 _cost,\r\n        uint256 _poolId\r\n    ) public onlyOwner {\r\n        CoverLib.Pool memory pool = lpContract.getPool(_poolId);\r\n\r\n        if (pool.riskType != _riskType || _capacity > pool.percentageSplitBalance) {\r\n            revert WrongPool();\r\n        }\r\n\r\n        CoverLib.Cover storage cover = covers[_coverId];\r\n\r\n        uint256 _maxAmount = (pool.tvl * ((_capacity * 1e18) / 100)) / 1e18;\r\n\r\n        if (cover.coverValues > _maxAmount) {\r\n            revert WrongPool();\r\n        }\r\n\r\n        CoverLib.Cover[] memory coversInPool = lpContract.getPoolCovers(\r\n            _poolId\r\n        );\r\n        for (uint256 i = 0; i < coversInPool.length; i++) {\r\n            if (\r\n                keccak256(abi.encodePacked(coversInPool[i].coverName)) ==\r\n                keccak256(abi.encodePacked(_coverName)) &&\r\n                coversInPool[i].id != _coverId\r\n            ) {\r\n                revert NameAlreadyExists();\r\n            }\r\n        }\r\n\r\n        uint256 oldCoverCapacity = cover.capacity;\r\n\r\n        cover.coverName = _coverName;\r\n        cover.chains = _chains;\r\n        cover.capacity = _capacity;\r\n        cover.cost = _cost;\r\n        cover.CID = _cid;\r\n        cover.capacityAmount = _maxAmount;\r\n        cover.poolId = _poolId;\r\n        cover.maxAmount = _maxAmount - cover.coverValues;\r\n\r\n        if (oldCoverCapacity > _capacity) {\r\n            uint256 difference = oldCoverCapacity - _capacity;\r\n            lpContract.increasePercentageSplit(_poolId, difference);\r\n        } else if (oldCoverCapacity < _capacity) {\r\n            uint256 difference = _capacity - oldCoverCapacity;\r\n            lpContract.reducePercentageSplit(_poolId, difference);\r\n        }\r\n\r\n        lpContract.updatePoolCovers(_poolId, cover);\r\n\r\n        emit CoverUpdated(_coverId, _coverName, _riskType);\r\n    }\r\n\r\n    function purchaseCover(\r\n        uint256 _coverId,\r\n        uint256 _coverValue,\r\n        uint256 _coverPeriod,\r\n        uint256 _coverFee\r\n    ) public nonReentrant {\r\n        if (_coverFee <= 0) {\r\n            revert InvalidAmount();\r\n        }\r\n        if (_coverPeriod <= 27 || _coverPeriod >= 366) {\r\n            revert InvalidCoverDuration();\r\n        }\r\n        if (!coverExists[_coverId]) {\r\n            revert CoverNotAvailable();\r\n        }\r\n\r\n        CoverLib.Cover storage cover = covers[_coverId];\r\n        if (_coverValue > cover.maxAmount) {\r\n            revert InsufficientPoolBalance();\r\n        }\r\n\r\n        uint256 newCoverValues = cover.coverValues + _coverValue;\r\n\r\n        if (newCoverValues > cover.capacityAmount) {\r\n            revert InsufficientPoolBalance();\r\n        }\r\n\r\n        bqBTC.burn(msg.sender, _coverFee);\r\n\r\n        cover.coverValues = newCoverValues;\r\n        cover.maxAmount = cover.capacityAmount - newCoverValues;\r\n\r\n        cover.maxAmount = (cover.capacityAmount - cover.coverValues);\r\n        CoverLib.GenericCoverInfo storage userCover = userCovers[msg.sender][\r\n            _coverId\r\n        ];\r\n\r\n        if (userCover.coverValue == 0) {\r\n            userCovers[msg.sender][_coverId] = CoverLib.GenericCoverInfo({\r\n                user: msg.sender,\r\n                coverId: _coverId,\r\n                riskType: cover.riskType,\r\n                coverName: cover.coverName,\r\n                coverValue: _coverValue,\r\n                claimPaid: 0,\r\n                coverPeriod: _coverPeriod,\r\n                endDay: block.timestamp + (_coverPeriod * 1 days),\r\n                isActive: true\r\n            });\r\n        } else {\r\n            revert UserHaveAlreadyPurchasedCover();\r\n        }\r\n\r\n        bool userExists = false;\r\n        for (uint i = 0; i < participants.length; i++) {\r\n            if (participants[i] == msg.sender) {\r\n                userExists = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!userExists) {\r\n            participants.push(msg.sender);\r\n        }\r\n        participation[msg.sender] += 1;\r\n\r\n        coverFeeBalance += _coverFee;\r\n\r\n        emit CoverPurchased(msg.sender, _coverValue, _coverFee, cover.riskType);\r\n    }\r\n\r\n    function getAllUserCovers(\r\n        address user\r\n    ) external view returns (CoverLib.GenericCoverInfo[] memory) {\r\n        uint256 actualCount = 0;\r\n        for (uint256 i = 0; i < coverIds.length; i++) {\r\n            uint256 id = coverIds[i];\r\n            if (userCovers[user][id].coverValue > 0) {\r\n                actualCount++;\r\n            }\r\n        }\r\n\r\n        CoverLib.GenericCoverInfo[]\r\n            memory userCoverList = new CoverLib.GenericCoverInfo[](actualCount);\r\n\r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < coverIds.length; i++) {\r\n            uint256 id = coverIds[i];\r\n            if (userCovers[user][id].coverValue > 0) {\r\n                userCoverList[index] = userCovers[user][id];\r\n                index++;\r\n            }\r\n        }\r\n\r\n        return userCoverList;\r\n    }\r\n\r\n    function getAllAvailableCovers()\r\n        external\r\n        view\r\n        returns (CoverLib.Cover[] memory)\r\n    {\r\n        uint256 actualCount = 0;\r\n        for (uint256 i = 0; i < coverIds.length; i++) {\r\n            uint256 id = coverIds[i];\r\n            if (coverExists[id]) {\r\n                actualCount++;\r\n            }\r\n        }\r\n\r\n        CoverLib.Cover[] memory availableCovers = new CoverLib.Cover[](\r\n            actualCount\r\n        );\r\n\r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < coverIds.length; i++) {\r\n            uint256 id = coverIds[i];\r\n            if (coverExists[id]) {\r\n                availableCovers[index] = covers[id];\r\n                index++;\r\n            }\r\n        }\r\n\r\n        return availableCovers;\r\n    }\r\n\r\n    function getCoverInfo(\r\n        uint256 _coverId\r\n    ) external view returns (CoverLib.Cover memory) {\r\n        return covers[_coverId];\r\n    }\r\n\r\n    function getUserCoverInfo(\r\n        address user,\r\n        uint256 _coverId\r\n    ) external view returns (CoverLib.GenericCoverInfo memory) {\r\n        return userCovers[user][_coverId];\r\n    }\r\n\r\n    function updateUserCoverValue(\r\n        address user,\r\n        uint256 _coverId,\r\n        uint256 _claimPaid\r\n    ) public onlyGovernance nonReentrant {\r\n        userCovers[user][_coverId].coverValue -= _claimPaid;\r\n        userCovers[user][_coverId].claimPaid += _claimPaid;\r\n    }\r\n\r\n    function deleteExpiredUserCovers(address _user) external nonReentrant {\r\n        for (uint256 i = 1; i < coverIds.length; i++) {\r\n            uint256 id = coverIds[i];\r\n            CoverLib.GenericCoverInfo storage userCover = userCovers[_user][id];\r\n            if (userCover.isActive && block.timestamp > userCover.endDay) {\r\n                userCover.isActive = false;\r\n                delete userCovers[_user][id];\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCoverFeeBalance() external view returns (uint256) {\r\n        return coverFeeBalance;\r\n    }\r\n\r\n    function updateMaxAmount(uint256 _coverId) public onlyPool nonReentrant {\r\n        CoverLib.Cover storage cover = covers[_coverId];\r\n        CoverLib.Pool memory pool = lpContract.getPool(cover.poolId);\r\n        // require(tvl > 0, \"TVL is zero\");\r\n        require(cover.capacity > 0, \"Invalid cover capacity\");\r\n        uint256 amount = (pool.tvl * ((cover.capacity * 1e18) / 100)) / 1e18;\r\n        covers[_coverId].capacityAmount = amount;\r\n        covers[_coverId].maxAmount = (covers[_coverId].capacityAmount -\r\n            covers[_coverId].coverValues);\r\n    }\r\n\r\n    function claimPayoutForLP(uint256 _poolId) external nonReentrant {\r\n        ILP.Deposits memory depositInfo = lpContract.getUserDeposit(\r\n            _poolId,\r\n            msg.sender\r\n        );\r\n        if (depositInfo.status != ILP.Status.Active) {\r\n            revert LpNotActive();\r\n        }\r\n\r\n        uint256 lastClaimTime;\r\n        if (NextLpClaimTime[msg.sender][_poolId] == 0) {\r\n            lastClaimTime = depositInfo.startDate;\r\n        } else {\r\n            lastClaimTime = NextLpClaimTime[msg.sender][_poolId];\r\n        }\r\n\r\n        uint256 currentTime = block.timestamp;\r\n        if (currentTime > depositInfo.expiryDate) {\r\n            currentTime = depositInfo.expiryDate;\r\n        }\r\n\r\n        // uint256 claimableDays = (currentTime - lastClaimTime) / 1 days;   Uncomment\r\n\r\n        uint256 claimableDays = (currentTime - lastClaimTime) / 5 minutes;\r\n\r\n        if (claimableDays <= 0) {\r\n            revert NoClaimableReward();\r\n        }\r\n        uint256 claimableAmount = depositInfo.dailyPayout * claimableDays;\r\n\r\n        if (claimableAmount > coverFeeBalance) {\r\n            revert InsufficientPoolBalance();\r\n        }\r\n        NextLpClaimTime[msg.sender][_poolId] = block.timestamp;\r\n\r\n        bqBTC.bqMint(msg.sender, claimableAmount);\r\n\r\n        coverFeeBalance -= claimableAmount;\r\n\r\n        emit PayoutClaimed(msg.sender, _poolId, claimableAmount);\r\n    }\r\n\r\n    function clamPayoutForVault(uint256 vaultId) external nonReentrant {\r\n        ILP.Deposits[] memory deposits = lpContract.getVaultDeposits(\r\n            vaultId,\r\n            msg.sender\r\n        );\r\n        uint256 totalClaim;\r\n        uint256 lastClaimTime;\r\n        if (LastVaultClaimTime[msg.sender][vaultId] == 0) {\r\n            lastClaimTime = deposits[0].startDate;\r\n        } else {\r\n            lastClaimTime = LastVaultClaimTime[msg.sender][vaultId];\r\n        }\r\n\r\n        uint256 currentTime = block.timestamp;\r\n        if (currentTime > deposits[0].expiryDate) {\r\n            currentTime = deposits[0].expiryDate;\r\n        }\r\n        uint256 claimableDays = (currentTime - lastClaimTime) / 5 minutes;\r\n\r\n        for (uint256 i = 0; i < deposits.length; i++) {\r\n            ILP.Deposits memory deposit = deposits[i];\r\n            uint256 claimableAmount = deposit.dailyPayout * claimableDays;\r\n            totalClaim += claimableAmount;\r\n        }\r\n\r\n        LastVaultClaimTime[msg.sender][vaultId] = block.timestamp;\r\n        bqBTC.bqMint(msg.sender, totalClaim);\r\n\r\n        coverFeeBalance -= totalClaim;\r\n\r\n        emit PayoutClaimed(msg.sender, vaultId, totalClaim);\r\n    }\r\n\r\n    function getDepositClaimableDays(\r\n        address user,\r\n        uint256 _poolId\r\n    ) public view returns (uint256) {\r\n        ILP.Deposits memory depositInfo = lpContract.getUserDeposit(\r\n            _poolId,\r\n            user\r\n        );\r\n\r\n        uint256 lastClaimTime;\r\n        if (NextLpClaimTime[user][_poolId] == 0) {\r\n            lastClaimTime = depositInfo.startDate;\r\n        } else {\r\n            lastClaimTime = NextLpClaimTime[user][_poolId];\r\n        }\r\n        uint256 currentTime = block.timestamp;\r\n        if (currentTime > depositInfo.expiryDate) {\r\n            currentTime = depositInfo.expiryDate;\r\n        }\r\n        uint256 claimableDays = (currentTime - lastClaimTime) / 5 minutes;\r\n\r\n        return claimableDays;\r\n    }\r\n\r\n    function getLastClaimTime(\r\n        address user,\r\n        uint256 _poolId\r\n    ) public view returns (uint256) {\r\n        return NextLpClaimTime[user][_poolId];\r\n    }\r\n\r\n    function getAllParticipants() public view returns (address[] memory) {\r\n        return participants;\r\n    }\r\n\r\n    function getUserParticipation(address user) public view returns (uint256) {\r\n        return participation[user];\r\n    }\r\n\r\n    modifier onlyGovernance() {\r\n        require(msg.sender == governance, \"Not authorized\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyPool() {\r\n        require(msg.sender == lpAddress, \"Not authorized\");\r\n        _;\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[255],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":256,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,255],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[225]},"id":226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"132:71:1","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":225,"linearizedBaseContracts":[225],"name":"IERC20","nameLocation":"214:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"227:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":159,"name":"Transfer","nameLocation":"396:8:1","nodeType":"EventDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:1","nodeType":"VariableDeclaration","scope":159,"src":"405:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:1","nodeType":"VariableDeclaration","scope":159,"src":"427:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:1","nodeType":"VariableDeclaration","scope":159,"src":"447:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:1"},"src":"390:72:1"},{"anonymous":false,"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"468:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":168,"name":"Approval","nameLocation":"627:8:1","nodeType":"EventDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:1","nodeType":"VariableDeclaration","scope":168,"src":"636:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:1","nodeType":"VariableDeclaration","scope":168,"src":"659:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:1","nodeType":"VariableDeclaration","scope":168,"src":"684:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:1"},"src":"621:78:1"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"705:65:1","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":174,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"795:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":174,"src":"821:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:1"},"scope":225,"src":"775:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"836:71:1","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":182,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":182,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":225,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"986:213:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"1230:2:1","nodeType":"VariableDeclaration","scope":192,"src":"1222:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"1242:5:1","nodeType":"VariableDeclaration","scope":192,"src":"1234:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"1267:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:1"},"scope":225,"src":"1204:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1279:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:1","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"owner","nameLocation":"1575:5:1","nodeType":"VariableDeclaration","scope":202,"src":"1567:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1590:7:1","nodeType":"VariableDeclaration","scope":202,"src":"1582:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:1"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"1622:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:1"},"scope":225,"src":"1548:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"1637:667:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":212,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"spender","nameLocation":"2334:7:1","nodeType":"VariableDeclaration","scope":212,"src":"2326:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"value","nameLocation":"2351:5:1","nodeType":"VariableDeclaration","scope":212,"src":"2343:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"2376:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":209,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:1"},"scope":225,"src":"2309:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"2388:297:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"from","nameLocation":"2720:4:1","nodeType":"VariableDeclaration","scope":224,"src":"2712:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"to","nameLocation":"2734:2:1","nodeType":"VariableDeclaration","scope":224,"src":"2726:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"value","nameLocation":"2746:5:1","nodeType":"VariableDeclaration","scope":224,"src":"2738:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2771:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":221,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:1"},"scope":225,"src":"2690:87:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":226,"src":"204:2575:1","usedErrors":[],"usedEvents":[159,168]}],"src":"106:2674:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[255]},"id":256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":227,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"127:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":255,"linearizedBaseContracts":[255],"name":"Context","nameLocation":"642:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":236,"nodeType":"Block","src":"718:34:2","statements":[{"expression":{"expression":{"id":233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:2","memberName":"sender","nodeType":"MemberAccess","src":"735:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":232,"id":235,"nodeType":"Return","src":"728:17:2"}]},"id":237,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:2","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[],"src":"675:2:2"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:2"},"scope":255,"src":"656:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":245,"nodeType":"Block","src":"825:32:2","statements":[{"expression":{"expression":{"id":242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:2","memberName":"data","nodeType":"MemberAccess","src":"842:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":241,"id":244,"nodeType":"Return","src":"835:15:2"}]},"id":246,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"775:2:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":246,"src":"809:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":239,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:2"},"scope":255,"src":"758:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":253,"nodeType":"Block","src":"935:25:2","statements":[{"expression":{"hexValue":"30","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":250,"id":252,"nodeType":"Return","src":"945:8:2"}]},"id":254,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:2","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"892:2:2"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:2"},"scope":255,"src":"863:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":256,"src":"624:338:2","usedErrors":[],"usedEvents":[]}],"src":"101:862:2"},"id":2},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[307]},"id":308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":257,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"125:489:3","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":307,"linearizedBaseContracts":[307],"name":"Panic","nameLocation":"665:5:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"677:36:3","text":"@dev generic / unspecified error"},"id":262,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:3","nodeType":"VariableDeclaration","scope":307,"src":"718:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"764:37:3","text":"@dev used by the assert() builtin"},"id":266,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:3","nodeType":"VariableDeclaration","scope":307,"src":"806:39:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"851:41:3","text":"@dev arithmetic underflow or overflow"},"id":270,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:3","nodeType":"VariableDeclaration","scope":307,"src":"897:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:3","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"950:35:3","text":"@dev division or modulo by zero"},"id":274,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:3","nodeType":"VariableDeclaration","scope":307,"src":"990:49:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"1045:30:3","text":"@dev enum conversion error"},"id":278,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:3","nodeType":"VariableDeclaration","scope":307,"src":"1080:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:3","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"1140:36:3","text":"@dev invalid encoding in storage"},"id":282,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:3","nodeType":"VariableDeclaration","scope":307,"src":"1181:55:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:3","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"1242:24:3","text":"@dev empty array pop"},"id":286,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:3","nodeType":"VariableDeclaration","scope":307,"src":"1271:48:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"1325:35:3","text":"@dev array out of bounds access"},"id":290,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:3","nodeType":"VariableDeclaration","scope":307,"src":"1365:52:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"1423:65:3","text":"@dev resource error (too large allocation or too large array)"},"id":294,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:3","nodeType":"VariableDeclaration","scope":307,"src":"1493:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:3","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"1546:42:3","text":"@dev calling invalid internal function"},"id":298,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:3","nodeType":"VariableDeclaration","scope":307,"src":"1593:58:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:3","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"1819:151:3","statements":[{"AST":{"nativeSrc":"1854:110:3","nodeType":"YulBlock","src":"1854:110:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:3","nodeType":"YulLiteral","src":"1875:4:3","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:3","nodeType":"YulLiteral","src":"1881:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:3","nodeType":"YulIdentifier","src":"1868:6:3"},"nativeSrc":"1868:24:3","nodeType":"YulFunctionCall","src":"1868:24:3"},"nativeSrc":"1868:24:3","nodeType":"YulExpressionStatement","src":"1868:24:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:3","nodeType":"YulLiteral","src":"1912:4:3","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:3","nodeType":"YulIdentifier","src":"1918:4:3"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:3","nodeType":"YulIdentifier","src":"1905:6:3"},"nativeSrc":"1905:18:3","nodeType":"YulFunctionCall","src":"1905:18:3"},"nativeSrc":"1905:18:3","nodeType":"YulExpressionStatement","src":"1905:18:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:3","nodeType":"YulLiteral","src":"1943:4:3","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:3","nodeType":"YulLiteral","src":"1949:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:3","nodeType":"YulIdentifier","src":"1936:6:3"},"nativeSrc":"1936:18:3","nodeType":"YulFunctionCall","src":"1936:18:3"},"nativeSrc":"1936:18:3","nodeType":"YulExpressionStatement","src":"1936:18:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":301,"isOffset":false,"isSlot":false,"src":"1918:4:3","valueSize":1}],"flags":["memory-safe"],"id":304,"nodeType":"InlineAssembly","src":"1829:135:3"}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"1658:113:3","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":306,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:3","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"code","nameLocation":"1799:4:3","nodeType":"VariableDeclaration","scope":306,"src":"1791:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:3"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[],"src":"1819:0:3"},"scope":307,"src":"1776:194:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":308,"src":"657:1315:3","usedErrors":[],"usedEvents":[]}],"src":"99:1874:3"},"id":3},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[376]},"id":377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":309,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"135:894:4","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":376,"linearizedBaseContracts":[376],"name":"ReentrancyGuard","nameLocation":"1048:15:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":313,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:4","nodeType":"VariableDeclaration","scope":376,"src":"1818:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":316,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:4","nodeType":"VariableDeclaration","scope":376,"src":"1864:36:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":318,"mutability":"mutable","name":"_status","nameLocation":"1923:7:4","nodeType":"VariableDeclaration","scope":376,"src":"1907:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"1937:52:4","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":321,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:4","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"2028:2:4"},"src":"1994:37:4"},{"body":{"id":328,"nodeType":"Block","src":"2051:38:4","statements":[{"expression":{"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":324,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2061:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":325,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"2071:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":327,"nodeType":"ExpressionStatement","src":"2061:21:4"}]},"id":329,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"2048:2:4"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"2051:0:4"},"scope":376,"src":"2037:52:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":339,"nodeType":"Block","src":"2490:79:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":332,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"2500:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":334,"nodeType":"ExpressionStatement","src":"2500:21:4"},{"id":335,"nodeType":"PlaceholderStatement","src":"2531:1:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":336,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"2542:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"ExpressionStatement","src":"2542:20:4"}]},"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"2095:366:4","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":340,"name":"nonReentrant","nameLocation":"2475:12:4","nodeType":"ModifierDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[],"src":"2487:2:4"},"src":"2466:103:4","virtual":false,"visibility":"internal"},{"body":{"id":355,"nodeType":"Block","src":"2614:268:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2702:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":344,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2713:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":350,"nodeType":"IfStatement","src":"2698:86:4","trueBody":{"id":349,"nodeType":"Block","src":"2722:62:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":346,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2743:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":348,"nodeType":"RevertStatement","src":"2736:37:4"}]}},{"expression":{"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":351,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2858:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":352,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2868:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":354,"nodeType":"ExpressionStatement","src":"2858:17:4"}]},"id":356,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:4","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"2603:2:4"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"2614:0:4"},"scope":376,"src":"2575:307:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":363,"nodeType":"Block","src":"2926:170:4","statements":[{"expression":{"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":359,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3068:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":360,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3078:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":362,"nodeType":"ExpressionStatement","src":"3068:21:4"}]},"id":364,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:4","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[],"src":"2915:2:4"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[],"src":"2926:0:4"},"scope":376,"src":"2888:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":374,"nodeType":"Block","src":"3339:42:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":370,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3356:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":371,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"3367:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":369,"id":373,"nodeType":"Return","src":"3349:25:4"}]},"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"3102:168:4","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":375,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:4","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"3307:2:4"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"3333:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":367,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:4"},"scope":376,"src":"3275:106:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":377,"src":"1030:2353:4","usedErrors":[321],"usedEvents":[]}],"src":"109:3275:4"},"id":4},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1982],"Panic":[307],"SafeCast":[3747]},"id":1983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":378,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1983,"sourceUnit":308,"src":"129:35:5","symbolAliases":[{"foreign":{"id":379,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"137:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1983,"sourceUnit":3748,"src":"165:40:5","symbolAliases":[{"foreign":{"id":381,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"173:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"207:73:5","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1982,"linearizedBaseContracts":[1982],"name":"Math","nameLocation":"289:4:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":388,"members":[{"id":384,"name":"Floor","nameLocation":"324:5:5","nodeType":"EnumValue","src":"324:5:5"},{"id":385,"name":"Ceil","nameLocation":"367:4:5","nodeType":"EnumValue","src":"367:4:5"},{"id":386,"name":"Trunc","nameLocation":"409:5:5","nodeType":"EnumValue","src":"409:5:5"},{"id":387,"name":"Expand","nameLocation":"439:6:5","nodeType":"EnumValue","src":"439:6:5"}],"name":"Rounding","nameLocation":"305:8:5","nodeType":"EnumDefinition","src":"300:169:5"},{"body":{"id":419,"nodeType":"Block","src":"677:140:5","statements":[{"id":418,"nodeType":"UncheckedBlock","src":"687:124:5","statements":[{"assignments":[401],"declarations":[{"constant":false,"id":401,"mutability":"mutable","name":"c","nameLocation":"719:1:5","nodeType":"VariableDeclaration","scope":418,"src":"711:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":405,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"723:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"727:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":406,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"746:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"750:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"IfStatement","src":"742:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":399,"id":412,"nodeType":"Return","src":"753:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":415,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"798:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":399,"id":417,"nodeType":"Return","src":"784:16:5"}]}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"475:106:5","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:5","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"a","nameLocation":"610:1:5","nodeType":"VariableDeclaration","scope":420,"src":"602:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"b","nameLocation":"621:1:5","nodeType":"VariableDeclaration","scope":420,"src":"613:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:5"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"success","nameLocation":"652:7:5","nodeType":"VariableDeclaration","scope":420,"src":"647:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"result","nameLocation":"669:6:5","nodeType":"VariableDeclaration","scope":420,"src":"661:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:5"},"scope":1982,"src":"586:231:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":447,"nodeType":"Block","src":"1028:113:5","statements":[{"id":446,"nodeType":"UncheckedBlock","src":"1038:97:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"1066:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1070:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"1062:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":431,"id":438,"nodeType":"Return","src":"1073:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1118:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"1122:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":431,"id":445,"nodeType":"Return","src":"1104:20:5"}]}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"823:109:5","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":448,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:5","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"a","nameLocation":"961:1:5","nodeType":"VariableDeclaration","scope":448,"src":"953:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"b","nameLocation":"972:1:5","nodeType":"VariableDeclaration","scope":448,"src":"964:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:5"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"success","nameLocation":"1003:7:5","nodeType":"VariableDeclaration","scope":448,"src":"998:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":427,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"result","nameLocation":"1020:6:5","nodeType":"VariableDeclaration","scope":448,"src":"1012:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:5"},"scope":1982,"src":"937:204:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":489,"nodeType":"Block","src":"1355:417:5","statements":[{"id":488,"nodeType":"UncheckedBlock","src":"1365:401:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1623:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":467,"nodeType":"IfStatement","src":"1619:28:5","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":459,"id":466,"nodeType":"Return","src":"1631:16:5"}},{"assignments":[469],"declarations":[{"constant":false,"id":469,"mutability":"mutable","name":"c","nameLocation":"1669:1:5","nodeType":"VariableDeclaration","scope":488,"src":"1661:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":473,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1673:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":471,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"1677:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":474,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1696:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":475,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1700:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"1705:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":483,"nodeType":"IfStatement","src":"1692:33:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":459,"id":482,"nodeType":"Return","src":"1708:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":485,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1753:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":459,"id":487,"nodeType":"Return","src":"1739:16:5"}]}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"1147:112:5","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":490,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:5","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"a","nameLocation":"1288:1:5","nodeType":"VariableDeclaration","scope":490,"src":"1280:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"b","nameLocation":"1299:1:5","nodeType":"VariableDeclaration","scope":490,"src":"1291:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:5"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"success","nameLocation":"1330:7:5","nodeType":"VariableDeclaration","scope":490,"src":"1325:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":455,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"result","nameLocation":"1347:6:5","nodeType":"VariableDeclaration","scope":490,"src":"1339:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:5"},"scope":1982,"src":"1264:508:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":517,"nodeType":"Block","src":"1987:114:5","statements":[{"id":516,"nodeType":"UncheckedBlock","src":"1997:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2025:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":509,"nodeType":"IfStatement","src":"2021:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":501,"id":508,"nodeType":"Return","src":"2033:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"2078:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":512,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2082:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":501,"id":515,"nodeType":"Return","src":"2064:20:5"}]}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"1778:113:5","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":518,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:5","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"a","nameLocation":"1920:1:5","nodeType":"VariableDeclaration","scope":518,"src":"1912:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"b","nameLocation":"1931:1:5","nodeType":"VariableDeclaration","scope":518,"src":"1923:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:5"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"success","nameLocation":"1962:7:5","nodeType":"VariableDeclaration","scope":518,"src":"1957:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":500,"mutability":"mutable","name":"result","nameLocation":"1979:6:5","nodeType":"VariableDeclaration","scope":518,"src":"1971:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:5"},"scope":1982,"src":"1896:205:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":545,"nodeType":"Block","src":"2326:114:5","statements":[{"id":544,"nodeType":"UncheckedBlock","src":"2336:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":530,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2364:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":537,"nodeType":"IfStatement","src":"2360:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":529,"id":536,"nodeType":"Return","src":"2372:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2417:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2421:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":529,"id":543,"nodeType":"Return","src":"2403:20:5"}]}]},"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"2107:123:5","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":546,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:5","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"a","nameLocation":"2259:1:5","nodeType":"VariableDeclaration","scope":546,"src":"2251:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"b","nameLocation":"2270:1:5","nodeType":"VariableDeclaration","scope":546,"src":"2262:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:5"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"success","nameLocation":"2301:7:5","nodeType":"VariableDeclaration","scope":546,"src":"2296:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":525,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"result","nameLocation":"2318:6:5","nodeType":"VariableDeclaration","scope":546,"src":"2310:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:5"},"scope":1982,"src":"2235:205:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":572,"nodeType":"Block","src":"2912:207:5","statements":[{"id":571,"nodeType":"UncheckedBlock","src":"2922:191:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"3060:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"3066:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":560,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"3070:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":565,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"3091:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":563,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"3075:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"3075:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":557,"id":570,"nodeType":"Return","src":"3053:49:5"}]}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"2446:374:5","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":573,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:5","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"condition","nameLocation":"2847:9:5","nodeType":"VariableDeclaration","scope":573,"src":"2842:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":548,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"a","nameLocation":"2866:1:5","nodeType":"VariableDeclaration","scope":573,"src":"2858:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"b","nameLocation":"2877:1:5","nodeType":"VariableDeclaration","scope":573,"src":"2869:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:5"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":573,"src":"2903:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:5"},"scope":1982,"src":"2825:294:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":591,"nodeType":"Block","src":"3256:44:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":584,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"3281:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":585,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3285:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"3288:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3291:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":583,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3273:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":582,"id":590,"nodeType":"Return","src":"3266:27:5"}]},"documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"3125:59:5","text":" @dev Returns the largest of two numbers."},"id":592,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:5","nodeType":"FunctionDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"a","nameLocation":"3210:1:5","nodeType":"VariableDeclaration","scope":592,"src":"3202:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"b","nameLocation":"3221:1:5","nodeType":"VariableDeclaration","scope":592,"src":"3213:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:5"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":592,"src":"3247:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:5"},"scope":1982,"src":"3189:111:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":610,"nodeType":"Block","src":"3438:44:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3463:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":604,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3467:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":606,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3470:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":607,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3473:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":602,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3455:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":601,"id":609,"nodeType":"Return","src":"3448:27:5"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"3306:60:5","text":" @dev Returns the smallest of two numbers."},"id":611,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:5","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"a","nameLocation":"3392:1:5","nodeType":"VariableDeclaration","scope":611,"src":"3384:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"b","nameLocation":"3403:1:5","nodeType":"VariableDeclaration","scope":611,"src":"3395:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:5"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":611,"src":"3429:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:5"},"scope":1982,"src":"3371:111:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":633,"nodeType":"Block","src":"3666:82:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"3721:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"3725:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":625,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"3731:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":626,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"3735:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":620,"id":632,"nodeType":"Return","src":"3713:28:5"}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"3488:102:5","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:5","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"a","nameLocation":"3620:1:5","nodeType":"VariableDeclaration","scope":634,"src":"3612:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"b","nameLocation":"3631:1:5","nodeType":"VariableDeclaration","scope":634,"src":"3623:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:5"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":634,"src":"3657:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:5"},"scope":1982,"src":"3595:153:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"4040:633:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":644,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4054:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":655,"nodeType":"IfStatement","src":"4050:150:5","trueBody":{"id":654,"nodeType":"Block","src":"4062:138:5","statements":[{"expression":{"arguments":[{"expression":{"id":650,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4166:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":274,"src":"4166:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":647,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4154:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":306,"src":"4154:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"4154:35:5"}]}},{"id":673,"nodeType":"UncheckedBlock","src":"4583:84:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4630:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":656,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"4614:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"4614:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4641:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":666,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4650:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":643,"id":672,"nodeType":"Return","src":"4607:49:5"}]}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"3754:210:5","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:5","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"a","nameLocation":"3994:1:5","nodeType":"VariableDeclaration","scope":675,"src":"3986:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"b","nameLocation":"4005:1:5","nodeType":"VariableDeclaration","scope":675,"src":"3997:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:5"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"4031:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:5"},"scope":1982,"src":"3969:704:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":811,"nodeType":"Block","src":"5094:4128:5","statements":[{"id":810,"nodeType":"UncheckedBlock","src":"5104:4112:5","statements":[{"assignments":[688],"declarations":[{"constant":false,"id":688,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:5","nodeType":"VariableDeclaration","scope":810,"src":"5433:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":692,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":689,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"5449:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":690,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5453:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:5"},{"assignments":[694],"declarations":[{"constant":false,"id":694,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:5","nodeType":"VariableDeclaration","scope":810,"src":"5513:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":695,"nodeType":"VariableDeclarationStatement","src":"5513:13:5"},{"AST":{"nativeSrc":"5593:122:5","nodeType":"YulBlock","src":"5593:122:5","statements":[{"nativeSrc":"5611:30:5","nodeType":"YulVariableDeclaration","src":"5611:30:5","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:5","nodeType":"YulIdentifier","src":"5628:1:5"},{"name":"y","nativeSrc":"5631:1:5","nodeType":"YulIdentifier","src":"5631:1:5"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:5","nodeType":"YulLiteral","src":"5638:1:5","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:5","nodeType":"YulIdentifier","src":"5634:3:5"},"nativeSrc":"5634:6:5","nodeType":"YulFunctionCall","src":"5634:6:5"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:5","nodeType":"YulIdentifier","src":"5621:6:5"},"nativeSrc":"5621:20:5","nodeType":"YulFunctionCall","src":"5621:20:5"},"variables":[{"name":"mm","nativeSrc":"5615:2:5","nodeType":"YulTypedName","src":"5615:2:5","type":""}]},{"nativeSrc":"5658:43:5","nodeType":"YulAssignment","src":"5658:43:5","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:5","nodeType":"YulIdentifier","src":"5675:2:5"},{"name":"prod0","nativeSrc":"5679:5:5","nodeType":"YulIdentifier","src":"5679:5:5"}],"functionName":{"name":"sub","nativeSrc":"5671:3:5","nodeType":"YulIdentifier","src":"5671:3:5"},"nativeSrc":"5671:14:5","nodeType":"YulFunctionCall","src":"5671:14:5"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:5","nodeType":"YulIdentifier","src":"5690:2:5"},{"name":"prod0","nativeSrc":"5694:5:5","nodeType":"YulIdentifier","src":"5694:5:5"}],"functionName":{"name":"lt","nativeSrc":"5687:2:5","nodeType":"YulIdentifier","src":"5687:2:5"},"nativeSrc":"5687:13:5","nodeType":"YulFunctionCall","src":"5687:13:5"}],"functionName":{"name":"sub","nativeSrc":"5667:3:5","nodeType":"YulIdentifier","src":"5667:3:5"},"nativeSrc":"5667:34:5","nodeType":"YulFunctionCall","src":"5667:34:5"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:5","nodeType":"YulIdentifier","src":"5658:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":688,"isOffset":false,"isSlot":false,"src":"5679:5:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"5694:5:5","valueSize":1},{"declaration":694,"isOffset":false,"isSlot":false,"src":"5658:5:5","valueSize":1},{"declaration":678,"isOffset":false,"isSlot":false,"src":"5628:1:5","valueSize":1},{"declaration":680,"isOffset":false,"isSlot":false,"src":"5631:1:5","valueSize":1}],"id":696,"nodeType":"InlineAssembly","src":"5584:131:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":697,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"5796:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":705,"nodeType":"IfStatement","src":"5792:368:5","trueBody":{"id":704,"nodeType":"Block","src":"5808:352:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":700,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"6126:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":701,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6134:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":686,"id":703,"nodeType":"Return","src":"6119:26:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":706,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6270:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":707,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"6285:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":724,"nodeType":"IfStatement","src":"6266:143:5","trueBody":{"id":723,"nodeType":"Block","src":"6292:117:5","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":713,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6330:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":716,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6348:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":274,"src":"6348:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":718,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6372:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:5","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":270,"src":"6372:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":712,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6322:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":709,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6310:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":306,"src":"6310:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"6310:84:5"}]}},{"assignments":[726],"declarations":[{"constant":false,"id":726,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:5","nodeType":"VariableDeclaration","scope":810,"src":"6664:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":727,"nodeType":"VariableDeclarationStatement","src":"6664:17:5"},{"AST":{"nativeSrc":"6704:291:5","nodeType":"YulBlock","src":"6704:291:5","statements":[{"nativeSrc":"6773:38:5","nodeType":"YulAssignment","src":"6773:38:5","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:5","nodeType":"YulIdentifier","src":"6793:1:5"},{"name":"y","nativeSrc":"6796:1:5","nodeType":"YulIdentifier","src":"6796:1:5"},{"name":"denominator","nativeSrc":"6799:11:5","nodeType":"YulIdentifier","src":"6799:11:5"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:5","nodeType":"YulIdentifier","src":"6786:6:5"},"nativeSrc":"6786:25:5","nodeType":"YulFunctionCall","src":"6786:25:5"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:5","nodeType":"YulIdentifier","src":"6773:9:5"}]},{"nativeSrc":"6893:41:5","nodeType":"YulAssignment","src":"6893:41:5","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:5","nodeType":"YulIdentifier","src":"6906:5:5"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:5","nodeType":"YulIdentifier","src":"6916:9:5"},{"name":"prod0","nativeSrc":"6927:5:5","nodeType":"YulIdentifier","src":"6927:5:5"}],"functionName":{"name":"gt","nativeSrc":"6913:2:5","nodeType":"YulIdentifier","src":"6913:2:5"},"nativeSrc":"6913:20:5","nodeType":"YulFunctionCall","src":"6913:20:5"}],"functionName":{"name":"sub","nativeSrc":"6902:3:5","nodeType":"YulIdentifier","src":"6902:3:5"},"nativeSrc":"6902:32:5","nodeType":"YulFunctionCall","src":"6902:32:5"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:5","nodeType":"YulIdentifier","src":"6893:5:5"}]},{"nativeSrc":"6951:30:5","nodeType":"YulAssignment","src":"6951:30:5","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:5","nodeType":"YulIdentifier","src":"6964:5:5"},{"name":"remainder","nativeSrc":"6971:9:5","nodeType":"YulIdentifier","src":"6971:9:5"}],"functionName":{"name":"sub","nativeSrc":"6960:3:5","nodeType":"YulIdentifier","src":"6960:3:5"},"nativeSrc":"6960:21:5","nodeType":"YulFunctionCall","src":"6960:21:5"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:5","nodeType":"YulIdentifier","src":"6951:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":682,"isOffset":false,"isSlot":false,"src":"6799:11:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"6927:5:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"6951:5:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"6964:5:5","valueSize":1},{"declaration":694,"isOffset":false,"isSlot":false,"src":"6893:5:5","valueSize":1},{"declaration":694,"isOffset":false,"isSlot":false,"src":"6906:5:5","valueSize":1},{"declaration":726,"isOffset":false,"isSlot":false,"src":"6773:9:5","valueSize":1},{"declaration":726,"isOffset":false,"isSlot":false,"src":"6916:9:5","valueSize":1},{"declaration":726,"isOffset":false,"isSlot":false,"src":"6971:9:5","valueSize":1},{"declaration":678,"isOffset":false,"isSlot":false,"src":"6793:1:5","valueSize":1},{"declaration":680,"isOffset":false,"isSlot":false,"src":"6796:1:5","valueSize":1}],"id":728,"nodeType":"InlineAssembly","src":"6695:300:5"},{"assignments":[730],"declarations":[{"constant":false,"id":730,"mutability":"mutable","name":"twos","nameLocation":"7207:4:5","nodeType":"VariableDeclaration","scope":810,"src":"7199:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":737,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7214:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":733,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7233:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:5"},{"AST":{"nativeSrc":"7268:366:5","nodeType":"YulBlock","src":"7268:366:5","statements":[{"nativeSrc":"7333:37:5","nodeType":"YulAssignment","src":"7333:37:5","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:5","nodeType":"YulIdentifier","src":"7352:11:5"},{"name":"twos","nativeSrc":"7365:4:5","nodeType":"YulIdentifier","src":"7365:4:5"}],"functionName":{"name":"div","nativeSrc":"7348:3:5","nodeType":"YulIdentifier","src":"7348:3:5"},"nativeSrc":"7348:22:5","nodeType":"YulFunctionCall","src":"7348:22:5"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:5","nodeType":"YulIdentifier","src":"7333:11:5"}]},{"nativeSrc":"7437:25:5","nodeType":"YulAssignment","src":"7437:25:5","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:5","nodeType":"YulIdentifier","src":"7450:5:5"},{"name":"twos","nativeSrc":"7457:4:5","nodeType":"YulIdentifier","src":"7457:4:5"}],"functionName":{"name":"div","nativeSrc":"7446:3:5","nodeType":"YulIdentifier","src":"7446:3:5"},"nativeSrc":"7446:16:5","nodeType":"YulFunctionCall","src":"7446:16:5"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:5","nodeType":"YulIdentifier","src":"7437:5:5"}]},{"nativeSrc":"7581:39:5","nodeType":"YulAssignment","src":"7581:39:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:5","nodeType":"YulLiteral","src":"7601:1:5","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:5","nodeType":"YulIdentifier","src":"7604:4:5"}],"functionName":{"name":"sub","nativeSrc":"7597:3:5","nodeType":"YulIdentifier","src":"7597:3:5"},"nativeSrc":"7597:12:5","nodeType":"YulFunctionCall","src":"7597:12:5"},{"name":"twos","nativeSrc":"7611:4:5","nodeType":"YulIdentifier","src":"7611:4:5"}],"functionName":{"name":"div","nativeSrc":"7593:3:5","nodeType":"YulIdentifier","src":"7593:3:5"},"nativeSrc":"7593:23:5","nodeType":"YulFunctionCall","src":"7593:23:5"},{"kind":"number","nativeSrc":"7618:1:5","nodeType":"YulLiteral","src":"7618:1:5","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:5","nodeType":"YulIdentifier","src":"7589:3:5"},"nativeSrc":"7589:31:5","nodeType":"YulFunctionCall","src":"7589:31:5"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:5","nodeType":"YulIdentifier","src":"7581:4:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":682,"isOffset":false,"isSlot":false,"src":"7333:11:5","valueSize":1},{"declaration":682,"isOffset":false,"isSlot":false,"src":"7352:11:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"7437:5:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"7450:5:5","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"7365:4:5","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"7457:4:5","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"7581:4:5","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"7604:4:5","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"7611:4:5","valueSize":1}],"id":738,"nodeType":"InlineAssembly","src":"7259:375:5"},{"expression":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":739,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"7700:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":740,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"7709:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":741,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"7717:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":744,"nodeType":"ExpressionStatement","src":"7700:21:5"},{"assignments":[746],"declarations":[{"constant":false,"id":746,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:5","nodeType":"VariableDeclaration","scope":810,"src":"8056:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":753,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":748,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8079:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:5"},{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":754,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8312:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":756,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8327:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":757,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8341:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"8312:36:5"},{"expression":{"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":762,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8382:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8397:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":765,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8411:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":769,"nodeType":"ExpressionStatement","src":"8382:36:5"},{"expression":{"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":770,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8454:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":772,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8469:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":773,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8483:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":777,"nodeType":"ExpressionStatement","src":"8454:36:5"},{"expression":{"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":778,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8525:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":780,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8540:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":781,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8554:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":785,"nodeType":"ExpressionStatement","src":"8525:36:5"},{"expression":{"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":786,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8598:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8613:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":789,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8627:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":793,"nodeType":"ExpressionStatement","src":"8598:36:5"},{"expression":{"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":794,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8672:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8687:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":797,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8701:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":801,"nodeType":"ExpressionStatement","src":"8672:36:5"},{"expression":{"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"9154:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":803,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"9163:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":804,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":807,"nodeType":"ExpressionStatement","src":"9154:24:5"},{"expression":{"id":808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"9199:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":686,"id":809,"nodeType":"Return","src":"9192:13:5"}]}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"4679:312:5","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:5","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"x","nameLocation":"5020:1:5","nodeType":"VariableDeclaration","scope":812,"src":"5012:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"y","nameLocation":"5031:1:5","nodeType":"VariableDeclaration","scope":812,"src":"5023:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:5","nodeType":"VariableDeclaration","scope":812,"src":"5034:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:5"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"result","nameLocation":"5086:6:5","nodeType":"VariableDeclaration","scope":812,"src":"5078:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:5"},"scope":1982,"src":"4996:4226:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":848,"nodeType":"Block","src":"9461:128:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":828,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"9485:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":829,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"9488:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":830,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9491:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":827,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[812,849],"referencedDeclaration":812,"src":"9478:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":835,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"9539:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":834,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"9522:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$388_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":838,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"9559:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":839,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"9562:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":840,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9565:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":837,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:5","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":832,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"9506:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"9506:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":826,"id":847,"nodeType":"Return","src":"9471:111:5"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"9228:118:5","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:5","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"x","nameLocation":"9375:1:5","nodeType":"VariableDeclaration","scope":849,"src":"9367:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"y","nameLocation":"9386:1:5","nodeType":"VariableDeclaration","scope":849,"src":"9378:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:5","nodeType":"VariableDeclaration","scope":849,"src":"9389:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:5","nodeType":"VariableDeclaration","scope":849,"src":"9410:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":821,"nodeType":"UserDefinedTypeName","pathNode":{"id":820,"name":"Rounding","nameLocations":["9410:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"9410:8:5"},"referencedDeclaration":388,"src":"9410:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:5"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"9452:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:5"},"scope":1982,"src":"9351:238:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"10223:1849:5","statements":[{"id":944,"nodeType":"UncheckedBlock","src":"10233:1833:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10261:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":864,"nodeType":"IfStatement","src":"10257:20:5","trueBody":{"expression":{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":858,"id":863,"nodeType":"Return","src":"10269:8:5"}},{"assignments":[866],"declarations":[{"constant":false,"id":866,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:5","nodeType":"VariableDeclaration","scope":944,"src":"10748:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":870,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10768:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":868,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10772:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:5"},{"assignments":[872],"declarations":[{"constant":false,"id":872,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:5","nodeType":"VariableDeclaration","scope":944,"src":"10787:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":874,"initialValue":{"id":873,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10801:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:5"},{"assignments":[876],"declarations":[{"constant":false,"id":876,"mutability":"mutable","name":"x","nameLocation":"10945:1:5","nodeType":"VariableDeclaration","scope":944,"src":"10938:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":875,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":878,"initialValue":{"hexValue":"30","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:5"},{"assignments":[880],"declarations":[{"constant":false,"id":880,"mutability":"mutable","name":"y","nameLocation":"10971:1:5","nodeType":"VariableDeclaration","scope":944,"src":"10964:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":879,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":882,"initialValue":{"hexValue":"31","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:5"},{"body":{"id":919,"nodeType":"Block","src":"11014:882:5","statements":[{"assignments":[887],"declarations":[{"constant":false,"id":887,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:5","nodeType":"VariableDeclaration","scope":919,"src":"11032:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":891,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"11051:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":889,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11057:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:5"},{"expression":{"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":892,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"11086:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":893,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11091:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":894,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":895,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11191:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"11436:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11442:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":898,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11454:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:5","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"11085:395:5"},{"expression":{"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":904,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"11500:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":905,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"11503:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":906,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":907,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"11585:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"11839:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":909,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"11843:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":912,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11854:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":910,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:5","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:5","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":918,"nodeType":"ExpressionStatement","src":"11499:382:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":883,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"10998:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":920,"nodeType":"WhileStatement","src":"10991:905:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":921,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"11914:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"11910:22:5","trueBody":{"expression":{"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":858,"id":925,"nodeType":"Return","src":"11924:8:5"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":928,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"11983:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":931,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11990:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:5","subExpression":{"id":934,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"12003:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:5","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":940,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"12015:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:5","typeDescriptions":{}}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":927,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"11975:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":858,"id":943,"nodeType":"Return","src":"11968:50:5"}]}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"9595:553:5","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:5","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"a","nameLocation":"10177:1:5","nodeType":"VariableDeclaration","scope":946,"src":"10169:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"n","nameLocation":"10188:1:5","nodeType":"VariableDeclaration","scope":946,"src":"10180:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:5"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"10214:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:5"},"scope":1982,"src":"10153:1919:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"12672:82:5","statements":[{"id":965,"nodeType":"UncheckedBlock","src":"12682:66:5","statements":[{"expression":{"arguments":[{"id":958,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"12725:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":959,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"12728:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":962,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"12735:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":956,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12713:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1982_$","typeString":"type(library Math)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:5","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":1003,"src":"12713:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":955,"id":964,"nodeType":"Return","src":"12706:31:5"}]}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"12078:514:5","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:5","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"a","nameLocation":"12626:1:5","nodeType":"VariableDeclaration","scope":967,"src":"12618:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"p","nameLocation":"12637:1:5","nodeType":"VariableDeclaration","scope":967,"src":"12629:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:5"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"12663:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:5"},"scope":1982,"src":"12597:157:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1002,"nodeType":"Block","src":"13524:174:5","statements":[{"assignments":[980,982],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"success","nameLocation":"13540:7:5","nodeType":"VariableDeclaration","scope":1002,"src":"13535:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":979,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"result","nameLocation":"13557:6:5","nodeType":"VariableDeclaration","scope":1002,"src":"13549:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":988,"initialValue":{"arguments":[{"id":984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"13577:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":985,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"13580:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":986,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"13583:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":983,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1027,1109],"referencedDeclaration":1027,"src":"13567:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:5"},{"condition":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:5","subExpression":{"id":989,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"13600:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":999,"nodeType":"IfStatement","src":"13595:74:5","trueBody":{"id":998,"nodeType":"Block","src":"13609:60:5","statements":[{"expression":{"arguments":[{"expression":{"id":994,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"13635:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":274,"src":"13635:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":991,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"13623:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":306,"src":"13623:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":997,"nodeType":"ExpressionStatement","src":"13623:35:5"}]}},{"expression":{"id":1000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"13685:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":978,"id":1001,"nodeType":"Return","src":"13678:13:5"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"12760:678:5","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":1003,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:5","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"b","nameLocation":"13467:1:5","nodeType":"VariableDeclaration","scope":1003,"src":"13459:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"e","nameLocation":"13478:1:5","nodeType":"VariableDeclaration","scope":1003,"src":"13470:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"m","nameLocation":"13489:1:5","nodeType":"VariableDeclaration","scope":1003,"src":"13481:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:5"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1003,"src":"13515:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:5"},"scope":1982,"src":"13443:255:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"14552:1493:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"14566:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1024,"nodeType":"IfStatement","src":"14562:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1016,"id":1023,"nodeType":"Return","src":"14574:17:5"}},{"AST":{"nativeSrc":"14626:1413:5","nodeType":"YulBlock","src":"14626:1413:5","statements":[{"nativeSrc":"14640:22:5","nodeType":"YulVariableDeclaration","src":"14640:22:5","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:5","nodeType":"YulLiteral","src":"14657:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:5","nodeType":"YulIdentifier","src":"14651:5:5"},"nativeSrc":"14651:11:5","nodeType":"YulFunctionCall","src":"14651:11:5"},"variables":[{"name":"ptr","nativeSrc":"14644:3:5","nodeType":"YulTypedName","src":"14644:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:5","nodeType":"YulIdentifier","src":"15570:3:5"},{"kind":"number","nativeSrc":"15575:4:5","nodeType":"YulLiteral","src":"15575:4:5","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:5","nodeType":"YulIdentifier","src":"15563:6:5"},"nativeSrc":"15563:17:5","nodeType":"YulFunctionCall","src":"15563:17:5"},"nativeSrc":"15563:17:5","nodeType":"YulExpressionStatement","src":"15563:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:5","nodeType":"YulIdentifier","src":"15604:3:5"},{"kind":"number","nativeSrc":"15609:4:5","nodeType":"YulLiteral","src":"15609:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:5","nodeType":"YulIdentifier","src":"15600:3:5"},"nativeSrc":"15600:14:5","nodeType":"YulFunctionCall","src":"15600:14:5"},{"kind":"number","nativeSrc":"15616:4:5","nodeType":"YulLiteral","src":"15616:4:5","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:5","nodeType":"YulIdentifier","src":"15593:6:5"},"nativeSrc":"15593:28:5","nodeType":"YulFunctionCall","src":"15593:28:5"},"nativeSrc":"15593:28:5","nodeType":"YulExpressionStatement","src":"15593:28:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:5","nodeType":"YulIdentifier","src":"15645:3:5"},{"kind":"number","nativeSrc":"15650:4:5","nodeType":"YulLiteral","src":"15650:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:5","nodeType":"YulIdentifier","src":"15641:3:5"},"nativeSrc":"15641:14:5","nodeType":"YulFunctionCall","src":"15641:14:5"},{"kind":"number","nativeSrc":"15657:4:5","nodeType":"YulLiteral","src":"15657:4:5","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:5","nodeType":"YulIdentifier","src":"15634:6:5"},"nativeSrc":"15634:28:5","nodeType":"YulFunctionCall","src":"15634:28:5"},"nativeSrc":"15634:28:5","nodeType":"YulExpressionStatement","src":"15634:28:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:5","nodeType":"YulIdentifier","src":"15686:3:5"},{"kind":"number","nativeSrc":"15691:4:5","nodeType":"YulLiteral","src":"15691:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:5","nodeType":"YulIdentifier","src":"15682:3:5"},"nativeSrc":"15682:14:5","nodeType":"YulFunctionCall","src":"15682:14:5"},{"name":"b","nativeSrc":"15698:1:5","nodeType":"YulIdentifier","src":"15698:1:5"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:5","nodeType":"YulIdentifier","src":"15675:6:5"},"nativeSrc":"15675:25:5","nodeType":"YulFunctionCall","src":"15675:25:5"},"nativeSrc":"15675:25:5","nodeType":"YulExpressionStatement","src":"15675:25:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:5","nodeType":"YulIdentifier","src":"15724:3:5"},{"kind":"number","nativeSrc":"15729:4:5","nodeType":"YulLiteral","src":"15729:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:5","nodeType":"YulIdentifier","src":"15720:3:5"},"nativeSrc":"15720:14:5","nodeType":"YulFunctionCall","src":"15720:14:5"},{"name":"e","nativeSrc":"15736:1:5","nodeType":"YulIdentifier","src":"15736:1:5"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:5","nodeType":"YulIdentifier","src":"15713:6:5"},"nativeSrc":"15713:25:5","nodeType":"YulFunctionCall","src":"15713:25:5"},"nativeSrc":"15713:25:5","nodeType":"YulExpressionStatement","src":"15713:25:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:5","nodeType":"YulIdentifier","src":"15762:3:5"},{"kind":"number","nativeSrc":"15767:4:5","nodeType":"YulLiteral","src":"15767:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:5","nodeType":"YulIdentifier","src":"15758:3:5"},"nativeSrc":"15758:14:5","nodeType":"YulFunctionCall","src":"15758:14:5"},{"name":"m","nativeSrc":"15774:1:5","nodeType":"YulIdentifier","src":"15774:1:5"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:5","nodeType":"YulIdentifier","src":"15751:6:5"},"nativeSrc":"15751:25:5","nodeType":"YulFunctionCall","src":"15751:25:5"},"nativeSrc":"15751:25:5","nodeType":"YulExpressionStatement","src":"15751:25:5"},{"nativeSrc":"15938:57:5","nodeType":"YulAssignment","src":"15938:57:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:5","nodeType":"YulIdentifier","src":"15960:3:5"},"nativeSrc":"15960:5:5","nodeType":"YulFunctionCall","src":"15960:5:5"},{"kind":"number","nativeSrc":"15967:4:5","nodeType":"YulLiteral","src":"15967:4:5","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:5","nodeType":"YulIdentifier","src":"15973:3:5"},{"kind":"number","nativeSrc":"15978:4:5","nodeType":"YulLiteral","src":"15978:4:5","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:5","nodeType":"YulLiteral","src":"15984:4:5","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:5","nodeType":"YulLiteral","src":"15990:4:5","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:5","nodeType":"YulIdentifier","src":"15949:10:5"},"nativeSrc":"15949:46:5","nodeType":"YulFunctionCall","src":"15949:46:5"},"variableNames":[{"name":"success","nativeSrc":"15938:7:5","nodeType":"YulIdentifier","src":"15938:7:5"}]},{"nativeSrc":"16008:21:5","nodeType":"YulAssignment","src":"16008:21:5","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:5","nodeType":"YulLiteral","src":"16024:4:5","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:5","nodeType":"YulIdentifier","src":"16018:5:5"},"nativeSrc":"16018:11:5","nodeType":"YulFunctionCall","src":"16018:11:5"},"variableNames":[{"name":"result","nativeSrc":"16008:6:5","nodeType":"YulIdentifier","src":"16008:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1006,"isOffset":false,"isSlot":false,"src":"15698:1:5","valueSize":1},{"declaration":1008,"isOffset":false,"isSlot":false,"src":"15736:1:5","valueSize":1},{"declaration":1010,"isOffset":false,"isSlot":false,"src":"15774:1:5","valueSize":1},{"declaration":1015,"isOffset":false,"isSlot":false,"src":"16008:6:5","valueSize":1},{"declaration":1013,"isOffset":false,"isSlot":false,"src":"15938:7:5","valueSize":1}],"flags":["memory-safe"],"id":1025,"nodeType":"InlineAssembly","src":"14601:1438:5"}]},"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"13704:738:5","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:5","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"b","nameLocation":"14474:1:5","nodeType":"VariableDeclaration","scope":1027,"src":"14466:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"e","nameLocation":"14485:1:5","nodeType":"VariableDeclaration","scope":1027,"src":"14477:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"m","nameLocation":"14496:1:5","nodeType":"VariableDeclaration","scope":1027,"src":"14488:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:5"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"success","nameLocation":"14527:7:5","nodeType":"VariableDeclaration","scope":1027,"src":"14522:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1012,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"result","nameLocation":"14544:6:5","nodeType":"VariableDeclaration","scope":1027,"src":"14536:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:5"},"scope":1982,"src":"14447:1598:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1062,"nodeType":"Block","src":"16242:179:5","statements":[{"assignments":[1040,1042],"declarations":[{"constant":false,"id":1040,"mutability":"mutable","name":"success","nameLocation":"16258:7:5","nodeType":"VariableDeclaration","scope":1062,"src":"16253:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1039,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"result","nameLocation":"16280:6:5","nodeType":"VariableDeclaration","scope":1062,"src":"16267:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1048,"initialValue":{"arguments":[{"id":1044,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"16300:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1045,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"16303:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1046,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"16306:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1043,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1027,1109],"referencedDeclaration":1109,"src":"16290:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:5"},{"condition":{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:5","subExpression":{"id":1049,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"16323:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1059,"nodeType":"IfStatement","src":"16318:74:5","trueBody":{"id":1058,"nodeType":"Block","src":"16332:60:5","statements":[{"expression":{"arguments":[{"expression":{"id":1054,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"16358:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":274,"src":"16358:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1051,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"16346:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":306,"src":"16346:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"16346:35:5"}]}},{"expression":{"id":1060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"16408:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1038,"id":1061,"nodeType":"Return","src":"16401:13:5"}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"16051:85:5","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1063,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:5","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"b","nameLocation":"16170:1:5","nodeType":"VariableDeclaration","scope":1063,"src":"16157:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1029,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"e","nameLocation":"16186:1:5","nodeType":"VariableDeclaration","scope":1063,"src":"16173:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1031,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"m","nameLocation":"16202:1:5","nodeType":"VariableDeclaration","scope":1063,"src":"16189:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:5"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1063,"src":"16228:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1036,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:5"},"scope":1982,"src":"16141:280:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1108,"nodeType":"Block","src":"16675:771:5","statements":[{"condition":{"arguments":[{"id":1078,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"16700:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1077,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"16689:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1087,"nodeType":"IfStatement","src":"16685:47:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1076,"id":1086,"nodeType":"Return","src":"16704:28:5"}},{"assignments":[1089],"declarations":[{"constant":false,"id":1089,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:5","nodeType":"VariableDeclaration","scope":1108,"src":"16743:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1092,"initialValue":{"expression":{"id":1090,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"16758:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:5","memberName":"length","nodeType":"MemberAccess","src":"16758:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:5"},{"expression":{"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"16848:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"16874:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:5","memberName":"length","nodeType":"MemberAccess","src":"16874:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1098,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"16884:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:5","memberName":"length","nodeType":"MemberAccess","src":"16884:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1100,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"16894:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1101,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"16900:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1102,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"16903:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1103,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"16906:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1094,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1106,"nodeType":"ExpressionStatement","src":"16848:60:5"},{"AST":{"nativeSrc":"16944:496:5","nodeType":"YulBlock","src":"16944:496:5","statements":[{"nativeSrc":"16958:32:5","nodeType":"YulVariableDeclaration","src":"16958:32:5","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:5","nodeType":"YulIdentifier","src":"16977:6:5"},{"kind":"number","nativeSrc":"16985:4:5","nodeType":"YulLiteral","src":"16985:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:5","nodeType":"YulIdentifier","src":"16973:3:5"},"nativeSrc":"16973:17:5","nodeType":"YulFunctionCall","src":"16973:17:5"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:5","nodeType":"YulTypedName","src":"16962:7:5","type":""}]},{"nativeSrc":"17080:73:5","nodeType":"YulAssignment","src":"17080:73:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:5","nodeType":"YulIdentifier","src":"17102:3:5"},"nativeSrc":"17102:5:5","nodeType":"YulFunctionCall","src":"17102:5:5"},{"kind":"number","nativeSrc":"17109:4:5","nodeType":"YulLiteral","src":"17109:4:5","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:5","nodeType":"YulIdentifier","src":"17115:7:5"},{"arguments":[{"name":"result","nativeSrc":"17130:6:5","nodeType":"YulIdentifier","src":"17130:6:5"}],"functionName":{"name":"mload","nativeSrc":"17124:5:5","nodeType":"YulIdentifier","src":"17124:5:5"},"nativeSrc":"17124:13:5","nodeType":"YulFunctionCall","src":"17124:13:5"},{"name":"dataPtr","nativeSrc":"17139:7:5","nodeType":"YulIdentifier","src":"17139:7:5"},{"name":"mLen","nativeSrc":"17148:4:5","nodeType":"YulIdentifier","src":"17148:4:5"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:5","nodeType":"YulIdentifier","src":"17091:10:5"},"nativeSrc":"17091:62:5","nodeType":"YulFunctionCall","src":"17091:62:5"},"variableNames":[{"name":"success","nativeSrc":"17080:7:5","nodeType":"YulIdentifier","src":"17080:7:5"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:5","nodeType":"YulIdentifier","src":"17309:6:5"},{"name":"mLen","nativeSrc":"17317:4:5","nodeType":"YulIdentifier","src":"17317:4:5"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:5","nodeType":"YulIdentifier","src":"17302:6:5"},"nativeSrc":"17302:20:5","nodeType":"YulFunctionCall","src":"17302:20:5"},"nativeSrc":"17302:20:5","nodeType":"YulExpressionStatement","src":"17302:20:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:5","nodeType":"YulLiteral","src":"17405:4:5","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:5","nodeType":"YulIdentifier","src":"17415:7:5"},{"name":"mLen","nativeSrc":"17424:4:5","nodeType":"YulIdentifier","src":"17424:4:5"}],"functionName":{"name":"add","nativeSrc":"17411:3:5","nodeType":"YulIdentifier","src":"17411:3:5"},"nativeSrc":"17411:18:5","nodeType":"YulFunctionCall","src":"17411:18:5"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:5","nodeType":"YulIdentifier","src":"17398:6:5"},"nativeSrc":"17398:32:5","nodeType":"YulFunctionCall","src":"17398:32:5"},"nativeSrc":"17398:32:5","nodeType":"YulExpressionStatement","src":"17398:32:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1089,"isOffset":false,"isSlot":false,"src":"17148:4:5","valueSize":1},{"declaration":1089,"isOffset":false,"isSlot":false,"src":"17317:4:5","valueSize":1},{"declaration":1089,"isOffset":false,"isSlot":false,"src":"17424:4:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"16977:6:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"17130:6:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"17309:6:5","valueSize":1},{"declaration":1073,"isOffset":false,"isSlot":false,"src":"17080:7:5","valueSize":1}],"flags":["memory-safe"],"id":1107,"nodeType":"InlineAssembly","src":"16919:521:5"}]},"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"16427:88:5","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":1109,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:5","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"b","nameLocation":"16561:1:5","nodeType":"VariableDeclaration","scope":1109,"src":"16548:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1065,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"e","nameLocation":"16585:1:5","nodeType":"VariableDeclaration","scope":1109,"src":"16572:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1067,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"m","nameLocation":"16609:1:5","nodeType":"VariableDeclaration","scope":1109,"src":"16596:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1069,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:5"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"success","nameLocation":"16645:7:5","nodeType":"VariableDeclaration","scope":1109,"src":"16640:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1072,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"result","nameLocation":"16667:6:5","nodeType":"VariableDeclaration","scope":1109,"src":"16654:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1074,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:5"},"scope":1982,"src":"16520:926:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1141,"nodeType":"Block","src":"17601:176:5","statements":[{"body":{"id":1137,"nodeType":"Block","src":"17658:92:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1128,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"17676:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1130,"indexExpression":{"id":1129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"17686:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1136,"nodeType":"IfStatement","src":"17672:68:5","trueBody":{"id":1135,"nodeType":"Block","src":"17695:45:5","statements":[{"expression":{"hexValue":"66616c7365","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1116,"id":1134,"nodeType":"Return","src":"17713:12:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"17631:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1122,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"17635:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:5","memberName":"length","nodeType":"MemberAccess","src":"17635:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1138,"initializationExpression":{"assignments":[1118],"declarations":[{"constant":false,"id":1118,"mutability":"mutable","name":"i","nameLocation":"17624:1:5","nodeType":"VariableDeclaration","scope":1138,"src":"17616:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1120,"initialValue":{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:5","subExpression":{"id":1125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"17655:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1127,"nodeType":"ExpressionStatement","src":"17653:3:5"},"nodeType":"ForStatement","src":"17611:139:5"},{"expression":{"hexValue":"74727565","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1116,"id":1140,"nodeType":"Return","src":"17759:11:5"}]},"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"17452:72:5","text":" @dev Returns whether the provided byte array is zero."},"id":1142,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:5","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:5","nodeType":"VariableDeclaration","scope":1142,"src":"17549:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1111,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:5"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1142,"src":"17595:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1114,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:5"},"scope":1982,"src":"17529:248:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1360,"nodeType":"Block","src":"18137:5124:5","statements":[{"id":1359,"nodeType":"UncheckedBlock","src":"18147:5108:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"18241:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1156,"nodeType":"IfStatement","src":"18237:53:5","trueBody":{"id":1155,"nodeType":"Block","src":"18249:41:5","statements":[{"expression":{"id":1153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"18274:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1149,"id":1154,"nodeType":"Return","src":"18267:8:5"}]}},{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"aa","nameLocation":"19225:2:5","nodeType":"VariableDeclaration","scope":1359,"src":"19217:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1160,"initialValue":{"id":1159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"19230:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:5"},{"assignments":[1162],"declarations":[{"constant":false,"id":1162,"mutability":"mutable","name":"xn","nameLocation":"19253:2:5","nodeType":"VariableDeclaration","scope":1359,"src":"19245:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1164,"initialValue":{"hexValue":"31","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1165,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19278:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"nodeType":"IfStatement","src":"19274:92:5","trueBody":{"id":1179,"nodeType":"Block","src":"19296:70:5","statements":[{"expression":{"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1171,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19314:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1174,"nodeType":"ExpressionStatement","src":"19314:10:5"},{"expression":{"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1175,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19342:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1178,"nodeType":"ExpressionStatement","src":"19342:9:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1181,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19383:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"19379:90:5","trueBody":{"id":1195,"nodeType":"Block","src":"19400:69:5","statements":[{"expression":{"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1187,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19418:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1190,"nodeType":"ExpressionStatement","src":"19418:9:5"},{"expression":{"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1191,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19445:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1194,"nodeType":"ExpressionStatement","src":"19445:9:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19486:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1212,"nodeType":"IfStatement","src":"19482:90:5","trueBody":{"id":1211,"nodeType":"Block","src":"19503:69:5","statements":[{"expression":{"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1203,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19521:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1206,"nodeType":"ExpressionStatement","src":"19521:9:5"},{"expression":{"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1207,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19548:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1210,"nodeType":"ExpressionStatement","src":"19548:9:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1213,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19589:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1228,"nodeType":"IfStatement","src":"19585:89:5","trueBody":{"id":1227,"nodeType":"Block","src":"19606:68:5","statements":[{"expression":{"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1219,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19624:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1222,"nodeType":"ExpressionStatement","src":"19624:9:5"},{"expression":{"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1223,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19651:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1226,"nodeType":"ExpressionStatement","src":"19651:8:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1229,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19691:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"19687:87:5","trueBody":{"id":1243,"nodeType":"Block","src":"19707:67:5","statements":[{"expression":{"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1235,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19725:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1238,"nodeType":"ExpressionStatement","src":"19725:8:5"},{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1239,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19751:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1242,"nodeType":"ExpressionStatement","src":"19751:8:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19791:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":1249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1260,"nodeType":"IfStatement","src":"19787:87:5","trueBody":{"id":1259,"nodeType":"Block","src":"19807:67:5","statements":[{"expression":{"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1251,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19825:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1254,"nodeType":"ExpressionStatement","src":"19825:8:5"},{"expression":{"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1255,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19851:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1258,"nodeType":"ExpressionStatement","src":"19851:8:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19891:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":1265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1272,"nodeType":"IfStatement","src":"19887:61:5","trueBody":{"id":1271,"nodeType":"Block","src":"19907:41:5","statements":[{"expression":{"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1267,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19925:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1270,"nodeType":"ExpressionStatement","src":"19925:8:5"}]}},{"expression":{"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1273,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"20368:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1275,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"20378:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1281,"nodeType":"ExpressionStatement","src":"20368:18:5"},{"expression":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1282,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22273:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22279:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22284:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1285,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22288:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ExpressionStatement","src":"22273:23:5"},{"expression":{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1293,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22382:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22388:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22393:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1296,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22397:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"nodeType":"ExpressionStatement","src":"22382:23:5"},{"expression":{"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1304,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22493:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1305,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22499:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22504:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1307,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22508:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ExpressionStatement","src":"22493:23:5"},{"expression":{"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1315,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22602:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1316,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22608:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22613:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1318,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22617:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ExpressionStatement","src":"22602:23:5"},{"expression":{"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1326,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22712:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22718:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22723:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1329,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22727:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1336,"nodeType":"ExpressionStatement","src":"22712:23:5"},{"expression":{"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1337,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22822:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22828:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22833:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1340,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22837:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1347,"nodeType":"ExpressionStatement","src":"22822:23:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1348,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"23211:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"23232:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"23237:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1353,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"23241:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1349,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"23216:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"23216:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1149,"id":1358,"nodeType":"Return","src":"23204:40:5"}]}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"17783:292:5","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:5","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"a","nameLocation":"18102:1:5","nodeType":"VariableDeclaration","scope":1361,"src":"18094:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:5"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"18128:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:5"},"scope":1982,"src":"18080:5181:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1394,"nodeType":"Block","src":"23434:171:5","statements":[{"id":1393,"nodeType":"UncheckedBlock","src":"23444:155:5","statements":[{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"result","nameLocation":"23476:6:5","nodeType":"VariableDeclaration","scope":1393,"src":"23468:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1377,"initialValue":{"arguments":[{"id":1375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"23490:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1361,1395],"referencedDeclaration":1361,"src":"23485:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"23513:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1382,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"23555:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":1381,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"23538:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$388_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"23568:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"23577:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"23586:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1379,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"23522:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"23522:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1371,"id":1392,"nodeType":"Return","src":"23506:82:5"}]}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"23267:86:5","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":1395,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:5","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"a","nameLocation":"23380:1:5","nodeType":"VariableDeclaration","scope":1395,"src":"23372:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:5","nodeType":"VariableDeclaration","scope":1395,"src":"23383:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"Rounding","nameLocations":["23383:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"23383:8:5"},"referencedDeclaration":388,"src":"23383:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:5"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"23425:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:5"},"scope":1982,"src":"23358:247:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"23796:981:5","statements":[{"assignments":[1404],"declarations":[{"constant":false,"id":1404,"mutability":"mutable","name":"result","nameLocation":"23814:6:5","nodeType":"VariableDeclaration","scope":1590,"src":"23806:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1406,"initialValue":{"hexValue":"30","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:5"},{"assignments":[1408],"declarations":[{"constant":false,"id":1408,"mutability":"mutable","name":"exp","nameLocation":"23842:3:5","nodeType":"VariableDeclaration","scope":1590,"src":"23834:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1409,"nodeType":"VariableDeclarationStatement","src":"23834:11:5"},{"id":1587,"nodeType":"UncheckedBlock","src":"23855:893:5","statements":[{"expression":{"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1410,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"23879:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"23907:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1412,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"23891:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"23891:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1425,"nodeType":"ExpressionStatement","src":"23879:51:5"},{"expression":{"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"23944:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1427,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"23954:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1429,"nodeType":"ExpressionStatement","src":"23944:13:5"},{"expression":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1430,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"23971:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1431,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"23981:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1433,"nodeType":"ExpressionStatement","src":"23971:13:5"},{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1434,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"23999:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24026:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1436,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24010:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24010:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1449,"nodeType":"ExpressionStatement","src":"23999:49:5"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24062:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1451,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24072:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ExpressionStatement","src":"24062:13:5"},{"expression":{"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24089:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1455,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24099:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1457,"nodeType":"ExpressionStatement","src":"24089:13:5"},{"expression":{"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1458,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24117:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24144:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1460,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24128:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24128:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ExpressionStatement","src":"24117:49:5"},{"expression":{"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24180:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1475,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24190:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1477,"nodeType":"ExpressionStatement","src":"24180:13:5"},{"expression":{"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24207:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1479,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24217:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1481,"nodeType":"ExpressionStatement","src":"24207:13:5"},{"expression":{"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1482,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24235:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24262:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:5","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1484,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24246:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24246:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1497,"nodeType":"ExpressionStatement","src":"24235:49:5"},{"expression":{"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24298:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1499,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24308:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1501,"nodeType":"ExpressionStatement","src":"24298:13:5"},{"expression":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24325:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1503,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24335:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1505,"nodeType":"ExpressionStatement","src":"24325:13:5"},{"expression":{"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1506,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24353:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24379:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1508,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24363:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24363:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1521,"nodeType":"ExpressionStatement","src":"24353:47:5"},{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24414:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1523,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24424:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1525,"nodeType":"ExpressionStatement","src":"24414:13:5"},{"expression":{"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24441:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1527,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24451:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"nodeType":"ExpressionStatement","src":"24441:13:5"},{"expression":{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1530,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24469:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24495:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":1538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1532,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24479:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24479:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1545,"nodeType":"ExpressionStatement","src":"24469:47:5"},{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24530:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1547,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24540:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1549,"nodeType":"ExpressionStatement","src":"24530:13:5"},{"expression":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24557:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1551,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24567:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1553,"nodeType":"ExpressionStatement","src":"24557:13:5"},{"expression":{"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1554,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24585:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24611:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":1562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1556,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24595:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24595:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1569,"nodeType":"ExpressionStatement","src":"24585:47:5"},{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24646:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1571,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24656:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"24646:13:5"},{"expression":{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24673:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1575,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24683:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1577,"nodeType":"ExpressionStatement","src":"24673:13:5"},{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24701:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24727:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1579,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24711:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24711:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1586,"nodeType":"ExpressionStatement","src":"24701:36:5"}]},{"expression":{"id":1588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24764:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1402,"id":1589,"nodeType":"Return","src":"24757:13:5"}]},"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"23611:119:5","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:5","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"value","nameLocation":"23757:5:5","nodeType":"VariableDeclaration","scope":1591,"src":"23749:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:5"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"23787:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:5"},"scope":1982,"src":"23735:1042:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1624,"nodeType":"Block","src":"25010:175:5","statements":[{"id":1623,"nodeType":"UncheckedBlock","src":"25020:159:5","statements":[{"assignments":[1603],"declarations":[{"constant":false,"id":1603,"mutability":"mutable","name":"result","nameLocation":"25052:6:5","nodeType":"VariableDeclaration","scope":1623,"src":"25044:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1607,"initialValue":{"arguments":[{"id":1605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"25066:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1604,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1591,1625],"referencedDeclaration":1591,"src":"25061:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"25093:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1612,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"25135:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":1611,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"25118:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$388_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"25153:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"25162:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1609,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"25102:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"25102:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1601,"id":1622,"nodeType":"Return","src":"25086:82:5"}]}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"24783:142:5","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1625,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:5","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"value","nameLocation":"24952:5:5","nodeType":"VariableDeclaration","scope":1625,"src":"24944:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:5","nodeType":"VariableDeclaration","scope":1625,"src":"24959:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":1596,"nodeType":"UserDefinedTypeName","pathNode":{"id":1595,"name":"Rounding","nameLocations":["24959:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"24959:8:5"},"referencedDeclaration":388,"src":"24959:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:5"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1625,"src":"25001:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:5"},"scope":1982,"src":"24930:255:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1753,"nodeType":"Block","src":"25378:854:5","statements":[{"assignments":[1634],"declarations":[{"constant":false,"id":1634,"mutability":"mutable","name":"result","nameLocation":"25396:6:5","nodeType":"VariableDeclaration","scope":1753,"src":"25388:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1636,"initialValue":{"hexValue":"30","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:5"},{"id":1750,"nodeType":"UncheckedBlock","src":"25416:787:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25444:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1653,"nodeType":"IfStatement","src":"25440:103:5","trueBody":{"id":1652,"nodeType":"Block","src":"25463:80:5","statements":[{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25481:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1647,"nodeType":"ExpressionStatement","src":"25481:17:5"},{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25516:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ExpressionStatement","src":"25516:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25560:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1670,"nodeType":"IfStatement","src":"25556:103:5","trueBody":{"id":1669,"nodeType":"Block","src":"25579:80:5","statements":[{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25597:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ExpressionStatement","src":"25597:17:5"},{"expression":{"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25632:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1668,"nodeType":"ExpressionStatement","src":"25632:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25676:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"nodeType":"IfStatement","src":"25672:103:5","trueBody":{"id":1686,"nodeType":"Block","src":"25695:80:5","statements":[{"expression":{"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25713:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1681,"nodeType":"ExpressionStatement","src":"25713:17:5"},{"expression":{"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25748:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1685,"nodeType":"ExpressionStatement","src":"25748:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25792:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1704,"nodeType":"IfStatement","src":"25788:100:5","trueBody":{"id":1703,"nodeType":"Block","src":"25810:78:5","statements":[{"expression":{"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25828:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1698,"nodeType":"ExpressionStatement","src":"25828:16:5"},{"expression":{"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25862:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1702,"nodeType":"ExpressionStatement","src":"25862:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25905:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1721,"nodeType":"IfStatement","src":"25901:100:5","trueBody":{"id":1720,"nodeType":"Block","src":"25923:78:5","statements":[{"expression":{"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25941:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1715,"nodeType":"ExpressionStatement","src":"25941:16:5"},{"expression":{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25975:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1719,"nodeType":"ExpressionStatement","src":"25975:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"26018:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1738,"nodeType":"IfStatement","src":"26014:100:5","trueBody":{"id":1737,"nodeType":"Block","src":"26036:78:5","statements":[{"expression":{"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"26054:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1732,"nodeType":"ExpressionStatement","src":"26054:16:5"},{"expression":{"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"26088:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1736,"nodeType":"ExpressionStatement","src":"26088:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"26131:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1749,"nodeType":"IfStatement","src":"26127:66:5","trueBody":{"id":1748,"nodeType":"Block","src":"26149:44:5","statements":[{"expression":{"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"26167:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1747,"nodeType":"ExpressionStatement","src":"26167:11:5"}]}}]},{"expression":{"id":1751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"26219:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1632,"id":1752,"nodeType":"Return","src":"26212:13:5"}]},"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"25191:120:5","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:5","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"value","nameLocation":"25339:5:5","nodeType":"VariableDeclaration","scope":1754,"src":"25331:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:5"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"25369:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:5"},"scope":1982,"src":"25316:916:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1787,"nodeType":"Block","src":"26467:177:5","statements":[{"id":1786,"nodeType":"UncheckedBlock","src":"26477:161:5","statements":[{"assignments":[1766],"declarations":[{"constant":false,"id":1766,"mutability":"mutable","name":"result","nameLocation":"26509:6:5","nodeType":"VariableDeclaration","scope":1786,"src":"26501:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1770,"initialValue":{"arguments":[{"id":1768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"26524:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1767,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1754,1788],"referencedDeclaration":1754,"src":"26518:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"26551:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1775,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"26593:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":1774,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"26576:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$388_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"26612:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"26621:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1772,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"26560:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"26560:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1764,"id":1785,"nodeType":"Return","src":"26544:83:5"}]}]},"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"26238:143:5","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1788,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:5","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"value","nameLocation":"26409:5:5","nodeType":"VariableDeclaration","scope":1788,"src":"26401:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:5","nodeType":"VariableDeclaration","scope":1788,"src":"26416:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":1759,"nodeType":"UserDefinedTypeName","pathNode":{"id":1758,"name":"Rounding","nameLocations":["26416:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"26416:8:5"},"referencedDeclaration":388,"src":"26416:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:5"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"26458:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:5"},"scope":1982,"src":"26386:258:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1924,"nodeType":"Block","src":"26964:674:5","statements":[{"assignments":[1797],"declarations":[{"constant":false,"id":1797,"mutability":"mutable","name":"result","nameLocation":"26982:6:5","nodeType":"VariableDeclaration","scope":1924,"src":"26974:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1799,"initialValue":{"hexValue":"30","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:5"},{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:5","nodeType":"VariableDeclaration","scope":1924,"src":"27002:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1802,"nodeType":"VariableDeclarationStatement","src":"27002:12:5"},{"id":1921,"nodeType":"UncheckedBlock","src":"27024:585:5","statements":[{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1803,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27048:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27071:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1804,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27055:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27055:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"nodeType":"ExpressionStatement","src":"27048:46:5"},{"expression":{"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27108:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1818,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27118:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1822,"nodeType":"ExpressionStatement","src":"27108:20:5"},{"expression":{"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1823,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27142:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27152:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1828,"nodeType":"ExpressionStatement","src":"27142:19:5"},{"expression":{"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1829,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27176:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27199:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1830,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27183:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27183:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1842,"nodeType":"ExpressionStatement","src":"27176:45:5"},{"expression":{"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27235:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1844,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27245:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1848,"nodeType":"ExpressionStatement","src":"27235:19:5"},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27268:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1850,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27278:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1854,"nodeType":"ExpressionStatement","src":"27268:18:5"},{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1855,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27301:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27324:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1856,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27308:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27308:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"27301:45:5"},{"expression":{"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27360:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1870,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27370:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1874,"nodeType":"ExpressionStatement","src":"27360:19:5"},{"expression":{"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27393:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1876,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27403:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1880,"nodeType":"ExpressionStatement","src":"27393:18:5"},{"expression":{"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1881,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27426:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27449:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:5","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1882,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27433:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27433:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1894,"nodeType":"ExpressionStatement","src":"27426:45:5"},{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27485:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1896,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27495:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1900,"nodeType":"ExpressionStatement","src":"27485:19:5"},{"expression":{"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27518:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1902,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27528:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1906,"nodeType":"ExpressionStatement","src":"27518:18:5"},{"expression":{"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27551:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27577:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1908,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27561:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27561:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ExpressionStatement","src":"27551:47:5"}]},{"expression":{"id":1922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27625:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1795,"id":1923,"nodeType":"Return","src":"27618:13:5"}]},"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"26650:246:5","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1925,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:5","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"value","nameLocation":"26925:5:5","nodeType":"VariableDeclaration","scope":1925,"src":"26917:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:5"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1925,"src":"26955:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:5"},"scope":1982,"src":"26901:737:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1961,"nodeType":"Block","src":"27875:184:5","statements":[{"id":1960,"nodeType":"UncheckedBlock","src":"27885:168:5","statements":[{"assignments":[1937],"declarations":[{"constant":false,"id":1937,"mutability":"mutable","name":"result","nameLocation":"27917:6:5","nodeType":"VariableDeclaration","scope":1960,"src":"27909:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1941,"initialValue":{"arguments":[{"id":1939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"27933:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1938,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1925,1962],"referencedDeclaration":1925,"src":"27926:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"27960:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1946,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"28002:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":1945,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"27985:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$388_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"28021:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"28036:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1943,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27969:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27969:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1935,"id":1959,"nodeType":"Return","src":"27953:89:5"}]}]},"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"27644:144:5","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:5","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"value","nameLocation":"27817:5:5","nodeType":"VariableDeclaration","scope":1962,"src":"27809:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:5","nodeType":"VariableDeclaration","scope":1962,"src":"27824:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":1930,"nodeType":"UserDefinedTypeName","pathNode":{"id":1929,"name":"Rounding","nameLocations":["27824:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"27824:8:5"},"referencedDeclaration":388,"src":"27824:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:5"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"27866:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:5"},"scope":1982,"src":"27793:266:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"28257:48:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1973,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"28280:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1971,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:5","typeDescriptions":{}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1970,"id":1979,"nodeType":"Return","src":"28267:31:5"}]},"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"28065:113:5","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:5","nodeType":"FunctionDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:5","nodeType":"VariableDeclaration","scope":1981,"src":"28209:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":1965,"nodeType":"UserDefinedTypeName","pathNode":{"id":1964,"name":"Rounding","nameLocations":["28209:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"28209:8:5"},"referencedDeclaration":388,"src":"28209:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:5"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"28251:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1968,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:5"},"scope":1982,"src":"28183:122:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1983,"src":"281:28026:5","usedErrors":[],"usedEvents":[]}],"src":"103:28205:5"},"id":5},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[3747]},"id":3748,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1984,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"218:550:6","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":3747,"linearizedBaseContracts":[3747],"name":"SafeCast","nameLocation":"777:8:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"792:68:6","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":1992,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:6","nodeType":"ErrorDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"bits","nameLocation":"908:4:6","nodeType":"VariableDeclaration","scope":1992,"src":"902:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1987,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"value","nameLocation":"922:5:6","nodeType":"VariableDeclaration","scope":1992,"src":"914:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:6"},"src":"865:64:6"},{"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"935:75:6","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":1997,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:6","nodeType":"ErrorDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"1056:5:6","nodeType":"VariableDeclaration","scope":1997,"src":"1049:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1994,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:6"},"src":"1015:48:6"},{"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"1069:67:6","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":2004,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:6","nodeType":"ErrorDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"bits","nameLocation":"1183:4:6","nodeType":"VariableDeclaration","scope":2004,"src":"1177:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1999,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"value","nameLocation":"1196:5:6","nodeType":"VariableDeclaration","scope":2004,"src":"1189:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2001,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:6"},"src":"1141:62:6"},{"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"1209:75:6","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2009,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:6","nodeType":"ErrorDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"value","nameLocation":"1331:5:6","nodeType":"VariableDeclaration","scope":2009,"src":"1323:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:6"},"src":"1289:49:6"},{"body":{"id":2036,"nodeType":"Block","src":"1695:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1709:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2019,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2018,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:6","memberName":"max","nodeType":"MemberAccess","src":"1717:17:6","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2030,"nodeType":"IfStatement","src":"1705:105:6","trueBody":{"id":2029,"nodeType":"Block","src":"1736:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:6","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1793:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2024,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"1757:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2028,"nodeType":"RevertStatement","src":"1750:49:6"}]}},{"expression":{"arguments":[{"id":2033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1834:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2031,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:6","typeDescriptions":{}}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2016,"id":2035,"nodeType":"Return","src":"1819:21:6"}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"1344:280:6","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:6","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"value","nameLocation":"1656:5:6","nodeType":"VariableDeclaration","scope":2037,"src":"1648:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:6"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"1686:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2014,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:6","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:6"},"scope":3747,"src":"1629:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2064,"nodeType":"Block","src":"2204:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"2218:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2047,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2046,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:6","memberName":"max","nodeType":"MemberAccess","src":"2226:17:6","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2058,"nodeType":"IfStatement","src":"2214:105:6","trueBody":{"id":2057,"nodeType":"Block","src":"2245:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:6","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"2302:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2052,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"2266:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2056,"nodeType":"RevertStatement","src":"2259:49:6"}]}},{"expression":{"arguments":[{"id":2061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"2343:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2059,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:6","typeDescriptions":{}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2044,"id":2063,"nodeType":"Return","src":"2328:21:6"}]},"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"1853:280:6","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:6","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"value","nameLocation":"2165:5:6","nodeType":"VariableDeclaration","scope":2065,"src":"2157:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:6"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"2195:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2042,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:6","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:6"},"scope":3747,"src":"2138:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"2713:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"2727:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2075,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2074,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:6","memberName":"max","nodeType":"MemberAccess","src":"2735:17:6","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2086,"nodeType":"IfStatement","src":"2723:105:6","trueBody":{"id":2085,"nodeType":"Block","src":"2754:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:6","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"2811:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2080,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"2775:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2084,"nodeType":"RevertStatement","src":"2768:49:6"}]}},{"expression":{"arguments":[{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"2852:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2087,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:6","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2072,"id":2091,"nodeType":"Return","src":"2837:21:6"}]},"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"2362:280:6","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:6","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"value","nameLocation":"2674:5:6","nodeType":"VariableDeclaration","scope":2093,"src":"2666:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:6"},"returnParameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"2704:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2070,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:6","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:6"},"scope":3747,"src":"2647:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2120,"nodeType":"Block","src":"3222:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"3236:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2103,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2102,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:6","memberName":"max","nodeType":"MemberAccess","src":"3244:17:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2114,"nodeType":"IfStatement","src":"3232:105:6","trueBody":{"id":2113,"nodeType":"Block","src":"3263:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:6","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"3320:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2108,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"3284:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2112,"nodeType":"RevertStatement","src":"3277:49:6"}]}},{"expression":{"arguments":[{"id":2117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"3361:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2115,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:6","typeDescriptions":{}}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2100,"id":2119,"nodeType":"Return","src":"3346:21:6"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"2871:280:6","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:6","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"value","nameLocation":"3183:5:6","nodeType":"VariableDeclaration","scope":2121,"src":"3175:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:6"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2121,"src":"3213:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2098,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:6"},"scope":3747,"src":"3156:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2148,"nodeType":"Block","src":"3731:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"3745:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2131,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":2130,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:6","memberName":"max","nodeType":"MemberAccess","src":"3753:17:6","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2142,"nodeType":"IfStatement","src":"3741:105:6","trueBody":{"id":2141,"nodeType":"Block","src":"3772:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:6","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"3829:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2136,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"3793:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2140,"nodeType":"RevertStatement","src":"3786:49:6"}]}},{"expression":{"arguments":[{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"3870:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2143,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:6","typeDescriptions":{}}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":2128,"id":2147,"nodeType":"Return","src":"3855:21:6"}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"3380:280:6","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:6","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"value","nameLocation":"3692:5:6","nodeType":"VariableDeclaration","scope":2149,"src":"3684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:6"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"3722:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2126,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:6","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:6"},"scope":3747,"src":"3665:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"4240:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"4254:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2159,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2158,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:6","memberName":"max","nodeType":"MemberAccess","src":"4262:17:6","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2170,"nodeType":"IfStatement","src":"4250:105:6","trueBody":{"id":2169,"nodeType":"Block","src":"4281:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:6","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"4338:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2164,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"4302:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2168,"nodeType":"RevertStatement","src":"4295:49:6"}]}},{"expression":{"arguments":[{"id":2173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"4379:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2171,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:6","typeDescriptions":{}}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2156,"id":2175,"nodeType":"Return","src":"4364:21:6"}]},"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"3889:280:6","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:6","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"value","nameLocation":"4201:5:6","nodeType":"VariableDeclaration","scope":2177,"src":"4193:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:6"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2177,"src":"4231:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2154,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:6","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:6"},"scope":3747,"src":"4174:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"4749:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4763:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2187,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2186,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:6","memberName":"max","nodeType":"MemberAccess","src":"4771:17:6","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"nodeType":"IfStatement","src":"4759:105:6","trueBody":{"id":2197,"nodeType":"Block","src":"4790:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:6","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4847:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2192,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"4811:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2196,"nodeType":"RevertStatement","src":"4804:49:6"}]}},{"expression":{"arguments":[{"id":2201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4888:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2199,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:6","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2184,"id":2203,"nodeType":"Return","src":"4873:21:6"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"4398:280:6","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:6","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"value","nameLocation":"4710:5:6","nodeType":"VariableDeclaration","scope":2205,"src":"4702:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:6"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2205,"src":"4740:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2182,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:6","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:6"},"scope":3747,"src":"4683:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2232,"nodeType":"Block","src":"5258:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"5272:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2215,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2214,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:6","memberName":"max","nodeType":"MemberAccess","src":"5280:17:6","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2226,"nodeType":"IfStatement","src":"5268:105:6","trueBody":{"id":2225,"nodeType":"Block","src":"5299:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:6","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"5356:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2220,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5320:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2224,"nodeType":"RevertStatement","src":"5313:49:6"}]}},{"expression":{"arguments":[{"id":2229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"5397:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2227,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:6","typeDescriptions":{}}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2212,"id":2231,"nodeType":"Return","src":"5382:21:6"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"4907:280:6","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2233,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:6","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"value","nameLocation":"5219:5:6","nodeType":"VariableDeclaration","scope":2233,"src":"5211:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:6"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2233,"src":"5249:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2210,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:6","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:6"},"scope":3747,"src":"5192:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2260,"nodeType":"Block","src":"5767:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"5781:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2243,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":2242,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:6","memberName":"max","nodeType":"MemberAccess","src":"5789:17:6","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2254,"nodeType":"IfStatement","src":"5777:105:6","trueBody":{"id":2253,"nodeType":"Block","src":"5808:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:6","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"5865:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2248,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5829:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2252,"nodeType":"RevertStatement","src":"5822:49:6"}]}},{"expression":{"arguments":[{"id":2257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"5906:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2255,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:6","typeDescriptions":{}}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":2240,"id":2259,"nodeType":"Return","src":"5891:21:6"}]},"documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"5416:280:6","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":2261,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:6","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"value","nameLocation":"5728:5:6","nodeType":"VariableDeclaration","scope":2261,"src":"5720:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:6"},"returnParameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2261,"src":"5758:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":2238,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:6","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:6"},"scope":3747,"src":"5701:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2288,"nodeType":"Block","src":"6276:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6290:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2271,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":2270,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:6","memberName":"max","nodeType":"MemberAccess","src":"6298:17:6","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2282,"nodeType":"IfStatement","src":"6286:105:6","trueBody":{"id":2281,"nodeType":"Block","src":"6317:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:6","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":2278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2276,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"6338:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2280,"nodeType":"RevertStatement","src":"6331:49:6"}]}},{"expression":{"arguments":[{"id":2285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6415:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2283,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:6","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":2268,"id":2287,"nodeType":"Return","src":"6400:21:6"}]},"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"5925:280:6","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:6","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"value","nameLocation":"6237:5:6","nodeType":"VariableDeclaration","scope":2289,"src":"6229:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:6"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"6267:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":2266,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:6","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:6"},"scope":3747,"src":"6210:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"6785:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6799:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2299,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":2298,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:6","memberName":"max","nodeType":"MemberAccess","src":"6807:17:6","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2310,"nodeType":"IfStatement","src":"6795:105:6","trueBody":{"id":2309,"nodeType":"Block","src":"6826:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:6","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":2306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6883:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2304,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"6847:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2308,"nodeType":"RevertStatement","src":"6840:49:6"}]}},{"expression":{"arguments":[{"id":2313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6924:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2311,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:6","typeDescriptions":{}}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":2296,"id":2315,"nodeType":"Return","src":"6909:21:6"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"6434:280:6","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:6","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"value","nameLocation":"6746:5:6","nodeType":"VariableDeclaration","scope":2317,"src":"6738:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:6"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"6776:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":2294,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:6","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:6"},"scope":3747,"src":"6719:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2344,"nodeType":"Block","src":"7294:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7308:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2327,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":2326,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:6","memberName":"max","nodeType":"MemberAccess","src":"7316:17:6","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2338,"nodeType":"IfStatement","src":"7304:105:6","trueBody":{"id":2337,"nodeType":"Block","src":"7335:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:6","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":2334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7392:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2332,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"7356:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2336,"nodeType":"RevertStatement","src":"7349:49:6"}]}},{"expression":{"arguments":[{"id":2341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7433:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2339,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:6","typeDescriptions":{}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":2324,"id":2343,"nodeType":"Return","src":"7418:21:6"}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"6943:280:6","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":2345,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:6","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"value","nameLocation":"7255:5:6","nodeType":"VariableDeclaration","scope":2345,"src":"7247:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:6"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"7285:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2322,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:6","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:6"},"scope":3747,"src":"7228:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2372,"nodeType":"Block","src":"7803:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7817:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2355,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":2354,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:6","memberName":"max","nodeType":"MemberAccess","src":"7825:17:6","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2366,"nodeType":"IfStatement","src":"7813:105:6","trueBody":{"id":2365,"nodeType":"Block","src":"7844:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:6","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":2362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7901:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2360,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"7865:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2364,"nodeType":"RevertStatement","src":"7858:49:6"}]}},{"expression":{"arguments":[{"id":2369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7942:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2367,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:6","typeDescriptions":{}}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":2352,"id":2371,"nodeType":"Return","src":"7927:21:6"}]},"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"7452:280:6","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:6","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"value","nameLocation":"7764:5:6","nodeType":"VariableDeclaration","scope":2373,"src":"7756:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:6"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2373,"src":"7794:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":2350,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:6","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:6"},"scope":3747,"src":"7737:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2400,"nodeType":"Block","src":"8312:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"8326:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2383,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":2382,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:6","memberName":"max","nodeType":"MemberAccess","src":"8334:17:6","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2394,"nodeType":"IfStatement","src":"8322:105:6","trueBody":{"id":2393,"nodeType":"Block","src":"8353:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:6","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":2390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"8410:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2388,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8374:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2392,"nodeType":"RevertStatement","src":"8367:49:6"}]}},{"expression":{"arguments":[{"id":2397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"8451:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2395,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:6","typeDescriptions":{}}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":2380,"id":2399,"nodeType":"Return","src":"8436:21:6"}]},"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"7961:280:6","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":2401,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:6","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"value","nameLocation":"8273:5:6","nodeType":"VariableDeclaration","scope":2401,"src":"8265:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:6"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2401,"src":"8303:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":2378,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:6","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:6"},"scope":3747,"src":"8246:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"8821:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8835:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2411,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":2410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:6","memberName":"max","nodeType":"MemberAccess","src":"8843:17:6","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2422,"nodeType":"IfStatement","src":"8831:105:6","trueBody":{"id":2421,"nodeType":"Block","src":"8862:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:6","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":2418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8919:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2416,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8883:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2420,"nodeType":"RevertStatement","src":"8876:49:6"}]}},{"expression":{"arguments":[{"id":2425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8960:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2423,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:6","typeDescriptions":{}}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":2408,"id":2427,"nodeType":"Return","src":"8945:21:6"}]},"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"8470:280:6","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:6","nodeType":"FunctionDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"value","nameLocation":"8782:5:6","nodeType":"VariableDeclaration","scope":2429,"src":"8774:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:6"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"8812:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":2406,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:6","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:6"},"scope":3747,"src":"8755:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2456,"nodeType":"Block","src":"9330:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9344:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2439,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":2438,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:6","memberName":"max","nodeType":"MemberAccess","src":"9352:17:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"nodeType":"IfStatement","src":"9340:105:6","trueBody":{"id":2449,"nodeType":"Block","src":"9371:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":2446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9428:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2444,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"9392:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2448,"nodeType":"RevertStatement","src":"9385:49:6"}]}},{"expression":{"arguments":[{"id":2453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9469:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2451,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:6","typeDescriptions":{}}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2436,"id":2455,"nodeType":"Return","src":"9454:21:6"}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"8979:280:6","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:6","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"value","nameLocation":"9291:5:6","nodeType":"VariableDeclaration","scope":2457,"src":"9283:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:6"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2457,"src":"9321:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2434,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:6"},"scope":3747,"src":"9264:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2484,"nodeType":"Block","src":"9839:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"9853:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2467,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":2466,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:6","memberName":"max","nodeType":"MemberAccess","src":"9861:17:6","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2478,"nodeType":"IfStatement","src":"9849:105:6","trueBody":{"id":2477,"nodeType":"Block","src":"9880:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:6","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":2474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"9937:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2472,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"9901:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2476,"nodeType":"RevertStatement","src":"9894:49:6"}]}},{"expression":{"arguments":[{"id":2481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"9978:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2479,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:6","typeDescriptions":{}}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":2464,"id":2483,"nodeType":"Return","src":"9963:21:6"}]},"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"9488:280:6","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":2485,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:6","nodeType":"FunctionDefinition","parameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"value","nameLocation":"9800:5:6","nodeType":"VariableDeclaration","scope":2485,"src":"9792:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:6"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2485,"src":"9830:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":2462,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:6","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:6"},"scope":3747,"src":"9773:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2512,"nodeType":"Block","src":"10348:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"10362:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2495,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":2494,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:6","memberName":"max","nodeType":"MemberAccess","src":"10370:17:6","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2506,"nodeType":"IfStatement","src":"10358:105:6","trueBody":{"id":2505,"nodeType":"Block","src":"10389:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:6","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":2502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"10446:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2500,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"10410:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2504,"nodeType":"RevertStatement","src":"10403:49:6"}]}},{"expression":{"arguments":[{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"10487:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2507,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:6","typeDescriptions":{}}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":2492,"id":2511,"nodeType":"Return","src":"10472:21:6"}]},"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"9997:280:6","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":2513,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:6","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"value","nameLocation":"10309:5:6","nodeType":"VariableDeclaration","scope":2513,"src":"10301:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:6"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2513,"src":"10339:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2490,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:6","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:6"},"scope":3747,"src":"10282:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2540,"nodeType":"Block","src":"10857:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"10871:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":2523,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":2522,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:6","memberName":"max","nodeType":"MemberAccess","src":"10879:17:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"10867:105:6","trueBody":{"id":2533,"nodeType":"Block","src":"10898:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:6","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":2530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"10955:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2528,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"10919:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2532,"nodeType":"RevertStatement","src":"10912:49:6"}]}},{"expression":{"arguments":[{"id":2537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"10996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":2535,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:6","typeDescriptions":{}}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":2520,"id":2539,"nodeType":"Return","src":"10981:21:6"}]},"documentation":{"id":2514,"nodeType":"StructuredDocumentation","src":"10506:280:6","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:6","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"value","nameLocation":"10818:5:6","nodeType":"VariableDeclaration","scope":2541,"src":"10810:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:6"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"10848:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":2518,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:6"},"scope":3747,"src":"10791:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2568,"nodeType":"Block","src":"11360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"11374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2551,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":2550,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:6","memberName":"max","nodeType":"MemberAccess","src":"11382:16:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2562,"nodeType":"IfStatement","src":"11370:103:6","trueBody":{"id":2561,"nodeType":"Block","src":"11400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":2558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"11456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2556,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"11421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2560,"nodeType":"RevertStatement","src":"11414:48:6"}]}},{"expression":{"arguments":[{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"11496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2563,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:6","typeDescriptions":{}}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":2548,"id":2567,"nodeType":"Return","src":"11482:20:6"}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"11015:276:6","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"value","nameLocation":"11322:5:6","nodeType":"VariableDeclaration","scope":2569,"src":"11314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:6"},"returnParameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2569,"src":"11352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2546,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:6"},"scope":3747,"src":"11296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"11860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"11874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":2579,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":2578,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:6","memberName":"max","nodeType":"MemberAccess","src":"11882:16:6","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2590,"nodeType":"IfStatement","src":"11870:103:6","trueBody":{"id":2589,"nodeType":"Block","src":"11900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":2586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"11956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2584,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"11921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2588,"nodeType":"RevertStatement","src":"11914:48:6"}]}},{"expression":{"arguments":[{"id":2593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"11996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":2591,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:6","typeDescriptions":{}}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":2576,"id":2595,"nodeType":"Return","src":"11982:20:6"}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"11515:276:6","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:6","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"value","nameLocation":"11822:5:6","nodeType":"VariableDeclaration","scope":2597,"src":"11814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:6"},"returnParameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"11852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":2574,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:6","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:6"},"scope":3747,"src":"11796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2624,"nodeType":"Block","src":"12360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"12374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":2607,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":2606,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:6","memberName":"max","nodeType":"MemberAccess","src":"12382:16:6","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"nodeType":"IfStatement","src":"12370:103:6","trueBody":{"id":2617,"nodeType":"Block","src":"12400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":2614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"12456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2612,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"12421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2616,"nodeType":"RevertStatement","src":"12414:48:6"}]}},{"expression":{"arguments":[{"id":2621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"12496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":2619,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:6","typeDescriptions":{}}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":2604,"id":2623,"nodeType":"Return","src":"12482:20:6"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"12015:276:6","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"value","nameLocation":"12322:5:6","nodeType":"VariableDeclaration","scope":2625,"src":"12314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:6"},"returnParameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"12352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":2602,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:6","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:6"},"scope":3747,"src":"12296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2652,"nodeType":"Block","src":"12860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"12874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":2635,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":2634,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:6","memberName":"max","nodeType":"MemberAccess","src":"12882:16:6","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2646,"nodeType":"IfStatement","src":"12870:103:6","trueBody":{"id":2645,"nodeType":"Block","src":"12900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":2642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"12956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2640,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"12921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2644,"nodeType":"RevertStatement","src":"12914:48:6"}]}},{"expression":{"arguments":[{"id":2649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"12996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":2647,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:6","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":2632,"id":2651,"nodeType":"Return","src":"12982:20:6"}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"12515:276:6","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":2653,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:6","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"value","nameLocation":"12822:5:6","nodeType":"VariableDeclaration","scope":2653,"src":"12814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:6"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2653,"src":"12852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":2630,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:6","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:6"},"scope":3747,"src":"12796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2680,"nodeType":"Block","src":"13360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"13374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2663,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":2662,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:6","memberName":"max","nodeType":"MemberAccess","src":"13382:16:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2674,"nodeType":"IfStatement","src":"13370:103:6","trueBody":{"id":2673,"nodeType":"Block","src":"13400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":2670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"13456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2668,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"13421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2672,"nodeType":"RevertStatement","src":"13414:48:6"}]}},{"expression":{"arguments":[{"id":2677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"13496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2675,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:6","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":2660,"id":2679,"nodeType":"Return","src":"13482:20:6"}]},"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"13015:276:6","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":2681,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"value","nameLocation":"13322:5:6","nodeType":"VariableDeclaration","scope":2681,"src":"13314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:6"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2681,"src":"13352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2658,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:6"},"scope":3747,"src":"13296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"13860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"13874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":2691,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":2690,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:6","memberName":"max","nodeType":"MemberAccess","src":"13882:16:6","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2702,"nodeType":"IfStatement","src":"13870:103:6","trueBody":{"id":2701,"nodeType":"Block","src":"13900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":2698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"13956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2696,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"13921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2700,"nodeType":"RevertStatement","src":"13914:48:6"}]}},{"expression":{"arguments":[{"id":2705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"13996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":2703,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:6","typeDescriptions":{}}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":2688,"id":2707,"nodeType":"Return","src":"13982:20:6"}]},"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"13515:276:6","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:6","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"value","nameLocation":"13822:5:6","nodeType":"VariableDeclaration","scope":2709,"src":"13814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:6"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"13852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":2686,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:6","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:6"},"scope":3747,"src":"13796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2736,"nodeType":"Block","src":"14360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"14374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2719,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2718,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:6","memberName":"max","nodeType":"MemberAccess","src":"14382:16:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2730,"nodeType":"IfStatement","src":"14370:103:6","trueBody":{"id":2729,"nodeType":"Block","src":"14400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"14456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2724,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"14421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2728,"nodeType":"RevertStatement","src":"14414:48:6"}]}},{"expression":{"arguments":[{"id":2733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"14496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2731,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:6","typeDescriptions":{}}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":2716,"id":2735,"nodeType":"Return","src":"14482:20:6"}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"14015:276:6","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"value","nameLocation":"14322:5:6","nodeType":"VariableDeclaration","scope":2737,"src":"14314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:6"},"returnParameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2737,"src":"14352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2714,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:6"},"scope":3747,"src":"14296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2764,"nodeType":"Block","src":"14860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"14874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2747,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":2746,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:6","memberName":"max","nodeType":"MemberAccess","src":"14882:16:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2758,"nodeType":"IfStatement","src":"14870:103:6","trueBody":{"id":2757,"nodeType":"Block","src":"14900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"14956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2752,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"14921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2756,"nodeType":"RevertStatement","src":"14914:48:6"}]}},{"expression":{"arguments":[{"id":2761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"14996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2759,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:6","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":2744,"id":2763,"nodeType":"Return","src":"14982:20:6"}]},"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"14515:276:6","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":2765,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:6","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"value","nameLocation":"14822:5:6","nodeType":"VariableDeclaration","scope":2765,"src":"14814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:6"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2765,"src":"14852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":2742,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:6"},"scope":3747,"src":"14796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"15360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"15374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2775,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":2774,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:6","memberName":"max","nodeType":"MemberAccess","src":"15382:16:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2786,"nodeType":"IfStatement","src":"15370:103:6","trueBody":{"id":2785,"nodeType":"Block","src":"15400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"15456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2780,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"15421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2784,"nodeType":"RevertStatement","src":"15414:48:6"}]}},{"expression":{"arguments":[{"id":2789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"15496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2787,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:6","typeDescriptions":{}}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2772,"id":2791,"nodeType":"Return","src":"15482:20:6"}]},"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"15015:276:6","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"value","nameLocation":"15322:5:6","nodeType":"VariableDeclaration","scope":2793,"src":"15314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:6"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"15352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2770,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:6"},"scope":3747,"src":"15296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2820,"nodeType":"Block","src":"15860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"15874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2803,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":2802,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:6","memberName":"max","nodeType":"MemberAccess","src":"15882:16:6","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2814,"nodeType":"IfStatement","src":"15870:103:6","trueBody":{"id":2813,"nodeType":"Block","src":"15900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":2810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"15956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2808,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"15921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2812,"nodeType":"RevertStatement","src":"15914:48:6"}]}},{"expression":{"arguments":[{"id":2817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"15996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2815,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:6","typeDescriptions":{}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":2800,"id":2819,"nodeType":"Return","src":"15982:20:6"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"15515:276:6","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":2821,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:6","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"value","nameLocation":"15822:5:6","nodeType":"VariableDeclaration","scope":2821,"src":"15814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:6"},"returnParameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2821,"src":"15852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2798,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:6","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:6"},"scope":3747,"src":"15796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2848,"nodeType":"Block","src":"16360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"16374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2831,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":2830,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:6","memberName":"max","nodeType":"MemberAccess","src":"16382:16:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2842,"nodeType":"IfStatement","src":"16370:103:6","trueBody":{"id":2841,"nodeType":"Block","src":"16400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"16456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2836,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"16421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2840,"nodeType":"RevertStatement","src":"16414:48:6"}]}},{"expression":{"arguments":[{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"16496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2843,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:6","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":2828,"id":2847,"nodeType":"Return","src":"16482:20:6"}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"16015:276:6","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"value","nameLocation":"16322:5:6","nodeType":"VariableDeclaration","scope":2849,"src":"16314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:6"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2849,"src":"16352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2826,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:6"},"scope":3747,"src":"16296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2876,"nodeType":"Block","src":"16854:146:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"16868:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2859,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2858,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:6","memberName":"max","nodeType":"MemberAccess","src":"16876:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2870,"nodeType":"IfStatement","src":"16864:101:6","trueBody":{"id":2869,"nodeType":"Block","src":"16893:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"16948:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2864,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"16914:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2868,"nodeType":"RevertStatement","src":"16907:47:6"}]}},{"expression":{"arguments":[{"id":2873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"16987:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2871,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:6","typeDescriptions":{}}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2856,"id":2875,"nodeType":"Return","src":"16974:19:6"}]},"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"16515:272:6","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:6","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"value","nameLocation":"16817:5:6","nodeType":"VariableDeclaration","scope":2877,"src":"16809:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:6"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2877,"src":"16847:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2854,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:6"},"scope":3747,"src":"16792:208:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2899,"nodeType":"Block","src":"17236:128:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"17250:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2893,"nodeType":"IfStatement","src":"17246:81:6","trueBody":{"id":2892,"nodeType":"Block","src":"17261:66:6","statements":[{"errorCall":{"arguments":[{"id":2889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"17310:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2888,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"17282:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2891,"nodeType":"RevertStatement","src":"17275:41:6"}]}},{"expression":{"arguments":[{"id":2896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"17351:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:6","typeDescriptions":{}}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2884,"id":2898,"nodeType":"Return","src":"17336:21:6"}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"17006:160:6","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":2900,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:6","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"value","nameLocation":"17197:5:6","nodeType":"VariableDeclaration","scope":2900,"src":"17190:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2879,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:6"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2900,"src":"17227:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:6"},"scope":3747,"src":"17171:193:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2925,"nodeType":"Block","src":"17761:150:6","statements":[{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2908,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"17771:10:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"17791:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2909,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:6","typeDescriptions":{}}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":2914,"nodeType":"ExpressionStatement","src":"17771:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"17811:10:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"17825:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2924,"nodeType":"IfStatement","src":"17807:98:6","trueBody":{"id":2923,"nodeType":"Block","src":"17832:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:6","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"17888:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2918,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"17853:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2922,"nodeType":"RevertStatement","src":"17846:48:6"}]}}]},"documentation":{"id":2901,"nodeType":"StructuredDocumentation","src":"17370:312:6","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2926,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:6","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"value","nameLocation":"17712:5:6","nodeType":"VariableDeclaration","scope":2926,"src":"17705:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2902,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:6"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:6","nodeType":"VariableDeclaration","scope":2926,"src":"17742:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":2905,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:6"},"scope":3747,"src":"17687:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2951,"nodeType":"Block","src":"18308:150:6","statements":[{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2934,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"18318:10:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18338:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2935,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:6","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":2940,"nodeType":"ExpressionStatement","src":"18318:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"18358:10:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18372:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"IfStatement","src":"18354:98:6","trueBody":{"id":2949,"nodeType":"Block","src":"18379:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:6","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18435:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2944,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"18400:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2948,"nodeType":"RevertStatement","src":"18393:48:6"}]}}]},"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"17917:312:6","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2952,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:6","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"value","nameLocation":"18259:5:6","nodeType":"VariableDeclaration","scope":2952,"src":"18252:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2928,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:6"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:6","nodeType":"VariableDeclaration","scope":2952,"src":"18289:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":2931,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:6"},"scope":3747,"src":"18234:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"18855:150:6","statements":[{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2960,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"18865:10:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"18885:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2961,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:6","typeDescriptions":{}}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":2966,"nodeType":"ExpressionStatement","src":"18865:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"18905:10:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"18919:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2976,"nodeType":"IfStatement","src":"18901:98:6","trueBody":{"id":2975,"nodeType":"Block","src":"18926:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:6","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"18982:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2970,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"18947:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2974,"nodeType":"RevertStatement","src":"18940:48:6"}]}}]},"documentation":{"id":2953,"nodeType":"StructuredDocumentation","src":"18464:312:6","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2978,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:6","nodeType":"FunctionDefinition","parameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"value","nameLocation":"18806:5:6","nodeType":"VariableDeclaration","scope":2978,"src":"18799:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2954,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:6"},"returnParameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:6","nodeType":"VariableDeclaration","scope":2978,"src":"18836:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":2957,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:6"},"scope":3747,"src":"18781:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3003,"nodeType":"Block","src":"19402:150:6","statements":[{"expression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2986,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"19412:10:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"19432:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2987,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:6","typeDescriptions":{}}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":2992,"nodeType":"ExpressionStatement","src":"19412:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2993,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"19452:10:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"19466:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3002,"nodeType":"IfStatement","src":"19448:98:6","trueBody":{"id":3001,"nodeType":"Block","src":"19473:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:6","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"19529:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2996,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"19494:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3000,"nodeType":"RevertStatement","src":"19487:48:6"}]}}]},"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"19011:312:6","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:6","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"value","nameLocation":"19353:5:6","nodeType":"VariableDeclaration","scope":3004,"src":"19346:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2980,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:6"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:6","nodeType":"VariableDeclaration","scope":3004,"src":"19383:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":2983,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:6"},"scope":3747,"src":"19328:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"19949:150:6","statements":[{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3012,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"19959:10:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"19979:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3013,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:6","typeDescriptions":{}}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3018,"nodeType":"ExpressionStatement","src":"19959:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"19999:10:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"20013:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3028,"nodeType":"IfStatement","src":"19995:98:6","trueBody":{"id":3027,"nodeType":"Block","src":"20020:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:6","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"20076:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3022,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"20041:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3026,"nodeType":"RevertStatement","src":"20034:48:6"}]}}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"19558:312:6","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:6","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"value","nameLocation":"19900:5:6","nodeType":"VariableDeclaration","scope":3030,"src":"19893:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3006,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:6"},"returnParameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:6","nodeType":"VariableDeclaration","scope":3030,"src":"19930:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3009,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:6"},"scope":3747,"src":"19875:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3055,"nodeType":"Block","src":"20496:150:6","statements":[{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"20506:10:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"20526:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3039,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:6","typeDescriptions":{}}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3044,"nodeType":"ExpressionStatement","src":"20506:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"20546:10:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"20560:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3054,"nodeType":"IfStatement","src":"20542:98:6","trueBody":{"id":3053,"nodeType":"Block","src":"20567:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:6","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"20623:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3048,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"20588:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3052,"nodeType":"RevertStatement","src":"20581:48:6"}]}}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"20105:312:6","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3056,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:6","nodeType":"FunctionDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"value","nameLocation":"20447:5:6","nodeType":"VariableDeclaration","scope":3056,"src":"20440:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3032,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:6"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:6","nodeType":"VariableDeclaration","scope":3056,"src":"20477:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3035,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:6"},"scope":3747,"src":"20422:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3081,"nodeType":"Block","src":"21043:150:6","statements":[{"expression":{"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"21053:10:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"21073:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3065,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:6","typeDescriptions":{}}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3070,"nodeType":"ExpressionStatement","src":"21053:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3071,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"21093:10:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"21107:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3080,"nodeType":"IfStatement","src":"21089:98:6","trueBody":{"id":3079,"nodeType":"Block","src":"21114:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:6","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"21170:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3074,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"21135:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3078,"nodeType":"RevertStatement","src":"21128:48:6"}]}}]},"documentation":{"id":3057,"nodeType":"StructuredDocumentation","src":"20652:312:6","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3082,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:6","nodeType":"FunctionDefinition","parameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"value","nameLocation":"20994:5:6","nodeType":"VariableDeclaration","scope":3082,"src":"20987:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3058,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:6"},"returnParameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:6","nodeType":"VariableDeclaration","scope":3082,"src":"21024:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3061,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:6"},"scope":3747,"src":"20969:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3107,"nodeType":"Block","src":"21590:150:6","statements":[{"expression":{"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"21600:10:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"21620:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3091,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:6","typeDescriptions":{}}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3096,"nodeType":"ExpressionStatement","src":"21600:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"21640:10:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"21654:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3106,"nodeType":"IfStatement","src":"21636:98:6","trueBody":{"id":3105,"nodeType":"Block","src":"21661:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:6","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"21717:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3100,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"21682:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3104,"nodeType":"RevertStatement","src":"21675:48:6"}]}}]},"documentation":{"id":3083,"nodeType":"StructuredDocumentation","src":"21199:312:6","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3108,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:6","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"value","nameLocation":"21541:5:6","nodeType":"VariableDeclaration","scope":3108,"src":"21534:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3084,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:6"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:6","nodeType":"VariableDeclaration","scope":3108,"src":"21571:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3087,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:6"},"scope":3747,"src":"21516:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3133,"nodeType":"Block","src":"22137:150:6","statements":[{"expression":{"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3116,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"22147:10:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"22167:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3117,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:6","typeDescriptions":{}}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3122,"nodeType":"ExpressionStatement","src":"22147:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"22187:10:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"22201:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3132,"nodeType":"IfStatement","src":"22183:98:6","trueBody":{"id":3131,"nodeType":"Block","src":"22208:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:6","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"22264:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3126,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"22229:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3130,"nodeType":"RevertStatement","src":"22222:48:6"}]}}]},"documentation":{"id":3109,"nodeType":"StructuredDocumentation","src":"21746:312:6","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3134,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:6","nodeType":"FunctionDefinition","parameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"value","nameLocation":"22088:5:6","nodeType":"VariableDeclaration","scope":3134,"src":"22081:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3110,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:6"},"returnParameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:6","nodeType":"VariableDeclaration","scope":3134,"src":"22118:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3113,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:6"},"scope":3747,"src":"22063:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"22684:150:6","statements":[{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3142,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"22694:10:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"22714:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":3143,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:6","typeDescriptions":{}}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":3148,"nodeType":"ExpressionStatement","src":"22694:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"22734:10:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"22748:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3158,"nodeType":"IfStatement","src":"22730:98:6","trueBody":{"id":3157,"nodeType":"Block","src":"22755:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:6","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"22811:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3152,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"22776:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3156,"nodeType":"RevertStatement","src":"22769:48:6"}]}}]},"documentation":{"id":3135,"nodeType":"StructuredDocumentation","src":"22293:312:6","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:6","nodeType":"FunctionDefinition","parameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"value","nameLocation":"22635:5:6","nodeType":"VariableDeclaration","scope":3160,"src":"22628:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3136,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:6"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:6","nodeType":"VariableDeclaration","scope":3160,"src":"22665:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":3139,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:6"},"scope":3747,"src":"22610:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3185,"nodeType":"Block","src":"23231:150:6","statements":[{"expression":{"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3168,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"23241:10:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"23261:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":3169,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:6","typeDescriptions":{}}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":3174,"nodeType":"ExpressionStatement","src":"23241:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"23281:10:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"23295:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3184,"nodeType":"IfStatement","src":"23277:98:6","trueBody":{"id":3183,"nodeType":"Block","src":"23302:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:6","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"23358:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3178,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"23323:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3182,"nodeType":"RevertStatement","src":"23316:48:6"}]}}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"22840:312:6","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3186,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:6","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"value","nameLocation":"23182:5:6","nodeType":"VariableDeclaration","scope":3186,"src":"23175:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3162,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:6"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:6","nodeType":"VariableDeclaration","scope":3186,"src":"23212:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":3165,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:6"},"scope":3747,"src":"23157:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3211,"nodeType":"Block","src":"23778:150:6","statements":[{"expression":{"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3194,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"23788:10:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"23808:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":3195,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:6","typeDescriptions":{}}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":3200,"nodeType":"ExpressionStatement","src":"23788:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3201,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"23828:10:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"23842:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3210,"nodeType":"IfStatement","src":"23824:98:6","trueBody":{"id":3209,"nodeType":"Block","src":"23849:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:6","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"23905:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3204,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"23870:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3208,"nodeType":"RevertStatement","src":"23863:48:6"}]}}]},"documentation":{"id":3187,"nodeType":"StructuredDocumentation","src":"23387:312:6","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3212,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:6","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"value","nameLocation":"23729:5:6","nodeType":"VariableDeclaration","scope":3212,"src":"23722:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3188,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:6"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:6","nodeType":"VariableDeclaration","scope":3212,"src":"23759:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":3191,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:6"},"scope":3747,"src":"23704:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3237,"nodeType":"Block","src":"24325:150:6","statements":[{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3220,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"24335:10:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"24355:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":3221,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:6","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":3226,"nodeType":"ExpressionStatement","src":"24335:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"24375:10:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"24389:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"24371:98:6","trueBody":{"id":3235,"nodeType":"Block","src":"24396:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:6","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"24452:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3230,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"24417:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3234,"nodeType":"RevertStatement","src":"24410:48:6"}]}}]},"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"23934:312:6","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:6","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"value","nameLocation":"24276:5:6","nodeType":"VariableDeclaration","scope":3238,"src":"24269:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3214,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:6"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:6","nodeType":"VariableDeclaration","scope":3238,"src":"24306:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":3217,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:6"},"scope":3747,"src":"24251:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3263,"nodeType":"Block","src":"24872:150:6","statements":[{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3246,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"24882:10:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"24902:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":3247,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:6","typeDescriptions":{}}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":3252,"nodeType":"ExpressionStatement","src":"24882:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"24922:10:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"24936:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"nodeType":"IfStatement","src":"24918:98:6","trueBody":{"id":3261,"nodeType":"Block","src":"24943:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:6","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"24999:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3256,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"24964:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3260,"nodeType":"RevertStatement","src":"24957:48:6"}]}}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"24481:312:6","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3264,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:6","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"value","nameLocation":"24823:5:6","nodeType":"VariableDeclaration","scope":3264,"src":"24816:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3240,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:6"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:6","nodeType":"VariableDeclaration","scope":3264,"src":"24853:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":3243,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:6"},"scope":3747,"src":"24798:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"25419:150:6","statements":[{"expression":{"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"25429:10:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"25449:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":3273,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:6","typeDescriptions":{}}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":3278,"nodeType":"ExpressionStatement","src":"25429:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"25469:10:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"25483:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3288,"nodeType":"IfStatement","src":"25465:98:6","trueBody":{"id":3287,"nodeType":"Block","src":"25490:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:6","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"25546:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3282,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"25511:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3286,"nodeType":"RevertStatement","src":"25504:48:6"}]}}]},"documentation":{"id":3265,"nodeType":"StructuredDocumentation","src":"25028:312:6","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:6","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"value","nameLocation":"25370:5:6","nodeType":"VariableDeclaration","scope":3290,"src":"25363:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3266,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:6"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:6","nodeType":"VariableDeclaration","scope":3290,"src":"25400:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":3269,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:6"},"scope":3747,"src":"25345:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3315,"nodeType":"Block","src":"25966:150:6","statements":[{"expression":{"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"25976:10:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"25996:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":3299,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:6","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3304,"nodeType":"ExpressionStatement","src":"25976:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"26016:10:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"26030:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3314,"nodeType":"IfStatement","src":"26012:98:6","trueBody":{"id":3313,"nodeType":"Block","src":"26037:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"26093:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3308,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"26058:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3312,"nodeType":"RevertStatement","src":"26051:48:6"}]}}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"25575:312:6","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3316,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:6","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"value","nameLocation":"25917:5:6","nodeType":"VariableDeclaration","scope":3316,"src":"25910:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3292,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:6"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:6","nodeType":"VariableDeclaration","scope":3316,"src":"25947:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3295,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:6"},"scope":3747,"src":"25892:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3341,"nodeType":"Block","src":"26513:150:6","statements":[{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3324,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"26523:10:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"26543:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":3325,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:6","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":3330,"nodeType":"ExpressionStatement","src":"26523:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"26563:10:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"26577:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3340,"nodeType":"IfStatement","src":"26559:98:6","trueBody":{"id":3339,"nodeType":"Block","src":"26584:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:6","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"26640:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3334,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"26605:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3338,"nodeType":"RevertStatement","src":"26598:48:6"}]}}]},"documentation":{"id":3317,"nodeType":"StructuredDocumentation","src":"26122:312:6","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3342,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:6","nodeType":"FunctionDefinition","parameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"value","nameLocation":"26464:5:6","nodeType":"VariableDeclaration","scope":3342,"src":"26457:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3318,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:6"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:6","nodeType":"VariableDeclaration","scope":3342,"src":"26494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":3321,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:6"},"scope":3747,"src":"26439:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3367,"nodeType":"Block","src":"27060:150:6","statements":[{"expression":{"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"27070:10:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"27090:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":3351,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:6","typeDescriptions":{}}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":3356,"nodeType":"ExpressionStatement","src":"27070:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"27110:10:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"27124:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3366,"nodeType":"IfStatement","src":"27106:98:6","trueBody":{"id":3365,"nodeType":"Block","src":"27131:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:6","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"27187:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3360,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"27152:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3364,"nodeType":"RevertStatement","src":"27145:48:6"}]}}]},"documentation":{"id":3343,"nodeType":"StructuredDocumentation","src":"26669:312:6","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3368,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:6","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"value","nameLocation":"27011:5:6","nodeType":"VariableDeclaration","scope":3368,"src":"27004:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3344,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:6"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:6","nodeType":"VariableDeclaration","scope":3368,"src":"27041:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":3347,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:6"},"scope":3747,"src":"26986:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3393,"nodeType":"Block","src":"27607:150:6","statements":[{"expression":{"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3376,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"27617:10:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"27637:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":3377,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:6","typeDescriptions":{}}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":3382,"nodeType":"ExpressionStatement","src":"27617:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"27657:10:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"27671:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3392,"nodeType":"IfStatement","src":"27653:98:6","trueBody":{"id":3391,"nodeType":"Block","src":"27678:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:6","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"27734:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3386,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"27699:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3390,"nodeType":"RevertStatement","src":"27692:48:6"}]}}]},"documentation":{"id":3369,"nodeType":"StructuredDocumentation","src":"27216:312:6","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:6","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"value","nameLocation":"27558:5:6","nodeType":"VariableDeclaration","scope":3394,"src":"27551:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3370,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:6"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:6","nodeType":"VariableDeclaration","scope":3394,"src":"27588:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":3373,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:6"},"scope":3747,"src":"27533:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3419,"nodeType":"Block","src":"28147:148:6","statements":[{"expression":{"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"28157:10:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"28176:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":3403,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:6","typeDescriptions":{}}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":3408,"nodeType":"ExpressionStatement","src":"28157:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"28196:10:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"28210:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3418,"nodeType":"IfStatement","src":"28192:97:6","trueBody":{"id":3417,"nodeType":"Block","src":"28217:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:6","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"28272:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3412,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"28238:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3416,"nodeType":"RevertStatement","src":"28231:47:6"}]}}]},"documentation":{"id":3395,"nodeType":"StructuredDocumentation","src":"27763:307:6","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3420,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:6","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"value","nameLocation":"28099:5:6","nodeType":"VariableDeclaration","scope":3420,"src":"28092:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3396,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:6"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:6","nodeType":"VariableDeclaration","scope":3420,"src":"28129:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":3399,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:6"},"scope":3747,"src":"28075:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3445,"nodeType":"Block","src":"28685:148:6","statements":[{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"28695:10:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"28714:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":3429,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:6","typeDescriptions":{}}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":3434,"nodeType":"ExpressionStatement","src":"28695:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"28734:10:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"28748:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3444,"nodeType":"IfStatement","src":"28730:97:6","trueBody":{"id":3443,"nodeType":"Block","src":"28755:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:6","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"28810:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3438,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"28776:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3442,"nodeType":"RevertStatement","src":"28769:47:6"}]}}]},"documentation":{"id":3421,"nodeType":"StructuredDocumentation","src":"28301:307:6","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3446,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:6","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"value","nameLocation":"28637:5:6","nodeType":"VariableDeclaration","scope":3446,"src":"28630:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3422,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:6"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:6","nodeType":"VariableDeclaration","scope":3446,"src":"28667:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":3425,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:6"},"scope":3747,"src":"28613:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3471,"nodeType":"Block","src":"29223:148:6","statements":[{"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"29233:10:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"29252:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":3455,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:6","typeDescriptions":{}}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":3460,"nodeType":"ExpressionStatement","src":"29233:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3461,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"29272:10:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"29286:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3470,"nodeType":"IfStatement","src":"29268:97:6","trueBody":{"id":3469,"nodeType":"Block","src":"29293:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:6","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"29348:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3464,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"29314:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3468,"nodeType":"RevertStatement","src":"29307:47:6"}]}}]},"documentation":{"id":3447,"nodeType":"StructuredDocumentation","src":"28839:307:6","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3472,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:6","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"value","nameLocation":"29175:5:6","nodeType":"VariableDeclaration","scope":3472,"src":"29168:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3448,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:6"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:6","nodeType":"VariableDeclaration","scope":3472,"src":"29205:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":3451,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:6"},"scope":3747,"src":"29151:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3497,"nodeType":"Block","src":"29761:148:6","statements":[{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"29771:10:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"29790:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":3481,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:6","typeDescriptions":{}}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":3486,"nodeType":"ExpressionStatement","src":"29771:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"29810:10:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"29824:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3496,"nodeType":"IfStatement","src":"29806:97:6","trueBody":{"id":3495,"nodeType":"Block","src":"29831:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:6","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"29886:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3490,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"29852:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3494,"nodeType":"RevertStatement","src":"29845:47:6"}]}}]},"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"29377:307:6","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3498,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:6","nodeType":"FunctionDefinition","parameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3475,"mutability":"mutable","name":"value","nameLocation":"29713:5:6","nodeType":"VariableDeclaration","scope":3498,"src":"29706:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3474,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:6"},"returnParameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:6","nodeType":"VariableDeclaration","scope":3498,"src":"29743:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":3477,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:6"},"scope":3747,"src":"29689:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3523,"nodeType":"Block","src":"30299:148:6","statements":[{"expression":{"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"30309:10:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"30328:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":3507,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:6","typeDescriptions":{}}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":3512,"nodeType":"ExpressionStatement","src":"30309:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"30348:10:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"30362:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3522,"nodeType":"IfStatement","src":"30344:97:6","trueBody":{"id":3521,"nodeType":"Block","src":"30369:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"30424:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3516,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"30390:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3520,"nodeType":"RevertStatement","src":"30383:47:6"}]}}]},"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"29915:307:6","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3524,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:6","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"value","nameLocation":"30251:5:6","nodeType":"VariableDeclaration","scope":3524,"src":"30244:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3500,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:6"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:6","nodeType":"VariableDeclaration","scope":3524,"src":"30281:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3503,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:6"},"scope":3747,"src":"30227:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3549,"nodeType":"Block","src":"30837:148:6","statements":[{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"30847:10:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"30866:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":3533,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:6","typeDescriptions":{}}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":3538,"nodeType":"ExpressionStatement","src":"30847:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"30886:10:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"30900:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3548,"nodeType":"IfStatement","src":"30882:97:6","trueBody":{"id":3547,"nodeType":"Block","src":"30907:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:6","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"30962:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3542,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"30928:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3546,"nodeType":"RevertStatement","src":"30921:47:6"}]}}]},"documentation":{"id":3525,"nodeType":"StructuredDocumentation","src":"30453:307:6","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3550,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:6","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"value","nameLocation":"30789:5:6","nodeType":"VariableDeclaration","scope":3550,"src":"30782:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3526,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:6"},"returnParameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:6","nodeType":"VariableDeclaration","scope":3550,"src":"30819:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":3529,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:6"},"scope":3747,"src":"30765:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3575,"nodeType":"Block","src":"31375:148:6","statements":[{"expression":{"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"31385:10:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"31404:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":3559,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:6","typeDescriptions":{}}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":3564,"nodeType":"ExpressionStatement","src":"31385:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"31424:10:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"31438:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3574,"nodeType":"IfStatement","src":"31420:97:6","trueBody":{"id":3573,"nodeType":"Block","src":"31445:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:6","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"31500:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3568,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"31466:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3572,"nodeType":"RevertStatement","src":"31459:47:6"}]}}]},"documentation":{"id":3551,"nodeType":"StructuredDocumentation","src":"30991:307:6","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3576,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:6","nodeType":"FunctionDefinition","parameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"value","nameLocation":"31327:5:6","nodeType":"VariableDeclaration","scope":3576,"src":"31320:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3552,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:6"},"returnParameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:6","nodeType":"VariableDeclaration","scope":3576,"src":"31357:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":3555,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:6"},"scope":3747,"src":"31303:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3601,"nodeType":"Block","src":"31913:148:6","statements":[{"expression":{"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"31923:10:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"31942:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":3585,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:6","typeDescriptions":{}}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":3590,"nodeType":"ExpressionStatement","src":"31923:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"31962:10:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"31976:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3600,"nodeType":"IfStatement","src":"31958:97:6","trueBody":{"id":3599,"nodeType":"Block","src":"31983:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:6","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"32038:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3594,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"32004:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3598,"nodeType":"RevertStatement","src":"31997:47:6"}]}}]},"documentation":{"id":3577,"nodeType":"StructuredDocumentation","src":"31529:307:6","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3602,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:6","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"value","nameLocation":"31865:5:6","nodeType":"VariableDeclaration","scope":3602,"src":"31858:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3578,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:6"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:6","nodeType":"VariableDeclaration","scope":3602,"src":"31895:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":3581,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:6"},"scope":3747,"src":"31841:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"32451:148:6","statements":[{"expression":{"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"32461:10:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"32480:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3611,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:6","typeDescriptions":{}}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3616,"nodeType":"ExpressionStatement","src":"32461:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"32500:10:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"32514:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3626,"nodeType":"IfStatement","src":"32496:97:6","trueBody":{"id":3625,"nodeType":"Block","src":"32521:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"32576:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3620,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"32542:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3624,"nodeType":"RevertStatement","src":"32535:47:6"}]}}]},"documentation":{"id":3603,"nodeType":"StructuredDocumentation","src":"32067:307:6","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:6","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"value","nameLocation":"32403:5:6","nodeType":"VariableDeclaration","scope":3628,"src":"32396:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3604,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:6"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:6","nodeType":"VariableDeclaration","scope":3628,"src":"32433:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3607,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:6"},"scope":3747,"src":"32379:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3653,"nodeType":"Block","src":"32989:148:6","statements":[{"expression":{"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"32999:10:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"33018:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3637,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:6","typeDescriptions":{}}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":3642,"nodeType":"ExpressionStatement","src":"32999:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"33038:10:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"33052:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3652,"nodeType":"IfStatement","src":"33034:97:6","trueBody":{"id":3651,"nodeType":"Block","src":"33059:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:6","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"33114:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3646,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"33080:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3650,"nodeType":"RevertStatement","src":"33073:47:6"}]}}]},"documentation":{"id":3629,"nodeType":"StructuredDocumentation","src":"32605:307:6","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:6","nodeType":"FunctionDefinition","parameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"value","nameLocation":"32941:5:6","nodeType":"VariableDeclaration","scope":3654,"src":"32934:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3630,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:6"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:6","nodeType":"VariableDeclaration","scope":3654,"src":"32971:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3633,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:6"},"scope":3747,"src":"32917:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3679,"nodeType":"Block","src":"33527:148:6","statements":[{"expression":{"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"33537:10:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"33556:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":3663,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:6","typeDescriptions":{}}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":3668,"nodeType":"ExpressionStatement","src":"33537:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3669,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"33576:10:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"33590:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3678,"nodeType":"IfStatement","src":"33572:97:6","trueBody":{"id":3677,"nodeType":"Block","src":"33597:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"33652:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3672,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"33618:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3676,"nodeType":"RevertStatement","src":"33611:47:6"}]}}]},"documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"33143:307:6","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3680,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:6","nodeType":"FunctionDefinition","parameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"value","nameLocation":"33479:5:6","nodeType":"VariableDeclaration","scope":3680,"src":"33472:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3656,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:6"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:6","nodeType":"VariableDeclaration","scope":3680,"src":"33509:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":3659,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:6"},"scope":3747,"src":"33455:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3705,"nodeType":"Block","src":"34058:146:6","statements":[{"expression":{"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"34068:10:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"34086:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":3689,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:6","typeDescriptions":{}}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":3694,"nodeType":"ExpressionStatement","src":"34068:24:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"34106:10:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"34120:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3704,"nodeType":"IfStatement","src":"34102:96:6","trueBody":{"id":3703,"nodeType":"Block","src":"34127:71:6","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"34181:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3698,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"34148:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3702,"nodeType":"RevertStatement","src":"34141:46:6"}]}}]},"documentation":{"id":3681,"nodeType":"StructuredDocumentation","src":"33681:302:6","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:6","nodeType":"FunctionDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"value","nameLocation":"34011:5:6","nodeType":"VariableDeclaration","scope":3706,"src":"34004:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3682,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:6"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:6","nodeType":"VariableDeclaration","scope":3706,"src":"34041:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":3685,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:6"},"scope":3747,"src":"33988:216:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3735,"nodeType":"Block","src":"34444:250:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"34557:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":3719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3718,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3717,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:6","memberName":"max","nodeType":"MemberAccess","src":"34573:16:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:6","typeDescriptions":{}}},"id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3729,"nodeType":"IfStatement","src":"34553:105:6","trueBody":{"id":3728,"nodeType":"Block","src":"34592:66:6","statements":[{"errorCall":{"arguments":[{"id":3725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"34641:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3724,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"34613:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3727,"nodeType":"RevertStatement","src":"34606:41:6"}]}},{"expression":{"arguments":[{"id":3732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"34681:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3730,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:6","typeDescriptions":{}}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3713,"id":3734,"nodeType":"Return","src":"34667:20:6"}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"34210:165:6","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":3736,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:6","nodeType":"FunctionDefinition","parameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"value","nameLocation":"34406:5:6","nodeType":"VariableDeclaration","scope":3736,"src":"34398:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:6"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3736,"src":"34436:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3711,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:6"},"scope":3747,"src":"34380:314:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"34853:87:6","statements":[{"AST":{"nativeSrc":"34888:46:6","nodeType":"YulBlock","src":"34888:46:6","statements":[{"nativeSrc":"34902:22:6","nodeType":"YulAssignment","src":"34902:22:6","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:6","nodeType":"YulIdentifier","src":"34921:1:6"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:6","nodeType":"YulIdentifier","src":"34914:6:6"},"nativeSrc":"34914:9:6","nodeType":"YulFunctionCall","src":"34914:9:6"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:6","nodeType":"YulIdentifier","src":"34907:6:6"},"nativeSrc":"34907:17:6","nodeType":"YulFunctionCall","src":"34907:17:6"},"variableNames":[{"name":"u","nativeSrc":"34902:1:6","nodeType":"YulIdentifier","src":"34902:1:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3739,"isOffset":false,"isSlot":false,"src":"34921:1:6","valueSize":1},{"declaration":3742,"isOffset":false,"isSlot":false,"src":"34902:1:6","valueSize":1}],"flags":["memory-safe"],"id":3744,"nodeType":"InlineAssembly","src":"34863:71:6"}]},"documentation":{"id":3737,"nodeType":"StructuredDocumentation","src":"34700:90:6","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:6","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"b","nameLocation":"34816:1:6","nodeType":"VariableDeclaration","scope":3746,"src":"34811:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3738,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:6"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"u","nameLocation":"34850:1:6","nodeType":"VariableDeclaration","scope":3746,"src":"34842:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:6"},"scope":3747,"src":"34795:145:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3748,"src":"769:34173:6","usedErrors":[1992,1997,2004,2009],"usedEvents":[]}],"src":"192:34751:6"},"id":6},"contracts/CoverLib.sol":{"ast":{"absolutePath":"contracts/CoverLib.sol","exportedSymbols":{"CoverLib":[3929]},"id":3930,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3749,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"33:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"CoverLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3929,"linearizedBaseContracts":[3929],"name":"CoverLib","nameLocation":"68:8:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CoverLib.DepositParams","id":3766,"members":[{"constant":false,"id":3751,"mutability":"mutable","name":"depositor","nameLocation":"124:9:7","nodeType":"VariableDeclaration","scope":3766,"src":"116:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3750,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"poolId","nameLocation":"152:6:7","nodeType":"VariableDeclaration","scope":3766,"src":"144:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"144:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"amount","nameLocation":"177:6:7","nodeType":"VariableDeclaration","scope":3766,"src":"169:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"169:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"period","nameLocation":"202:6:7","nodeType":"VariableDeclaration","scope":3766,"src":"194:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"194:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"pdt","nameLocation":"240:3:7","nodeType":"VariableDeclaration","scope":3766,"src":"219:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"},"typeName":{"id":3759,"nodeType":"UserDefinedTypeName","pathNode":{"id":3758,"name":"CoverLib.DepositType","nameLocations":["219:8:7","228:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"219:20:7"},"referencedDeclaration":3826,"src":"219:20:7","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"visibility":"internal"},{"constant":false,"id":3763,"mutability":"mutable","name":"adt","nameLocation":"280:3:7","nodeType":"VariableDeclaration","scope":3766,"src":"254:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":3762,"nodeType":"UserDefinedTypeName","pathNode":{"id":3761,"name":"CoverLib.AssetDepositType","nameLocations":["254:8:7","263:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"254:25:7"},"referencedDeclaration":3823,"src":"254:25:7","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":3765,"mutability":"mutable","name":"asset","nameLocation":"302:5:7","nodeType":"VariableDeclaration","scope":3766,"src":"294:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3764,"name":"address","nodeType":"ElementaryTypeName","src":"294:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DepositParams","nameLocation":"91:13:7","nodeType":"StructDefinition","scope":3929,"src":"84:231:7","visibility":"public"},{"canonicalName":"CoverLib.Cover","id":3790,"members":[{"constant":false,"id":3768,"mutability":"mutable","name":"id","nameLocation":"355:2:7","nodeType":"VariableDeclaration","scope":3790,"src":"347:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3770,"mutability":"mutable","name":"coverName","nameLocation":"375:9:7","nodeType":"VariableDeclaration","scope":3790,"src":"368:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3769,"name":"string","nodeType":"ElementaryTypeName","src":"368:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3773,"mutability":"mutable","name":"riskType","nameLocation":"404:8:7","nodeType":"VariableDeclaration","scope":3790,"src":"395:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3772,"nodeType":"UserDefinedTypeName","pathNode":{"id":3771,"name":"RiskType","nameLocations":["395:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"395:8:7"},"referencedDeclaration":3814,"src":"395:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"chains","nameLocation":"430:6:7","nodeType":"VariableDeclaration","scope":3790,"src":"423:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3774,"name":"string","nodeType":"ElementaryTypeName","src":"423:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"capacity","nameLocation":"455:8:7","nodeType":"VariableDeclaration","scope":3790,"src":"447:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3779,"mutability":"mutable","name":"cost","nameLocation":"482:4:7","nodeType":"VariableDeclaration","scope":3790,"src":"474:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3781,"mutability":"mutable","name":"capacityAmount","nameLocation":"505:14:7","nodeType":"VariableDeclaration","scope":3790,"src":"497:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3783,"mutability":"mutable","name":"coverValues","nameLocation":"538:11:7","nodeType":"VariableDeclaration","scope":3790,"src":"530:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3785,"mutability":"mutable","name":"maxAmount","nameLocation":"568:9:7","nodeType":"VariableDeclaration","scope":3790,"src":"560:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"poolId","nameLocation":"596:6:7","nodeType":"VariableDeclaration","scope":3790,"src":"588:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"CID","nameLocation":"620:3:7","nodeType":"VariableDeclaration","scope":3790,"src":"613:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3788,"name":"string","nodeType":"ElementaryTypeName","src":"613:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Cover","nameLocation":"330:5:7","nodeType":"StructDefinition","scope":3929,"src":"323:308:7","visibility":"public"},{"canonicalName":"CoverLib.GenericCoverInfo","id":3810,"members":[{"constant":false,"id":3792,"mutability":"mutable","name":"user","nameLocation":"682:4:7","nodeType":"VariableDeclaration","scope":3810,"src":"674:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"coverId","nameLocation":"705:7:7","nodeType":"VariableDeclaration","scope":3810,"src":"697:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"riskType","nameLocation":"732:8:7","nodeType":"VariableDeclaration","scope":3810,"src":"723:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3796,"nodeType":"UserDefinedTypeName","pathNode":{"id":3795,"name":"RiskType","nameLocations":["723:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"723:8:7"},"referencedDeclaration":3814,"src":"723:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"coverName","nameLocation":"758:9:7","nodeType":"VariableDeclaration","scope":3810,"src":"751:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3798,"name":"string","nodeType":"ElementaryTypeName","src":"751:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"coverValue","nameLocation":"786:10:7","nodeType":"VariableDeclaration","scope":3810,"src":"778:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"claimPaid","nameLocation":"859:9:7","nodeType":"VariableDeclaration","scope":3810,"src":"851:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"coverPeriod","nameLocation":"887:11:7","nodeType":"VariableDeclaration","scope":3810,"src":"879:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"endDay","nameLocation":"974:6:7","nodeType":"VariableDeclaration","scope":3810,"src":"966:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"966:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"isActive","nameLocation":"1022:8:7","nodeType":"VariableDeclaration","scope":3810,"src":"1017:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3808,"name":"bool","nodeType":"ElementaryTypeName","src":"1017:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"GenericCoverInfo","nameLocation":"646:16:7","nodeType":"StructDefinition","scope":3929,"src":"639:399:7","visibility":"public"},{"canonicalName":"CoverLib.RiskType","id":3814,"members":[{"id":3811,"name":"Low","nameLocation":"1071:3:7","nodeType":"EnumValue","src":"1071:3:7"},{"id":3812,"name":"Medium","nameLocation":"1085:6:7","nodeType":"EnumValue","src":"1085:6:7"},{"id":3813,"name":"High","nameLocation":"1102:4:7","nodeType":"EnumValue","src":"1102:4:7"}],"name":"RiskType","nameLocation":"1051:8:7","nodeType":"EnumDefinition","src":"1046:67:7"},{"canonicalName":"CoverLib.GenericCover","id":3820,"members":[{"constant":false,"id":3817,"mutability":"mutable","name":"riskType","nameLocation":"1161:8:7","nodeType":"VariableDeclaration","scope":3820,"src":"1152:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3816,"nodeType":"UserDefinedTypeName","pathNode":{"id":3815,"name":"RiskType","nameLocations":["1152:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"1152:8:7"},"referencedDeclaration":3814,"src":"1152:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3819,"mutability":"mutable","name":"coverData","nameLocation":"1186:9:7","nodeType":"VariableDeclaration","scope":3820,"src":"1180:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3818,"name":"bytes","nodeType":"ElementaryTypeName","src":"1180:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"GenericCover","nameLocation":"1128:12:7","nodeType":"StructDefinition","scope":3929,"src":"1121:82:7","visibility":"public"},{"canonicalName":"CoverLib.AssetDepositType","id":3823,"members":[{"id":3821,"name":"Native","nameLocation":"1244:6:7","nodeType":"EnumValue","src":"1244:6:7"},{"id":3822,"name":"ERC20","nameLocation":"1261:5:7","nodeType":"EnumValue","src":"1261:5:7"}],"name":"AssetDepositType","nameLocation":"1216:16:7","nodeType":"EnumDefinition","src":"1211:62:7"},{"canonicalName":"CoverLib.DepositType","id":3826,"members":[{"id":3824,"name":"Normal","nameLocation":"1309:6:7","nodeType":"EnumValue","src":"1309:6:7"},{"id":3825,"name":"Vault","nameLocation":"1326:5:7","nodeType":"EnumValue","src":"1326:5:7"}],"name":"DepositType","nameLocation":"1286:11:7","nodeType":"EnumDefinition","src":"1281:57:7"},{"canonicalName":"CoverLib.Pool","id":3859,"members":[{"constant":false,"id":3828,"mutability":"mutable","name":"id","nameLocation":"1377:2:7","nodeType":"VariableDeclaration","scope":3859,"src":"1369:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"poolName","nameLocation":"1397:8:7","nodeType":"VariableDeclaration","scope":3859,"src":"1390:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3829,"name":"string","nodeType":"ElementaryTypeName","src":"1390:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"riskType","nameLocation":"1434:8:7","nodeType":"VariableDeclaration","scope":3859,"src":"1416:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3832,"nodeType":"UserDefinedTypeName","pathNode":{"id":3831,"name":"CoverLib.RiskType","nameLocations":["1416:8:7","1425:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"1416:17:7"},"referencedDeclaration":3814,"src":"1416:17:7","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"apy","nameLocation":"1461:3:7","nodeType":"VariableDeclaration","scope":3859,"src":"1453:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1453:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"minPeriod","nameLocation":"1483:9:7","nodeType":"VariableDeclaration","scope":3859,"src":"1475:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"tvl","nameLocation":"1511:3:7","nodeType":"VariableDeclaration","scope":3859,"src":"1503:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"baseValue","nameLocation":"1533:9:7","nodeType":"VariableDeclaration","scope":3859,"src":"1525:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"coverTvl","nameLocation":"1561:8:7","nodeType":"VariableDeclaration","scope":3859,"src":"1553:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1553:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"tcp","nameLocation":"1588:3:7","nodeType":"VariableDeclaration","scope":3859,"src":"1580:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"isActive","nameLocation":"1607:8:7","nodeType":"VariableDeclaration","scope":3859,"src":"1602:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3846,"name":"bool","nodeType":"ElementaryTypeName","src":"1602:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"percentageSplitBalance","nameLocation":"1634:22:7","nodeType":"VariableDeclaration","scope":3859,"src":"1626:30:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1626:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"investmentArmPercent","nameLocation":"1675:20:7","nodeType":"VariableDeclaration","scope":3859,"src":"1667:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1667:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"leverage","nameLocation":"1712:8:7","nodeType":"VariableDeclaration","scope":3859,"src":"1706:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3852,"name":"uint8","nodeType":"ElementaryTypeName","src":"1706:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"asset","nameLocation":"1739:5:7","nodeType":"VariableDeclaration","scope":3859,"src":"1731:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3854,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"assetType","nameLocation":"1781:9:7","nodeType":"VariableDeclaration","scope":3859,"src":"1755:35:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":3857,"nodeType":"UserDefinedTypeName","pathNode":{"id":3856,"name":"CoverLib.AssetDepositType","nameLocations":["1755:8:7","1764:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"1755:25:7"},"referencedDeclaration":3823,"src":"1755:25:7","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"}],"name":"Pool","nameLocation":"1353:4:7","nodeType":"StructDefinition","scope":3929,"src":"1346:452:7","visibility":"public"},{"canonicalName":"CoverLib.PoolParams","id":3880,"members":[{"constant":false,"id":3861,"mutability":"mutable","name":"poolId","nameLocation":"1843:6:7","nodeType":"VariableDeclaration","scope":3880,"src":"1835:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1835:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"riskType","nameLocation":"1878:8:7","nodeType":"VariableDeclaration","scope":3880,"src":"1860:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3863,"nodeType":"UserDefinedTypeName","pathNode":{"id":3862,"name":"CoverLib.RiskType","nameLocations":["1860:8:7","1869:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"1860:17:7"},"referencedDeclaration":3814,"src":"1860:17:7","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"poolName","nameLocation":"1904:8:7","nodeType":"VariableDeclaration","scope":3880,"src":"1897:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3865,"name":"string","nodeType":"ElementaryTypeName","src":"1897:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"apy","nameLocation":"1931:3:7","nodeType":"VariableDeclaration","scope":3880,"src":"1923:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"minPeriod","nameLocation":"1953:9:7","nodeType":"VariableDeclaration","scope":3880,"src":"1945:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"leverage","nameLocation":"1979:8:7","nodeType":"VariableDeclaration","scope":3880,"src":"1973:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3871,"name":"uint8","nodeType":"ElementaryTypeName","src":"1973:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"investmentArm","nameLocation":"2006:13:7","nodeType":"VariableDeclaration","scope":3880,"src":"1998:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1998:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"adt","nameLocation":"2056:3:7","nodeType":"VariableDeclaration","scope":3880,"src":"2030:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":3876,"nodeType":"UserDefinedTypeName","pathNode":{"id":3875,"name":"CoverLib.AssetDepositType","nameLocations":["2030:8:7","2039:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"2030:25:7"},"referencedDeclaration":3823,"src":"2030:25:7","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"asset","nameLocation":"2078:5:7","nodeType":"VariableDeclaration","scope":3880,"src":"2070:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3878,"name":"address","nodeType":"ElementaryTypeName","src":"2070:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"PoolParams","nameLocation":"1813:10:7","nodeType":"StructDefinition","scope":3929,"src":"1806:285:7","visibility":"public"},{"canonicalName":"CoverLib.Deposits","id":3903,"members":[{"constant":false,"id":3882,"mutability":"mutable","name":"lp","nameLocation":"2134:2:7","nodeType":"VariableDeclaration","scope":3903,"src":"2126:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3881,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"amount","nameLocation":"2155:6:7","nodeType":"VariableDeclaration","scope":3903,"src":"2147:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2147:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3886,"mutability":"mutable","name":"poolId","nameLocation":"2180:6:7","nodeType":"VariableDeclaration","scope":3903,"src":"2172:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"2172:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"dailyPayout","nameLocation":"2205:11:7","nodeType":"VariableDeclaration","scope":3903,"src":"2197:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2197:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"status","nameLocation":"2243:6:7","nodeType":"VariableDeclaration","scope":3903,"src":"2227:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3928","typeString":"enum CoverLib.Status"},"typeName":{"id":3890,"nodeType":"UserDefinedTypeName","pathNode":{"id":3889,"name":"CoverLib.Status","nameLocations":["2227:8:7","2236:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3928,"src":"2227:15:7"},"referencedDeclaration":3928,"src":"2227:15:7","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3928","typeString":"enum CoverLib.Status"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"daysLeft","nameLocation":"2268:8:7","nodeType":"VariableDeclaration","scope":3903,"src":"2260:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"startDate","nameLocation":"2295:9:7","nodeType":"VariableDeclaration","scope":3903,"src":"2287:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3897,"mutability":"mutable","name":"expiryDate","nameLocation":"2323:10:7","nodeType":"VariableDeclaration","scope":3903,"src":"2315:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2315:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"accruedPayout","nameLocation":"2352:13:7","nodeType":"VariableDeclaration","scope":3903,"src":"2344:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"pdt","nameLocation":"2397:3:7","nodeType":"VariableDeclaration","scope":3903,"src":"2376:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"},"typeName":{"id":3901,"nodeType":"UserDefinedTypeName","pathNode":{"id":3900,"name":"CoverLib.DepositType","nameLocations":["2376:8:7","2385:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"2376:20:7"},"referencedDeclaration":3826,"src":"2376:20:7","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"visibility":"internal"}],"name":"Deposits","nameLocation":"2106:8:7","nodeType":"StructDefinition","scope":3929,"src":"2099:350:7","visibility":"public"},{"canonicalName":"CoverLib.PoolInfo","id":3924,"members":[{"constant":false,"id":3905,"mutability":"mutable","name":"poolName","nameLocation":"2491:8:7","nodeType":"VariableDeclaration","scope":3924,"src":"2484:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3904,"name":"string","nodeType":"ElementaryTypeName","src":"2484:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"poolId","nameLocation":"2518:6:7","nodeType":"VariableDeclaration","scope":3924,"src":"2510:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2510:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"dailyPayout","nameLocation":"2543:11:7","nodeType":"VariableDeclaration","scope":3924,"src":"2535:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"depositAmount","nameLocation":"2573:13:7","nodeType":"VariableDeclaration","scope":3924,"src":"2565:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2565:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3913,"mutability":"mutable","name":"apy","nameLocation":"2605:3:7","nodeType":"VariableDeclaration","scope":3924,"src":"2597:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"minPeriod","nameLocation":"2627:9:7","nodeType":"VariableDeclaration","scope":3924,"src":"2619:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"tvl","nameLocation":"2655:3:7","nodeType":"VariableDeclaration","scope":3924,"src":"2647:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2647:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3919,"mutability":"mutable","name":"tcp","nameLocation":"2677:3:7","nodeType":"VariableDeclaration","scope":3924,"src":"2669:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3918,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"isActive","nameLocation":"2725:8:7","nodeType":"VariableDeclaration","scope":3924,"src":"2720:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3920,"name":"bool","nodeType":"ElementaryTypeName","src":"2720:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3923,"mutability":"mutable","name":"accruedPayout","nameLocation":"2791:13:7","nodeType":"VariableDeclaration","scope":3924,"src":"2783:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"2783:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"2464:8:7","nodeType":"StructDefinition","scope":3929,"src":"2457:355:7","visibility":"public"},{"canonicalName":"CoverLib.Status","id":3928,"members":[{"id":3925,"name":"Active","nameLocation":"2843:6:7","nodeType":"EnumValue","src":"2843:6:7"},{"id":3926,"name":"Due","nameLocation":"2860:3:7","nodeType":"EnumValue","src":"2860:3:7"},{"id":3927,"name":"Withdrawn","nameLocation":"2874:9:7","nodeType":"EnumValue","src":"2874:9:7"}],"name":"Status","nameLocation":"2825:6:7","nodeType":"EnumDefinition","src":"2820:70:7"}],"scope":3930,"src":"60:2833:7","usedErrors":[],"usedEvents":[]}],"src":"33:2860:7"},"id":7},"contracts/InsuranceCover.sol":{"ast":{"absolutePath":"contracts/InsuranceCover.sol","exportedSymbols":{"Context":[255],"CoverLib":[3929],"IERC20":[225],"ILP":[4090],"IbqBTC":[3962],"InsuranceCover":[5726],"Math":[1982],"Ownable":[147],"Panic":[307],"ReentrancyGuard":[376],"SafeCast":[3747]},"id":5727,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3931,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"33:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5727,"sourceUnit":226,"src":"60:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3933,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5727,"sourceUnit":148,"src":"118:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":3934,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5727,"sourceUnit":377,"src":"172:59:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":3935,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5727,"sourceUnit":1983,"src":"233:53:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CoverLib.sol","file":"./CoverLib.sol","id":3936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5727,"sourceUnit":3930,"src":"288:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IbqBTC","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3962,"linearizedBaseContracts":[3962],"name":"IbqBTC","nameLocation":"326:6:8","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e2094eda","id":3943,"implemented":false,"kind":"function","modifiers":[],"name":"bqMint","nameLocation":"349:6:8","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"account","nameLocation":"364:7:8","nodeType":"VariableDeclaration","scope":3943,"src":"356:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3937,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3940,"mutability":"mutable","name":"amount","nameLocation":"381:6:8","nodeType":"VariableDeclaration","scope":3943,"src":"373:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"373:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"355:33:8"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[],"src":"397:0:8"},"scope":3962,"src":"340:58:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9dc29fac","id":3950,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"413:4:8","nodeType":"FunctionDefinition","parameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"account","nameLocation":"426:7:8","nodeType":"VariableDeclaration","scope":3950,"src":"418:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3944,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"amount","nameLocation":"443:6:8","nodeType":"VariableDeclaration","scope":3950,"src":"435:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"417:33:8"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[],"src":"459:0:8"},"scope":3962,"src":"404:56:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":3961,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"475:12:8","nodeType":"FunctionDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"from","nameLocation":"506:4:8","nodeType":"VariableDeclaration","scope":3961,"src":"498:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3951,"name":"address","nodeType":"ElementaryTypeName","src":"498:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3954,"mutability":"mutable","name":"to","nameLocation":"529:2:8","nodeType":"VariableDeclaration","scope":3961,"src":"521:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3953,"name":"address","nodeType":"ElementaryTypeName","src":"521:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"amount","nameLocation":"550:6:8","nodeType":"VariableDeclaration","scope":3961,"src":"542:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"487:76:8"},"returnParameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3961,"src":"582:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3958,"name":"bool","nodeType":"ElementaryTypeName","src":"582:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"581:6:8"},"scope":3962,"src":"466:122:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5727,"src":"316:275:8","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"ILP","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4090,"linearizedBaseContracts":[4090],"name":"ILP","nameLocation":"605:3:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ILP.Deposits","id":3982,"members":[{"constant":false,"id":3964,"mutability":"mutable","name":"lp","nameLocation":"651:2:8","nodeType":"VariableDeclaration","scope":3982,"src":"643:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3963,"name":"address","nodeType":"ElementaryTypeName","src":"643:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3966,"mutability":"mutable","name":"amount","nameLocation":"672:6:8","nodeType":"VariableDeclaration","scope":3982,"src":"664:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"poolId","nameLocation":"697:6:8","nodeType":"VariableDeclaration","scope":3982,"src":"689:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"689:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3970,"mutability":"mutable","name":"dailyPayout","nameLocation":"722:11:8","nodeType":"VariableDeclaration","scope":3982,"src":"714:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"status","nameLocation":"751:6:8","nodeType":"VariableDeclaration","scope":3982,"src":"744:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4018","typeString":"enum ILP.Status"},"typeName":{"id":3972,"nodeType":"UserDefinedTypeName","pathNode":{"id":3971,"name":"Status","nameLocations":["744:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4018,"src":"744:6:8"},"referencedDeclaration":4018,"src":"744:6:8","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4018","typeString":"enum ILP.Status"}},"visibility":"internal"},{"constant":false,"id":3975,"mutability":"mutable","name":"daysLeft","nameLocation":"776:8:8","nodeType":"VariableDeclaration","scope":3982,"src":"768:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"startDate","nameLocation":"803:9:8","nodeType":"VariableDeclaration","scope":3982,"src":"795:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"expiryDate","nameLocation":"831:10:8","nodeType":"VariableDeclaration","scope":3982,"src":"823:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"accruedPayout","nameLocation":"860:13:8","nodeType":"VariableDeclaration","scope":3982,"src":"852:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Deposits","nameLocation":"623:8:8","nodeType":"StructDefinition","scope":4090,"src":"616:265:8","visibility":"public"},{"canonicalName":"ILP.Pool","id":4015,"members":[{"constant":false,"id":3984,"mutability":"mutable","name":"id","nameLocation":"920:2:8","nodeType":"VariableDeclaration","scope":4015,"src":"912:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3986,"mutability":"mutable","name":"poolName","nameLocation":"940:8:8","nodeType":"VariableDeclaration","scope":4015,"src":"933:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3985,"name":"string","nodeType":"ElementaryTypeName","src":"933:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"riskType","nameLocation":"977:8:8","nodeType":"VariableDeclaration","scope":4015,"src":"959:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3988,"nodeType":"UserDefinedTypeName","pathNode":{"id":3987,"name":"CoverLib.RiskType","nameLocations":["959:8:8","968:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"959:17:8"},"referencedDeclaration":3814,"src":"959:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"apy","nameLocation":"1004:3:8","nodeType":"VariableDeclaration","scope":4015,"src":"996:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"996:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"minPeriod","nameLocation":"1026:9:8","nodeType":"VariableDeclaration","scope":4015,"src":"1018:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3995,"mutability":"mutable","name":"tvl","nameLocation":"1054:3:8","nodeType":"VariableDeclaration","scope":4015,"src":"1046:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3997,"mutability":"mutable","name":"baseValue","nameLocation":"1076:9:8","nodeType":"VariableDeclaration","scope":4015,"src":"1068:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1068:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3999,"mutability":"mutable","name":"coverTvl","nameLocation":"1104:8:8","nodeType":"VariableDeclaration","scope":4015,"src":"1096:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1096:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"tcp","nameLocation":"1131:3:8","nodeType":"VariableDeclaration","scope":4015,"src":"1123:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"1123:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"isActive","nameLocation":"1150:8:8","nodeType":"VariableDeclaration","scope":4015,"src":"1145:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4002,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"percentageSplitBalance","nameLocation":"1177:22:8","nodeType":"VariableDeclaration","scope":4015,"src":"1169:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"1169:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"investmentArmPercent","nameLocation":"1218:20:8","nodeType":"VariableDeclaration","scope":4015,"src":"1210:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1210:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"leverage","nameLocation":"1255:8:8","nodeType":"VariableDeclaration","scope":4015,"src":"1249:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4008,"name":"uint8","nodeType":"ElementaryTypeName","src":"1249:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"asset","nameLocation":"1282:5:8","nodeType":"VariableDeclaration","scope":4015,"src":"1274:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4010,"name":"address","nodeType":"ElementaryTypeName","src":"1274:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4014,"mutability":"mutable","name":"assetType","nameLocation":"1315:9:8","nodeType":"VariableDeclaration","scope":4015,"src":"1298:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$4021","typeString":"enum ILP.AssetDepositType"},"typeName":{"id":4013,"nodeType":"UserDefinedTypeName","pathNode":{"id":4012,"name":"AssetDepositType","nameLocations":["1298:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":4021,"src":"1298:16:8"},"referencedDeclaration":4021,"src":"1298:16:8","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$4021","typeString":"enum ILP.AssetDepositType"}},"visibility":"internal"}],"name":"Pool","nameLocation":"896:4:8","nodeType":"StructDefinition","scope":4090,"src":"889:443:8","visibility":"public"},{"canonicalName":"ILP.Status","id":4018,"members":[{"id":4016,"name":"Active","nameLocation":"1363:6:8","nodeType":"EnumValue","src":"1363:6:8"},{"id":4017,"name":"Expired","nameLocation":"1380:7:8","nodeType":"EnumValue","src":"1380:7:8"}],"name":"Status","nameLocation":"1345:6:8","nodeType":"EnumDefinition","src":"1340:54:8"},{"canonicalName":"ILP.AssetDepositType","id":4021,"members":[{"id":4019,"name":"Native","nameLocation":"1435:6:8","nodeType":"EnumValue","src":"1435:6:8"},{"id":4020,"name":"ERC20","nameLocation":"1452:5:8","nodeType":"EnumValue","src":"1452:5:8"}],"name":"AssetDepositType","nameLocation":"1407:16:8","nodeType":"EnumDefinition","src":"1402:62:8"},{"functionSelector":"4e055244","id":4031,"implemented":false,"kind":"function","modifiers":[],"name":"getUserDeposit","nameLocation":"1481:14:8","nodeType":"FunctionDefinition","parameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"_poolId","nameLocation":"1514:7:8","nodeType":"VariableDeclaration","scope":4031,"src":"1506:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4025,"mutability":"mutable","name":"_user","nameLocation":"1540:5:8","nodeType":"VariableDeclaration","scope":4031,"src":"1532:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4024,"name":"address","nodeType":"ElementaryTypeName","src":"1532:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1495:57:8"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4031,"src":"1576:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits"},"typeName":{"id":4028,"nodeType":"UserDefinedTypeName","pathNode":{"id":4027,"name":"Deposits","nameLocations":["1576:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3982,"src":"1576:8:8"},"referencedDeclaration":3982,"src":"1576:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_storage_ptr","typeString":"struct ILP.Deposits"}},"visibility":"internal"}],"src":"1575:17:8"},"scope":4090,"src":"1472:121:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"82457766","id":4042,"implemented":false,"kind":"function","modifiers":[],"name":"getVaultDeposits","nameLocation":"1610:16:8","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"vaultId","nameLocation":"1645:7:8","nodeType":"VariableDeclaration","scope":4042,"src":"1637:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4035,"mutability":"mutable","name":"user","nameLocation":"1671:4:8","nodeType":"VariableDeclaration","scope":4042,"src":"1663:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4034,"name":"address","nodeType":"ElementaryTypeName","src":"1663:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1626:56:8"},"returnParameters":{"id":4041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4042,"src":"1706:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3982_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits[]"},"typeName":{"baseType":{"id":4038,"nodeType":"UserDefinedTypeName","pathNode":{"id":4037,"name":"Deposits","nameLocations":["1706:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3982,"src":"1706:8:8"},"referencedDeclaration":3982,"src":"1706:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_storage_ptr","typeString":"struct ILP.Deposits"}},"id":4039,"nodeType":"ArrayTypeName","src":"1706:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3982_storage_$dyn_storage_ptr","typeString":"struct ILP.Deposits[]"}},"visibility":"internal"}],"src":"1705:19:8"},"scope":4090,"src":"1601:124:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"068bcd8d","id":4050,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"1742:7:8","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"_poolId","nameLocation":"1768:7:8","nodeType":"VariableDeclaration","scope":4050,"src":"1760:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1749:33:8"},"returnParameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4050,"src":"1833:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":4047,"nodeType":"UserDefinedTypeName","pathNode":{"id":4046,"name":"CoverLib.Pool","nameLocations":["1833:8:8","1842:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"1833:13:8"},"referencedDeclaration":3859,"src":"1833:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"src":"1832:22:8"},"scope":4090,"src":"1733:122:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a4948d85","id":4057,"implemented":false,"kind":"function","modifiers":[],"name":"reducePercentageSplit","nameLocation":"1872:21:8","nodeType":"FunctionDefinition","parameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"_poolId","nameLocation":"1912:7:8","nodeType":"VariableDeclaration","scope":4057,"src":"1904:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1904:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4054,"mutability":"mutable","name":"__poolPercentageSplit","nameLocation":"1938:21:8","nodeType":"VariableDeclaration","scope":4057,"src":"1930:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1893:73:8"},"returnParameters":{"id":4056,"nodeType":"ParameterList","parameters":[],"src":"1975:0:8"},"scope":4090,"src":"1863:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9fd36b15","id":4064,"implemented":false,"kind":"function","modifiers":[],"name":"increasePercentageSplit","nameLocation":"1991:23:8","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"_poolId","nameLocation":"2033:7:8","nodeType":"VariableDeclaration","scope":4064,"src":"2025:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2025:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"__poolPercentageSplit","nameLocation":"2059:21:8","nodeType":"VariableDeclaration","scope":4064,"src":"2051:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4060,"name":"uint256","nodeType":"ElementaryTypeName","src":"2051:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2014:73:8"},"returnParameters":{"id":4063,"nodeType":"ParameterList","parameters":[],"src":"2096:0:8"},"scope":4090,"src":"1982:115:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c7aa9874","id":4072,"implemented":false,"kind":"function","modifiers":[],"name":"addPoolCover","nameLocation":"2112:12:8","nodeType":"FunctionDefinition","parameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"_poolId","nameLocation":"2143:7:8","nodeType":"VariableDeclaration","scope":4072,"src":"2135:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"_cover","nameLocation":"2183:6:8","nodeType":"VariableDeclaration","scope":4072,"src":"2161:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":4068,"nodeType":"UserDefinedTypeName","pathNode":{"id":4067,"name":"CoverLib.Cover","nameLocations":["2161:8:8","2170:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"2161:14:8"},"referencedDeclaration":3790,"src":"2161:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"src":"2124:72:8"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[],"src":"2205:0:8"},"scope":4090,"src":"2103:103:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a14764d0","id":4080,"implemented":false,"kind":"function","modifiers":[],"name":"updatePoolCovers","nameLocation":"2221:16:8","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"_poolId","nameLocation":"2256:7:8","nodeType":"VariableDeclaration","scope":4080,"src":"2248:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4073,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4077,"mutability":"mutable","name":"_cover","nameLocation":"2296:6:8","nodeType":"VariableDeclaration","scope":4080,"src":"2274:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":4076,"nodeType":"UserDefinedTypeName","pathNode":{"id":4075,"name":"CoverLib.Cover","nameLocations":["2274:8:8","2283:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"2274:14:8"},"referencedDeclaration":3790,"src":"2274:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"src":"2237:72:8"},"returnParameters":{"id":4079,"nodeType":"ParameterList","parameters":[],"src":"2318:0:8"},"scope":4090,"src":"2212:107:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7eb111f0","id":4089,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolCovers","nameLocation":"2334:13:8","nodeType":"FunctionDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"_poolId","nameLocation":"2366:7:8","nodeType":"VariableDeclaration","scope":4089,"src":"2358:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2358:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2347:33:8"},"returnParameters":{"id":4088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4089,"src":"2404:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":4085,"nodeType":"UserDefinedTypeName","pathNode":{"id":4084,"name":"CoverLib.Cover","nameLocations":["2404:8:8","2413:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"2404:14:8"},"referencedDeclaration":3790,"src":"2404:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":4086,"nodeType":"ArrayTypeName","src":"2404:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"src":"2403:25:8"},"scope":4090,"src":"2325:104:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5727,"src":"595:1837:8","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":4091,"name":"ReentrancyGuard","nameLocations":["2463:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":376,"src":"2463:15:8"},"id":4092,"nodeType":"InheritanceSpecifier","src":"2463:15:8"},{"baseName":{"id":4093,"name":"Ownable","nameLocations":["2480:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2480:7:8"},"id":4094,"nodeType":"InheritanceSpecifier","src":"2480:7:8"}],"canonicalName":"InsuranceCover","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5726,"linearizedBaseContracts":[5726,147,255,376],"name":"InsuranceCover","nameLocation":"2445:14:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4096,"libraryName":{"id":4095,"name":"CoverLib","nameLocations":["2501:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3929,"src":"2501:8:8"},"nodeType":"UsingForDirective","src":"2495:21:8"},{"global":false,"id":4099,"libraryName":{"id":4097,"name":"Math","nameLocations":["2528:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"2528:4:8"},"nodeType":"UsingForDirective","src":"2522:23:8","typeName":{"id":4098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"errorSelector":"e067835f","id":4101,"name":"LpNotActive","nameLocation":"2559:11:8","nodeType":"ErrorDefinition","parameters":{"id":4100,"nodeType":"ParameterList","parameters":[],"src":"2570:2:8"},"src":"2553:20:8"},{"errorSelector":"bc6072f1","id":4103,"name":"InsufficientPoolBalance","nameLocation":"2585:23:8","nodeType":"ErrorDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[],"src":"2608:2:8"},"src":"2579:32:8"},{"errorSelector":"ed700a67","id":4105,"name":"NoClaimableReward","nameLocation":"2623:17:8","nodeType":"ErrorDefinition","parameters":{"id":4104,"nodeType":"ParameterList","parameters":[],"src":"2640:2:8"},"src":"2617:26:8"},{"errorSelector":"3f132b12","id":4107,"name":"InvalidCoverDuration","nameLocation":"2655:20:8","nodeType":"ErrorDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[],"src":"2675:2:8"},"src":"2649:29:8"},{"errorSelector":"bccd4043","id":4109,"name":"CoverNotAvailable","nameLocation":"2690:17:8","nodeType":"ErrorDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[],"src":"2707:2:8"},"src":"2684:26:8"},{"errorSelector":"9857cbd9","id":4111,"name":"UserHaveAlreadyPurchasedCover","nameLocation":"2722:29:8","nodeType":"ErrorDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[],"src":"2751:2:8"},"src":"2716:38:8"},{"errorSelector":"d202940c","id":4113,"name":"NameAlreadyExists","nameLocation":"2766:17:8","nodeType":"ErrorDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[],"src":"2783:2:8"},"src":"2760:26:8"},{"errorSelector":"2c5211c6","id":4115,"name":"InvalidAmount","nameLocation":"2798:13:8","nodeType":"ErrorDefinition","parameters":{"id":4114,"nodeType":"ParameterList","parameters":[],"src":"2811:2:8"},"src":"2792:22:8"},{"errorSelector":"1ba7dd47","id":4117,"name":"UnsupportedCoverType","nameLocation":"2826:20:8","nodeType":"ErrorDefinition","parameters":{"id":4116,"nodeType":"ParameterList","parameters":[],"src":"2846:2:8"},"src":"2820:29:8"},{"errorSelector":"d3c913ea","id":4119,"name":"WrongPool","nameLocation":"2861:9:8","nodeType":"ErrorDefinition","parameters":{"id":4118,"nodeType":"ParameterList","parameters":[],"src":"2870:2:8"},"src":"2855:18:8"},{"constant":false,"functionSelector":"357917b7","id":4121,"mutability":"mutable","name":"coverFeeBalance","nameLocation":"2893:15:8","nodeType":"VariableDeclaration","scope":5726,"src":"2881:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4120,"name":"uint","nodeType":"ElementaryTypeName","src":"2881:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8acee3cf","id":4124,"mutability":"mutable","name":"lpContract","nameLocation":"2926:10:8","nodeType":"VariableDeclaration","scope":5726,"src":"2915:21:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"},"typeName":{"id":4123,"nodeType":"UserDefinedTypeName","pathNode":{"id":4122,"name":"ILP","nameLocations":["2915:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":4090,"src":"2915:3:8"},"referencedDeclaration":4090,"src":"2915:3:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"visibility":"public"},{"constant":false,"functionSelector":"34808ec3","id":4127,"mutability":"mutable","name":"bqBTC","nameLocation":"2957:5:8","nodeType":"VariableDeclaration","scope":5726,"src":"2943:19:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3962","typeString":"contract IbqBTC"},"typeName":{"id":4126,"nodeType":"UserDefinedTypeName","pathNode":{"id":4125,"name":"IbqBTC","nameLocations":["2943:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3962,"src":"2943:6:8"},"referencedDeclaration":3962,"src":"2943:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3962","typeString":"contract IbqBTC"}},"visibility":"public"},{"constant":false,"functionSelector":"996b8a6f","id":4129,"mutability":"mutable","name":"bqBTCAddress","nameLocation":"2984:12:8","nodeType":"VariableDeclaration","scope":5726,"src":"2969:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4128,"name":"address","nodeType":"ElementaryTypeName","src":"2969:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9b4dc8cc","id":4131,"mutability":"mutable","name":"lpAddress","nameLocation":"3018:9:8","nodeType":"VariableDeclaration","scope":5726,"src":"3003:24:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4130,"name":"address","nodeType":"ElementaryTypeName","src":"3003:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"5aa6e675","id":4133,"mutability":"mutable","name":"governance","nameLocation":"3049:10:8","nodeType":"VariableDeclaration","scope":5726,"src":"3034:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4132,"name":"address","nodeType":"ElementaryTypeName","src":"3034:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"35c1d349","id":4136,"mutability":"mutable","name":"participants","nameLocation":"3083:12:8","nodeType":"VariableDeclaration","scope":5726,"src":"3066:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4134,"name":"address","nodeType":"ElementaryTypeName","src":"3066:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4135,"nodeType":"ArrayTypeName","src":"3066:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"96f3a8ad","id":4140,"mutability":"mutable","name":"participation","nameLocation":"3137:13:8","nodeType":"VariableDeclaration","scope":5726,"src":"3102:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4139,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4137,"name":"address","nodeType":"ElementaryTypeName","src":"3110:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3102:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3121:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"782ea619","id":4144,"mutability":"mutable","name":"coverExists","nameLocation":"3191:11:8","nodeType":"VariableDeclaration","scope":5726,"src":"3159:43:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":4143,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3159:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4142,"name":"bool","nodeType":"ElementaryTypeName","src":"3178:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"7a728e7f","id":4150,"mutability":"mutable","name":"NextLpClaimTime","nameLocation":"3264:15:8","nodeType":"VariableDeclaration","scope":5726,"src":"3209:70:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":4149,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4145,"name":"address","nodeType":"ElementaryTypeName","src":"3217:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3209:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4148,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3236:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3228:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"0db981a0","id":4156,"mutability":"mutable","name":"LastVaultClaimTime","nameLocation":"3341:18:8","nodeType":"VariableDeclaration","scope":5726,"src":"3286:73:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":4155,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4151,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3286:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4154,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3313:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3305:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"3324:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"9e7b399e","id":4163,"mutability":"mutable","name":"userCovers","nameLocation":"3450:10:8","nodeType":"VariableDeclaration","scope":5726,"src":"3368:92:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo))"},"typeName":{"id":4162,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4157,"name":"address","nodeType":"ElementaryTypeName","src":"3376:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3368:65:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4161,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3387:45:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4160,"nodeType":"UserDefinedTypeName","pathNode":{"id":4159,"name":"CoverLib.GenericCoverInfo","nameLocations":["3406:8:8","3415:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"3406:25:8"},"referencedDeclaration":3810,"src":"3406:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}}}},"visibility":"public"},{"constant":false,"functionSelector":"6299df6c","id":4168,"mutability":"mutable","name":"covers","nameLocation":"3509:6:8","nodeType":"VariableDeclaration","scope":5726,"src":"3467:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover)"},"typeName":{"id":4167,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3467:34:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4166,"nodeType":"UserDefinedTypeName","pathNode":{"id":4165,"name":"CoverLib.Cover","nameLocations":["3486:8:8","3495:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"3486:14:8"},"referencedDeclaration":3790,"src":"3486:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}}},"visibility":"public"},{"constant":false,"functionSelector":"feb0b8f5","id":4170,"mutability":"mutable","name":"coverCount","nameLocation":"3539:10:8","nodeType":"VariableDeclaration","scope":5726,"src":"3524:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3524:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fb643583","id":4173,"mutability":"mutable","name":"coverIds","nameLocation":"3573:8:8","nodeType":"VariableDeclaration","scope":5726,"src":"3556:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3556:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4172,"nodeType":"ArrayTypeName","src":"3556:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5928d65cc6ae9f07a7673f1a5a2f98d81f1bb0c2bc53bcaa33d6f11cf426f25e","id":4182,"name":"CoverCreated","nameLocation":"3596:12:8","nodeType":"EventDefinition","parameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"indexed":true,"mutability":"mutable","name":"coverId","nameLocation":"3635:7:8","nodeType":"VariableDeclaration","scope":4182,"src":"3619:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3619:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4177,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"3660:4:8","nodeType":"VariableDeclaration","scope":4182,"src":"3653:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4176,"name":"string","nodeType":"ElementaryTypeName","src":"3653:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4180,"indexed":false,"mutability":"mutable","name":"riskType","nameLocation":"3693:8:8","nodeType":"VariableDeclaration","scope":4182,"src":"3675:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4179,"nodeType":"UserDefinedTypeName","pathNode":{"id":4178,"name":"CoverLib.RiskType","nameLocations":["3675:8:8","3684:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"3675:17:8"},"referencedDeclaration":3814,"src":"3675:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"}],"src":"3608:100:8"},"src":"3590:119:8"},{"anonymous":false,"eventSelector":"23b0f39e0762759ffb18632a1a2b79c9eb58571454e5f7c36e0a2f81759e0a34","id":4193,"name":"CoverPurchased","nameLocation":"3721:14:8","nodeType":"EventDefinition","parameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3762:4:8","nodeType":"VariableDeclaration","scope":4193,"src":"3746:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4183,"name":"address","nodeType":"ElementaryTypeName","src":"3746:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4186,"indexed":false,"mutability":"mutable","name":"coverValue","nameLocation":"3785:10:8","nodeType":"VariableDeclaration","scope":4193,"src":"3777:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"3777:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4188,"indexed":false,"mutability":"mutable","name":"coverFee","nameLocation":"3814:8:8","nodeType":"VariableDeclaration","scope":4193,"src":"3806:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"3806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4191,"indexed":false,"mutability":"mutable","name":"riskType","nameLocation":"3851:8:8","nodeType":"VariableDeclaration","scope":4193,"src":"3833:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4190,"nodeType":"UserDefinedTypeName","pathNode":{"id":4189,"name":"CoverLib.RiskType","nameLocations":["3833:8:8","3842:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"3833:17:8"},"referencedDeclaration":3814,"src":"3833:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"}],"src":"3735:131:8"},"src":"3715:152:8"},{"anonymous":false,"eventSelector":"0408e6e0b73daf4c873106e95fd067260fbff8bf9d1b499cad563d4480d45bac","id":4201,"name":"PayoutClaimed","nameLocation":"3879:13:8","nodeType":"EventDefinition","parameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3919:4:8","nodeType":"VariableDeclaration","scope":4201,"src":"3903:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4194,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4197,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"3950:6:8","nodeType":"VariableDeclaration","scope":4201,"src":"3934:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3934:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4199,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3975:6:8","nodeType":"VariableDeclaration","scope":4201,"src":"3967:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3967:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:96:8"},"src":"3873:116:8"},{"anonymous":false,"eventSelector":"758a67328ba53c1867c0272bbd2ca10d6fe71d37120188c523fe7ae7bdbbe469","id":4210,"name":"CoverUpdated","nameLocation":"4001:12:8","nodeType":"EventDefinition","parameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4203,"indexed":true,"mutability":"mutable","name":"coverId","nameLocation":"4040:7:8","nodeType":"VariableDeclaration","scope":4210,"src":"4024:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"4024:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4205,"indexed":false,"mutability":"mutable","name":"coverName","nameLocation":"4065:9:8","nodeType":"VariableDeclaration","scope":4210,"src":"4058:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4204,"name":"string","nodeType":"ElementaryTypeName","src":"4058:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4208,"indexed":false,"mutability":"mutable","name":"riskType","nameLocation":"4103:8:8","nodeType":"VariableDeclaration","scope":4210,"src":"4085:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4207,"nodeType":"UserDefinedTypeName","pathNode":{"id":4206,"name":"CoverLib.RiskType","nameLocations":["4085:8:8","4094:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"4085:17:8"},"referencedDeclaration":3814,"src":"4085:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"}],"src":"4013:105:8"},"src":"3995:124:8"},{"body":{"id":4242,"nodeType":"Block","src":"4256:147:8","statements":[{"expression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4222,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"4267:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4224,"name":"_lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"4284:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4223,"name":"ILP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"4280:3:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILP_$4090_$","typeString":"type(contract ILP)"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4280:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"src":"4267:29:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":4227,"nodeType":"ExpressionStatement","src":"4267:29:8"},{"expression":{"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"lpAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"4307:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4229,"name":"_lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"4319:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4307:23:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4231,"nodeType":"ExpressionStatement","src":"4307:23:8"},{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4232,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"4341:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3962","typeString":"contract IbqBTC"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4234,"name":"_bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"4356:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4233,"name":"IbqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"4349:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IbqBTC_$3962_$","typeString":"type(contract IbqBTC)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4349:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3962","typeString":"contract IbqBTC"}},"src":"4341:22:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3962","typeString":"contract IbqBTC"}},"id":4237,"nodeType":"ExpressionStatement","src":"4341:22:8"},{"expression":{"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4238,"name":"bqBTCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"4374:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4239,"name":"_bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"4389:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4374:21:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4241,"nodeType":"ExpressionStatement","src":"4374:21:8"}]},"id":4243,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4219,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"4241:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4220,"kind":"baseConstructorSpecifier","modifierName":{"id":4218,"name":"Ownable","nameLocations":["4233:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"4233:7:8"},"nodeType":"ModifierInvocation","src":"4233:22:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"_lpContract","nameLocation":"4157:11:8","nodeType":"VariableDeclaration","scope":4243,"src":"4149:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4211,"name":"address","nodeType":"ElementaryTypeName","src":"4149:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4214,"mutability":"mutable","name":"_initialOwner","nameLocation":"4187:13:8","nodeType":"VariableDeclaration","scope":4243,"src":"4179:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4213,"name":"address","nodeType":"ElementaryTypeName","src":"4179:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4216,"mutability":"mutable","name":"_bqBTC","nameLocation":"4219:6:8","nodeType":"VariableDeclaration","scope":4243,"src":"4211:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4215,"name":"address","nodeType":"ElementaryTypeName","src":"4211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4138:94:8"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[],"src":"4256:0:8"},"scope":5726,"src":"4127:276:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4335,"nodeType":"Block","src":"4694:890:8","statements":[{"assignments":[4266],"declarations":[{"constant":false,"id":4266,"mutability":"mutable","name":"_maxAmount","nameLocation":"4713:10:8","nodeType":"VariableDeclaration","scope":4335,"src":"4705:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"4705:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4273,"initialValue":{"arguments":[{"id":4268,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"4764:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4269,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"4789:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4270,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"4811:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},{"id":4271,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"4835:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4267,"name":"_validateAndGetPoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"4726:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_enum$_RiskType_$3814_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,enum CoverLib.RiskType,uint256) view returns (uint256)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4726:129:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4705:150:8"},{"expression":{"arguments":[{"id":4277,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"4901:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4278,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"4910:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4274,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"4868:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:21:8","memberName":"reducePercentageSplit","nodeType":"MemberAccess","referencedDeclaration":4057,"src":"4868:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4280,"nodeType":"ExpressionStatement","src":"4868:52:8"},{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4933:12:8","subExpression":{"id":4281,"name":"coverCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"4933:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4283,"nodeType":"ExpressionStatement","src":"4933:12:8"},{"assignments":[4288],"declarations":[{"constant":false,"id":4288,"mutability":"mutable","name":"cover","nameLocation":"4978:5:8","nodeType":"VariableDeclaration","scope":4335,"src":"4956:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":4287,"nodeType":"UserDefinedTypeName","pathNode":{"id":4286,"name":"CoverLib.Cover","nameLocations":["4956:8:8","4965:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"4956:14:8"},"referencedDeclaration":3790,"src":"4956:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"id":4303,"initialValue":{"arguments":[{"id":4291,"name":"coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"5020:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4292,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"5053:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4293,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"5088:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},{"id":4294,"name":"_chains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"5120:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4295,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"5152:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4296,"name":"_cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"5182:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4297,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"5218:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5256:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4299,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"5283:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4300,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"5316:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4301,"name":"_cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"5343:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4289,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"4986:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3929_$","typeString":"type(library CoverLib)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4995:5:8","memberName":"Cover","nodeType":"MemberAccess","referencedDeclaration":3790,"src":"4986:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Cover_$3790_storage_ptr_$","typeString":"type(struct CoverLib.Cover storage pointer)"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5016:2:8","5042:9:8","5078:8:8","5112:6:8","5142:8:8","5176:4:8","5202:14:8","5243:11:8","5272:9:8","5308:6:8","5338:3:8"],"names":["id","coverName","riskType","chains","capacity","cost","capacityAmount","coverValues","maxAmount","poolId","CID"],"nodeType":"FunctionCall","src":"4986:373:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"nodeType":"VariableDeclarationStatement","src":"4956:403:8"},{"expression":{"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4304,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"5370:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":4306,"indexExpression":{"id":4305,"name":"coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"5377:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5370:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4307,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"5388:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"src":"5370:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":4309,"nodeType":"ExpressionStatement","src":"5370:23:8"},{"expression":{"arguments":[{"id":4313,"name":"coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"5418:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4310,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"5404:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5413:4:8","memberName":"push","nodeType":"MemberAccess","src":"5404:13:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4315,"nodeType":"ExpressionStatement","src":"5404:22:8"},{"expression":{"arguments":[{"id":4319,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"5461:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4320,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"5470:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}],"expression":{"id":4316,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"5437:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5448:12:8","memberName":"addPoolCover","nodeType":"MemberAccess","referencedDeclaration":4072,"src":"5437:23:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_struct$_Cover_$3790_memory_ptr_$returns$__$","typeString":"function (uint256,struct CoverLib.Cover memory) external"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5437:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4322,"nodeType":"ExpressionStatement","src":"5437:39:8"},{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4323,"name":"coverExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"5487:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4325,"indexExpression":{"id":4324,"name":"coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"5499:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5487:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5510:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5487:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4328,"nodeType":"ExpressionStatement","src":"5487:27:8"},{"eventCall":{"arguments":[{"id":4330,"name":"coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"5545:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4331,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"5554:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4332,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"5566:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}],"id":4329,"name":"CoverCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"5532:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_enum$_RiskType_$3814_$returns$__$","typeString":"function (uint256,string memory,enum CoverLib.RiskType)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5532:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4334,"nodeType":"EmitStatement","src":"5527:49:8"}]},"functionSelector":"9732bdb5","id":4336,"implemented":true,"kind":"function","modifiers":[{"id":4263,"kind":"modifierInvocation","modifierName":{"id":4262,"name":"onlyOwner","nameLocations":["4684:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4684:9:8"},"nodeType":"ModifierInvocation","src":"4684:9:8"}],"name":"createCover","nameLocation":"4420:11:8","nodeType":"FunctionDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"coverId","nameLocation":"4450:7:8","nodeType":"VariableDeclaration","scope":4336,"src":"4442:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4442:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4247,"mutability":"mutable","name":"_cid","nameLocation":"4482:4:8","nodeType":"VariableDeclaration","scope":4336,"src":"4468:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4246,"name":"string","nodeType":"ElementaryTypeName","src":"4468:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"_riskType","nameLocation":"4515:9:8","nodeType":"VariableDeclaration","scope":4336,"src":"4497:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4249,"nodeType":"UserDefinedTypeName","pathNode":{"id":4248,"name":"CoverLib.RiskType","nameLocations":["4497:8:8","4506:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"4497:17:8"},"referencedDeclaration":3814,"src":"4497:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"_coverName","nameLocation":"4549:10:8","nodeType":"VariableDeclaration","scope":4336,"src":"4535:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4251,"name":"string","nodeType":"ElementaryTypeName","src":"4535:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"_chains","nameLocation":"4584:7:8","nodeType":"VariableDeclaration","scope":4336,"src":"4570:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4253,"name":"string","nodeType":"ElementaryTypeName","src":"4570:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"_capacity","nameLocation":"4610:9:8","nodeType":"VariableDeclaration","scope":4336,"src":"4602:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"_cost","nameLocation":"4638:5:8","nodeType":"VariableDeclaration","scope":4336,"src":"4630:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"4630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4260,"mutability":"mutable","name":"_poolId","nameLocation":"4662:7:8","nodeType":"VariableDeclaration","scope":4336,"src":"4654:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4259,"name":"uint256","nodeType":"ElementaryTypeName","src":"4654:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4431:245:8"},"returnParameters":{"id":4264,"nodeType":"ParameterList","parameters":[],"src":"4694:0:8"},"scope":5726,"src":"4411:1173:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4438,"nodeType":"Block","src":"5788:691:8","statements":[{"assignments":[4355],"declarations":[{"constant":false,"id":4355,"mutability":"mutable","name":"coversInPool","nameLocation":"5823:12:8","nodeType":"VariableDeclaration","scope":4438,"src":"5799:36:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":4353,"nodeType":"UserDefinedTypeName","pathNode":{"id":4352,"name":"CoverLib.Cover","nameLocations":["5799:8:8","5808:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"5799:14:8"},"referencedDeclaration":3790,"src":"5799:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":4354,"nodeType":"ArrayTypeName","src":"5799:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":4360,"initialValue":{"arguments":[{"id":4358,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"5863:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4356,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"5838:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5849:13:8","memberName":"getPoolCovers","nodeType":"MemberAccess","referencedDeclaration":4089,"src":"5838:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view external returns (struct CoverLib.Cover memory[] memory)"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5838:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5799:71:8"},{"body":{"id":4393,"nodeType":"Block","src":"5931:239:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":4375,"name":"coversInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"5995:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":4377,"indexExpression":{"id":4376,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"6008:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5995:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":4378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6011:9:8","memberName":"coverName","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"5995:25:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4373,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5978:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5982:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"5978:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5978:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4372,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5968:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5968:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4384,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"6070:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4382,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6053:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6057:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"6053:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6053:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4381,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6043:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6043:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5968:114:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4392,"nodeType":"IfStatement","src":"5946:213:8","trueBody":{"id":4391,"nodeType":"Block","src":"6098:61:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4388,"name":"NameAlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"6124:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6124:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4390,"nodeType":"RevertStatement","src":"6117:26:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"5901:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4366,"name":"coversInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"5905:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5918:6:8","memberName":"length","nodeType":"MemberAccess","src":"5905:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5901:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4394,"initializationExpression":{"assignments":[4362],"declarations":[{"constant":false,"id":4362,"mutability":"mutable","name":"i","nameLocation":"5894:1:8","nodeType":"VariableDeclaration","scope":4394,"src":"5886:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"5886:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4364,"initialValue":{"hexValue":"30","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5898:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5886:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5926:3:8","subExpression":{"id":4369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"5926:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4371,"nodeType":"ExpressionStatement","src":"5926:3:8"},"nodeType":"ForStatement","src":"5881:289:8"},{"assignments":[4399],"declarations":[{"constant":false,"id":4399,"mutability":"mutable","name":"pool","nameLocation":"6201:4:8","nodeType":"VariableDeclaration","scope":4438,"src":"6180:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":4398,"nodeType":"UserDefinedTypeName","pathNode":{"id":4397,"name":"CoverLib.Pool","nameLocations":["6180:8:8","6189:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"6180:13:8"},"referencedDeclaration":3859,"src":"6180:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":4404,"initialValue":{"arguments":[{"id":4402,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"6227:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4400,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"6208:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6219:7:8","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":4050,"src":"6208:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Pool_$3859_memory_ptr_$","typeString":"function (uint256) view external returns (struct CoverLib.Pool memory)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6208:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"nodeType":"VariableDeclarationStatement","src":"6180:54:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4405,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"6251:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":4406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6256:8:8","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"6251:13:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4407,"name":"riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"6268:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"src":"6251:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"6280:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4410,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"6291:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":4411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6296:22:8","memberName":"percentageSplitBalance","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"6291:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6280:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6251:67:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4418,"nodeType":"IfStatement","src":"6247:118:8","trueBody":{"id":4417,"nodeType":"Block","src":"6320:45:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4414,"name":"WrongPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"6342:9:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6342:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4416,"nodeType":"RevertStatement","src":"6335:18:8"}]}},{"assignments":[4420],"declarations":[{"constant":false,"id":4420,"mutability":"mutable","name":"maxAmount","nameLocation":"6385:9:8","nodeType":"VariableDeclaration","scope":4438,"src":"6377:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"6377:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4434,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4421,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"6398:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":4422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6403:3:8","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"6398:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"6411:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6422:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"6411:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6410:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:3:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6410:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6409:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6398:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6397:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6438:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"6397:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6377:65:8"},{"expression":{"components":[{"id":4435,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"6461:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6460:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4349,"id":4437,"nodeType":"Return","src":"6453:18:8"}]},"id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAndGetPoolInfo","nameLocation":"5601:23:8","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"_coverName","nameLocation":"5649:10:8","nodeType":"VariableDeclaration","scope":4439,"src":"5635:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4337,"name":"string","nodeType":"ElementaryTypeName","src":"5635:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4340,"mutability":"mutable","name":"poolId","nameLocation":"5678:6:8","nodeType":"VariableDeclaration","scope":4439,"src":"5670:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"5670:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"riskType","nameLocation":"5713:8:8","nodeType":"VariableDeclaration","scope":4439,"src":"5695:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4342,"nodeType":"UserDefinedTypeName","pathNode":{"id":4341,"name":"CoverLib.RiskType","nameLocations":["5695:8:8","5704:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"5695:17:8"},"referencedDeclaration":3814,"src":"5695:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":4345,"mutability":"mutable","name":"capacity","nameLocation":"5740:8:8","nodeType":"VariableDeclaration","scope":4439,"src":"5732:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"5732:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5624:131:8"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4439,"src":"5779:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"5779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5778:9:8"},"scope":5726,"src":"5592:887:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4676,"nodeType":"Block","src":"6771:1750:8","statements":[{"assignments":[4465],"declarations":[{"constant":false,"id":4465,"mutability":"mutable","name":"pool","nameLocation":"6803:4:8","nodeType":"VariableDeclaration","scope":4676,"src":"6782:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":4464,"nodeType":"UserDefinedTypeName","pathNode":{"id":4463,"name":"CoverLib.Pool","nameLocations":["6782:8:8","6791:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"6782:13:8"},"referencedDeclaration":3859,"src":"6782:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":4470,"initialValue":{"arguments":[{"id":4468,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"6829:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4466,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"6810:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6821:7:8","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":4050,"src":"6810:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Pool_$3859_memory_ptr_$","typeString":"function (uint256) view external returns (struct CoverLib.Pool memory)"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6810:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"nodeType":"VariableDeclarationStatement","src":"6782:55:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4471,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"6854:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":4472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6859:8:8","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"6854:13:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4473,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"6871:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"src":"6854:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4475,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"6884:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4476,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"6896:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":4477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6901:22:8","memberName":"percentageSplitBalance","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"6896:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6884:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6854:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4484,"nodeType":"IfStatement","src":"6850:120:8","trueBody":{"id":4483,"nodeType":"Block","src":"6925:45:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4480,"name":"WrongPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"6947:9:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6947:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4482,"nodeType":"RevertStatement","src":"6940:18:8"}]}},{"assignments":[4489],"declarations":[{"constant":false,"id":4489,"mutability":"mutable","name":"cover","nameLocation":"7005:5:8","nodeType":"VariableDeclaration","scope":4676,"src":"6982:28:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":4488,"nodeType":"UserDefinedTypeName","pathNode":{"id":4487,"name":"CoverLib.Cover","nameLocations":["6982:8:8","6991:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"6982:14:8"},"referencedDeclaration":3790,"src":"6982:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"id":4493,"initialValue":{"baseExpression":{"id":4490,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"7013:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":4492,"indexExpression":{"id":4491,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"7020:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7013:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6982:47:8"},{"assignments":[4495],"declarations":[{"constant":false,"id":4495,"mutability":"mutable","name":"_maxAmount","nameLocation":"7050:10:8","nodeType":"VariableDeclaration","scope":4676,"src":"7042:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"7042:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4509,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4496,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"7064:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":4497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7069:3:8","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"7064:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4498,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"7077:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7089:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7077:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7076:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7097:3:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7076:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7075:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7064:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7063:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7063:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7042:67:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4510,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"7126:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7132:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"7126:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4512,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"7146:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7126:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4518,"nodeType":"IfStatement","src":"7122:81:8","trueBody":{"id":4517,"nodeType":"Block","src":"7158:45:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4514,"name":"WrongPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"7180:9:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7180:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4516,"nodeType":"RevertStatement","src":"7173:18:8"}]}},{"assignments":[4524],"declarations":[{"constant":false,"id":4524,"mutability":"mutable","name":"coversInPool","nameLocation":"7239:12:8","nodeType":"VariableDeclaration","scope":4676,"src":"7215:36:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":4522,"nodeType":"UserDefinedTypeName","pathNode":{"id":4521,"name":"CoverLib.Cover","nameLocations":["7215:8:8","7224:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"7215:14:8"},"referencedDeclaration":3790,"src":"7215:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":4523,"nodeType":"ArrayTypeName","src":"7215:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":4529,"initialValue":{"arguments":[{"id":4527,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"7293:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4525,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"7254:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7265:13:8","memberName":"getPoolCovers","nodeType":"MemberAccess","referencedDeclaration":4089,"src":"7254:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view external returns (struct CoverLib.Cover memory[] memory)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7254:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7215:96:8"},{"body":{"id":4569,"nodeType":"Block","src":"7372:290:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":4544,"name":"coversInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"7436:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":4546,"indexExpression":{"id":4545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"7449:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7436:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":4547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7452:9:8","memberName":"coverName","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"7436:25:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4542,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7419:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7423:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"7419:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7419:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4541,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7409:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7409:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4553,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"7511:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4551,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7494:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7498:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"7494:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7494:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4550,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7484:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7484:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7409:114:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4557,"name":"coversInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"7544:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":4559,"indexExpression":{"id":4558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"7557:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7544:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":4560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7560:2:8","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"7544:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4561,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"7566:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7544:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7409:165:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4568,"nodeType":"IfStatement","src":"7387:264:8","trueBody":{"id":4567,"nodeType":"Block","src":"7590:61:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4564,"name":"NameAlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"7616:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7616:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4566,"nodeType":"RevertStatement","src":"7609:26:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"7342:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4535,"name":"coversInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"7346:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7359:6:8","memberName":"length","nodeType":"MemberAccess","src":"7346:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7342:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4570,"initializationExpression":{"assignments":[4531],"declarations":[{"constant":false,"id":4531,"mutability":"mutable","name":"i","nameLocation":"7335:1:8","nodeType":"VariableDeclaration","scope":4570,"src":"7327:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4530,"name":"uint256","nodeType":"ElementaryTypeName","src":"7327:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4533,"initialValue":{"hexValue":"30","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7339:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7327:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7367:3:8","subExpression":{"id":4538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"7367:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4540,"nodeType":"ExpressionStatement","src":"7367:3:8"},"nodeType":"ForStatement","src":"7322:340:8"},{"assignments":[4572],"declarations":[{"constant":false,"id":4572,"mutability":"mutable","name":"oldCoverCapacity","nameLocation":"7682:16:8","nodeType":"VariableDeclaration","scope":4676,"src":"7674:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"7674:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4575,"initialValue":{"expression":{"id":4573,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"7701:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7707:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"7701:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7674:41:8"},{"expression":{"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4576,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"7728:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7734:9:8","memberName":"coverName","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"7728:15:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4579,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"7746:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7728:28:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4581,"nodeType":"ExpressionStatement","src":"7728:28:8"},{"expression":{"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4582,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"7767:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7773:6:8","memberName":"chains","nodeType":"MemberAccess","referencedDeclaration":3775,"src":"7767:12:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4585,"name":"_chains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"7782:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7767:22:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4587,"nodeType":"ExpressionStatement","src":"7767:22:8"},{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4588,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"7800:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7806:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"7800:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4591,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"7817:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7800:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4593,"nodeType":"ExpressionStatement","src":"7800:26:8"},{"expression":{"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4594,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"7837:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7843:4:8","memberName":"cost","nodeType":"MemberAccess","referencedDeclaration":3779,"src":"7837:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4597,"name":"_cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"7850:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7837:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4599,"nodeType":"ExpressionStatement","src":"7837:18:8"},{"expression":{"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4600,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"7866:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7872:3:8","memberName":"CID","nodeType":"MemberAccess","referencedDeclaration":3789,"src":"7866:9:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4603,"name":"_cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"7878:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7866:16:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4605,"nodeType":"ExpressionStatement","src":"7866:16:8"},{"expression":{"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4606,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"7893:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7899:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"7893:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4609,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"7916:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7893:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4611,"nodeType":"ExpressionStatement","src":"7893:33:8"},{"expression":{"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4612,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"7937:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7943:6:8","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"7937:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4615,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"7952:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7937:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4617,"nodeType":"ExpressionStatement","src":"7937:22:8"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4618,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"7970:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7976:9:8","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"7970:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"7988:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4622,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"8001:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8007:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"8001:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7970:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4626,"nodeType":"ExpressionStatement","src":"7970:48:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"oldCoverCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"8035:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4628,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"8054:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8035:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"oldCoverCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"8221:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4645,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"8240:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8221:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4661,"nodeType":"IfStatement","src":"8217:178:8","trueBody":{"id":4660,"nodeType":"Block","src":"8251:144:8","statements":[{"assignments":[4648],"declarations":[{"constant":false,"id":4648,"mutability":"mutable","name":"difference","nameLocation":"8274:10:8","nodeType":"VariableDeclaration","scope":4660,"src":"8266:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"8266:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4652,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4649,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"8287:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4650,"name":"oldCoverCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"8299:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8287:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8266:49:8"},{"expression":{"arguments":[{"id":4656,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"8363:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4657,"name":"difference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"8372:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4653,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"8330:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8341:21:8","memberName":"reducePercentageSplit","nodeType":"MemberAccess","referencedDeclaration":4057,"src":"8330:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8330:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4659,"nodeType":"ExpressionStatement","src":"8330:53:8"}]}},"id":4662,"nodeType":"IfStatement","src":"8031:364:8","trueBody":{"id":4643,"nodeType":"Block","src":"8065:146:8","statements":[{"assignments":[4631],"declarations":[{"constant":false,"id":4631,"mutability":"mutable","name":"difference","nameLocation":"8088:10:8","nodeType":"VariableDeclaration","scope":4643,"src":"8080:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"8080:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4635,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4632,"name":"oldCoverCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"8101:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4633,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"8120:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8101:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8080:49:8"},{"expression":{"arguments":[{"id":4639,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"8179:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4640,"name":"difference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"8188:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4636,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"8144:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8155:23:8","memberName":"increasePercentageSplit","nodeType":"MemberAccess","referencedDeclaration":4064,"src":"8144:34:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8144:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4642,"nodeType":"ExpressionStatement","src":"8144:55:8"}]}},{"expression":{"arguments":[{"id":4666,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"8435:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4667,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"8444:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}],"expression":{"id":4663,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"8407:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8418:16:8","memberName":"updatePoolCovers","nodeType":"MemberAccess","referencedDeclaration":4080,"src":"8407:27:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_struct$_Cover_$3790_memory_ptr_$returns$__$","typeString":"function (uint256,struct CoverLib.Cover memory) external"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8407:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4669,"nodeType":"ExpressionStatement","src":"8407:43:8"},{"eventCall":{"arguments":[{"id":4671,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"8481:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4672,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"8491:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4673,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"8503:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}],"id":4670,"name":"CoverUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"8468:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_enum$_RiskType_$3814_$returns$__$","typeString":"function (uint256,string memory,enum CoverLib.RiskType)"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8468:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4675,"nodeType":"EmitStatement","src":"8463:50:8"}]},"functionSelector":"8de4d101","id":4677,"implemented":true,"kind":"function","modifiers":[{"id":4459,"kind":"modifierInvocation","modifierName":{"id":4458,"name":"onlyOwner","nameLocations":["6761:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6761:9:8"},"nodeType":"ModifierInvocation","src":"6761:9:8"}],"name":"updateCover","nameLocation":"6496:11:8","nodeType":"FunctionDefinition","parameters":{"id":4457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"_coverId","nameLocation":"6526:8:8","nodeType":"VariableDeclaration","scope":4677,"src":"6518:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"6518:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4443,"mutability":"mutable","name":"_coverName","nameLocation":"6559:10:8","nodeType":"VariableDeclaration","scope":4677,"src":"6545:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4442,"name":"string","nodeType":"ElementaryTypeName","src":"6545:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4446,"mutability":"mutable","name":"_riskType","nameLocation":"6598:9:8","nodeType":"VariableDeclaration","scope":4677,"src":"6580:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4445,"nodeType":"UserDefinedTypeName","pathNode":{"id":4444,"name":"CoverLib.RiskType","nameLocations":["6580:8:8","6589:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"6580:17:8"},"referencedDeclaration":3814,"src":"6580:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":4448,"mutability":"mutable","name":"_cid","nameLocation":"6632:4:8","nodeType":"VariableDeclaration","scope":4677,"src":"6618:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4447,"name":"string","nodeType":"ElementaryTypeName","src":"6618:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4450,"mutability":"mutable","name":"_chains","nameLocation":"6661:7:8","nodeType":"VariableDeclaration","scope":4677,"src":"6647:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4449,"name":"string","nodeType":"ElementaryTypeName","src":"6647:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4452,"mutability":"mutable","name":"_capacity","nameLocation":"6687:9:8","nodeType":"VariableDeclaration","scope":4677,"src":"6679:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"6679:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"_cost","nameLocation":"6715:5:8","nodeType":"VariableDeclaration","scope":4677,"src":"6707:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"6707:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4456,"mutability":"mutable","name":"_poolId","nameLocation":"6739:7:8","nodeType":"VariableDeclaration","scope":4677,"src":"6731:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4455,"name":"uint256","nodeType":"ElementaryTypeName","src":"6731:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6507:246:8"},"returnParameters":{"id":4460,"nodeType":"ParameterList","parameters":[],"src":"6771:0:8"},"scope":5726,"src":"6487:2034:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4899,"nodeType":"Block","src":"8695:2059:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"_coverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"8710:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8723:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8710:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4697,"nodeType":"IfStatement","src":"8706:69:8","trueBody":{"id":4696,"nodeType":"Block","src":"8726:49:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4693,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"8748:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8748:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4695,"nodeType":"RevertStatement","src":"8741:22:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"_coverPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"8789:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3237","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8805:2:8","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"8789:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"_coverPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"8811:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"333636","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8827:3:8","typeDescriptions":{"typeIdentifier":"t_rational_366_by_1","typeString":"int_const 366"},"value":"366"},"src":"8811:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8789:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4709,"nodeType":"IfStatement","src":"8785:103:8","trueBody":{"id":4708,"nodeType":"Block","src":"8832:56:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4705,"name":"InvalidCoverDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"8854:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8854:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4707,"nodeType":"RevertStatement","src":"8847:29:8"}]}},{"condition":{"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8902:22:8","subExpression":{"baseExpression":{"id":4710,"name":"coverExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"8903:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4712,"indexExpression":{"id":4711,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"8915:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8903:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"IfStatement","src":"8898:81:8","trueBody":{"id":4717,"nodeType":"Block","src":"8926:53:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4714,"name":"CoverNotAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"8948:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8948:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4716,"nodeType":"RevertStatement","src":"8941:26:8"}]}},{"assignments":[4723],"declarations":[{"constant":false,"id":4723,"mutability":"mutable","name":"cover","nameLocation":"9014:5:8","nodeType":"VariableDeclaration","scope":4899,"src":"8991:28:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":4722,"nodeType":"UserDefinedTypeName","pathNode":{"id":4721,"name":"CoverLib.Cover","nameLocations":["8991:8:8","9000:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"8991:14:8"},"referencedDeclaration":3790,"src":"8991:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"id":4727,"initialValue":{"baseExpression":{"id":4724,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"9022:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":4726,"indexExpression":{"id":4725,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"9029:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9022:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8991:47:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"_coverValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"9053:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4729,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9067:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9073:9:8","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"9067:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9053:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4736,"nodeType":"IfStatement","src":"9049:94:8","trueBody":{"id":4735,"nodeType":"Block","src":"9084:59:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4732,"name":"InsufficientPoolBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"9106:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9106:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4734,"nodeType":"RevertStatement","src":"9099:32:8"}]}},{"assignments":[4738],"declarations":[{"constant":false,"id":4738,"mutability":"mutable","name":"newCoverValues","nameLocation":"9163:14:8","nodeType":"VariableDeclaration","scope":4899,"src":"9155:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"9155:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4743,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4739,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9180:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9186:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"9180:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4741,"name":"_coverValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"9200:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9180:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9155:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4744,"name":"newCoverValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"9228:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4745,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9245:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9251:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"9245:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9228:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4752,"nodeType":"IfStatement","src":"9224:102:8","trueBody":{"id":4751,"nodeType":"Block","src":"9267:59:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4748,"name":"InsufficientPoolBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"9289:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9289:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4750,"nodeType":"RevertStatement","src":"9282:32:8"}]}},{"expression":{"arguments":[{"expression":{"id":4756,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9349:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9353:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9349:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4758,"name":"_coverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"9361:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4753,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"9338:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3962","typeString":"contract IbqBTC"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9344:4:8","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":3950,"src":"9338:10:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9338:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4760,"nodeType":"ExpressionStatement","src":"9338:33:8"},{"expression":{"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4761,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9384:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9390:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"9384:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4764,"name":"newCoverValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"9404:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9384:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4766,"nodeType":"ExpressionStatement","src":"9384:34:8"},{"expression":{"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4767,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9429:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9435:9:8","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"9429:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4770,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9447:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9453:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"9447:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4772,"name":"newCoverValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"9470:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9447:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9429:55:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4775,"nodeType":"ExpressionStatement","src":"9429:55:8"},{"expression":{"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4776,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9497:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9503:9:8","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"9497:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4779,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9516:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9522:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"9516:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4781,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9539:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9545:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"9539:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9516:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9515:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9497:60:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4786,"nodeType":"ExpressionStatement","src":"9497:60:8"},{"assignments":[4791],"declarations":[{"constant":false,"id":4791,"mutability":"mutable","name":"userCover","nameLocation":"9602:9:8","nodeType":"VariableDeclaration","scope":4899,"src":"9568:43:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"},"typeName":{"id":4790,"nodeType":"UserDefinedTypeName","pathNode":{"id":4789,"name":"CoverLib.GenericCoverInfo","nameLocations":["9568:8:8","9577:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"9568:25:8"},"referencedDeclaration":3810,"src":"9568:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"visibility":"internal"}],"id":4798,"initialValue":{"baseExpression":{"baseExpression":{"id":4792,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9614:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":4795,"indexExpression":{"expression":{"id":4793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9625:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9629:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9625:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9614:22:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":4797,"indexExpression":{"id":4796,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"9651:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9614:56:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9568:102:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4799,"name":"userCover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"9687:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo storage pointer"}},"id":4800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9697:10:8","memberName":"coverValue","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"9687:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9687:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4836,"nodeType":"Block","src":"10201:65:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4833,"name":"UserHaveAlreadyPurchasedCover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10223:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4835,"nodeType":"RevertStatement","src":"10216:38:8"}]},"id":4837,"nodeType":"IfStatement","src":"9683:583:8","trueBody":{"id":4832,"nodeType":"Block","src":"9714:481:8","statements":[{"expression":{"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4803,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"9729:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":4807,"indexExpression":{"expression":{"id":4804,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9740:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9744:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9740:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9729:22:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":4808,"indexExpression":{"id":4806,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"9752:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9729:32:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4811,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9815:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9819:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9815:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4813,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"9853:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4814,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9890:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9896:8:8","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":3773,"src":"9890:14:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},{"expression":{"id":4816,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"9934:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9940:9:8","memberName":"coverName","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"9934:15:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":4818,"name":"_coverValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"9980:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10021:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4820,"name":"_coverPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"10054:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4821,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10093:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10099:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"10093:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4823,"name":"_coverPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"10112:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10127:6:8","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"10112:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10111:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10093:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10163:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4809,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"9764:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3929_$","typeString":"type(library CoverLib)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9773:16:8","memberName":"GenericCoverInfo","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"9764:25:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GenericCoverInfo_$3810_storage_ptr_$","typeString":"type(struct CoverLib.GenericCoverInfo storage pointer)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9809:4:8","9844:7:8","9880:8:8","9923:9:8","9968:10:8","10010:9:8","10041:11:8","10085:6:8","10153:8:8"],"names":["user","coverId","riskType","coverName","coverValue","claimPaid","coverPeriod","endDay","isActive"],"nodeType":"FunctionCall","src":"9764:419:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory"}},"src":"9729:454:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"id":4831,"nodeType":"ExpressionStatement","src":"9729:454:8"}]}},{"assignments":[4839],"declarations":[{"constant":false,"id":4839,"mutability":"mutable","name":"userExists","nameLocation":"10283:10:8","nodeType":"VariableDeclaration","scope":4899,"src":"10278:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4838,"name":"bool","nodeType":"ElementaryTypeName","src":"10278:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4841,"initialValue":{"hexValue":"66616c7365","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10296:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"10278:23:8"},{"body":{"id":4866,"nodeType":"Block","src":"10359:137:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4853,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"10378:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4855,"indexExpression":{"id":4854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"10391:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10378:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4856,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10397:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10401:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10397:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10378:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4865,"nodeType":"IfStatement","src":"10374:111:8","trueBody":{"id":4864,"nodeType":"Block","src":"10409:76:8","statements":[{"expression":{"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4859,"name":"userExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"10428:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10441:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10428:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4862,"nodeType":"ExpressionStatement","src":"10428:17:8"},{"id":4863,"nodeType":"Break","src":"10464:5:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"10329:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4847,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"10333:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10346:6:8","memberName":"length","nodeType":"MemberAccess","src":"10333:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10329:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4867,"initializationExpression":{"assignments":[4843],"declarations":[{"constant":false,"id":4843,"mutability":"mutable","name":"i","nameLocation":"10322:1:8","nodeType":"VariableDeclaration","scope":4867,"src":"10317:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4842,"name":"uint","nodeType":"ElementaryTypeName","src":"10317:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4845,"initialValue":{"hexValue":"30","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10326:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10317:10:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10354:3:8","subExpression":{"id":4850,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"10354:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4852,"nodeType":"ExpressionStatement","src":"10354:3:8"},"nodeType":"ForStatement","src":"10312:184:8"},{"condition":{"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10512:11:8","subExpression":{"id":4868,"name":"userExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"10513:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4878,"nodeType":"IfStatement","src":"10508:73:8","trueBody":{"id":4877,"nodeType":"Block","src":"10525:56:8","statements":[{"expression":{"arguments":[{"expression":{"id":4873,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10558:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10562:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10558:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4870,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"10540:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10553:4:8","memberName":"push","nodeType":"MemberAccess","src":"10540:17:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10540:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4876,"nodeType":"ExpressionStatement","src":"10540:29:8"}]}},{"expression":{"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4879,"name":"participation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"10591:13:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4882,"indexExpression":{"expression":{"id":4880,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10605:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10609:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10605:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10591:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10620:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10591:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4885,"nodeType":"ExpressionStatement","src":"10591:30:8"},{"expression":{"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4886,"name":"coverFeeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"10634:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4887,"name":"_coverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"10653:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10634:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4889,"nodeType":"ExpressionStatement","src":"10634:28:8"},{"eventCall":{"arguments":[{"expression":{"id":4891,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10695:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10699:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10695:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4893,"name":"_coverValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"10707:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4894,"name":"_coverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"10720:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4895,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"10731:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10737:8:8","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":3773,"src":"10731:14:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}],"id":4890,"name":"CoverPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"10680:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_RiskType_$3814_$returns$__$","typeString":"function (address,uint256,uint256,enum CoverLib.RiskType)"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10680:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4898,"nodeType":"EmitStatement","src":"10675:71:8"}]},"functionSelector":"602710a4","id":4900,"implemented":true,"kind":"function","modifiers":[{"id":4688,"kind":"modifierInvocation","modifierName":{"id":4687,"name":"nonReentrant","nameLocations":["8682:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"8682:12:8"},"nodeType":"ModifierInvocation","src":"8682:12:8"}],"name":"purchaseCover","nameLocation":"8538:13:8","nodeType":"FunctionDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4679,"mutability":"mutable","name":"_coverId","nameLocation":"8570:8:8","nodeType":"VariableDeclaration","scope":4900,"src":"8562:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4678,"name":"uint256","nodeType":"ElementaryTypeName","src":"8562:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4681,"mutability":"mutable","name":"_coverValue","nameLocation":"8597:11:8","nodeType":"VariableDeclaration","scope":4900,"src":"8589:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4680,"name":"uint256","nodeType":"ElementaryTypeName","src":"8589:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4683,"mutability":"mutable","name":"_coverPeriod","nameLocation":"8627:12:8","nodeType":"VariableDeclaration","scope":4900,"src":"8619:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4682,"name":"uint256","nodeType":"ElementaryTypeName","src":"8619:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4685,"mutability":"mutable","name":"_coverFee","nameLocation":"8658:9:8","nodeType":"VariableDeclaration","scope":4900,"src":"8650:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4684,"name":"uint256","nodeType":"ElementaryTypeName","src":"8650:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8551:123:8"},"returnParameters":{"id":4689,"nodeType":"ParameterList","parameters":[],"src":"8695:0:8"},"scope":5726,"src":"8529:2225:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5006,"nodeType":"Block","src":"10877:702:8","statements":[{"assignments":[4910],"declarations":[{"constant":false,"id":4910,"mutability":"mutable","name":"actualCount","nameLocation":"10896:11:8","nodeType":"VariableDeclaration","scope":5006,"src":"10888:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4909,"name":"uint256","nodeType":"ElementaryTypeName","src":"10888:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4912,"initialValue":{"hexValue":"30","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10910:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10888:23:8"},{"body":{"id":4943,"nodeType":"Block","src":"10968:154:8","statements":[{"assignments":[4925],"declarations":[{"constant":false,"id":4925,"mutability":"mutable","name":"id","nameLocation":"10991:2:8","nodeType":"VariableDeclaration","scope":4943,"src":"10983:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"10983:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4929,"initialValue":{"baseExpression":{"id":4926,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"10996:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4928,"indexExpression":{"id":4927,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"11005:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10996:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10983:24:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":4930,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"11026:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":4932,"indexExpression":{"id":4931,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"11037:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11026:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":4934,"indexExpression":{"id":4933,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"11043:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11026:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"id":4935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11047:10:8","memberName":"coverValue","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"11026:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11060:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11026:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4942,"nodeType":"IfStatement","src":"11022:89:8","trueBody":{"id":4941,"nodeType":"Block","src":"11063:48:8","statements":[{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11082:13:8","subExpression":{"id":4938,"name":"actualCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"11082:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"nodeType":"ExpressionStatement","src":"11082:13:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"10942:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4918,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"10946:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10955:6:8","memberName":"length","nodeType":"MemberAccess","src":"10946:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10942:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4944,"initializationExpression":{"assignments":[4914],"declarations":[{"constant":false,"id":4914,"mutability":"mutable","name":"i","nameLocation":"10935:1:8","nodeType":"VariableDeclaration","scope":4944,"src":"10927:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"10927:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4916,"initialValue":{"hexValue":"30","id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10939:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10927:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10963:3:8","subExpression":{"id":4921,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"10963:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4923,"nodeType":"ExpressionStatement","src":"10963:3:8"},"nodeType":"ForStatement","src":"10922:200:8"},{"assignments":[4950],"declarations":[{"constant":false,"id":4950,"mutability":"mutable","name":"userCoverList","nameLocation":"11182:13:8","nodeType":"VariableDeclaration","scope":5006,"src":"11134:61:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo[]"},"typeName":{"baseType":{"id":4948,"nodeType":"UserDefinedTypeName","pathNode":{"id":4947,"name":"CoverLib.GenericCoverInfo","nameLocations":["11134:8:8","11143:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"11134:25:8"},"referencedDeclaration":3810,"src":"11134:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"id":4949,"nodeType":"ArrayTypeName","src":"11134:27:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_storage_$dyn_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo[]"}},"visibility":"internal"}],"id":4957,"initialValue":{"arguments":[{"id":4955,"name":"actualCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"11230:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11198:31:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct CoverLib.GenericCoverInfo memory[] memory)"},"typeName":{"baseType":{"id":4952,"nodeType":"UserDefinedTypeName","pathNode":{"id":4951,"name":"CoverLib.GenericCoverInfo","nameLocations":["11202:8:8","11211:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"11202:25:8"},"referencedDeclaration":3810,"src":"11202:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"id":4953,"nodeType":"ArrayTypeName","src":"11202:27:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_storage_$dyn_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo[]"}}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11198:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11134:108:8"},{"assignments":[4959],"declarations":[{"constant":false,"id":4959,"mutability":"mutable","name":"index","nameLocation":"11263:5:8","nodeType":"VariableDeclaration","scope":5006,"src":"11255:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"11255:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4961,"initialValue":{"hexValue":"30","id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11271:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11255:17:8"},{"body":{"id":5002,"nodeType":"Block","src":"11329:210:8","statements":[{"assignments":[4974],"declarations":[{"constant":false,"id":4974,"mutability":"mutable","name":"id","nameLocation":"11352:2:8","nodeType":"VariableDeclaration","scope":5002,"src":"11344:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4973,"name":"uint256","nodeType":"ElementaryTypeName","src":"11344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4978,"initialValue":{"baseExpression":{"id":4975,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"11357:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4977,"indexExpression":{"id":4976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"11366:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11357:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11344:24:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":4979,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"11387:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":4981,"indexExpression":{"id":4980,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"11398:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11387:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":4983,"indexExpression":{"id":4982,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"11404:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11387:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"id":4984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11408:10:8","memberName":"coverValue","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"11387:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11421:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11387:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5001,"nodeType":"IfStatement","src":"11383:145:8","trueBody":{"id":5000,"nodeType":"Block","src":"11424:104:8","statements":[{"expression":{"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4987,"name":"userCoverList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"11443:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory[] memory"}},"id":4989,"indexExpression":{"id":4988,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"11457:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11443:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":4990,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"11466:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":4992,"indexExpression":{"id":4991,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"11477:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11466:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":4994,"indexExpression":{"id":4993,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"11483:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11466:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"src":"11443:43:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory"}},"id":4996,"nodeType":"ExpressionStatement","src":"11443:43:8"},{"expression":{"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11505:7:8","subExpression":{"id":4997,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"11505:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4999,"nodeType":"ExpressionStatement","src":"11505:7:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"11303:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4967,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"11307:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11316:6:8","memberName":"length","nodeType":"MemberAccess","src":"11307:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11303:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5003,"initializationExpression":{"assignments":[4963],"declarations":[{"constant":false,"id":4963,"mutability":"mutable","name":"i","nameLocation":"11296:1:8","nodeType":"VariableDeclaration","scope":5003,"src":"11288:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4962,"name":"uint256","nodeType":"ElementaryTypeName","src":"11288:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4965,"initialValue":{"hexValue":"30","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11300:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11288:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11324:3:8","subExpression":{"id":4970,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"11324:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4972,"nodeType":"ExpressionStatement","src":"11324:3:8"},"nodeType":"ForStatement","src":"11283:256:8"},{"expression":{"id":5004,"name":"userCoverList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"11558:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory[] memory"}},"functionReturnParameters":4908,"id":5005,"nodeType":"Return","src":"11551:20:8"}]},"functionSelector":"649718b2","id":5007,"implemented":true,"kind":"function","modifiers":[],"name":"getAllUserCovers","nameLocation":"10771:16:8","nodeType":"FunctionDefinition","parameters":{"id":4903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"user","nameLocation":"10806:4:8","nodeType":"VariableDeclaration","scope":5007,"src":"10798:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4901,"name":"address","nodeType":"ElementaryTypeName","src":"10798:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10787:30:8"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5007,"src":"10841:34:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo[]"},"typeName":{"baseType":{"id":4905,"nodeType":"UserDefinedTypeName","pathNode":{"id":4904,"name":"CoverLib.GenericCoverInfo","nameLocations":["10841:8:8","10850:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"10841:25:8"},"referencedDeclaration":3810,"src":"10841:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"id":4906,"nodeType":"ArrayTypeName","src":"10841:27:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_storage_$dyn_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo[]"}},"visibility":"internal"}],"src":"10840:36:8"},"scope":5726,"src":"10762:817:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5099,"nodeType":"Block","src":"11700:647:8","statements":[{"assignments":[5015],"declarations":[{"constant":false,"id":5015,"mutability":"mutable","name":"actualCount","nameLocation":"11719:11:8","nodeType":"VariableDeclaration","scope":5099,"src":"11711:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"11711:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5017,"initialValue":{"hexValue":"30","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11733:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11711:23:8"},{"body":{"id":5043,"nodeType":"Block","src":"11791:134:8","statements":[{"assignments":[5030],"declarations":[{"constant":false,"id":5030,"mutability":"mutable","name":"id","nameLocation":"11814:2:8","nodeType":"VariableDeclaration","scope":5043,"src":"11806:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5029,"name":"uint256","nodeType":"ElementaryTypeName","src":"11806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5034,"initialValue":{"baseExpression":{"id":5031,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"11819:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5033,"indexExpression":{"id":5032,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11828:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11819:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11806:24:8"},{"condition":{"baseExpression":{"id":5035,"name":"coverExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"11849:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":5037,"indexExpression":{"id":5036,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"11861:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11849:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5042,"nodeType":"IfStatement","src":"11845:69:8","trueBody":{"id":5041,"nodeType":"Block","src":"11866:48:8","statements":[{"expression":{"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11885:13:8","subExpression":{"id":5038,"name":"actualCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"11885:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5040,"nodeType":"ExpressionStatement","src":"11885:13:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5022,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11765:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5023,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"11769:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11778:6:8","memberName":"length","nodeType":"MemberAccess","src":"11769:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11765:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"initializationExpression":{"assignments":[5019],"declarations":[{"constant":false,"id":5019,"mutability":"mutable","name":"i","nameLocation":"11758:1:8","nodeType":"VariableDeclaration","scope":5044,"src":"11750:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"11750:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5021,"initialValue":{"hexValue":"30","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11762:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11750:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11786:3:8","subExpression":{"id":5026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11786:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5028,"nodeType":"ExpressionStatement","src":"11786:3:8"},"nodeType":"ForStatement","src":"11745:180:8"},{"assignments":[5050],"declarations":[{"constant":false,"id":5050,"mutability":"mutable","name":"availableCovers","nameLocation":"11961:15:8","nodeType":"VariableDeclaration","scope":5099,"src":"11937:39:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":5048,"nodeType":"UserDefinedTypeName","pathNode":{"id":5047,"name":"CoverLib.Cover","nameLocations":["11937:8:8","11946:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"11937:14:8"},"referencedDeclaration":3790,"src":"11937:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":5049,"nodeType":"ArrayTypeName","src":"11937:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":5057,"initialValue":{"arguments":[{"id":5055,"name":"actualCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"12014:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11979:20:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct CoverLib.Cover memory[] memory)"},"typeName":{"baseType":{"id":5052,"nodeType":"UserDefinedTypeName","pathNode":{"id":5051,"name":"CoverLib.Cover","nameLocations":["11983:8:8","11992:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"11983:14:8"},"referencedDeclaration":3790,"src":"11983:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":5053,"nodeType":"ArrayTypeName","src":"11983:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11979:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11937:99:8"},{"assignments":[5059],"declarations":[{"constant":false,"id":5059,"mutability":"mutable","name":"index","nameLocation":"12057:5:8","nodeType":"VariableDeclaration","scope":5099,"src":"12049:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"12049:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5061,"initialValue":{"hexValue":"30","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12049:17:8"},{"body":{"id":5095,"nodeType":"Block","src":"12123:182:8","statements":[{"assignments":[5074],"declarations":[{"constant":false,"id":5074,"mutability":"mutable","name":"id","nameLocation":"12146:2:8","nodeType":"VariableDeclaration","scope":5095,"src":"12138:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5073,"name":"uint256","nodeType":"ElementaryTypeName","src":"12138:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5078,"initialValue":{"baseExpression":{"id":5075,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"12151:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5077,"indexExpression":{"id":5076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"12160:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12151:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12138:24:8"},{"condition":{"baseExpression":{"id":5079,"name":"coverExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"12181:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":5081,"indexExpression":{"id":5080,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"12193:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12181:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5094,"nodeType":"IfStatement","src":"12177:117:8","trueBody":{"id":5093,"nodeType":"Block","src":"12198:96:8","statements":[{"expression":{"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5082,"name":"availableCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"12217:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":5084,"indexExpression":{"id":5083,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"12233:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12217:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5085,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"12242:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5087,"indexExpression":{"id":5086,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"12249:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12242:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"src":"12217:35:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":5089,"nodeType":"ExpressionStatement","src":"12217:35:8"},{"expression":{"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12271:7:8","subExpression":{"id":5090,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"12271:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5092,"nodeType":"ExpressionStatement","src":"12271:7:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5066,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"12097:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5067,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"12101:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12110:6:8","memberName":"length","nodeType":"MemberAccess","src":"12101:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12097:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5096,"initializationExpression":{"assignments":[5063],"declarations":[{"constant":false,"id":5063,"mutability":"mutable","name":"i","nameLocation":"12090:1:8","nodeType":"VariableDeclaration","scope":5096,"src":"12082:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5065,"initialValue":{"hexValue":"30","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12094:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12082:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12118:3:8","subExpression":{"id":5070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"12118:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5072,"nodeType":"ExpressionStatement","src":"12118:3:8"},"nodeType":"ForStatement","src":"12077:228:8"},{"expression":{"id":5097,"name":"availableCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"12324:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"functionReturnParameters":5013,"id":5098,"nodeType":"Return","src":"12317:22:8"}]},"functionSelector":"93b1ad38","id":5100,"implemented":true,"kind":"function","modifiers":[],"name":"getAllAvailableCovers","nameLocation":"11596:21:8","nodeType":"FunctionDefinition","parameters":{"id":5008,"nodeType":"ParameterList","parameters":[],"src":"11617:2:8"},"returnParameters":{"id":5013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5100,"src":"11670:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":5010,"nodeType":"UserDefinedTypeName","pathNode":{"id":5009,"name":"CoverLib.Cover","nameLocations":["11670:8:8","11679:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"11670:14:8"},"referencedDeclaration":3790,"src":"11670:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":5011,"nodeType":"ArrayTypeName","src":"11670:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"src":"11669:25:8"},"scope":5726,"src":"11587:760:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5112,"nodeType":"Block","src":"12457:42:8","statements":[{"expression":{"baseExpression":{"id":5108,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"12475:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5110,"indexExpression":{"id":5109,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"12482:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12475:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"functionReturnParameters":5107,"id":5111,"nodeType":"Return","src":"12468:23:8"}]},"functionSelector":"62858bfa","id":5113,"implemented":true,"kind":"function","modifiers":[],"name":"getCoverInfo","nameLocation":"12364:12:8","nodeType":"FunctionDefinition","parameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"_coverId","nameLocation":"12395:8:8","nodeType":"VariableDeclaration","scope":5113,"src":"12387:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"12387:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12376:34:8"},"returnParameters":{"id":5107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5113,"src":"12434:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":5105,"nodeType":"UserDefinedTypeName","pathNode":{"id":5104,"name":"CoverLib.Cover","nameLocations":["12434:8:8","12443:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"12434:14:8"},"referencedDeclaration":3790,"src":"12434:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"src":"12433:23:8"},"scope":5726,"src":"12355:144:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5129,"nodeType":"Block","src":"12647:52:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":5123,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"12665:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":5125,"indexExpression":{"id":5124,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"12676:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12665:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":5127,"indexExpression":{"id":5126,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"12682:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12665:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"functionReturnParameters":5122,"id":5128,"nodeType":"Return","src":"12658:33:8"}]},"functionSelector":"cadcb471","id":5130,"implemented":true,"kind":"function","modifiers":[],"name":"getUserCoverInfo","nameLocation":"12516:16:8","nodeType":"FunctionDefinition","parameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"user","nameLocation":"12551:4:8","nodeType":"VariableDeclaration","scope":5130,"src":"12543:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5114,"name":"address","nodeType":"ElementaryTypeName","src":"12543:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5117,"mutability":"mutable","name":"_coverId","nameLocation":"12574:8:8","nodeType":"VariableDeclaration","scope":5130,"src":"12566:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint256","nodeType":"ElementaryTypeName","src":"12566:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12532:57:8"},"returnParameters":{"id":5122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5130,"src":"12613:32:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo"},"typeName":{"id":5120,"nodeType":"UserDefinedTypeName","pathNode":{"id":5119,"name":"CoverLib.GenericCoverInfo","nameLocations":["12613:8:8","12622:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"12613:25:8"},"referencedDeclaration":3810,"src":"12613:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"visibility":"internal"}],"src":"12612:34:8"},"scope":5726,"src":"12507:192:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5161,"nodeType":"Block","src":"12858:131:8","statements":[{"expression":{"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5143,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"12869:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":5146,"indexExpression":{"id":5144,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"12880:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12869:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":5147,"indexExpression":{"id":5145,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"12886:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12869:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"id":5148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12896:10:8","memberName":"coverValue","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"12869:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5149,"name":"_claimPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"12910:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12869:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5151,"nodeType":"ExpressionStatement","src":"12869:51:8"},{"expression":{"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5152,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"12931:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":5155,"indexExpression":{"id":5153,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"12942:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12931:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":5156,"indexExpression":{"id":5154,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"12948:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12931:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"id":5157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12958:9:8","memberName":"claimPaid","nodeType":"MemberAccess","referencedDeclaration":3803,"src":"12931:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5158,"name":"_claimPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"12971:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12931:50:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5160,"nodeType":"ExpressionStatement","src":"12931:50:8"}]},"functionSelector":"7ceb4a69","id":5162,"implemented":true,"kind":"function","modifiers":[{"id":5139,"kind":"modifierInvocation","modifierName":{"id":5138,"name":"onlyGovernance","nameLocations":["12830:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":5713,"src":"12830:14:8"},"nodeType":"ModifierInvocation","src":"12830:14:8"},{"id":5141,"kind":"modifierInvocation","modifierName":{"id":5140,"name":"nonReentrant","nameLocations":["12845:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"12845:12:8"},"nodeType":"ModifierInvocation","src":"12845:12:8"}],"name":"updateUserCoverValue","nameLocation":"12716:20:8","nodeType":"FunctionDefinition","parameters":{"id":5137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5132,"mutability":"mutable","name":"user","nameLocation":"12755:4:8","nodeType":"VariableDeclaration","scope":5162,"src":"12747:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5131,"name":"address","nodeType":"ElementaryTypeName","src":"12747:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5134,"mutability":"mutable","name":"_coverId","nameLocation":"12778:8:8","nodeType":"VariableDeclaration","scope":5162,"src":"12770:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5133,"name":"uint256","nodeType":"ElementaryTypeName","src":"12770:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5136,"mutability":"mutable","name":"_claimPaid","nameLocation":"12805:10:8","nodeType":"VariableDeclaration","scope":5162,"src":"12797:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5135,"name":"uint256","nodeType":"ElementaryTypeName","src":"12797:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12736:86:8"},"returnParameters":{"id":5142,"nodeType":"ParameterList","parameters":[],"src":"12858:0:8"},"scope":5726,"src":"12707:282:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5222,"nodeType":"Block","src":"13067:381:8","statements":[{"body":{"id":5220,"nodeType":"Block","src":"13124:317:8","statements":[{"assignments":[5181],"declarations":[{"constant":false,"id":5181,"mutability":"mutable","name":"id","nameLocation":"13147:2:8","nodeType":"VariableDeclaration","scope":5220,"src":"13139:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5180,"name":"uint256","nodeType":"ElementaryTypeName","src":"13139:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5185,"initialValue":{"baseExpression":{"id":5182,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"13152:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5184,"indexExpression":{"id":5183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"13161:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13152:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13139:24:8"},{"assignments":[5190],"declarations":[{"constant":false,"id":5190,"mutability":"mutable","name":"userCover","nameLocation":"13212:9:8","nodeType":"VariableDeclaration","scope":5220,"src":"13178:43:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"},"typeName":{"id":5189,"nodeType":"UserDefinedTypeName","pathNode":{"id":5188,"name":"CoverLib.GenericCoverInfo","nameLocations":["13178:8:8","13187:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"13178:25:8"},"referencedDeclaration":3810,"src":"13178:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"visibility":"internal"}],"id":5196,"initialValue":{"baseExpression":{"baseExpression":{"id":5191,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"13224:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":5193,"indexExpression":{"id":5192,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"13235:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13224:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":5195,"indexExpression":{"id":5194,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"13242:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13224:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13178:67:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5197,"name":"userCover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"13264:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo storage pointer"}},"id":5198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13274:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3809,"src":"13264:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5199,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13286:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13292:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"13286:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5201,"name":"userCover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"13304:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo storage pointer"}},"id":5202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13314:6:8","memberName":"endDay","nodeType":"MemberAccess","referencedDeclaration":3807,"src":"13304:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13286:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13264:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5219,"nodeType":"IfStatement","src":"13260:170:8","trueBody":{"id":5218,"nodeType":"Block","src":"13322:108:8","statements":[{"expression":{"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5205,"name":"userCover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"13341:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo storage pointer"}},"id":5207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13351:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3809,"src":"13341:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13362:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13341:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5210,"nodeType":"ExpressionStatement","src":"13341:26:8"},{"expression":{"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"13386:28:8","subExpression":{"baseExpression":{"baseExpression":{"id":5211,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"13393:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":5213,"indexExpression":{"id":5212,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"13404:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13393:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":5215,"indexExpression":{"id":5214,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"13411:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13393:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5217,"nodeType":"ExpressionStatement","src":"13386:28:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"13098:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5174,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"13102:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13111:6:8","memberName":"length","nodeType":"MemberAccess","src":"13102:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13098:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5221,"initializationExpression":{"assignments":[5170],"declarations":[{"constant":false,"id":5170,"mutability":"mutable","name":"i","nameLocation":"13091:1:8","nodeType":"VariableDeclaration","scope":5221,"src":"13083:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5169,"name":"uint256","nodeType":"ElementaryTypeName","src":"13083:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5172,"initialValue":{"hexValue":"31","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13095:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13083:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13119:3:8","subExpression":{"id":5177,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"13119:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5179,"nodeType":"ExpressionStatement","src":"13119:3:8"},"nodeType":"ForStatement","src":"13078:363:8"}]},"functionSelector":"bfc664f3","id":5223,"implemented":true,"kind":"function","modifiers":[{"id":5167,"kind":"modifierInvocation","modifierName":{"id":5166,"name":"nonReentrant","nameLocations":["13054:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"13054:12:8"},"nodeType":"ModifierInvocation","src":"13054:12:8"}],"name":"deleteExpiredUserCovers","nameLocation":"13006:23:8","nodeType":"FunctionDefinition","parameters":{"id":5165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5164,"mutability":"mutable","name":"_user","nameLocation":"13038:5:8","nodeType":"VariableDeclaration","scope":5223,"src":"13030:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5163,"name":"address","nodeType":"ElementaryTypeName","src":"13030:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13029:15:8"},"returnParameters":{"id":5168,"nodeType":"ParameterList","parameters":[],"src":"13067:0:8"},"scope":5726,"src":"12997:451:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5230,"nodeType":"Block","src":"13518:41:8","statements":[{"expression":{"id":5228,"name":"coverFeeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"13536:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5227,"id":5229,"nodeType":"Return","src":"13529:22:8"}]},"functionSelector":"609c7604","id":5231,"implemented":true,"kind":"function","modifiers":[],"name":"getCoverFeeBalance","nameLocation":"13465:18:8","nodeType":"FunctionDefinition","parameters":{"id":5224,"nodeType":"ParameterList","parameters":[],"src":"13483:2:8"},"returnParameters":{"id":5227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5231,"src":"13509:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5225,"name":"uint256","nodeType":"ElementaryTypeName","src":"13509:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13508:9:8"},"scope":5726,"src":"13456:103:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5308,"nodeType":"Block","src":"13639:493:8","statements":[{"assignments":[5244],"declarations":[{"constant":false,"id":5244,"mutability":"mutable","name":"cover","nameLocation":"13673:5:8","nodeType":"VariableDeclaration","scope":5308,"src":"13650:28:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":5243,"nodeType":"UserDefinedTypeName","pathNode":{"id":5242,"name":"CoverLib.Cover","nameLocations":["13650:8:8","13659:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"13650:14:8"},"referencedDeclaration":3790,"src":"13650:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"id":5248,"initialValue":{"baseExpression":{"id":5245,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"13681:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5247,"indexExpression":{"id":5246,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"13688:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13681:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13650:47:8"},{"assignments":[5253],"declarations":[{"constant":false,"id":5253,"mutability":"mutable","name":"pool","nameLocation":"13729:4:8","nodeType":"VariableDeclaration","scope":5308,"src":"13708:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":5252,"nodeType":"UserDefinedTypeName","pathNode":{"id":5251,"name":"CoverLib.Pool","nameLocations":["13708:8:8","13717:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"13708:13:8"},"referencedDeclaration":3859,"src":"13708:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":5259,"initialValue":{"arguments":[{"expression":{"id":5256,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"13755:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":5257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13761:6:8","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"13755:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5254,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"13736:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13747:7:8","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":4050,"src":"13736:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Pool_$3859_memory_ptr_$","typeString":"function (uint256) view external returns (struct CoverLib.Pool memory)"}},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13736:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"nodeType":"VariableDeclarationStatement","src":"13708:60:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5261,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"13832:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":5262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13838:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"13832:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13849:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13832:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f766572206361706163697479","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13852:24:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c475833ceff1add43d22d7c125e1185634884360affabe727fc26b9a0aab4a4f","typeString":"literal_string \"Invalid cover capacity\""},"value":"Invalid cover capacity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c475833ceff1add43d22d7c125e1185634884360affabe727fc26b9a0aab4a4f","typeString":"literal_string \"Invalid cover capacity\""}],"id":5260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13824:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13824:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5267,"nodeType":"ExpressionStatement","src":"13824:53:8"},{"assignments":[5269],"declarations":[{"constant":false,"id":5269,"mutability":"mutable","name":"amount","nameLocation":"13896:6:8","nodeType":"VariableDeclaration","scope":5308,"src":"13888:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5268,"name":"uint256","nodeType":"ElementaryTypeName","src":"13888:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5284,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5270,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"13906:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":5271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13911:3:8","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"13906:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5272,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"13919:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":5273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13925:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"13919:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"13919:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13918:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13944:3:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"13918:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13917:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13905:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"13905:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13888:68:8"},{"expression":{"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5285,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"13967:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5287,"indexExpression":{"id":5286,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"13974:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13967:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":5288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13984:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"13967:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5289,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"14001:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13967:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5291,"nodeType":"ExpressionStatement","src":"13967:40:8"},{"expression":{"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5292,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"14018:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5294,"indexExpression":{"id":5293,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"14025:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14018:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":5295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14035:9:8","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"14018:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5296,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"14048:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5298,"indexExpression":{"id":5297,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"14055:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14048:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":5299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14065:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"14048:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":5300,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"14095:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5302,"indexExpression":{"id":5301,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"14102:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14095:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":5303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14112:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"14095:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14048:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14047:77:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14018:106:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5307,"nodeType":"ExpressionStatement","src":"14018:106:8"}]},"functionSelector":"106b5da1","id":5309,"implemented":true,"kind":"function","modifiers":[{"id":5236,"kind":"modifierInvocation","modifierName":{"id":5235,"name":"onlyPool","nameLocations":["13617:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":5725,"src":"13617:8:8"},"nodeType":"ModifierInvocation","src":"13617:8:8"},{"id":5238,"kind":"modifierInvocation","modifierName":{"id":5237,"name":"nonReentrant","nameLocations":["13626:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"13626:12:8"},"nodeType":"ModifierInvocation","src":"13626:12:8"}],"name":"updateMaxAmount","nameLocation":"13576:15:8","nodeType":"FunctionDefinition","parameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"_coverId","nameLocation":"13600:8:8","nodeType":"VariableDeclaration","scope":5309,"src":"13592:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5232,"name":"uint256","nodeType":"ElementaryTypeName","src":"13592:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13591:18:8"},"returnParameters":{"id":5239,"nodeType":"ParameterList","parameters":[],"src":"13639:0:8"},"scope":5726,"src":"13567:565:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5444,"nodeType":"Block","src":"14205:1321:8","statements":[{"assignments":[5320],"declarations":[{"constant":false,"id":5320,"mutability":"mutable","name":"depositInfo","nameLocation":"14236:11:8","nodeType":"VariableDeclaration","scope":5444,"src":"14216:31:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits"},"typeName":{"id":5319,"nodeType":"UserDefinedTypeName","pathNode":{"id":5318,"name":"ILP.Deposits","nameLocations":["14216:3:8","14220:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3982,"src":"14216:12:8"},"referencedDeclaration":3982,"src":"14216:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_storage_ptr","typeString":"struct ILP.Deposits"}},"visibility":"internal"}],"id":5327,"initialValue":{"arguments":[{"id":5323,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"14290:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5324,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14312:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14316:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14312:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5321,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"14250:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14261:14:8","memberName":"getUserDeposit","nodeType":"MemberAccess","referencedDeclaration":4031,"src":"14250:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_struct$_Deposits_$3982_memory_ptr_$","typeString":"function (uint256,address) view external returns (struct ILP.Deposits memory)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14250:83:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"nodeType":"VariableDeclarationStatement","src":"14216:117:8"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$4018","typeString":"enum ILP.Status"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5328,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"14348:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14360:6:8","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3973,"src":"14348:18:8","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4018","typeString":"enum ILP.Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":5330,"name":"ILP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"14370:3:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILP_$4090_$","typeString":"type(contract ILP)"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14374:6:8","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"14370:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$4018_$","typeString":"type(enum ILP.Status)"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14381:6:8","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":4016,"src":"14370:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$4018","typeString":"enum ILP.Status"}},"src":"14348:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5338,"nodeType":"IfStatement","src":"14344:92:8","trueBody":{"id":5337,"nodeType":"Block","src":"14389:47:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5334,"name":"LpNotActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"14411:11:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14411:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5336,"nodeType":"RevertStatement","src":"14404:20:8"}]}},{"assignments":[5340],"declarations":[{"constant":false,"id":5340,"mutability":"mutable","name":"lastClaimTime","nameLocation":"14456:13:8","nodeType":"VariableDeclaration","scope":5444,"src":"14448:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"14448:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5341,"nodeType":"VariableDeclarationStatement","src":"14448:21:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5342,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"14484:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5345,"indexExpression":{"expression":{"id":5343,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14500:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14504:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14500:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14484:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5347,"indexExpression":{"id":5346,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"14512:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14484:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14524:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14484:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5365,"nodeType":"Block","src":"14597:79:8","statements":[{"expression":{"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5356,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"14612:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":5357,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"14628:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5360,"indexExpression":{"expression":{"id":5358,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14644:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14648:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14644:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14628:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5362,"indexExpression":{"id":5361,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"14656:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14628:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14612:52:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5364,"nodeType":"ExpressionStatement","src":"14612:52:8"}]},"id":5366,"nodeType":"IfStatement","src":"14480:196:8","trueBody":{"id":5355,"nodeType":"Block","src":"14527:64:8","statements":[{"expression":{"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5350,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"14542:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5351,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"14558:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14570:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":3977,"src":"14558:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14542:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5354,"nodeType":"ExpressionStatement","src":"14542:37:8"}]}},{"assignments":[5368],"declarations":[{"constant":false,"id":5368,"mutability":"mutable","name":"currentTime","nameLocation":"14696:11:8","nodeType":"VariableDeclaration","scope":5444,"src":"14688:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5367,"name":"uint256","nodeType":"ElementaryTypeName","src":"14688:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5371,"initialValue":{"expression":{"id":5369,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14710:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14716:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"14710:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14688:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5372,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"14740:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5373,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"14754:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14766:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"14754:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14740:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5382,"nodeType":"IfStatement","src":"14736:105:8","trueBody":{"id":5381,"nodeType":"Block","src":"14778:63:8","statements":[{"expression":{"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5376,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"14793:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5377,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"14807:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14819:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"14807:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14793:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5380,"nodeType":"ExpressionStatement","src":"14793:36:8"}]}},{"assignments":[5384],"declarations":[{"constant":false,"id":5384,"mutability":"mutable","name":"claimableDays","nameLocation":"14951:13:8","nodeType":"VariableDeclaration","scope":5444,"src":"14943:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"14943:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5391,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5385,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"14968:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5386,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"14982:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14968:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14967:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14999:9:8","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"src":"14967:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14943:65:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"15025:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15025:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5399,"nodeType":"IfStatement","src":"15021:77:8","trueBody":{"id":5398,"nodeType":"Block","src":"15045:53:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5395,"name":"NoClaimableReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"15067:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15067:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5397,"nodeType":"RevertStatement","src":"15060:26:8"}]}},{"assignments":[5401],"declarations":[{"constant":false,"id":5401,"mutability":"mutable","name":"claimableAmount","nameLocation":"15116:15:8","nodeType":"VariableDeclaration","scope":5444,"src":"15108:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5400,"name":"uint256","nodeType":"ElementaryTypeName","src":"15108:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5406,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5402,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"15134:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15146:11:8","memberName":"dailyPayout","nodeType":"MemberAccess","referencedDeclaration":3970,"src":"15134:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5404,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"15160:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15134:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15108:65:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5407,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"15190:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5408,"name":"coverFeeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"15208:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15190:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5414,"nodeType":"IfStatement","src":"15186:98:8","trueBody":{"id":5413,"nodeType":"Block","src":"15225:59:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5410,"name":"InsufficientPoolBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"15247:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15247:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5412,"nodeType":"RevertStatement","src":"15240:32:8"}]}},{"expression":{"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5415,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"15294:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5419,"indexExpression":{"expression":{"id":5416,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15310:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15314:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15310:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15294:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5420,"indexExpression":{"id":5418,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"15322:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15294:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5421,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15333:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15339:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"15333:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15294:54:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5424,"nodeType":"ExpressionStatement","src":"15294:54:8"},{"expression":{"arguments":[{"expression":{"id":5428,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15374:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15378:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15374:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5430,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"15386:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5425,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"15361:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3962","typeString":"contract IbqBTC"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15367:6:8","memberName":"bqMint","nodeType":"MemberAccess","referencedDeclaration":3943,"src":"15361:12:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15361:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5432,"nodeType":"ExpressionStatement","src":"15361:41:8"},{"expression":{"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5433,"name":"coverFeeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"15415:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5434,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"15434:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15415:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5436,"nodeType":"ExpressionStatement","src":"15415:34:8"},{"eventCall":{"arguments":[{"expression":{"id":5438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15481:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15485:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15481:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5440,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"15493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5441,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"15502:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5437,"name":"PayoutClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"15467:13:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15467:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5443,"nodeType":"EmitStatement","src":"15462:56:8"}]},"functionSelector":"2d8a340c","id":5445,"implemented":true,"kind":"function","modifiers":[{"id":5314,"kind":"modifierInvocation","modifierName":{"id":5313,"name":"nonReentrant","nameLocations":["14192:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"14192:12:8"},"nodeType":"ModifierInvocation","src":"14192:12:8"}],"name":"claimPayoutForLP","nameLocation":"14149:16:8","nodeType":"FunctionDefinition","parameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5311,"mutability":"mutable","name":"_poolId","nameLocation":"14174:7:8","nodeType":"VariableDeclaration","scope":5445,"src":"14166:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5310,"name":"uint256","nodeType":"ElementaryTypeName","src":"14166:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14165:17:8"},"returnParameters":{"id":5315,"nodeType":"ParameterList","parameters":[],"src":"14205:0:8"},"scope":5726,"src":"14140:1386:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5589,"nodeType":"Block","src":"15601:1120:8","statements":[{"assignments":[5457],"declarations":[{"constant":false,"id":5457,"mutability":"mutable","name":"deposits","nameLocation":"15634:8:8","nodeType":"VariableDeclaration","scope":5589,"src":"15612:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3982_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits[]"},"typeName":{"baseType":{"id":5455,"nodeType":"UserDefinedTypeName","pathNode":{"id":5454,"name":"ILP.Deposits","nameLocations":["15612:3:8","15616:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3982,"src":"15612:12:8"},"referencedDeclaration":3982,"src":"15612:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_storage_ptr","typeString":"struct ILP.Deposits"}},"id":5456,"nodeType":"ArrayTypeName","src":"15612:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3982_storage_$dyn_storage_ptr","typeString":"struct ILP.Deposits[]"}},"visibility":"internal"}],"id":5464,"initialValue":{"arguments":[{"id":5460,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"15687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15709:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15713:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15709:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5458,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"15645:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15656:16:8","memberName":"getVaultDeposits","nodeType":"MemberAccess","referencedDeclaration":4042,"src":"15645:27:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_array$_t_struct$_Deposits_$3982_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256,address) view external returns (struct ILP.Deposits memory[] memory)"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15645:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3982_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15612:118:8"},{"assignments":[5466],"declarations":[{"constant":false,"id":5466,"mutability":"mutable","name":"totalClaim","nameLocation":"15749:10:8","nodeType":"VariableDeclaration","scope":5589,"src":"15741:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5465,"name":"uint256","nodeType":"ElementaryTypeName","src":"15741:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5467,"nodeType":"VariableDeclarationStatement","src":"15741:18:8"},{"assignments":[5469],"declarations":[{"constant":false,"id":5469,"mutability":"mutable","name":"lastClaimTime","nameLocation":"15778:13:8","nodeType":"VariableDeclaration","scope":5589,"src":"15770:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5468,"name":"uint256","nodeType":"ElementaryTypeName","src":"15770:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5470,"nodeType":"VariableDeclarationStatement","src":"15770:21:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5471,"name":"LastVaultClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"15806:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5474,"indexExpression":{"expression":{"id":5472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15825:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15829:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15825:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15806:30:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5476,"indexExpression":{"id":5475,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"15837:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15806:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15849:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15806:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5496,"nodeType":"Block","src":"15922:82:8","statements":[{"expression":{"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5487,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"15937:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":5488,"name":"LastVaultClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"15953:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5491,"indexExpression":{"expression":{"id":5489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15972:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15976:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15972:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15953:30:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5493,"indexExpression":{"id":5492,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"15984:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15953:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15937:55:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5495,"nodeType":"ExpressionStatement","src":"15937:55:8"}]},"id":5497,"nodeType":"IfStatement","src":"15802:202:8","trueBody":{"id":5486,"nodeType":"Block","src":"15852:64:8","statements":[{"expression":{"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5479,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"15867:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5480,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"15883:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3982_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"id":5482,"indexExpression":{"hexValue":"30","id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15892:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15883:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15895:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":3977,"src":"15883:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15867:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5485,"nodeType":"ExpressionStatement","src":"15867:37:8"}]}},{"assignments":[5499],"declarations":[{"constant":false,"id":5499,"mutability":"mutable","name":"currentTime","nameLocation":"16024:11:8","nodeType":"VariableDeclaration","scope":5589,"src":"16016:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"16016:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5502,"initialValue":{"expression":{"id":5500,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16038:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16044:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"16038:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16016:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"16068:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":5504,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"16082:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3982_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"id":5506,"indexExpression":{"hexValue":"30","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16091:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16082:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16094:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"16082:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16068:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5517,"nodeType":"IfStatement","src":"16064:105:8","trueBody":{"id":5516,"nodeType":"Block","src":"16106:63:8","statements":[{"expression":{"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5509,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"16121:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5510,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"16135:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3982_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"id":5512,"indexExpression":{"hexValue":"30","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16144:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16135:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16147:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"16135:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16121:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5515,"nodeType":"ExpressionStatement","src":"16121:36:8"}]}},{"assignments":[5519],"declarations":[{"constant":false,"id":5519,"mutability":"mutable","name":"claimableDays","nameLocation":"16187:13:8","nodeType":"VariableDeclaration","scope":5589,"src":"16179:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5518,"name":"uint256","nodeType":"ElementaryTypeName","src":"16179:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5526,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"16204:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5521,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"16218:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16204:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16203:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16235:9:8","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"src":"16203:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16179:65:8"},{"body":{"id":5558,"nodeType":"Block","src":"16303:188:8","statements":[{"assignments":[5542],"declarations":[{"constant":false,"id":5542,"mutability":"mutable","name":"deposit","nameLocation":"16338:7:8","nodeType":"VariableDeclaration","scope":5558,"src":"16318:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits"},"typeName":{"id":5541,"nodeType":"UserDefinedTypeName","pathNode":{"id":5540,"name":"ILP.Deposits","nameLocations":["16318:3:8","16322:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3982,"src":"16318:12:8"},"referencedDeclaration":3982,"src":"16318:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_storage_ptr","typeString":"struct ILP.Deposits"}},"visibility":"internal"}],"id":5546,"initialValue":{"baseExpression":{"id":5543,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"16348:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3982_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"id":5545,"indexExpression":{"id":5544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"16357:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16348:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"nodeType":"VariableDeclarationStatement","src":"16318:41:8"},{"assignments":[5548],"declarations":[{"constant":false,"id":5548,"mutability":"mutable","name":"claimableAmount","nameLocation":"16382:15:8","nodeType":"VariableDeclaration","scope":5558,"src":"16374:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"16374:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5553,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5549,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"16400:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16408:11:8","memberName":"dailyPayout","nodeType":"MemberAccess","referencedDeclaration":3970,"src":"16400:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5551,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"16422:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16400:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16374:61:8"},{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5554,"name":"totalClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"16450:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5555,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"16464:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16450:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5557,"nodeType":"ExpressionStatement","src":"16450:29:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5531,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"16277:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5532,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"16281:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3982_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16290:6:8","memberName":"length","nodeType":"MemberAccess","src":"16281:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16277:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5559,"initializationExpression":{"assignments":[5528],"declarations":[{"constant":false,"id":5528,"mutability":"mutable","name":"i","nameLocation":"16270:1:8","nodeType":"VariableDeclaration","scope":5559,"src":"16262:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"16262:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5530,"initialValue":{"hexValue":"30","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16274:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16262:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16298:3:8","subExpression":{"id":5535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"16298:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5537,"nodeType":"ExpressionStatement","src":"16298:3:8"},"nodeType":"ForStatement","src":"16257:234:8"},{"expression":{"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5560,"name":"LastVaultClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"16503:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5564,"indexExpression":{"expression":{"id":5561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16522:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16526:6:8","memberName":"sender","nodeType":"MemberAccess","src":"16522:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16503:30:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5565,"indexExpression":{"id":5563,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"16534:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16503:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5566,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16545:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16551:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"16545:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16503:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5569,"nodeType":"ExpressionStatement","src":"16503:57:8"},{"expression":{"arguments":[{"expression":{"id":5573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16584:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16588:6:8","memberName":"sender","nodeType":"MemberAccess","src":"16584:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5575,"name":"totalClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"16596:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5570,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"16571:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3962","typeString":"contract IbqBTC"}},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16577:6:8","memberName":"bqMint","nodeType":"MemberAccess","referencedDeclaration":3943,"src":"16571:12:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16571:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5577,"nodeType":"ExpressionStatement","src":"16571:36:8"},{"expression":{"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5578,"name":"coverFeeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"16620:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5579,"name":"totalClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"16639:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16620:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5581,"nodeType":"ExpressionStatement","src":"16620:29:8"},{"eventCall":{"arguments":[{"expression":{"id":5583,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16681:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16685:6:8","memberName":"sender","nodeType":"MemberAccess","src":"16681:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5585,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"16693:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5586,"name":"totalClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"16702:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5582,"name":"PayoutClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"16667:13:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16667:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5588,"nodeType":"EmitStatement","src":"16662:51:8"}]},"functionSelector":"a650c232","id":5590,"implemented":true,"kind":"function","modifiers":[{"id":5450,"kind":"modifierInvocation","modifierName":{"id":5449,"name":"nonReentrant","nameLocations":["15588:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"15588:12:8"},"nodeType":"ModifierInvocation","src":"15588:12:8"}],"name":"clamPayoutForVault","nameLocation":"15543:18:8","nodeType":"FunctionDefinition","parameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"vaultId","nameLocation":"15570:7:8","nodeType":"VariableDeclaration","scope":5590,"src":"15562:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5446,"name":"uint256","nodeType":"ElementaryTypeName","src":"15562:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15561:17:8"},"returnParameters":{"id":5451,"nodeType":"ParameterList","parameters":[],"src":"15601:0:8"},"scope":5726,"src":"15534:1187:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5663,"nodeType":"Block","src":"16848:630:8","statements":[{"assignments":[5603],"declarations":[{"constant":false,"id":5603,"mutability":"mutable","name":"depositInfo","nameLocation":"16879:11:8","nodeType":"VariableDeclaration","scope":5663,"src":"16859:31:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits"},"typeName":{"id":5602,"nodeType":"UserDefinedTypeName","pathNode":{"id":5601,"name":"ILP.Deposits","nameLocations":["16859:3:8","16863:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3982,"src":"16859:12:8"},"referencedDeclaration":3982,"src":"16859:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_storage_ptr","typeString":"struct ILP.Deposits"}},"visibility":"internal"}],"id":5609,"initialValue":{"arguments":[{"id":5606,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"16933:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5607,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"16955:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5604,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"16893:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4090","typeString":"contract ILP"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16904:14:8","memberName":"getUserDeposit","nodeType":"MemberAccess","referencedDeclaration":4031,"src":"16893:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_struct$_Deposits_$3982_memory_ptr_$","typeString":"function (uint256,address) view external returns (struct ILP.Deposits memory)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16893:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"nodeType":"VariableDeclarationStatement","src":"16859:111:8"},{"assignments":[5611],"declarations":[{"constant":false,"id":5611,"mutability":"mutable","name":"lastClaimTime","nameLocation":"16991:13:8","nodeType":"VariableDeclaration","scope":5663,"src":"16983:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5610,"name":"uint256","nodeType":"ElementaryTypeName","src":"16983:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5612,"nodeType":"VariableDeclarationStatement","src":"16983:21:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5613,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"17019:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5615,"indexExpression":{"id":5614,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"17035:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17019:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5617,"indexExpression":{"id":5616,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"17041:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17019:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17053:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17019:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5634,"nodeType":"Block","src":"17126:73:8","statements":[{"expression":{"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5626,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"17141:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":5627,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"17157:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5629,"indexExpression":{"id":5628,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"17173:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17157:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5631,"indexExpression":{"id":5630,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"17179:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17157:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17141:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5633,"nodeType":"ExpressionStatement","src":"17141:46:8"}]},"id":5635,"nodeType":"IfStatement","src":"17015:184:8","trueBody":{"id":5625,"nodeType":"Block","src":"17056:64:8","statements":[{"expression":{"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5620,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"17071:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5621,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"17087:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17099:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":3977,"src":"17087:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17071:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5624,"nodeType":"ExpressionStatement","src":"17071:37:8"}]}},{"assignments":[5637],"declarations":[{"constant":false,"id":5637,"mutability":"mutable","name":"currentTime","nameLocation":"17217:11:8","nodeType":"VariableDeclaration","scope":5663,"src":"17209:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5636,"name":"uint256","nodeType":"ElementaryTypeName","src":"17209:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5640,"initialValue":{"expression":{"id":5638,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17231:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17237:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"17231:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17209:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5641,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"17261:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5642,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"17275:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17287:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"17275:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17261:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5651,"nodeType":"IfStatement","src":"17257:105:8","trueBody":{"id":5650,"nodeType":"Block","src":"17299:63:8","statements":[{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5645,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"17314:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5646,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"17328:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3982_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17340:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"17328:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17314:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5649,"nodeType":"ExpressionStatement","src":"17314:36:8"}]}},{"assignments":[5653],"declarations":[{"constant":false,"id":5653,"mutability":"mutable","name":"claimableDays","nameLocation":"17380:13:8","nodeType":"VariableDeclaration","scope":5663,"src":"17372:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"17372:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5660,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5654,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"17397:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5655,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"17411:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17397:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17396:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17428:9:8","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"src":"17396:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17372:65:8"},{"expression":{"id":5661,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"17457:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5598,"id":5662,"nodeType":"Return","src":"17450:20:8"}]},"functionSelector":"73cce3ee","id":5664,"implemented":true,"kind":"function","modifiers":[],"name":"getDepositClaimableDays","nameLocation":"16738:23:8","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"user","nameLocation":"16780:4:8","nodeType":"VariableDeclaration","scope":5664,"src":"16772:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5591,"name":"address","nodeType":"ElementaryTypeName","src":"16772:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5594,"mutability":"mutable","name":"_poolId","nameLocation":"16803:7:8","nodeType":"VariableDeclaration","scope":5664,"src":"16795:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5593,"name":"uint256","nodeType":"ElementaryTypeName","src":"16795:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16761:56:8"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5664,"src":"16839:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5596,"name":"uint256","nodeType":"ElementaryTypeName","src":"16839:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16838:9:8"},"scope":5726,"src":"16729:749:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5679,"nodeType":"Block","src":"17598:56:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":5673,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"17616:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5675,"indexExpression":{"id":5674,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"17632:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17616:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5677,"indexExpression":{"id":5676,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"17638:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17616:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5672,"id":5678,"nodeType":"Return","src":"17609:37:8"}]},"functionSelector":"10525814","id":5680,"implemented":true,"kind":"function","modifiers":[],"name":"getLastClaimTime","nameLocation":"17495:16:8","nodeType":"FunctionDefinition","parameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5666,"mutability":"mutable","name":"user","nameLocation":"17530:4:8","nodeType":"VariableDeclaration","scope":5680,"src":"17522:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5665,"name":"address","nodeType":"ElementaryTypeName","src":"17522:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5668,"mutability":"mutable","name":"_poolId","nameLocation":"17553:7:8","nodeType":"VariableDeclaration","scope":5680,"src":"17545:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5667,"name":"uint256","nodeType":"ElementaryTypeName","src":"17545:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17511:56:8"},"returnParameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5680,"src":"17589:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5670,"name":"uint256","nodeType":"ElementaryTypeName","src":"17589:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17588:9:8"},"scope":5726,"src":"17486:168:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5688,"nodeType":"Block","src":"17731:38:8","statements":[{"expression":{"id":5686,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"17749:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":5685,"id":5687,"nodeType":"Return","src":"17742:19:8"}]},"functionSelector":"195ec9ee","id":5689,"implemented":true,"kind":"function","modifiers":[],"name":"getAllParticipants","nameLocation":"17671:18:8","nodeType":"FunctionDefinition","parameters":{"id":5681,"nodeType":"ParameterList","parameters":[],"src":"17689:2:8"},"returnParameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5689,"src":"17713:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5682,"name":"address","nodeType":"ElementaryTypeName","src":"17713:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5683,"nodeType":"ArrayTypeName","src":"17713:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"17712:18:8"},"scope":5726,"src":"17662:107:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5700,"nodeType":"Block","src":"17851:45:8","statements":[{"expression":{"baseExpression":{"id":5696,"name":"participation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"17869:13:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5698,"indexExpression":{"id":5697,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"17883:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17869:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5695,"id":5699,"nodeType":"Return","src":"17862:26:8"}]},"functionSelector":"46f84795","id":5701,"implemented":true,"kind":"function","modifiers":[],"name":"getUserParticipation","nameLocation":"17786:20:8","nodeType":"FunctionDefinition","parameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"user","nameLocation":"17815:4:8","nodeType":"VariableDeclaration","scope":5701,"src":"17807:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5690,"name":"address","nodeType":"ElementaryTypeName","src":"17807:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17806:14:8"},"returnParameters":{"id":5695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5701,"src":"17842:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5693,"name":"uint256","nodeType":"ElementaryTypeName","src":"17842:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17841:9:8"},"scope":5726,"src":"17777:119:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5712,"nodeType":"Block","src":"17930:82:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5704,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17949:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17953:6:8","memberName":"sender","nodeType":"MemberAccess","src":"17949:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5706,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"17963:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17949:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17975:16:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":5703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17941:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17941:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5710,"nodeType":"ExpressionStatement","src":"17941:51:8"},{"id":5711,"nodeType":"PlaceholderStatement","src":"18003:1:8"}]},"id":5713,"name":"onlyGovernance","nameLocation":"17913:14:8","nodeType":"ModifierDefinition","parameters":{"id":5702,"nodeType":"ParameterList","parameters":[],"src":"17927:2:8"},"src":"17904:108:8","virtual":false,"visibility":"internal"},{"body":{"id":5724,"nodeType":"Block","src":"18040:81:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18059:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18063:6:8","memberName":"sender","nodeType":"MemberAccess","src":"18059:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5718,"name":"lpAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"18073:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18059:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18084:16:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":5715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18051:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18051:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5722,"nodeType":"ExpressionStatement","src":"18051:50:8"},{"id":5723,"nodeType":"PlaceholderStatement","src":"18112:1:8"}]},"id":5725,"name":"onlyPool","nameLocation":"18029:8:8","nodeType":"ModifierDefinition","parameters":{"id":5714,"nodeType":"ParameterList","parameters":[],"src":"18037:2:8"},"src":"18020:101:8","virtual":false,"visibility":"internal"}],"scope":5727,"src":"2436:15688:8","usedErrors":[13,18,321,4101,4103,4105,4107,4109,4111,4113,4115,4117,4119],"usedEvents":[24,4182,4193,4201,4210]}],"src":"33:18091:8"},"id":8}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207a34c2eef62c6e83829e81894afb95995147f98c6b0092b8b777b768044045ff64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x34C2EEF62C6E83829E81894AFB95995147F98C6B0092B8B777B768 DIV BLOCKHASH GASLIMIT SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:3:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207a34c2eef62c6e83829e81894afb95995147f98c6b0092b8b777b768044045ff64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x34C2EEF62C6E83829E81894AFB95995147F98C6B0092B8B777B768 DIV BLOCKHASH GASLIMIT SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:3:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207430dbce8f7b2ea423410092545f9d719f3253cefc76f323fc035ce64cc3f9f364736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x30DBCE8F7B2EA423410092545F9D719F3253CEFC76 RETURN 0x23 0xFC SUB TLOAD 0xE6 0x4C 0xC3 0xF9 RETURN PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207430dbce8f7b2ea423410092545f9d719f3253cefc76f323fc035ce64cc3f9f364736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x30DBCE8F7B2EA423410092545F9D719F3253CEFC76 RETURN 0x23 0xFC SUB TLOAD 0xE6 0x4C 0xC3 0xF9 RETURN PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e11824dc518bd9c2a5a3ab4e9d5db12b47445e46a8a3b31b60f70a072affa9c164736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 XOR 0x24 0xDC MLOAD DUP12 0xD9 0xC2 0xA5 LOG3 0xAB 0x4E SWAP14 TSTORE 0xB1 0x2B SELFBALANCE PREVRANDAO MCOPY CHAINID 0xA8 LOG3 0xB3 SHL PUSH1 0xF7 EXP SMOD 0x2A SELFDESTRUCT 0xA9 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e11824dc518bd9c2a5a3ab4e9d5db12b47445e46a8a3b31b60f70a072affa9c164736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 XOR 0x24 0xDC MLOAD DUP12 0xD9 0xC2 0xA5 LOG3 0xAB 0x4E SWAP14 TSTORE 0xB1 0x2B SELFBALANCE PREVRANDAO MCOPY CHAINID 0xA8 LOG3 0xB3 SHL PUSH1 0xF7 EXP SMOD 0x2A SELFDESTRUCT 0xA9 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/CoverLib.sol":{"CoverLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b9588cae9dca6139e64f590676436a33ff36b81b45ca358229e345d570bd81f364736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PC DUP13 0xAE SWAP14 0xCA PUSH2 0x39E6 0x4F MSIZE MOD PUSH23 0x436A33FF36B81B45CA358229E345D570BD81F364736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"60:2833:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b9588cae9dca6139e64f590676436a33ff36b81b45ca358229e345d570bd81f364736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PC DUP13 0xAE SWAP14 0xCA PUSH2 0x39E6 0x4F MSIZE MOD PUSH23 0x436A33FF36B81B45CA358229E345D570BD81F364736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"60:2833:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoverLib.sol\":\"CoverLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/CoverLib.sol\":{\"keccak256\":\"0x5138397d8fe6477ca504eacf0b9a9f9273319a1927872d4b67a4cce9d4a1dc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5669416dad2b358d3309144ad62ae8e9d58cadc62c7101e01929c7a8e3d1bd39\",\"dweb:/ipfs/QmXK6Dy6Drr4SnDGBjL8VzKp8t41WagTcnTuavf1q58FpG\"]}},\"version\":1}"}},"contracts/InsuranceCover.sol":{"ILP":{"abi":[{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover","name":"_cover","type":"tuple"}],"name":"addPoolCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPool","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct CoverLib.Pool","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPoolCovers","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"getUserDeposit","outputs":[{"components":[{"internalType":"address","name":"lp","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"enum ILP.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"daysLeft","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"}],"internalType":"struct ILP.Deposits","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getVaultDeposits","outputs":[{"components":[{"internalType":"address","name":"lp","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"enum ILP.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"daysLeft","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"}],"internalType":"struct ILP.Deposits[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"__poolPercentageSplit","type":"uint256"}],"name":"increasePercentageSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"__poolPercentageSplit","type":"uint256"}],"name":"reducePercentageSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover","name":"_cover","type":"tuple"}],"name":"updatePoolCovers","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addPoolCover(uint256,(uint256,string,uint8,string,uint256,uint256,uint256,uint256,uint256,uint256,string))":"c7aa9874","getPool(uint256)":"068bcd8d","getPoolCovers(uint256)":"7eb111f0","getUserDeposit(uint256,address)":"4e055244","getVaultDeposits(uint256,address)":"82457766","increasePercentageSplit(uint256,uint256)":"9fd36b15","reducePercentageSplit(uint256,uint256)":"a4948d85","updatePoolCovers(uint256,(uint256,string,uint8,string,uint256,uint256,uint256,uint256,uint256,uint256,string))":"a14764d0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover\",\"name\":\"_cover\",\"type\":\"tuple\"}],\"name\":\"addPoolCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct CoverLib.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPoolCovers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum ILP.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"daysLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"}],\"internalType\":\"struct ILP.Deposits\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVaultDeposits\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum ILP.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"daysLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"}],\"internalType\":\"struct ILP.Deposits[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__poolPercentageSplit\",\"type\":\"uint256\"}],\"name\":\"increasePercentageSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__poolPercentageSplit\",\"type\":\"uint256\"}],\"name\":\"reducePercentageSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover\",\"name\":\"_cover\",\"type\":\"tuple\"}],\"name\":\"updatePoolCovers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsuranceCover.sol\":\"ILP\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x5138397d8fe6477ca504eacf0b9a9f9273319a1927872d4b67a4cce9d4a1dc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5669416dad2b358d3309144ad62ae8e9d58cadc62c7101e01929c7a8e3d1bd39\",\"dweb:/ipfs/QmXK6Dy6Drr4SnDGBjL8VzKp8t41WagTcnTuavf1q58FpG\"]},\"contracts/InsuranceCover.sol\":{\"keccak256\":\"0x60e86d28175387a49543c163796e2c36326d8cd2dbfed27ed2e87d05bf4b6756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319dbfa43e18601346949b998759ac0a7c74efbb5dc79e32b2896c32abcebf\",\"dweb:/ipfs/QmX4V88uxZvZb4TEBwo3FtS174ufUnSjTHrRVLUCQ6cqSD\"]}},\"version\":1}"},"IbqBTC":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"bqMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"bqMint(address,uint256)":"e2094eda","burn(address,uint256)":"9dc29fac","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bqMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsuranceCover.sol\":\"IbqBTC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x5138397d8fe6477ca504eacf0b9a9f9273319a1927872d4b67a4cce9d4a1dc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5669416dad2b358d3309144ad62ae8e9d58cadc62c7101e01929c7a8e3d1bd39\",\"dweb:/ipfs/QmXK6Dy6Drr4SnDGBjL8VzKp8t41WagTcnTuavf1q58FpG\"]},\"contracts/InsuranceCover.sol\":{\"keccak256\":\"0x60e86d28175387a49543c163796e2c36326d8cd2dbfed27ed2e87d05bf4b6756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319dbfa43e18601346949b998759ac0a7c74efbb5dc79e32b2896c32abcebf\",\"dweb:/ipfs/QmX4V88uxZvZb4TEBwo3FtS174ufUnSjTHrRVLUCQ6cqSD\"]}},\"version\":1}"},"InsuranceCover":{"abi":[{"inputs":[{"internalType":"address","name":"_lpContract","type":"address"},{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"address","name":"_bqBTC","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CoverNotAvailable","type":"error"},{"inputs":[],"name":"InsufficientPoolBalance","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidCoverDuration","type":"error"},{"inputs":[],"name":"LpNotActive","type":"error"},{"inputs":[],"name":"NameAlreadyExists","type":"error"},{"inputs":[],"name":"NoClaimableReward","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"UnsupportedCoverType","type":"error"},{"inputs":[],"name":"UserHaveAlreadyPurchasedCover","type":"error"},{"inputs":[],"name":"WrongPool","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"coverId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"}],"name":"CoverCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"coverValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"coverFee","type":"uint256"},{"indexed":false,"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"}],"name":"CoverPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"coverId","type":"uint256"},{"indexed":false,"internalType":"string","name":"coverName","type":"string"},{"indexed":false,"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"}],"name":"CoverUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PayoutClaimed","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"LastVaultClaimTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"NextLpClaimTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bqBTC","outputs":[{"internalType":"contract IbqBTC","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bqBTCAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"claimPayoutForLP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"}],"name":"clamPayoutForVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"coverCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"coverExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"coverFeeBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"coverIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"covers","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"string","name":"_cid","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"_riskType","type":"uint8"},{"internalType":"string","name":"_coverName","type":"string"},{"internalType":"string","name":"_chains","type":"string"},{"internalType":"uint256","name":"_capacity","type":"uint256"},{"internalType":"uint256","name":"_cost","type":"uint256"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"createCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"deleteExpiredUserCovers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllAvailableCovers","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllParticipants","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAllUserCovers","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"uint256","name":"coverValue","type":"uint256"},{"internalType":"uint256","name":"claimPaid","type":"uint256"},{"internalType":"uint256","name":"coverPeriod","type":"uint256"},{"internalType":"uint256","name":"endDay","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct CoverLib.GenericCoverInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCoverFeeBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"}],"name":"getCoverInfo","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getDepositClaimableDays","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getLastClaimTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_coverId","type":"uint256"}],"name":"getUserCoverInfo","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"uint256","name":"coverValue","type":"uint256"},{"internalType":"uint256","name":"claimPaid","type":"uint256"},{"internalType":"uint256","name":"coverPeriod","type":"uint256"},{"internalType":"uint256","name":"endDay","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct CoverLib.GenericCoverInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserParticipation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lpAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lpContract","outputs":[{"internalType":"contract ILP","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"participants","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"participation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"},{"internalType":"uint256","name":"_coverValue","type":"uint256"},{"internalType":"uint256","name":"_coverPeriod","type":"uint256"},{"internalType":"uint256","name":"_coverFee","type":"uint256"}],"name":"purchaseCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"},{"internalType":"string","name":"_coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"_riskType","type":"uint8"},{"internalType":"string","name":"_cid","type":"string"},{"internalType":"string","name":"_chains","type":"string"},{"internalType":"uint256","name":"_capacity","type":"uint256"},{"internalType":"uint256","name":"_cost","type":"uint256"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"updateCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"}],"name":"updateMaxAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_coverId","type":"uint256"},{"internalType":"uint256","name":"_claimPaid","type":"uint256"}],"name":"updateUserCoverValue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userCovers","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"uint256","name":"coverValue","type":"uint256"},{"internalType":"uint256","name":"claimPaid","type":"uint256"},{"internalType":"uint256","name":"coverPeriod","type":"uint256"},{"internalType":"uint256","name":"endDay","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":323,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x128 JUMPI PUSH1 0x1F PUSH2 0x3630 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x12D JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x128 JUMPI PUSH2 0x47 DUP2 PUSH2 0x143 JUMP JUMPDEST SWAP1 PUSH2 0x60 PUSH1 0x40 PUSH2 0x59 PUSH1 0x20 DUP5 ADD PUSH2 0x143 JUMP JUMPDEST SWAP3 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x112 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP6 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD DUP3 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x34D8 SWAP1 DUP2 PUSH2 0x158 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x128 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xDB981A0 EQ PUSH2 0x2ACC JUMPI POP DUP1 PUSH4 0x10525814 EQ PUSH2 0x1B43 JUMPI DUP1 PUSH4 0x106B5DA1 EQ PUSH2 0x295D JUMPI DUP1 PUSH4 0x195EC9EE EQ PUSH2 0x2895 JUMPI DUP1 PUSH4 0x2D8A340C EQ PUSH2 0x26AB JUMPI DUP1 PUSH4 0x34808EC3 EQ PUSH2 0x2682 JUMPI DUP1 PUSH4 0x357917B7 EQ PUSH2 0x20FE JUMPI DUP1 PUSH4 0x35C1D349 EQ PUSH2 0x263E JUMPI DUP1 PUSH4 0x46F84795 EQ PUSH2 0x1011 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x2615 JUMPI DUP1 PUSH4 0x602710A4 EQ PUSH2 0x211C JUMPI DUP1 PUSH4 0x609C7604 EQ PUSH2 0x20FE JUMPI DUP1 PUSH4 0x62858BFA EQ PUSH2 0x208E JUMPI DUP1 PUSH4 0x6299DF6C EQ PUSH2 0x1F77 JUMPI DUP1 PUSH4 0x649718B2 EQ PUSH2 0x1D4A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CED JUMPI DUP1 PUSH4 0x73CCE3EE EQ PUSH2 0x1BB5 JUMPI DUP1 PUSH4 0x782EA619 EQ PUSH2 0x1B86 JUMPI DUP1 PUSH4 0x7A728E7F EQ PUSH2 0x1B43 JUMPI DUP1 PUSH4 0x7CEB4A69 EQ PUSH2 0x1AAB JUMPI DUP1 PUSH4 0x8ACEE3CF EQ PUSH2 0x1A82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A59 JUMPI DUP1 PUSH4 0x8DE4D101 EQ PUSH2 0x1276 JUMPI DUP1 PUSH4 0x93B1AD38 EQ PUSH2 0x104A JUMPI DUP1 PUSH4 0x96F3A8AD EQ PUSH2 0x1011 JUMPI DUP1 PUSH4 0x9732BDB5 EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0x996B8A6F EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0x9B4DC8CC EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0x9E7B399E EQ PUSH2 0x74C JUMPI DUP1 PUSH4 0xA650C232 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xBFC664F3 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xCADCB471 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xFB643583 EQ PUSH2 0x1C2 JUMPI PUSH4 0xFEB0B8F5 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x10 SLOAD DUP3 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH2 0x1ED DUP4 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x216 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3479 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 PUSH2 0x36C SWAP2 PUSH2 0x2A5 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x3251 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2DA DUP5 PUSH2 0x2D3D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x305 SWAP1 DUP5 AND PUSH1 0x40 DUP7 ADD PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST SUB DUP3 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2DAC JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x38A PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x392 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH2 0x3B4 PUSH1 0x1 SWAP3 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP4 DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP2 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x8 DUP2 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND SWAP1 DUP2 PUSH2 0x498 JUMPI JUMPDEST POP PUSH2 0x3F3 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x39E JUMP JUMPDEST PUSH1 0xFF NOT AND SWAP1 SSTORE DUP4 DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 DUP6 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x8 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE DUP3 DUP6 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD PUSH2 0x42F DUP2 SLOAD PUSH2 0x2C80 JUMP JUMPDEST DUP1 PUSH2 0x458 JUMPI JUMPDEST POP POP PUSH1 0x4 DUP3 ADD SSTORE DUP3 PUSH1 0x5 DUP3 ADD SSTORE DUP3 PUSH1 0x6 DUP3 ADD SSTORE DUP3 PUSH1 0x7 DUP3 ADD SSTORE ADD SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP9 EQ PUSH2 0x46D JUMPI POP SSTORE JUMPDEST DUP3 CODESIZE DUP1 PUSH2 0x435 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x488 SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 DUP10 ADD PUSH2 0x31BB JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 KECCAK256 SWAP2 SSTORE SSTORE PUSH2 0x465 JUMP JUMPDEST PUSH1 0x7 SWAP2 POP ADD SLOAD TIMESTAMP GT CODESIZE PUSH2 0x3E4 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4CB PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4122BBB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x741 JUMPI DUP4 SWAP2 PUSH2 0x698 JUMPI JUMPDEST POP DUP3 SWAP1 CALLER DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x676 JUMPI PUSH2 0x12C PUSH2 0x55C PUSH1 0xC0 PUSH2 0x53E DUP5 PUSH2 0x3295 JUMP JUMPDEST MLOAD ADD MLOAD JUMPDEST TIMESTAMP PUSH1 0xE0 PUSH2 0x54E DUP7 PUSH2 0x3295 JUMP JUMPDEST MLOAD ADD MLOAD TIMESTAMP GT PUSH2 0x662 JUMPI PUSH2 0x30FB JUMP JUMPDEST DIV SWAP4 DUP1 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x596 JUMPI PUSH2 0x58E PUSH1 0x1 SWAP2 PUSH2 0x588 DUP9 PUSH1 0x60 PUSH2 0x580 DUP10 DUP10 PUSH2 0x32A2 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x30D2 JUMP JUMPDEST SWAP1 PUSH2 0x318A JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x561 JUMP JUMPDEST DUP5 SWAP1 CALLER DUP4 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP5 KECCAK256 SSTORE DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x63A JUMPI JUMPDEST POP POP PUSH2 0x604 DUP2 PUSH1 0x2 SLOAD PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x408E6E0B73DAF4C873106E95FD067260FBFF8BF9D1B499CAD563D4480D45BAC PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x644 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x64F JUMPI DUP3 DUP5 PUSH2 0x5F6 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP PUSH1 0xE0 PUSH2 0x66E DUP6 PUSH2 0x3295 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x30FB JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH2 0x12C PUSH2 0x55C PUSH1 0x40 DUP7 KECCAK256 SLOAD PUSH2 0x542 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x6A9 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x739 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x73D JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x739 JUMPI DUP1 MLOAD PUSH2 0x6DE DUP2 PUSH2 0x323A JUMP JUMPDEST SWAP3 PUSH2 0x6EC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D8B JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 PUSH2 0x120 DUP2 DUP7 ADD SWAP4 MUL DUP5 ADD ADD SWAP3 DUP2 DUP5 GT PUSH2 0x735 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x71A JUMPI POP POP POP POP CODESIZE PUSH2 0x50B JUMP JUMPDEST PUSH1 0x20 PUSH2 0x120 SWAP2 PUSH2 0x72A DUP5 DUP7 PUSH2 0x3108 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x709 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x771 PUSH2 0x2B0C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH2 0x7B9 DUP4 PUSH2 0x7B2 DUP2 PUSH1 0x3 DUP6 ADD PUSH2 0x2CBA JUMP JUMPDEST SUB DUP5 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x808 PUSH1 0x6 DUP5 ADD SLOAD SWAP3 PUSH2 0x7F5 PUSH1 0xFF PUSH1 0x8 PUSH1 0x7 DUP9 ADD SLOAD SWAP8 ADD SLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH2 0x120 PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD SWAP1 PUSH2 0x2B96 JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH2 0x88A CALLDATASIZE PUSH2 0x2E89 JUMP JUMPDEST PUSH2 0x89A SWAP9 SWAP8 SWAP4 SWAP5 SWAP7 SWAP6 SWAP3 SWAP9 PUSH2 0x3479 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7EB111F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP10 DUP8 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x1006 JUMPI DUP11 SWAP8 PUSH2 0xFE2 JUMPI JUMPDEST POP SWAP7 SWAP10 PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 DUP11 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x20 PUSH2 0x8F5 DUP3 DUP12 PUSH2 0x32A2 JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x926 PUSH1 0x20 DUP3 DUP2 PUSH2 0x915 DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2B73 JUMP JUMPDEST DUP2 ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2D8B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP11 DUP13 PUSH2 0x947 PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH2 0x915 DUP4 DUP4 ADD SWAP7 DUP8 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x2B73 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH2 0x957 JUMPI PUSH1 0x1 ADD PUSH2 0x8E0 JUMP JUMPDEST PUSH4 0x3480A503 PUSH1 0xE2 SHL DUP13 MSTORE PUSH1 0x4 DUP13 REVERT JUMPDEST POP DUP11 SWAP9 POP DUP10 SWAP7 SWAP8 POP DUP12 PUSH1 0x40 MLOAD PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP2 MSTORE DUP6 PUSH1 0x4 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0x24 DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFD7 JUMPI DUP12 SWAP2 PUSH2 0xFB5 JUMPI JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x3 DUP10 LT ISZERO PUSH2 0xFA1 JUMPI DUP9 EQ DUP1 ISZERO SWAP1 PUSH2 0xF93 JUMPI JUMPDEST PUSH2 0xF84 JUMPI PUSH1 0xA0 ADD MLOAD PUSH8 0xDE0B6B3A7640000 DUP4 MUL DUP4 DUP2 DIV PUSH8 0xDE0B6B3A7640000 EQ DUP5 ISZERO OR ISZERO PUSH2 0xF70 JUMPI PUSH2 0x9FA DUP13 SWAP3 PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 SWAP4 DIV SWAP1 PUSH2 0x30D2 JUMP JUMPDEST DIV SWAP7 DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI DUP2 DUP1 SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA4948D85 PUSH1 0xE0 SHL DUP4 MSTORE DUP13 PUSH1 0x4 DUP5 ADD MSTORE DUP10 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0xF57 JUMPI JUMPDEST POP POP PUSH2 0xA3F PUSH1 0xF SLOAD PUSH2 0x322B JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP6 PUSH2 0xA4F DUP8 PUSH2 0x2D6F JUMP JUMPDEST DUP10 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP5 DUP10 DUP7 MSTORE PUSH1 0x40 DUP9 ADD SWAP4 PUSH2 0xA69 DUP11 DUP7 PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD SWAP6 DUP7 MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE DUP1 PUSH1 0xC0 DUP9 ADD MSTORE DUP11 PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE DUP5 PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE DUP8 DUP10 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP3 DUP6 MLOAD DUP5 SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF43 JUMPI PUSH2 0xAC9 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xF10 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xEA7 JUMPI PUSH2 0xB03 SWAP3 SWAP2 DUP13 SWAP2 DUP4 PUSH2 0xE9C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE JUMPDEST MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xE88 JUMPI PUSH2 0xB20 SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x31A3 JUMP JUMPDEST MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDCA JUMPI PUSH2 0xB3F PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE55 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDE9 JUMPI SWAP2 DUP1 PUSH2 0xB7C SWAP3 PUSH1 0xA SWAP6 SWAP5 DUP13 SWAP3 PUSH2 0xDDE JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP5 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE ADD PUSH2 0x140 DUP4 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDCA JUMPI PUSH2 0xBE2 DUP4 SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD8F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD2C JUMPI PUSH2 0xC1B SWAP3 SWAP2 DUP11 SWAP2 DUP4 PUSH2 0xD21 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xD0D JUMPI SWAP1 PUSH2 0xC40 DUP3 PUSH1 0x1 DUP10 SWAP6 SWAP5 ADD PUSH1 0x10 SSTORE PUSH2 0x2B58 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL DUP10 DUP2 SHL PUSH1 0x0 NOT SWAP1 SWAP2 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x739 JUMPI PUSH2 0xC9A SWAP3 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x31EAA61D PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x2BDE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0xCF8 JUMPI JUMPDEST POP SWAP2 DUP4 PUSH32 0x5928D65CC6AE9F07A7673F1A5A2F98D81F1BB0C2BC53BCAA33D6F11CF426F25E SWAP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xCF2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3434 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xD02 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x739 JUMPI DUP4 DUP6 PUSH2 0xCA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0xAEE JUMP JUMPDEST DUP4 DUP11 MSTORE DUP2 DUP11 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0xD77 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xD5E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xC1E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xD51 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xD3B JUMP JUMPDEST PUSH2 0xDBA SWAP1 DUP5 DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDC0 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP10 PUSH2 0xBEB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xDAD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x3 DUP5 ADD DUP11 MSTORE DUP2 DUP11 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0xE3D JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0xA SWAP8 SWAP7 SWAP5 LT PUSH2 0xE24 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xB82 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0xE14 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xDFB JUMP JUMPDEST PUSH2 0xE82 SWAP1 PUSH1 0x3 DUP6 ADD DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP10 PUSH2 0xB48 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 DUP7 ADD DUP13 MSTORE DUP2 DUP13 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP14 JUMPDEST DUP2 DUP2 LT PUSH2 0xEF8 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xEDF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0xB09 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0xECF JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xF3D SWAP1 PUSH1 0x1 DUP8 ADD DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP12 PUSH2 0xAD2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP2 PUSH2 0xF61 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0xF6C JUMPI DUP10 DUP12 PUSH2 0xA32 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP12 MSTORE PUSH1 0x4 DUP12 REVERT JUMPDEST POP PUSH2 0x140 DUP2 ADD MLOAD DUP4 GT PUSH2 0x9BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH2 0xFD1 SWAP2 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0xFC9 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2FA5 JUMP JUMPDEST DUP12 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xFFF SWAP2 SWAP8 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0xFF7 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x32B6 JUMP JUMPDEST SWAP6 CODESIZE PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1039 PUSH2 0x2B0C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI DUP1 DUP2 PUSH1 0x10 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1236 JUMPI POP PUSH2 0x1073 DUP3 PUSH2 0x323A JUMP JUMPDEST SWAP2 PUSH2 0x1081 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2D8B JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x1090 PUSH1 0x1F NOT SWAP2 PUSH2 0x323A JUMP JUMPDEST ADD DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x121F JUMPI POP POP DUP3 DUP4 JUMPDEST DUP3 DUP2 LT PUSH2 0x110D JUMPI DUP4 DUP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD PUSH1 0x20 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x10DE JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x10FD DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x2BDE JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0x1116 DUP2 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND PUSH2 0x113B JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x109F JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP3 PUSH2 0x1218 SWAP2 DUP8 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH1 0xA PUSH2 0x11F7 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1160 DUP5 PUSH2 0x2D6F JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1177 DUP2 PUSH2 0x319 DUP2 DUP12 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1190 PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP7 ADD PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A4 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x319 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x1207 DUP3 DUP9 PUSH2 0x32A2 JUMP JUMPDEST MSTORE PUSH2 0x1212 DUP2 DUP8 PUSH2 0x32A2 JUMP JUMPDEST POP PUSH2 0x322B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x122A PUSH2 0x31D2 JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x1093 JUMP JUMPDEST PUSH2 0x123F DUP2 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP5 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x1262 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 PUSH2 0x126E PUSH1 0x1 SWAP2 PUSH2 0x322B JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x125A JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x24 PUSH2 0x1287 CALLDATASIZE PUSH2 0x2E89 JUMP JUMPDEST PUSH2 0x129A SWAP10 SWAP8 SWAP7 SWAP6 SWAP3 SWAP10 SWAP9 SWAP2 SWAP5 SWAP4 SWAP9 PUSH2 0x3479 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP10 DUP9 DUP12 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1A4E JUMPI DUP10 SWAP4 PUSH2 0x1A32 JUMPI JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1A1E JUMPI PUSH1 0x3 DUP6 LT ISZERO PUSH2 0x1A1E JUMPI DUP5 EQ DUP1 ISZERO SWAP1 PUSH2 0x1A10 JUMPI JUMPDEST PUSH2 0x1A01 JUMPI DUP8 DUP10 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 DUP11 KECCAK256 SWAP4 ADD MLOAD PUSH8 0xDE0B6B3A7640000 DUP3 MUL DUP3 DUP2 DIV PUSH8 0xDE0B6B3A7640000 EQ DUP4 ISZERO OR ISZERO PUSH2 0x19ED JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x64 PUSH2 0x133D SWAP3 DIV SWAP1 PUSH2 0x30D2 JUMP JUMPDEST DIV SWAP1 DUP2 PUSH1 0x7 DUP6 ADD SLOAD GT PUSH2 0x19DE JUMPI DUP10 PUSH1 0x24 SWAP11 SWAP12 SWAP13 PUSH1 0x40 MLOAD SWAP12 DUP13 DUP1 SWAP3 PUSH4 0x7EB111F PUSH1 0xE4 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP10 DUP11 ISZERO PUSH2 0xFD7 JUMPI DUP12 SWAP11 PUSH2 0x19C2 JUMPI JUMPDEST POP SWAP6 SWAP11 PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 DUP12 JUMPDEST DUP12 MLOAD DUP2 LT ISZERO PUSH2 0x141C JUMPI DUP12 DUP12 DUP3 DUP13 DUP13 PUSH1 0x20 PUSH2 0x139C DUP5 DUP8 PUSH2 0x32A2 JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x13BC PUSH1 0x20 DUP3 DUP2 PUSH2 0x915 DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2B73 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x13DC PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH2 0x915 DUP4 DUP4 ADD SWAP7 DUP8 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x2B73 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ SWAP3 DUP4 PUSH2 0x1405 JUMPI JUMPDEST POP POP POP PUSH2 0x13F6 JUMPI PUSH1 0x1 ADD PUSH2 0x1382 JUMP JUMPDEST PUSH4 0x3480A503 PUSH1 0xE2 SHL DUP14 MSTORE PUSH1 0x4 DUP14 REVERT JUMPDEST PUSH2 0x1410 SWAP3 SWAP4 POP PUSH2 0x32A2 JUMP JUMPDEST MLOAD MLOAD EQ ISZERO DUP12 DUP3 DUP15 PUSH2 0x13E7 JUMP JUMPDEST POP DUP12 SWAP9 SWAP7 SWAP10 SWAP8 POP DUP13 PUSH1 0x4 DUP7 ADD SLOAD SWAP2 DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1906 JUMPI DUP12 PUSH2 0x1448 PUSH1 0x1 DUP11 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x198F JUMPI JUMPDEST POP POP PUSH1 0x20 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1925 JUMPI PUSH2 0x1480 SWAP3 SWAP2 DUP3 PUSH2 0x191A JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP9 ADD SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1906 JUMPI DUP12 PUSH2 0x14A4 PUSH1 0x3 DUP11 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x18D3 JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1865 JUMPI PUSH2 0x14DE SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0x185A JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD SSTORE JUMPDEST DUP3 PUSH1 0x4 DUP8 ADD SSTORE PUSH1 0x5 DUP7 ADD SSTORE DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1846 JUMPI PUSH2 0x150C PUSH1 0xA DUP8 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1813 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x17A2 JUMPI SWAP1 DUP1 PUSH2 0x154A SWAP3 DUP13 SWAP14 DUP14 SWAP11 SWAP12 SWAP13 SWAP14 SWAP3 PUSH2 0x1797 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xA DUP7 ADD SSTORE JUMPDEST PUSH1 0x6 DUP6 ADD SWAP2 DUP4 DUP4 SSTORE PUSH2 0x156E PUSH1 0x9 DUP8 ADD SWAP5 DUP7 DUP7 SSTORE PUSH1 0x7 DUP9 ADD SLOAD SWAP1 PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x8 DUP8 ADD SWAP1 DUP2 SSTORE SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x1723 JUMPI SWAP1 PUSH2 0x1588 SWAP2 PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x171F JUMPI DUP8 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x9FD36B15 PUSH1 0xE0 SHL DUP5 MSTORE DUP12 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1714 JUMPI DUP8 SWAP2 PUSH2 0x16FB JUMPI JUMPDEST POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x735 JUMPI DUP7 SWAP5 PUSH2 0x16A4 DUP7 SWAP3 PUSH1 0xA PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xA14764D PUSH1 0xE4 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP9 ADD MSTORE DUP3 SLOAD PUSH1 0x44 DUP9 ADD MSTORE PUSH2 0x160 PUSH1 0x64 DUP9 ADD MSTORE PUSH2 0x165C PUSH2 0x1632 PUSH2 0x1A4 DUP10 ADD PUSH1 0x1 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH2 0x1647 PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH1 0x84 DUP12 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST DUP9 DUP2 SUB PUSH1 0x43 NOT ADD PUSH1 0xA4 DUP11 ADD MSTORE PUSH1 0x3 DUP6 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xC4 DUP10 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xE4 DUP10 ADD MSTORE SWAP5 SLOAD PUSH2 0x104 DUP9 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH2 0x124 DUP9 ADD MSTORE SLOAD PUSH2 0x144 DUP8 ADD MSTORE SLOAD PUSH2 0x164 DUP7 ADD MSTORE DUP5 DUP4 SUB PUSH1 0x43 NOT ADD PUSH2 0x184 DUP7 ADD MSTORE ADD PUSH2 0x2CBA JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x16E6 JUMPI JUMPDEST POP POP PUSH32 0x758A67328BA53C1867C0272BBD2CA10D6FE71D37120188C523FE7AE7BDBBE469 SWAP2 PUSH2 0xCF2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3434 JUMP JUMPDEST DUP2 PUSH2 0x16F0 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x739 JUMPI DUP4 DUP6 PUSH2 0x16B3 JUMP JUMPDEST DUP2 PUSH2 0x1705 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x1710 JUMPI DUP6 DUP12 PUSH2 0x15CF JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1732 JUMPI JUMPDEST POP POP PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x173B SWAP2 PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x171F JUMPI DUP8 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xA4948D85 PUSH1 0xE0 SHL DUP5 MSTORE DUP12 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1714 JUMPI DUP8 SWAP2 ISZERO PUSH2 0x172B JUMPI DUP2 PUSH2 0x178C SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x1710 JUMPI DUP6 DUP12 PUSH2 0x172B JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0xA DUP8 ADD DUP12 MSTORE DUP1 DUP12 KECCAK256 SWAP12 DUP12 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x17FB JUMPI POP SWAP12 DUP3 SWAP2 DUP13 SWAP14 PUSH1 0x1 SWAP5 PUSH1 0x1F SWAP15 SWAP12 SWAP13 SWAP14 SWAP15 NOT DUP2 AND LT PUSH2 0x17E2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA DUP7 ADD SSTORE PUSH2 0x1550 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x17D2 JUMP JUMPDEST DUP3 DUP3 ADD MLOAD DUP15 SSTORE PUSH1 0x1 SWAP1 SWAP14 ADD SWAP13 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x1840 SWAP1 PUSH1 0xA DUP9 ADD DUP13 MSTORE PUSH1 0x20 DUP13 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP12 PUSH2 0x1515 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0xAEE JUMP JUMPDEST POP SWAP2 PUSH1 0x3 DUP10 ADD DUP14 MSTORE DUP1 DUP14 KECCAK256 SWAP1 DUP14 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x18B8 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x189F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP8 ADD SSTORE PUSH2 0x14E4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x188F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x18FF SWAP3 PUSH1 0x3 DUP13 ADD DUP2 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP12 DUP15 PUSH2 0x14AD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST SWAP1 POP DUP12 ADD MLOAD DUP16 PUSH2 0x146C JUMP JUMPDEST POP SWAP1 PUSH1 0x1 DUP10 ADD DUP14 MSTORE DUP2 DUP14 KECCAK256 DUP14 SWAP3 JUMPDEST DUP13 PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1978 JUMPI POP PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x195F JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x1 DUP9 ADD SSTORE PUSH2 0x1486 JUMP JUMPDEST DUP13 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 PUSH2 0x1950 JUMP JUMPDEST DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x19BB SWAP3 PUSH1 0x1 DUP13 ADD DUP2 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP12 DUP15 PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x19D7 SWAP2 SWAP11 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0xFF7 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST SWAP9 CODESIZE PUSH2 0x1377 JUMP JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP10 MSTORE PUSH1 0x4 DUP10 REVERT JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD DUP2 GT PUSH2 0x12F1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH2 0x1A47 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0xFC9 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1AC5 PUSH2 0x2B0C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1AE1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x7 SLOAD AND CALLER EQ PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x1AE9 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP6 KECCAK256 ADD PUSH2 0x1B15 DUP5 DUP3 SLOAD PUSH2 0x30FB JUMP JUMPDEST SWAP1 SSTORE DUP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1B3A PUSH1 0x5 PUSH1 0x40 DUP5 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x318A JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1B6B PUSH2 0x2B0C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP4 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1BCF PUSH2 0x2B0C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x13815491 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x24 DUP1 CALLDATALOAD PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0x120 SWAP2 DUP6 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1CE2 JUMPI DUP5 SWAP4 PUSH2 0x1C96 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP5 DUP8 MSTORE DUP3 MSTORE DUP6 KECCAK256 SLOAD SWAP1 SWAP5 PUSH2 0x12C SWAP5 PUSH2 0x1C6C SWAP5 SWAP1 SWAP4 SWAP3 PUSH2 0x1C7D JUMPI POP POP POP PUSH1 0xC0 DUP2 ADD MLOAD SWAP1 JUMPDEST PUSH1 0xE0 TIMESTAMP SWAP2 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x1C75 JUMPI JUMPDEST POP PUSH2 0x30FB JUMP JUMPDEST DIV PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CODESIZE PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x40 SWAP3 DUP3 MSTORE PUSH1 0xB DUP8 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP7 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0x1C58 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x1CDB JUMPI JUMPDEST PUSH2 0x1CAE DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x120 DUP2 DUP4 SUB SLT PUSH2 0x73D JUMPI SWAP2 PUSH1 0x20 SWAP5 PUSH2 0x1CD1 PUSH2 0x12C SWAP6 SWAP4 PUSH2 0x1C6C SWAP6 PUSH2 0x3108 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP2 PUSH2 0x1C1C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1D06 PUSH2 0x3479 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1D64 PUSH2 0x2B0C JUMP JUMPDEST PUSH1 0x10 SLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F2C JUMPI POP PUSH2 0x1D85 DUP4 PUSH2 0x323A JUMP JUMPDEST SWAP3 PUSH2 0x1D93 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D8B JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x1DA2 PUSH1 0x1F NOT SWAP2 PUSH2 0x323A JUMP JUMPDEST ADD DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F15 JUMPI POP POP DUP4 DUP5 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E1F JUMPI DUP5 DUP7 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD PUSH1 0x20 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DF0 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x1E0F DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x2DAC JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x1DE1 JUMP JUMPDEST PUSH2 0x1E28 DUP2 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP4 DUP8 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 DUP2 DUP9 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x1E57 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP3 PUSH2 0x1F0E SWAP2 DUP6 DUP10 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP1 DUP10 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E86 DUP5 PUSH2 0x2D3D JUMP JUMPDEST DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP5 MSTORE DUP7 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1EAD DUP4 PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP7 ADD PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC1 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x1F03 DUP3 DUP10 PUSH2 0x32A2 JUMP JUMPDEST MSTORE PUSH2 0x1212 DUP2 DUP9 PUSH2 0x32A2 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1F20 PUSH2 0x3251 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x1DA5 JUMP JUMPDEST PUSH2 0x1F35 DUP2 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP3 DUP7 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP1 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x1F63 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP3 PUSH2 0x1F6F PUSH1 0x1 SWAP2 PUSH2 0x322B JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x1F5B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 PUSH1 0x1 DUP4 ADD SWAP1 PUSH2 0x1FAD SWAP2 PUSH2 0x2CBA JUMP JUMPDEST SUB PUSH2 0x1FB8 SWAP1 DUP5 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0xFF AND DUP2 PUSH2 0x1FD2 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST SUB PUSH2 0x1FDD SWAP1 DUP4 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD SWAP2 PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD SWAP2 PUSH1 0x8 DUP8 ADD SLOAD SWAP4 PUSH1 0x9 DUP9 ADD SLOAD SWAP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA DUP2 SWAP12 ADD SWAP1 PUSH2 0x2012 SWAP2 PUSH2 0x2CBA JUMP JUMPDEST SUB PUSH2 0x201D SWAP1 DUP11 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD PUSH2 0x160 SWAP1 MSTORE PUSH2 0x160 DUP12 ADD PUSH2 0x203C SWAP2 PUSH2 0x2B96 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP12 ADD PUSH2 0x204A SWAP2 PUSH2 0x2BBB JUMP JUMPDEST DUP10 DUP2 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x205B SWAP2 PUSH2 0x2B96 JUMP JUMPDEST SWAP6 PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x36C SWAP2 PUSH2 0x2B96 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 PUSH2 0x36C SWAP2 PUSH2 0x20AE PUSH2 0x31D2 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xA PUSH2 0x20E4 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x20CC DUP5 PUSH2 0x2D6F JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1177 DUP2 PUSH2 0x319 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2BDE JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x213C PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0x2606 JUMPI PUSH1 0x1B DUP3 GT DUP1 ISZERO SWAP1 PUSH2 0x25FA JUMPI JUMPDEST PUSH2 0x25EB JUMPI DUP1 DUP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x25DC JUMPI DUP1 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x8 DUP4 ADD DUP1 SLOAD PUSH1 0x24 CALLDATALOAD GT PUSH2 0x25CD JUMPI PUSH1 0x7 DUP5 ADD PUSH2 0x2195 PUSH1 0x24 CALLDATALOAD DUP3 SLOAD PUSH2 0x318A JUMP JUMPDEST PUSH1 0x6 DUP7 ADD DUP1 SLOAD DUP3 GT PUSH2 0x25BE JUMPI PUSH1 0x4 SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x25A9 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x21FD SWAP4 SSTORE SLOAD PUSH2 0x1C66 DUP3 DUP3 PUSH2 0x30FB JUMP JUMPDEST SWAP1 SSTORE CALLER DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x259A JUMPI PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND SWAP1 PUSH3 0x15180 DUP2 MUL DUP2 DUP2 DIV PUSH3 0x15180 EQ DUP3 ISZERO OR ISZERO PUSH2 0x2586 JUMPI PUSH2 0x224A SWAP1 TIMESTAMP PUSH2 0x318A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH2 0x2257 DUP6 PUSH2 0x2D3D JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 DUP2 DUP6 MSTORE PUSH2 0x2270 PUSH1 0x40 DUP8 ADD SWAP2 DUP3 PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x228C DUP3 PUSH2 0x2285 DUP2 PUSH1 0x1 DUP13 ADD PUSH2 0x2CBA JUMP JUMPDEST SUB DUP4 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x60 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 MSTORE PUSH1 0xA0 DUP9 ADD SWAP5 DUP11 DUP7 MSTORE PUSH1 0xC0 DUP10 ADD SWAP7 DUP8 MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP10 ADD MSTORE CALLER DUP11 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP11 KECCAK256 SWAP1 DUP11 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP9 SLOAD AND OR DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xE88 JUMPI PUSH2 0x230D SWAP1 PUSH1 0x2 DUP8 ADD PUSH2 0x31A3 JUMP JUMPDEST MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDCA JUMPI PUSH2 0x232C PUSH1 0x3 DUP8 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2553 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x24DE JUMPI DUP3 PUSH2 0x100 SWAP8 SWAP6 SWAP4 PUSH1 0x8 SWAP8 SWAP6 SWAP4 PUSH2 0x236F SWAP4 DUP14 SWAP3 PUSH2 0x24D3 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST MLOAD PUSH1 0x4 DUP5 ADD SSTORE MLOAD PUSH1 0x5 DUP4 ADD SSTORE MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP2 DUP3 SWAP1 PUSH1 0x8 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x24A0 JUMPI JUMPDEST POP ISZERO PUSH2 0x244E JUMPI JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x243A JUMPI SWAP2 PUSH1 0x2 SWAP2 PUSH1 0xFF SWAP4 SSTORE PUSH2 0x23EA PUSH1 0x64 CALLDATALOAD DUP4 SLOAD PUSH2 0x318A JUMP JUMPDEST DUP3 SSTORE ADD SLOAD AND PUSH2 0x240D PUSH1 0x40 MLOAD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH32 0x23B0F39E0762759FFB18632A1A2B79C9EB58571454E5F7C36E0A2F81759E0A34 PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x248C JUMPI DUP1 PUSH1 0x1 PUSH2 0x246A SWAP3 ADD PUSH1 0x8 SSTORE PUSH2 0x2B27 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE CODESIZE PUSH2 0x23BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH2 0x24A9 DUP2 PUSH2 0x2B27 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24C9 JUMPI PUSH1 0x1 ADD PUSH2 0x23AB JUMP JUMPDEST POP POP PUSH1 0x1 CODESIZE PUSH2 0x23B3 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xAEE JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP8 ADD DUP11 MSTORE DUP1 DUP11 KECCAK256 SWAP2 DUP11 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x253B JUMPI POP SWAP3 PUSH1 0x8 SWAP7 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x100 SWAP10 SWAP8 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2522 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x2375 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2512 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x24EB JUMP JUMPDEST PUSH2 0x2580 SWAP1 PUSH1 0x3 DUP9 ADD DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST CODESIZE PUSH2 0x2335 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x9857CBD9 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST DUP2 PUSH2 0x25B3 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x171F JUMPI DUP8 CODESIZE PUSH2 0x21EA JUMP JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 REVERT JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST PUSH4 0xBCCD4043 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x1F899589 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST POP PUSH2 0x16E DUP3 LT ISZERO PUSH2 0x2150 JUMP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH2 0x2669 DUP4 PUSH2 0x2B27 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x26C8 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x13815491 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH2 0x120 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x741 JUMPI DUP4 SWAP2 PUSH2 0x285B JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2847 JUMPI PUSH2 0x2838 JUMPI CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x2816 JUMPI PUSH2 0x12C PUSH2 0x275B PUSH1 0xC0 DUP4 ADD MLOAD JUMPDEST TIMESTAMP PUSH1 0xE0 DUP6 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x1C75 JUMPI POP PUSH2 0x30FB JUMP JUMPDEST DIV SWAP1 DUP2 ISZERO PUSH2 0x2807 JUMPI SWAP1 PUSH1 0x60 PUSH2 0x2771 SWAP3 ADD MLOAD PUSH2 0x30D2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x27F8 JUMPI CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP5 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x27E4 JUMPI JUMPDEST POP PUSH2 0x604 DUP2 PUSH1 0x2 SLOAD PUSH2 0x30FB JUMP JUMPDEST DUP4 PUSH2 0x27F1 SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0x2D8B JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x27D7 JUMP JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0xED700A67 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH2 0x12C PUSH2 0x275B PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x2748 JUMP JUMPDEST PUSH4 0xE067835F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP1 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x288E JUMPI JUMPDEST PUSH2 0x2872 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST DUP2 ADD PUSH2 0x120 DUP3 DUP3 SUB SLT PUSH2 0x739 JUMPI PUSH2 0x2888 SWAP2 PUSH2 0x3108 JUMP JUMPDEST CODESIZE PUSH2 0x270A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2868 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD DUP1 SWAP2 PUSH1 0x8 DUP6 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x293E JUMPI POP POP POP DUP3 PUSH2 0x28F4 SWAP2 SUB DUP4 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x291C JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x290E JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x28DE JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2987 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND CALLER EQ PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x298F PUSH2 0x3457 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 SLOAD PUSH1 0x9 DUP3 ADD SLOAD SWAP3 MLOAD PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP5 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CE2 JUMPI DUP5 SWAP3 PUSH2 0x2AAD JUMPI JUMPDEST POP PUSH1 0x4 ADD SLOAD SWAP1 DUP2 ISZERO PUSH2 0x2A6F JUMPI PUSH1 0xA0 ADD MLOAD SWAP1 PUSH8 0xDE0B6B3A7640000 DUP2 MUL SWAP1 DUP2 DIV PUSH8 0xDE0B6B3A7640000 SUB PUSH2 0x243A JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x64 PUSH2 0x2A1E SWAP3 DIV SWAP1 PUSH2 0x30D2 JUMP JUMPDEST DIV DUP2 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x6 PUSH1 0x40 DUP5 KECCAK256 ADD SSTORE DUP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x2A58 PUSH1 0x6 PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD DUP3 DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x30FB JUMP JUMPDEST SWAP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 DUP4 KECCAK256 ADD SSTORE PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420636F766572206361706163697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 SWAP2 SWAP3 POP PUSH2 0x2AC5 SWAP1 RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0xFC9 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x29DA JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x65E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x65E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2AF5 PUSH2 0x2B0C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2B22 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x10 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2B86 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B76 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2BAF DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2B73 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BC8 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2C7D SWAP2 DUP2 MLOAD DUP2 MSTORE PUSH2 0x140 PUSH2 0x2C2B PUSH2 0x2C07 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x160 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD SWAP1 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x2C19 PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH2 0x140 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2CB0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2C9A JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2C8F JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x2CCA DUP4 PUSH2 0x2C80 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2D20 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2CE6 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x2D06 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x2CF5 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D59 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D59 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D59 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2DD5 PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH2 0x100 DUP1 PUSH2 0x2DF4 PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x120 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD SWAP1 PUSH2 0x2B96 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D59 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2B22 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x2E59 DUP3 PUSH2 0x2E27 JUMP JUMPDEST SWAP3 PUSH2 0x2E67 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D8B JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2B22 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2B22 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B22 JUMPI DUP3 PUSH2 0x2EB8 SWAP2 PUSH1 0x4 ADD PUSH2 0x2E42 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B22 JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B22 JUMPI DUP3 PUSH2 0x2EE4 SWAP2 PUSH1 0x4 ADD PUSH2 0x2E42 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B22 JUMPI PUSH2 0x2F03 SWAP2 PUSH1 0x4 ADD PUSH2 0x2E42 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0xE4 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2F19 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2B22 JUMPI DUP1 MLOAD PUSH2 0x2F65 DUP2 PUSH2 0x2E27 JUMP JUMPDEST SWAP3 PUSH2 0x2F73 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D8B JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x2B22 JUMPI PUSH2 0x2C7D SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x2B73 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2B22 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x2B22 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B22 JUMPI ADD PUSH2 0x1E0 DUP2 DUP4 SUB SLT PUSH2 0x2B22 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1E0 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D59 JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B22 JUMPI PUSH2 0x300D SWAP2 DUP4 ADD PUSH2 0x2F4F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B22 JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2B22 JUMPI PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x2B22 JUMPI PUSH2 0x1C0 SWAP2 PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x30B8 PUSH2 0x1A0 DUP3 ADD PUSH2 0x2F91 JUMP JUMPDEST PUSH2 0x1A0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2B22 JUMPI PUSH2 0x1C0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x30E5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x30E5 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH2 0x120 SWAP2 SUB SLT PUSH2 0x2B22 JUMPI PUSH1 0x40 MLOAD PUSH2 0x3121 DUP2 PUSH2 0x2D3D JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x312C DUP2 PUSH2 0x2F91 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2B22 JUMPI PUSH2 0x100 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x30E5 JUMPI JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BC8 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2BC8 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x31C6 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x31BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x31DF DUP3 PUSH2 0x2D6F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x140 DUP4 PUSH1 0x0 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x30E5 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D59 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x325E DUP3 PUSH2 0x2D3D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x2B22 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B22 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2B22 JUMPI DUP2 MLOAD SWAP2 PUSH2 0x32EA DUP4 PUSH2 0x323A JUMP JUMPDEST SWAP3 PUSH2 0x32F8 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D8B JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x2B22 JUMPI PUSH1 0x20 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3324 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B22 JUMPI DUP3 ADD SWAP1 PUSH2 0x160 DUP3 DUP8 SUB PUSH1 0x1F NOT ADD SLT PUSH2 0x2B22 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3353 DUP3 PUSH2 0x2D6F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD DUP3 MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B22 JUMPI DUP8 PUSH1 0x20 PUSH2 0x337C SWAP3 DUP7 ADD ADD PUSH2 0x2F4F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B22 JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B22 JUMPI DUP8 PUSH1 0x20 PUSH2 0x33B6 SWAP3 DUP7 ADD ADD PUSH2 0x2F4F JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x100 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x160 DUP4 ADD MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x2B22 JUMPI PUSH2 0x3423 DUP9 PUSH1 0x20 DUP1 SWAP7 SWAP6 DUP2 SWAP7 ADD ADD PUSH2 0x2F4F JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x3315 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x20 PUSH2 0x344D PUSH2 0x3455 SWAP4 PUSH1 0x40 DUP8 MSTORE PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x2B96 JUMP JUMPDEST SWAP5 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x3468 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x348D JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xC9 DUP8 SSTORE 0x4B PUSH8 0x26669D87EF1BE6B7 CALL TIMESTAMP PUSH6 0xF1BC16FA41B3 STATICCALL ORIGIN 0xF 0xBA 0xC 0xC CODESIZE 0xF6 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"2436:15688:8:-:0;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;1857:1:4;-1:-1:-1;1857:1:4;-1:-1:-1;;;;;2436:15688:8;;;;1273:26:0;;1269:95;;1857:1:4;2436:15688:8;;-1:-1:-1;;;;;;2436:15688:8;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;3052:40:0;-1:-1:-1;;3052:40:0;4267:29:8;2436:15688;;-1:-1:-1;;;;;2436:15688:8;;;-1:-1:-1;;;;;;2436:15688:8;;;;;;;;4307:23;2436:15688;;;;;;;;;;4341:22;2436:15688;;;;;;;;;;;;;;4374:21;2436:15688;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;2436:15688:8;;-1:-1:-1;1322:31:0;2436:15688:8;-1:-1:-1;2436:15688:8;;;;;;-1:-1:-1;2436:15688:8;;;;;-1:-1:-1;2436:15688:8;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":11020,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":12177,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_struct_Cover_dyn_fromMemory":{"entryPoint":12982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":11842,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":12111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Deposits_fromMemory":{"entryPoint":12552,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Pool_fromMemory":{"entryPoint":12197,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_stringt_enum_RiskTypet_stringt_stringt_uint256t_uint256t_uint256":{"entryPoint":11913,"id":null,"parameterSlots":1,"returnSlots":8},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_enum_RiskType":{"entryPoint":11195,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":11158,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_enum_RiskType":{"entryPoint":13364,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":11450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Cover":{"entryPoint":11230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_GenericCoverInfo":{"entryPoint":11692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Cover":{"entryPoint":12754,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_GenericCoverInfo":{"entryPoint":12881,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_GenericCoverInfo_dyn":{"entryPoint":12858,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":11815,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":12682,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":12498,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":12539,"id":null,"parameterSlots":2,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":12731,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11123,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11392,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":11659,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_46856":{"entryPoint":11581,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_46859":{"entryPoint":11631,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":13433,"id":84,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":13399,"id":356,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":12843,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_GenericCoverInfo_dyn":{"entryPoint":12962,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_struct_GenericCoverInfo_dyn_46877":{"entryPoint":12949,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_fac3":{"entryPoint":12050,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":11096,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_address_dyn_46854":{"entryPoint":11047,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_offset_enum_RiskType_to_enum_RiskType":{"entryPoint":12707,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_RiskType":{"entryPoint":12695,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c9081630db981a014612acc575080631052581414611b43578063106b5da11461295d578063195ec9ee146128955780632d8a340c146126ab57806334808ec314612682578063357917b7146120fe57806335c1d3491461263e57806346f84795146110115780635aa6e67514612615578063602710a41461211c578063609c7604146120fe57806362858bfa1461208e5780636299df6c14611f77578063649718b214611d4a578063715018a614611ced57806373cce3ee14611bb5578063782ea61914611b865780637a728e7f14611b435780637ceb4a6914611aab5780638acee3cf14611a825780638da5cb5b14611a595780638de4d1011461127657806393b1ad381461104a57806396f3a8ad146110115780639732bdb51461087b578063996b8a6f146108525780639b4dc8cc146108295780639e7b399e1461074c578063a650c232146104ae578063bfc664f314610370578063cadcb47114610285578063f2fde38b146101fc578063fb643583146101c25763feb0b8f5146101a257600080fd5b346101bf57806003193601126101bf576020600f54604051908152f35b80fd5b50346101bf5760203660031901126101bf57600435906010548210156101bf5760206101ed83612b58565b90549060031b1c604051908152f35b50346101bf5760203660031901126101bf57610216612b0c565b61021e613479565b6001600160a01b0316801561027157600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b50346101bf5760403660031901126101bf57604061036c916102a5612b0c565b6102ad613251565b5060018060a01b03168152600d60205281812060243582526020522060ff6008604051926102da84612d3d565b80546001600160a01b0316845260018101546020850152600281015461030590841660408601613197565b604051610320816103198160038601612cba565b0382612d8b565b606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e08501520154161515610100820152604051918291602083526020830190612dac565b0390f35b50346101bf5760203660031901126101bf5761038a612b0c565b610392613457565b6001600160a01b031660015b6010548110156104a657806103b4600192612b58565b90549060031b1c838552600d6020526040852081865260205260408520600881019081549060ff82169081610498575b506103f3575b5050500161039e565b60ff19169055838552600d60205260408520908552602052836008604082208281558285820155826002820155826003820161042f8154612c80565b80610458575b5050600482015582600582015582600682015582600782015501553880806103ea565b601f8111881461046d5750555b823880610435565b8183526020832061048891601f0160051c81019089016131bb565b8082528160208120915555610465565b6007915001544211386103e4565b826001815580f35b50346101bf5760203660031901126101bf576004356104cb613457565b600354604051634122bbb360e11b815260048101839052336024820152908390829060449082906001600160a01b03165afa908115610741578391610698575b508290338452600c602052604084208385526020526040842054156000146106765761012c61055c60c061053e84613295565b5101515b4260e061054e86613295565b5101514211610662576130fb565b049380925b82518410156105965761058e60019161058888606061058089896132a2565b5101516130d2565b9061318a565b930192610561565b8490338352600c602052604083208284526020524260408420558260018060a01b0360045416803b1561065e57604051637104a76d60e11b8152336004820152602481018490529082908290604490829084905af180156106535761063a575b5050610604816002546130fb565b6002556040519081527f0408e6e0b73daf4c873106e95fd067260fbff8bf9d1b499cad563d4480d45bac60203392a36001815580f35b8161064491612d8b565b61064f5782846105f6565b8280fd5b6040513d84823e3d90fd5b5080fd5b5060e061066e85613295565b5101516130fb565b338452600c6020526040842083855260205261012c61055c6040862054610542565b90503d8084833e6106a98183612d8b565b810190602081830312610739578051906001600160401b03821161073d570181601f820112156107395780516106de8161323a565b926106ec6040519485612d8b565b818452602061012081860193028401019281841161073557602001915b83831061071a57505050503861050b565b60206101209161072a8486613108565b815201920191610709565b8680fd5b8380fd5b8480fd5b6040513d85823e3d90fd5b50346101bf5760403660031901126101bf576040906001600160a01b03610771612b0c565b168152600d60205281812060243582526020522060018060a01b0381541660018201549160ff600282015416604051916107b9836107b28160038501612cba565b0384612d8b565b60048101549260058201546108086006840154926107f560ff6008600788015497015416966040519a8b9a8b5260208b015260408a0190612bbb565b6101206060890152610120880190612b96565b94608087015260a086015260c085015260e084015215156101008301520390f35b50346101bf57806003193601126101bf576006546040516001600160a01b039091168152602090f35b50346101bf57806003193601126101bf576005546040516001600160a01b039091168152602090f35b50346101bf5761088a36612e89565b61089a9897939496959298613479565b6003546040516307eb111f60e41b815260048101839052956001600160a01b0390911692908987602481875afa968715611006578a97610fe2575b5096996020890197908a5b88518110156109665760206108f5828b6132a2565b510151604051610926602082816109158183019687815193849201612b73565b81010301601f198101835282612d8b565b5190208a8c6109476020604051809361091583830196879251928391612b73565b51902014610957576001016108e0565b633480a50360e21b8c5260048cfd5b508a9850899697508b60405163068bcd8d60e01b81528560048201528a816024818a5afa908115610fd7578b91610fb5575b5060408101516003811015610fa1576003891015610fa1578814801590610f93575b610f845760a00151670de0b6b3a76400008302838104670de0b6b3a76400001484151715610f70576109fa8c926064670de0b6b3a76400009304906130d2565b0496803b1561065e5781809160446040518094819363a4948d8560e01b83528c60048401528960248401525af1801561065357610f57575b5050610a3f600f5461322b565b600f5560405195610a4f87612d6f565b89875260208701948986526040880193610a698a86613197565b60608901958652608089015260a08801528060c08801528a60e088015261010087015284610120870152610140860152878952600e602052604089209285518455518051906001600160401b038211610f4357610ac96001860154612c80565b601f8111610f10575b50602090601f8311600114610ea757610b0392918c9183610e9c575b50508160011b916000199060031b1c19161790565b60018401555b516003811015610e8857610b2090600284016131a3565b518051906001600160401b038211610dca57610b3f6003840154612c80565b601f8111610e55575b50602090601f8311600114610de9579180610b7c92600a95948c92610dde5750508160011b916000199060031b1c19161790565b60038201555b6080840151600482015560a0840151600582015560c0840151600682015560e0840151600782015561010084015160088201556101208401516009820155016101408301518051906001600160401b038211610dca57610be28354612c80565b601f8111610d8f575b50602090601f8311600114610d2c57610c1b92918a9183610d215750508160011b916000199060031b1c19161790565b90555b601054600160401b811015610d0d5790610c4082600189959401601055612b58565b8154600391821b89811b60001990911b1990911617909155546001600160a01b031691823b1561073957610c9a928492836040518096819582946331eaa61d60e21b84526004840152604060248401526044830190612bde565b03925af1801561065357610cf8575b5091837f5928d65cc6ae9f07a7673f1a5a2f98d81f1bb0c2bc53bcaa33d6f11cf426f25e9352600a60205260408520600160ff19825416179055610cf260405192839283613434565b0390a280f35b81610d0291612d8b565b610739578385610ca9565b634e487b7160e01b87526041600452602487fd5b015190508a80610aee565b838a52818a209190601f1984168b5b818110610d775750908460019594939210610d5e575b505050811b019055610c1e565b015160001960f88460031b161c19169055898080610d51565b92936020600181928786015181550195019301610d3b565b610dba90848b5260208b20601f850160051c81019160208610610dc0575b601f0160051c01906131bb565b89610beb565b9091508190610dad565b634e487b7160e01b89526041600452602489fd5b015190508b80610aee565b600384018a52818a209190601f1984168b5b818110610e3d5750916001939185600a97969410610e24575b505050811b016003820155610b82565b015160001960f88460031b161c191690558a8080610e14565b92936020600181928786015181550195019301610dfb565b610e8290600385018b5260208b20601f850160051c81019160208610610dc057601f0160051c01906131bb565b89610b48565b634e487b7160e01b89526021600452602489fd5b015190508c80610aee565b600186018c52818c209190601f1984168d5b818110610ef85750908460019594939210610edf575b505050811b016001840155610b09565b015160001960f88460031b161c191690558b8080610ecf565b92936020600181928786015181550195019301610eb9565b610f3d90600187018d5260208d20601f850160051c81019160208610610dc057601f0160051c01906131bb565b8b610ad2565b634e487b7160e01b8b52604160045260248bfd5b81610f6191612d8b565b610f6c57898b610a32565b8980fd5b634e487b7160e01b8c52601160045260248cfd5b6369e489f560e11b8b5260048bfd5b5061014081015183116109ba565b634e487b7160e01b8c52602160045260248cfd5b610fd191503d808d833e610fc98183612d8b565b810190612fa5565b8b610998565b6040513d8d823e3d90fd5b610fff9197503d808c833e610ff78183612d8b565b8101906132b6565b95386108d5565b6040513d8c823e3d90fd5b50346101bf5760203660031901126101bf576020906040906001600160a01b03611039612b0c565b168152600983522054604051908152f35b50346101bf57806003193601126101bf578081601054905b81811061123657506110738261323a565b916110816040519384612d8b565b808352611090601f199161323a565b01835b81811061121f57505082835b82811061110d5783856040519182916020830160208452825180915260408401602060408360051b870101940192905b8282106110de57505050500390f35b919360019193955060206110fd8192603f198a82030186528851612bde565b96019201920185949391926110cf565b61111681612b58565b90549060031b1c808652600a60205260ff60408720541661113b575b5060010161109f565b60019192611218918752600e60205260408720600a6111f76040519261116084612d6f565b8054845260405161117781610319818b8601612cba565b602085015261119060ff60028301541660408601613197565b6040516111a4816103198160038601612cba565b606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e0850152600881015461010085015260098101546101208501526103196040518094819301612cba565b61014082015261120782886132a2565b5261121281876132a2565b5061322b565b9190611132565b60209061122a6131d2565b82828701015201611093565b61123f81612b58565b90549060031b1c8452600a60205260ff604085205416611262575b600101611062565b9161126e60019161322b565b92905061125a565b50346101bf57602461128736612e89565b61129a9997969592999891949398613479565b60018060a01b036003541699888b6040519485809263068bcd8d60e01b82528660048301525afa928315611a4e578993611a32575b5060408301516003811015611a1e576003851015611a1e578414801590611a10575b611a0157878952600e60205260a060408a20930151670de0b6b3a76400008202828104670de0b6b3a764000014831517156119ed57670de0b6b3a764000091606461133d9204906130d2565b0490816007850154116119de578960249a9b9c6040519b8c80926307eb111f60e41b82528760048301525afa998a15610fd7578b9a6119c2575b50959a6020880196908b5b8b5181101561141c578b8b828c8c602061139c84876132a2565b5101516040516113bc602082816109158183019687815193849201612b73565b519020916113dc6020604051809361091583830196879251928391612b73565b519020149283611405575b5050506113f657600101611382565b633480a50360e21b8d5260048dfd5b6114109293506132a2565b515114158b828e6113e7565b508b98969997508c60048601549188516001600160401b038111611906578b61144860018a0154612c80565b601f811161198f575b505060208c601f83116001146119255761148092918261191a575b508160011b916000199060031b1c19161790565b60018801555b80516001600160401b038111611906578b6114a460038a0154612c80565b601f81116118d3575b50506020918c601f8311600114611865576114de9390918361185a5750508160011b916000199060031b1c19161790565b60038701555b826004870155600586015589516001600160401b0381116118465761150c600a870154612c80565b601f8111611813575b506020601f82116001146117a257908061154a928c9d8d9a9b9c9d926117975750508160011b916000199060031b1c19161790565b600a8601555b600685019183835561156e60098701948686556007880154906130fb565b6008870190815591818111156117235790611588916130fb565b6003546001600160a01b031690813b1561171f578791604483926040519485938492639fd36b1560e01b84528b600485015260248401525af19081156117145787916116fb575b50505b6003546001600160a01b031691823b156107355786946116a48692600a604051998a9889978896630a14764d60e41b885260048801526040602488015282546044880152610160606488015261165c6116326101a4890160018601612cba565b61164760ff60028701541660848b0190612bbb565b8881036043190160a48a015260038501612cba565b600484015460c4890152600584015460e48901529454610104880152600783015461012488015254610144870152546101648601528483036043190161018486015201612cba565b03925af18015610653576116e6575b50507f758a67328ba53c1867c0272bbd2ca10d6fe71d37120188c523fe7ae7bdbbe46991610cf260405192839283613434565b816116f091612d8b565b6107395783856116b3565b8161170591612d8b565b61171057858b6115cf565b8580fd5b6040513d89823e3d90fd5b8780fd5b818110611732575b50506115d2565b61173b916130fb565b6003546001600160a01b031690813b1561171f57879160448392604051948593849263a4948d8560e01b84528b600485015260248401525af19081156117145787911561172b578161178c91612d8b565b61171057858b61172b565b015190508d80610aee565b600a87018b52808b209b8b5b601f19841681106117fb57509b82918c9d600194601f9e9b9c9d9e198116106117e2575b505050811b01600a860155611550565b015160001960f88460031b161c191690558c80806117d2565b828201518e556001909d019c602092830192016117ae565b61184090600a88018c5260208c20601f840160051c81019160208510610dc057601f0160051c01906131bb565b8b611515565b634e487b7160e01b8a52604160045260248afd5b015190508e80610aee565b5091600389018d52808d20908d935b601f19841685106118b8576001945083601f1981161061189f575b505050811b0160038701556114e4565b015160001960f88460031b161c191690558d808061188f565b81810151835560209485019460019093019290910190611874565b60206118ff9260038c01815220601f840160051c81019160208510610dc057601f0160051c01906131bb565b8b8e6114ad565b634e487b7160e01b8c52604160045260248cfd5b90508b01518f61146c565b5090600189018d52818d208d925b8c601f198416851061197857506001935082601f1981161061195f575b5050811b016001880155611486565b8c015160001960f88460031b161c191690558e80611950565b810151825560209384019360019092019101611933565b60206119bb9260018c01815220601f840160051c81019160208510610dc057601f0160051c01906131bb565b8b8e611451565b6119d7919a503d808d833e610ff78183612d8b565b9838611377565b6369e489f560e11b8a5260048afd5b634e487b7160e01b8b52601160045260248bfd5b6369e489f560e11b8952600489fd5b5061014083015181116112f1565b634e487b7160e01b8a52602160045260248afd5b611a479193503d808b833e610fc98183612d8b565b91386112cf565b6040513d8b823e3d90fd5b50346101bf57806003193601126101bf576001546040516001600160a01b039091168152602090f35b50346101bf57806003193601126101bf576003546040516001600160a01b039091168152602090f35b50346101bf5760603660031901126101bf57611ac5612b0c565b60243560443591611ae160018060a01b03600754163314612f12565b611ae9613457565b60018060a01b0316808452600d6020526040842082855260205260046040852001611b158482546130fb565b90558352600d60205260408320908352602052611b3a6005604084200191825461318a565b90556001815580f35b50346101bf5760403660031901126101bf576020906040906001600160a01b03611b6b612b0c565b168152600b8352818120602435825283522054604051908152f35b50346101bf5760203660031901126101bf5760ff60406020926004358152600a84522054166040519015158152f35b50346101bf5760403660031901126101bf57611bcf612b0c565b600354604051631381549160e21b815260248035600483018190526001600160a01b0385811692840192909252919391926101209185916044918391165afa928315611ce2578493611c96575b506001600160a01b0316808452600b602090815260408086208487528252852054909461012c94611c6c94909392611c7d5750505060c0810151905b60e042910151804211611c75575b506130fb565b04604051908152f35b905038611c66565b6040928252600b87528282209082528652205490611c58565b9092506101203d8111611cdb575b611cae8183612d8b565b8101906101208183031261073d5791602094611cd161012c9593611c6c95613108565b9450945091611c1c565b503d611ca4565b6040513d86823e3d90fd5b50346101bf57806003193601126101bf57611d06613479565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101bf5760203660031901126101bf57611d64612b0c565b60105482916001600160a01b0316825b828110611f2c5750611d858361323a565b92611d936040519485612d8b565b808452611da2601f199161323a565b01845b818110611f1557505083845b838110611e1f5784866040519182916020830160208452825180915260408401602060408360051b870101940192905b828210611df057505050500390f35b91936001919395506020611e0f8192603f198a82030186528851612dac565b9601920192018594939192611de1565b611e2881612b58565b90549060031b1c838752600d602052604087208188526020526004604088200154611e57575b50600101611db1565b60019192611f0e91858952600d602052604089209089526020526040882060ff600860405192611e8684612d3d565b868060a01b038154168452868101546020850152611ead8360028301541660408601613197565b604051611ec1816103198160038601612cba565b606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e08501520154161515610100820152611f0382896132a2565b5261121281886132a2565b9190611e4e565b602090611f20613251565b82828801015201611da5565b611f3581612b58565b90549060031b1c828652600d602052604086209086526020526004604086200154611f63575b600101611d74565b92611f6f60019161322b565b939050611f5b565b50346101bf5760203660031901126101bf576004358152600e6020526040902080546040519182806001830190611fad91612cba565b03611fb89084612d8b565b60028101546040519060ff1681611fd28160038601612cba565b03611fdd9083612d8b565b6004830154916005840154600685015460078601549160088701549360098801549560405180600a819b019061201291612cba565b0361201d908a612d8b565b6040519a8b9a8b5260208b0161016090526101608b0161203c91612b96565b9060408b0161204a91612bbb565b89810360608b015261205b91612b96565b95608089015260a088015260c087015260e086015261010085015261012084015282810361014084015261036c91612b96565b50346101bf5760203660031901126101bf57604061036c916120ae6131d2565b506004358152600e60205220600a6120e4604051926120cc84612d6f565b80548452604051611177816103198160018601612cba565b610140820152604051918291602083526020830190612bde565b50346101bf57806003193601126101bf576020600254604051908152f35b50346101bf5760803660031901126101bf5760443560043561213c613457565b6064351561260657601b82118015906125fa575b6125eb57808352600a60205260ff604084205416156125dc57808352600e6020526040832091600883018054602435116125cd5760078401612195602435825461318a565b60068601805482116125be5760045488906001600160a01b0316803b1561065e57604051632770a7eb60e21b815233600482015260643560248201529082908290604490829084905af18015610653576125a9575b5050816121fd935554611c6682826130fb565b9055338452600d6020526040842082855260205260046040852001541560001461259a5760ff600284015416906201518081028181046201518014821517156125865761224a904261318a565b6040519361225785612d3d565b3385526020850193818552612270604087019182613197565b6040519061228c826122858160018c01612cba565b0383612d8b565b606087019182526080870192602435845260a08801948a865260c0890196875260e08901526001610100890152338a52600d60205260408a20908a52602052604089209560018060a01b038851166bffffffffffffffffffffffff60a01b885416178755516001870155516003811015610e885761230d90600287016131a3565b518051906001600160401b038211610dca5761232c6003870154612c80565b601f8111612553575b50602090601f83116001146124de5782610100979593600897959361236f938d926124d35750508160011b916000199060031b1c19161790565b60038501555b51600484015551600583015551600682015560e0840151600782015501910151151560ff80198354169116179055818290600854915b8281106124a0575b501561244e575b503382526009602052604082208054906001820180921161243a579160029160ff93556123ea606435835461318a565b825501541661240d60405191602435835260643560208401526040830190612bbb565b7f23b0f39e0762759ffb18632a1a2b79c9eb58571454e5f7c36e0a2f81759e0a3460603392a26001815580f35b634e487b7160e01b84526011600452602484fd5b600160401b81101561248c5780600161246a9201600855612b27565b81546001600160a01b0360039290921b91821b19163390911b179055386123ba565b634e487b7160e01b83526041600452602483fd5b6124a981612b27565b905460039190911b1c6001600160a01b031633146124c9576001016123ab565b50506001386123b3565b015190503880610aee565b90600387018a52808a20918a5b601f198516811061253b575092600896949260019261010099979583601f19811610612522575b505050811b016003850155612375565b015160001960f88460031b161c19169055388080612512565b919260206001819286850151815501940192016124eb565b61258090600388018b5260208b20601f850160051c81019160208610610dc057601f0160051c01906131bb565b38612335565b634e487b7160e01b86526011600452602486fd5b639857cbd960e01b8452600484fd5b816125b391612d8b565b61171f5787386121ea565b63bc6072f160e01b8852600488fd5b63bc6072f160e01b8552600485fd5b63bccd404360e01b8352600483fd5b631f89958960e11b8352600483fd5b5061016e821015612150565b63162908e360e11b8352600483fd5b50346101bf57806003193601126101bf576007546040516001600160a01b039091168152602090f35b50346101bf5760203660031901126101bf57600435906008548210156101bf57602061266983612b27565b905460405160039290921b1c6001600160a01b03168152f35b50346101bf57806003193601126101bf576004546040516001600160a01b039091168152602090f35b50346101bf5760203660031901126101bf576004356126c8613457565b600354604051631381549160e21b8152600481018390523360248201529061012090829060449082906001600160a01b03165afa90811561074157839161285b575b50608081015160028110156128475761283857338352600b602052604083208284526020526040832054156000146128165761012c61275b60c08301515b4260e0850151804211611c7557506130fb565b04908115612807579060606127719201516130d2565b60025481116127f857338352600b6020526040832082845260205242604084205560018060a01b0360045416803b1561073957604051637104a76d60e11b8152336004820152602481018390529084908290604490829084905af18015611ce2576127e4575b50610604816002546130fb565b836127f191949294612d8b565b91386127d7565b63bc6072f160e01b8352600483fd5b63ed700a6760e01b8452600484fd5b338352600b6020526040832082845260205261012c61275b6040852054612748565b63e067835f60e01b8352600483fd5b634e487b7160e01b84526021600452602484fd5b90506101203d811161288e575b6128728183612d8b565b8101610120828203126107395761288891613108565b3861270a565b503d612868565b50346101bf57806003193601126101bf5760405180602060085491828152018091600885527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee390855b81811061293e57505050826128f4910383612d8b565b604051928392602084019060208552518091526040840192915b81811061291c575050500390f35b82516001600160a01b031684528594506020938401939092019160010161290e565b82546001600160a01b03168452602090930192600192830192016128de565b50346101bf5760203660031901126101bf5760043561298760018060a01b03600654163314612f12565b61298f613457565b808252600e60205260408083206003546009820154925163068bcd8d60e01b815260048101939093528490839060249082906001600160a01b03165afa918215611ce2578492612aad575b5060040154908115612a6f5760a0015190670de0b6b3a76400008102908104670de0b6b3a76400000361243a57670de0b6b3a7640000916064612a1e9204906130d2565b04818352600e6020526006604084200155808252600e602052612a586006604084200154828452600e6020526007604085200154906130fb565b908252600e60205260086040832001556001815580f35b60405162461bcd60e51b8152602060048201526016602482015275496e76616c696420636f76657220636170616369747960501b6044820152606490fd5b6004919250612ac5903d8087833e610fc98183612d8b565b91906129da565b90503461065e57604036600319011261065e576020916040906001600160a01b03612af5612b0c565b168152600c84528181206024358252845220548152f35b600435906001600160a01b0382168203612b2257565b600080fd5b600854811015612b4257600860005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b601054811015612b4257601060005260206000200190600090565b60005b838110612b865750506000910152565b8181015183820152602001612b76565b90602091612baf81518092818552858086019101612b73565b601f01601f1916010190565b906003821015612bc85752565b634e487b7160e01b600052602160045260246000fd5b612c7d9181518152610140612c2b612c0760208501516101606020860152610160850190612b96565b612c1960408601516040860190612bbb565b60608501518482036060860152612b96565b926080810151608084015260a081015160a084015260c081015160c084015260e081015160e0840152610100810151610100840152610120810151610120840152015190610140818403910152612b96565b90565b90600182811c92168015612cb0575b6020831014612c9a57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612c8f565b60009291815491612cca83612c80565b8083529260018116908115612d205750600114612ce657505050565b60009081526020812093945091925b838310612d06575060209250010190565b600181602092949394548385870101520191019190612cf5565b915050602093945060ff929192191683830152151560051b010190565b61012081019081106001600160401b03821117612d5957604052565b634e487b7160e01b600052604160045260246000fd5b61016081019081106001600160401b03821117612d5957604052565b90601f801991011681019081106001600160401b03821117612d5957604052565b9060018060a01b03825116815260208201516020820152612dd560408301516040830190612bbb565b61010080612df460608501516101206060860152610120850190612b96565b936080810151608085015260a081015160a085015260c081015160c085015260e081015160e08501520151151591015290565b6001600160401b038111612d5957601f01601f191660200190565b81601f82011215612b2257803590612e5982612e27565b92612e676040519485612d8b565b82845260208383010111612b2257816000926020809301838601378301015290565b610100600319820112612b2257600435916024356001600160401b038111612b225782612eb891600401612e42565b916044356003811015612b2257916064356001600160401b038111612b225782612ee491600401612e42565b91608435906001600160401b038211612b2257612f0391600401612e42565b9060a4359060c4359060e43590565b15612f1957565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b81601f82011215612b22578051612f6581612e27565b92612f736040519485612d8b565b81845260208284010111612b2257612c7d9160208085019101612b73565b51906001600160a01b0382168203612b2257565b602081830312612b22578051906001600160401b038211612b2257016101e081830312612b2257604051916101e083018381106001600160401b03821117612d5957604052815183526020820151906001600160401b038211612b225761300d918301612f4f565b602083015260408101516003811015612b22576040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008101516101008301526101208101518015158103612b22576101208301526101408101516101408301526101608101516101608301526101808101519060ff82168203612b22576101c0916101808401526130b86101a08201612f91565b6101a084015201516002811015612b22576101c082015290565b818102929181159184041417156130e557565b634e487b7160e01b600052601160045260246000fd5b919082039182116130e557565b919082610120910312612b225760405161312181612d3d565b809261312c81612f91565b825260208101516020830152604081015160408301526060810151606083015260808101516002811015612b2257610100918291608085015260a081015160a085015260c081015160c085015260e081015160e08501520151910152565b919082018092116130e557565b6003821015612bc85752565b906003811015612bc85760ff80198354169116179055565b8181106131c6575050565b600081556001016131bb565b604051906131df82612d6f565b6060610140836000815282602082015260006040820152828082015260006080820152600060a0820152600060c0820152600060e0820152600061010082015260006101208201520152565b60001981146130e55760010190565b6001600160401b038111612d595760051b60200190565b6040519061325e82612d3d565b6000610100838281528260208201528260408201526060808201528260808201528260a08201528260c08201528260e08201520152565b805115612b425760200190565b8051821015612b425760209160051b010190565b602081830312612b22578051906001600160401b038211612b2257019080601f83011215612b22578151916132ea8361323a565b926132f86040519485612d8b565b80845260208085019160051b83010191838311612b225760208101915b83831061332457505050505090565b82516001600160401b038111612b2257820190610160828703601f190112612b22576040519061335382612d6f565b6020830151825260408301516001600160401b038111612b225787602061337c92860101612f4f565b602083015260608301516003811015612b2257604083015260808301516001600160401b038111612b22578760206133b692860101612f4f565b606083015260a0830151608083015260c083015160a083015260e083015160c083015261010083015160e0830152610120830151610100830152610140830151610120830152610160830151916001600160401b038311612b225761342388602080969581960101612f4f565b610140820152815201920191613315565b9291602061344d61345593604087526040870190612b96565b940190612bbb565b565b600260005414613468576002600055565b633ee5aeb560e01b60005260046000fd5b6001546001600160a01b0316330361348d57565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212203fc987554b6726669d87ef1be6b7f14265f1bc16fa41b3fa320fba0c0c38f63964736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xDB981A0 EQ PUSH2 0x2ACC JUMPI POP DUP1 PUSH4 0x10525814 EQ PUSH2 0x1B43 JUMPI DUP1 PUSH4 0x106B5DA1 EQ PUSH2 0x295D JUMPI DUP1 PUSH4 0x195EC9EE EQ PUSH2 0x2895 JUMPI DUP1 PUSH4 0x2D8A340C EQ PUSH2 0x26AB JUMPI DUP1 PUSH4 0x34808EC3 EQ PUSH2 0x2682 JUMPI DUP1 PUSH4 0x357917B7 EQ PUSH2 0x20FE JUMPI DUP1 PUSH4 0x35C1D349 EQ PUSH2 0x263E JUMPI DUP1 PUSH4 0x46F84795 EQ PUSH2 0x1011 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x2615 JUMPI DUP1 PUSH4 0x602710A4 EQ PUSH2 0x211C JUMPI DUP1 PUSH4 0x609C7604 EQ PUSH2 0x20FE JUMPI DUP1 PUSH4 0x62858BFA EQ PUSH2 0x208E JUMPI DUP1 PUSH4 0x6299DF6C EQ PUSH2 0x1F77 JUMPI DUP1 PUSH4 0x649718B2 EQ PUSH2 0x1D4A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CED JUMPI DUP1 PUSH4 0x73CCE3EE EQ PUSH2 0x1BB5 JUMPI DUP1 PUSH4 0x782EA619 EQ PUSH2 0x1B86 JUMPI DUP1 PUSH4 0x7A728E7F EQ PUSH2 0x1B43 JUMPI DUP1 PUSH4 0x7CEB4A69 EQ PUSH2 0x1AAB JUMPI DUP1 PUSH4 0x8ACEE3CF EQ PUSH2 0x1A82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A59 JUMPI DUP1 PUSH4 0x8DE4D101 EQ PUSH2 0x1276 JUMPI DUP1 PUSH4 0x93B1AD38 EQ PUSH2 0x104A JUMPI DUP1 PUSH4 0x96F3A8AD EQ PUSH2 0x1011 JUMPI DUP1 PUSH4 0x9732BDB5 EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0x996B8A6F EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0x9B4DC8CC EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0x9E7B399E EQ PUSH2 0x74C JUMPI DUP1 PUSH4 0xA650C232 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xBFC664F3 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xCADCB471 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xFB643583 EQ PUSH2 0x1C2 JUMPI PUSH4 0xFEB0B8F5 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x10 SLOAD DUP3 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH2 0x1ED DUP4 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x216 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3479 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 PUSH2 0x36C SWAP2 PUSH2 0x2A5 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x3251 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2DA DUP5 PUSH2 0x2D3D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x305 SWAP1 DUP5 AND PUSH1 0x40 DUP7 ADD PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST SUB DUP3 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2DAC JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x38A PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x392 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH2 0x3B4 PUSH1 0x1 SWAP3 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP4 DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP2 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x8 DUP2 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND SWAP1 DUP2 PUSH2 0x498 JUMPI JUMPDEST POP PUSH2 0x3F3 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x39E JUMP JUMPDEST PUSH1 0xFF NOT AND SWAP1 SSTORE DUP4 DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 DUP6 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x8 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE DUP3 DUP6 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD PUSH2 0x42F DUP2 SLOAD PUSH2 0x2C80 JUMP JUMPDEST DUP1 PUSH2 0x458 JUMPI JUMPDEST POP POP PUSH1 0x4 DUP3 ADD SSTORE DUP3 PUSH1 0x5 DUP3 ADD SSTORE DUP3 PUSH1 0x6 DUP3 ADD SSTORE DUP3 PUSH1 0x7 DUP3 ADD SSTORE ADD SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP9 EQ PUSH2 0x46D JUMPI POP SSTORE JUMPDEST DUP3 CODESIZE DUP1 PUSH2 0x435 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x488 SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 DUP10 ADD PUSH2 0x31BB JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 KECCAK256 SWAP2 SSTORE SSTORE PUSH2 0x465 JUMP JUMPDEST PUSH1 0x7 SWAP2 POP ADD SLOAD TIMESTAMP GT CODESIZE PUSH2 0x3E4 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4CB PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4122BBB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x741 JUMPI DUP4 SWAP2 PUSH2 0x698 JUMPI JUMPDEST POP DUP3 SWAP1 CALLER DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x676 JUMPI PUSH2 0x12C PUSH2 0x55C PUSH1 0xC0 PUSH2 0x53E DUP5 PUSH2 0x3295 JUMP JUMPDEST MLOAD ADD MLOAD JUMPDEST TIMESTAMP PUSH1 0xE0 PUSH2 0x54E DUP7 PUSH2 0x3295 JUMP JUMPDEST MLOAD ADD MLOAD TIMESTAMP GT PUSH2 0x662 JUMPI PUSH2 0x30FB JUMP JUMPDEST DIV SWAP4 DUP1 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x596 JUMPI PUSH2 0x58E PUSH1 0x1 SWAP2 PUSH2 0x588 DUP9 PUSH1 0x60 PUSH2 0x580 DUP10 DUP10 PUSH2 0x32A2 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x30D2 JUMP JUMPDEST SWAP1 PUSH2 0x318A JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x561 JUMP JUMPDEST DUP5 SWAP1 CALLER DUP4 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP5 KECCAK256 SSTORE DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x63A JUMPI JUMPDEST POP POP PUSH2 0x604 DUP2 PUSH1 0x2 SLOAD PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x408E6E0B73DAF4C873106E95FD067260FBFF8BF9D1B499CAD563D4480D45BAC PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x644 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x64F JUMPI DUP3 DUP5 PUSH2 0x5F6 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP PUSH1 0xE0 PUSH2 0x66E DUP6 PUSH2 0x3295 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x30FB JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH2 0x12C PUSH2 0x55C PUSH1 0x40 DUP7 KECCAK256 SLOAD PUSH2 0x542 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x6A9 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x739 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x73D JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x739 JUMPI DUP1 MLOAD PUSH2 0x6DE DUP2 PUSH2 0x323A JUMP JUMPDEST SWAP3 PUSH2 0x6EC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D8B JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 PUSH2 0x120 DUP2 DUP7 ADD SWAP4 MUL DUP5 ADD ADD SWAP3 DUP2 DUP5 GT PUSH2 0x735 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x71A JUMPI POP POP POP POP CODESIZE PUSH2 0x50B JUMP JUMPDEST PUSH1 0x20 PUSH2 0x120 SWAP2 PUSH2 0x72A DUP5 DUP7 PUSH2 0x3108 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x709 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x771 PUSH2 0x2B0C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH2 0x7B9 DUP4 PUSH2 0x7B2 DUP2 PUSH1 0x3 DUP6 ADD PUSH2 0x2CBA JUMP JUMPDEST SUB DUP5 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x808 PUSH1 0x6 DUP5 ADD SLOAD SWAP3 PUSH2 0x7F5 PUSH1 0xFF PUSH1 0x8 PUSH1 0x7 DUP9 ADD SLOAD SWAP8 ADD SLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH2 0x120 PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD SWAP1 PUSH2 0x2B96 JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH2 0x88A CALLDATASIZE PUSH2 0x2E89 JUMP JUMPDEST PUSH2 0x89A SWAP9 SWAP8 SWAP4 SWAP5 SWAP7 SWAP6 SWAP3 SWAP9 PUSH2 0x3479 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7EB111F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP10 DUP8 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x1006 JUMPI DUP11 SWAP8 PUSH2 0xFE2 JUMPI JUMPDEST POP SWAP7 SWAP10 PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 DUP11 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x20 PUSH2 0x8F5 DUP3 DUP12 PUSH2 0x32A2 JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x926 PUSH1 0x20 DUP3 DUP2 PUSH2 0x915 DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2B73 JUMP JUMPDEST DUP2 ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2D8B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP11 DUP13 PUSH2 0x947 PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH2 0x915 DUP4 DUP4 ADD SWAP7 DUP8 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x2B73 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH2 0x957 JUMPI PUSH1 0x1 ADD PUSH2 0x8E0 JUMP JUMPDEST PUSH4 0x3480A503 PUSH1 0xE2 SHL DUP13 MSTORE PUSH1 0x4 DUP13 REVERT JUMPDEST POP DUP11 SWAP9 POP DUP10 SWAP7 SWAP8 POP DUP12 PUSH1 0x40 MLOAD PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP2 MSTORE DUP6 PUSH1 0x4 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0x24 DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFD7 JUMPI DUP12 SWAP2 PUSH2 0xFB5 JUMPI JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x3 DUP10 LT ISZERO PUSH2 0xFA1 JUMPI DUP9 EQ DUP1 ISZERO SWAP1 PUSH2 0xF93 JUMPI JUMPDEST PUSH2 0xF84 JUMPI PUSH1 0xA0 ADD MLOAD PUSH8 0xDE0B6B3A7640000 DUP4 MUL DUP4 DUP2 DIV PUSH8 0xDE0B6B3A7640000 EQ DUP5 ISZERO OR ISZERO PUSH2 0xF70 JUMPI PUSH2 0x9FA DUP13 SWAP3 PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 SWAP4 DIV SWAP1 PUSH2 0x30D2 JUMP JUMPDEST DIV SWAP7 DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI DUP2 DUP1 SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA4948D85 PUSH1 0xE0 SHL DUP4 MSTORE DUP13 PUSH1 0x4 DUP5 ADD MSTORE DUP10 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0xF57 JUMPI JUMPDEST POP POP PUSH2 0xA3F PUSH1 0xF SLOAD PUSH2 0x322B JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP6 PUSH2 0xA4F DUP8 PUSH2 0x2D6F JUMP JUMPDEST DUP10 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP5 DUP10 DUP7 MSTORE PUSH1 0x40 DUP9 ADD SWAP4 PUSH2 0xA69 DUP11 DUP7 PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD SWAP6 DUP7 MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE DUP1 PUSH1 0xC0 DUP9 ADD MSTORE DUP11 PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE DUP5 PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE DUP8 DUP10 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP3 DUP6 MLOAD DUP5 SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF43 JUMPI PUSH2 0xAC9 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xF10 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xEA7 JUMPI PUSH2 0xB03 SWAP3 SWAP2 DUP13 SWAP2 DUP4 PUSH2 0xE9C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE JUMPDEST MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xE88 JUMPI PUSH2 0xB20 SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x31A3 JUMP JUMPDEST MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDCA JUMPI PUSH2 0xB3F PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE55 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDE9 JUMPI SWAP2 DUP1 PUSH2 0xB7C SWAP3 PUSH1 0xA SWAP6 SWAP5 DUP13 SWAP3 PUSH2 0xDDE JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP5 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE ADD PUSH2 0x140 DUP4 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDCA JUMPI PUSH2 0xBE2 DUP4 SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD8F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD2C JUMPI PUSH2 0xC1B SWAP3 SWAP2 DUP11 SWAP2 DUP4 PUSH2 0xD21 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xD0D JUMPI SWAP1 PUSH2 0xC40 DUP3 PUSH1 0x1 DUP10 SWAP6 SWAP5 ADD PUSH1 0x10 SSTORE PUSH2 0x2B58 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL DUP10 DUP2 SHL PUSH1 0x0 NOT SWAP1 SWAP2 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x739 JUMPI PUSH2 0xC9A SWAP3 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x31EAA61D PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x2BDE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0xCF8 JUMPI JUMPDEST POP SWAP2 DUP4 PUSH32 0x5928D65CC6AE9F07A7673F1A5A2F98D81F1BB0C2BC53BCAA33D6F11CF426F25E SWAP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xCF2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3434 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xD02 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x739 JUMPI DUP4 DUP6 PUSH2 0xCA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0xAEE JUMP JUMPDEST DUP4 DUP11 MSTORE DUP2 DUP11 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0xD77 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xD5E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xC1E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xD51 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xD3B JUMP JUMPDEST PUSH2 0xDBA SWAP1 DUP5 DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDC0 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP10 PUSH2 0xBEB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xDAD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x3 DUP5 ADD DUP11 MSTORE DUP2 DUP11 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0xE3D JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0xA SWAP8 SWAP7 SWAP5 LT PUSH2 0xE24 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xB82 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0xE14 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xDFB JUMP JUMPDEST PUSH2 0xE82 SWAP1 PUSH1 0x3 DUP6 ADD DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP10 PUSH2 0xB48 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 DUP7 ADD DUP13 MSTORE DUP2 DUP13 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP14 JUMPDEST DUP2 DUP2 LT PUSH2 0xEF8 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xEDF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0xB09 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0xECF JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xF3D SWAP1 PUSH1 0x1 DUP8 ADD DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP12 PUSH2 0xAD2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP2 PUSH2 0xF61 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0xF6C JUMPI DUP10 DUP12 PUSH2 0xA32 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP12 MSTORE PUSH1 0x4 DUP12 REVERT JUMPDEST POP PUSH2 0x140 DUP2 ADD MLOAD DUP4 GT PUSH2 0x9BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH2 0xFD1 SWAP2 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0xFC9 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2FA5 JUMP JUMPDEST DUP12 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xFFF SWAP2 SWAP8 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0xFF7 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x32B6 JUMP JUMPDEST SWAP6 CODESIZE PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1039 PUSH2 0x2B0C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI DUP1 DUP2 PUSH1 0x10 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1236 JUMPI POP PUSH2 0x1073 DUP3 PUSH2 0x323A JUMP JUMPDEST SWAP2 PUSH2 0x1081 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2D8B JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x1090 PUSH1 0x1F NOT SWAP2 PUSH2 0x323A JUMP JUMPDEST ADD DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x121F JUMPI POP POP DUP3 DUP4 JUMPDEST DUP3 DUP2 LT PUSH2 0x110D JUMPI DUP4 DUP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD PUSH1 0x20 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x10DE JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x10FD DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x2BDE JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0x1116 DUP2 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND PUSH2 0x113B JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x109F JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP3 PUSH2 0x1218 SWAP2 DUP8 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH1 0xA PUSH2 0x11F7 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1160 DUP5 PUSH2 0x2D6F JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1177 DUP2 PUSH2 0x319 DUP2 DUP12 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1190 PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP7 ADD PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A4 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x319 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x1207 DUP3 DUP9 PUSH2 0x32A2 JUMP JUMPDEST MSTORE PUSH2 0x1212 DUP2 DUP8 PUSH2 0x32A2 JUMP JUMPDEST POP PUSH2 0x322B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x122A PUSH2 0x31D2 JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x1093 JUMP JUMPDEST PUSH2 0x123F DUP2 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP5 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x1262 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 PUSH2 0x126E PUSH1 0x1 SWAP2 PUSH2 0x322B JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x125A JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x24 PUSH2 0x1287 CALLDATASIZE PUSH2 0x2E89 JUMP JUMPDEST PUSH2 0x129A SWAP10 SWAP8 SWAP7 SWAP6 SWAP3 SWAP10 SWAP9 SWAP2 SWAP5 SWAP4 SWAP9 PUSH2 0x3479 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP10 DUP9 DUP12 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1A4E JUMPI DUP10 SWAP4 PUSH2 0x1A32 JUMPI JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1A1E JUMPI PUSH1 0x3 DUP6 LT ISZERO PUSH2 0x1A1E JUMPI DUP5 EQ DUP1 ISZERO SWAP1 PUSH2 0x1A10 JUMPI JUMPDEST PUSH2 0x1A01 JUMPI DUP8 DUP10 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 DUP11 KECCAK256 SWAP4 ADD MLOAD PUSH8 0xDE0B6B3A7640000 DUP3 MUL DUP3 DUP2 DIV PUSH8 0xDE0B6B3A7640000 EQ DUP4 ISZERO OR ISZERO PUSH2 0x19ED JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x64 PUSH2 0x133D SWAP3 DIV SWAP1 PUSH2 0x30D2 JUMP JUMPDEST DIV SWAP1 DUP2 PUSH1 0x7 DUP6 ADD SLOAD GT PUSH2 0x19DE JUMPI DUP10 PUSH1 0x24 SWAP11 SWAP12 SWAP13 PUSH1 0x40 MLOAD SWAP12 DUP13 DUP1 SWAP3 PUSH4 0x7EB111F PUSH1 0xE4 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP10 DUP11 ISZERO PUSH2 0xFD7 JUMPI DUP12 SWAP11 PUSH2 0x19C2 JUMPI JUMPDEST POP SWAP6 SWAP11 PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 DUP12 JUMPDEST DUP12 MLOAD DUP2 LT ISZERO PUSH2 0x141C JUMPI DUP12 DUP12 DUP3 DUP13 DUP13 PUSH1 0x20 PUSH2 0x139C DUP5 DUP8 PUSH2 0x32A2 JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x13BC PUSH1 0x20 DUP3 DUP2 PUSH2 0x915 DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2B73 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x13DC PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH2 0x915 DUP4 DUP4 ADD SWAP7 DUP8 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x2B73 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ SWAP3 DUP4 PUSH2 0x1405 JUMPI JUMPDEST POP POP POP PUSH2 0x13F6 JUMPI PUSH1 0x1 ADD PUSH2 0x1382 JUMP JUMPDEST PUSH4 0x3480A503 PUSH1 0xE2 SHL DUP14 MSTORE PUSH1 0x4 DUP14 REVERT JUMPDEST PUSH2 0x1410 SWAP3 SWAP4 POP PUSH2 0x32A2 JUMP JUMPDEST MLOAD MLOAD EQ ISZERO DUP12 DUP3 DUP15 PUSH2 0x13E7 JUMP JUMPDEST POP DUP12 SWAP9 SWAP7 SWAP10 SWAP8 POP DUP13 PUSH1 0x4 DUP7 ADD SLOAD SWAP2 DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1906 JUMPI DUP12 PUSH2 0x1448 PUSH1 0x1 DUP11 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x198F JUMPI JUMPDEST POP POP PUSH1 0x20 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1925 JUMPI PUSH2 0x1480 SWAP3 SWAP2 DUP3 PUSH2 0x191A JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP9 ADD SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1906 JUMPI DUP12 PUSH2 0x14A4 PUSH1 0x3 DUP11 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x18D3 JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1865 JUMPI PUSH2 0x14DE SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0x185A JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD SSTORE JUMPDEST DUP3 PUSH1 0x4 DUP8 ADD SSTORE PUSH1 0x5 DUP7 ADD SSTORE DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1846 JUMPI PUSH2 0x150C PUSH1 0xA DUP8 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1813 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x17A2 JUMPI SWAP1 DUP1 PUSH2 0x154A SWAP3 DUP13 SWAP14 DUP14 SWAP11 SWAP12 SWAP13 SWAP14 SWAP3 PUSH2 0x1797 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xA DUP7 ADD SSTORE JUMPDEST PUSH1 0x6 DUP6 ADD SWAP2 DUP4 DUP4 SSTORE PUSH2 0x156E PUSH1 0x9 DUP8 ADD SWAP5 DUP7 DUP7 SSTORE PUSH1 0x7 DUP9 ADD SLOAD SWAP1 PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x8 DUP8 ADD SWAP1 DUP2 SSTORE SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x1723 JUMPI SWAP1 PUSH2 0x1588 SWAP2 PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x171F JUMPI DUP8 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x9FD36B15 PUSH1 0xE0 SHL DUP5 MSTORE DUP12 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1714 JUMPI DUP8 SWAP2 PUSH2 0x16FB JUMPI JUMPDEST POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x735 JUMPI DUP7 SWAP5 PUSH2 0x16A4 DUP7 SWAP3 PUSH1 0xA PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xA14764D PUSH1 0xE4 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP9 ADD MSTORE DUP3 SLOAD PUSH1 0x44 DUP9 ADD MSTORE PUSH2 0x160 PUSH1 0x64 DUP9 ADD MSTORE PUSH2 0x165C PUSH2 0x1632 PUSH2 0x1A4 DUP10 ADD PUSH1 0x1 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH2 0x1647 PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH1 0x84 DUP12 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST DUP9 DUP2 SUB PUSH1 0x43 NOT ADD PUSH1 0xA4 DUP11 ADD MSTORE PUSH1 0x3 DUP6 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xC4 DUP10 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xE4 DUP10 ADD MSTORE SWAP5 SLOAD PUSH2 0x104 DUP9 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH2 0x124 DUP9 ADD MSTORE SLOAD PUSH2 0x144 DUP8 ADD MSTORE SLOAD PUSH2 0x164 DUP7 ADD MSTORE DUP5 DUP4 SUB PUSH1 0x43 NOT ADD PUSH2 0x184 DUP7 ADD MSTORE ADD PUSH2 0x2CBA JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x16E6 JUMPI JUMPDEST POP POP PUSH32 0x758A67328BA53C1867C0272BBD2CA10D6FE71D37120188C523FE7AE7BDBBE469 SWAP2 PUSH2 0xCF2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3434 JUMP JUMPDEST DUP2 PUSH2 0x16F0 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x739 JUMPI DUP4 DUP6 PUSH2 0x16B3 JUMP JUMPDEST DUP2 PUSH2 0x1705 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x1710 JUMPI DUP6 DUP12 PUSH2 0x15CF JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1732 JUMPI JUMPDEST POP POP PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x173B SWAP2 PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x171F JUMPI DUP8 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xA4948D85 PUSH1 0xE0 SHL DUP5 MSTORE DUP12 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1714 JUMPI DUP8 SWAP2 ISZERO PUSH2 0x172B JUMPI DUP2 PUSH2 0x178C SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x1710 JUMPI DUP6 DUP12 PUSH2 0x172B JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0xA DUP8 ADD DUP12 MSTORE DUP1 DUP12 KECCAK256 SWAP12 DUP12 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x17FB JUMPI POP SWAP12 DUP3 SWAP2 DUP13 SWAP14 PUSH1 0x1 SWAP5 PUSH1 0x1F SWAP15 SWAP12 SWAP13 SWAP14 SWAP15 NOT DUP2 AND LT PUSH2 0x17E2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA DUP7 ADD SSTORE PUSH2 0x1550 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x17D2 JUMP JUMPDEST DUP3 DUP3 ADD MLOAD DUP15 SSTORE PUSH1 0x1 SWAP1 SWAP14 ADD SWAP13 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x1840 SWAP1 PUSH1 0xA DUP9 ADD DUP13 MSTORE PUSH1 0x20 DUP13 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP12 PUSH2 0x1515 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0xAEE JUMP JUMPDEST POP SWAP2 PUSH1 0x3 DUP10 ADD DUP14 MSTORE DUP1 DUP14 KECCAK256 SWAP1 DUP14 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x18B8 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x189F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP8 ADD SSTORE PUSH2 0x14E4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x188F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x18FF SWAP3 PUSH1 0x3 DUP13 ADD DUP2 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP12 DUP15 PUSH2 0x14AD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST SWAP1 POP DUP12 ADD MLOAD DUP16 PUSH2 0x146C JUMP JUMPDEST POP SWAP1 PUSH1 0x1 DUP10 ADD DUP14 MSTORE DUP2 DUP14 KECCAK256 DUP14 SWAP3 JUMPDEST DUP13 PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1978 JUMPI POP PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x195F JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x1 DUP9 ADD SSTORE PUSH2 0x1486 JUMP JUMPDEST DUP13 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 PUSH2 0x1950 JUMP JUMPDEST DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x19BB SWAP3 PUSH1 0x1 DUP13 ADD DUP2 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST DUP12 DUP15 PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x19D7 SWAP2 SWAP11 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0xFF7 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST SWAP9 CODESIZE PUSH2 0x1377 JUMP JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP10 MSTORE PUSH1 0x4 DUP10 REVERT JUMPDEST POP PUSH2 0x140 DUP4 ADD MLOAD DUP2 GT PUSH2 0x12F1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH2 0x1A47 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0xFC9 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1AC5 PUSH2 0x2B0C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1AE1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x7 SLOAD AND CALLER EQ PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x1AE9 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP6 KECCAK256 ADD PUSH2 0x1B15 DUP5 DUP3 SLOAD PUSH2 0x30FB JUMP JUMPDEST SWAP1 SSTORE DUP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1B3A PUSH1 0x5 PUSH1 0x40 DUP5 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x318A JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1B6B PUSH2 0x2B0C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP4 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1BCF PUSH2 0x2B0C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x13815491 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x24 DUP1 CALLDATALOAD PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0x120 SWAP2 DUP6 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1CE2 JUMPI DUP5 SWAP4 PUSH2 0x1C96 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP5 DUP8 MSTORE DUP3 MSTORE DUP6 KECCAK256 SLOAD SWAP1 SWAP5 PUSH2 0x12C SWAP5 PUSH2 0x1C6C SWAP5 SWAP1 SWAP4 SWAP3 PUSH2 0x1C7D JUMPI POP POP POP PUSH1 0xC0 DUP2 ADD MLOAD SWAP1 JUMPDEST PUSH1 0xE0 TIMESTAMP SWAP2 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x1C75 JUMPI JUMPDEST POP PUSH2 0x30FB JUMP JUMPDEST DIV PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CODESIZE PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x40 SWAP3 DUP3 MSTORE PUSH1 0xB DUP8 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP7 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0x1C58 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x1CDB JUMPI JUMPDEST PUSH2 0x1CAE DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x120 DUP2 DUP4 SUB SLT PUSH2 0x73D JUMPI SWAP2 PUSH1 0x20 SWAP5 PUSH2 0x1CD1 PUSH2 0x12C SWAP6 SWAP4 PUSH2 0x1C6C SWAP6 PUSH2 0x3108 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP2 PUSH2 0x1C1C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1D06 PUSH2 0x3479 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1D64 PUSH2 0x2B0C JUMP JUMPDEST PUSH1 0x10 SLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F2C JUMPI POP PUSH2 0x1D85 DUP4 PUSH2 0x323A JUMP JUMPDEST SWAP3 PUSH2 0x1D93 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D8B JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x1DA2 PUSH1 0x1F NOT SWAP2 PUSH2 0x323A JUMP JUMPDEST ADD DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F15 JUMPI POP POP DUP4 DUP5 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E1F JUMPI DUP5 DUP7 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD PUSH1 0x20 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DF0 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x1E0F DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x2DAC JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x1DE1 JUMP JUMPDEST PUSH2 0x1E28 DUP2 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP4 DUP8 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 DUP2 DUP9 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x1E57 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP3 PUSH2 0x1F0E SWAP2 DUP6 DUP10 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP1 DUP10 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E86 DUP5 PUSH2 0x2D3D JUMP JUMPDEST DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP5 MSTORE DUP7 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1EAD DUP4 PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP7 ADD PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC1 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x1F03 DUP3 DUP10 PUSH2 0x32A2 JUMP JUMPDEST MSTORE PUSH2 0x1212 DUP2 DUP9 PUSH2 0x32A2 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1F20 PUSH2 0x3251 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x1DA5 JUMP JUMPDEST PUSH2 0x1F35 DUP2 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP3 DUP7 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP1 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x1F63 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP3 PUSH2 0x1F6F PUSH1 0x1 SWAP2 PUSH2 0x322B JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x1F5B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 PUSH1 0x1 DUP4 ADD SWAP1 PUSH2 0x1FAD SWAP2 PUSH2 0x2CBA JUMP JUMPDEST SUB PUSH2 0x1FB8 SWAP1 DUP5 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0xFF AND DUP2 PUSH2 0x1FD2 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST SUB PUSH2 0x1FDD SWAP1 DUP4 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD SWAP2 PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD SWAP2 PUSH1 0x8 DUP8 ADD SLOAD SWAP4 PUSH1 0x9 DUP9 ADD SLOAD SWAP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA DUP2 SWAP12 ADD SWAP1 PUSH2 0x2012 SWAP2 PUSH2 0x2CBA JUMP JUMPDEST SUB PUSH2 0x201D SWAP1 DUP11 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD PUSH2 0x160 SWAP1 MSTORE PUSH2 0x160 DUP12 ADD PUSH2 0x203C SWAP2 PUSH2 0x2B96 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP12 ADD PUSH2 0x204A SWAP2 PUSH2 0x2BBB JUMP JUMPDEST DUP10 DUP2 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x205B SWAP2 PUSH2 0x2B96 JUMP JUMPDEST SWAP6 PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x36C SWAP2 PUSH2 0x2B96 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 PUSH2 0x36C SWAP2 PUSH2 0x20AE PUSH2 0x31D2 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xA PUSH2 0x20E4 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x20CC DUP5 PUSH2 0x2D6F JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1177 DUP2 PUSH2 0x319 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2BDE JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x213C PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0x2606 JUMPI PUSH1 0x1B DUP3 GT DUP1 ISZERO SWAP1 PUSH2 0x25FA JUMPI JUMPDEST PUSH2 0x25EB JUMPI DUP1 DUP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x25DC JUMPI DUP1 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x8 DUP4 ADD DUP1 SLOAD PUSH1 0x24 CALLDATALOAD GT PUSH2 0x25CD JUMPI PUSH1 0x7 DUP5 ADD PUSH2 0x2195 PUSH1 0x24 CALLDATALOAD DUP3 SLOAD PUSH2 0x318A JUMP JUMPDEST PUSH1 0x6 DUP7 ADD DUP1 SLOAD DUP3 GT PUSH2 0x25BE JUMPI PUSH1 0x4 SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x25A9 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x21FD SWAP4 SSTORE SLOAD PUSH2 0x1C66 DUP3 DUP3 PUSH2 0x30FB JUMP JUMPDEST SWAP1 SSTORE CALLER DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x259A JUMPI PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND SWAP1 PUSH3 0x15180 DUP2 MUL DUP2 DUP2 DIV PUSH3 0x15180 EQ DUP3 ISZERO OR ISZERO PUSH2 0x2586 JUMPI PUSH2 0x224A SWAP1 TIMESTAMP PUSH2 0x318A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH2 0x2257 DUP6 PUSH2 0x2D3D JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 DUP2 DUP6 MSTORE PUSH2 0x2270 PUSH1 0x40 DUP8 ADD SWAP2 DUP3 PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x228C DUP3 PUSH2 0x2285 DUP2 PUSH1 0x1 DUP13 ADD PUSH2 0x2CBA JUMP JUMPDEST SUB DUP4 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x60 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 MSTORE PUSH1 0xA0 DUP9 ADD SWAP5 DUP11 DUP7 MSTORE PUSH1 0xC0 DUP10 ADD SWAP7 DUP8 MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP10 ADD MSTORE CALLER DUP11 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP11 KECCAK256 SWAP1 DUP11 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP9 SLOAD AND OR DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xE88 JUMPI PUSH2 0x230D SWAP1 PUSH1 0x2 DUP8 ADD PUSH2 0x31A3 JUMP JUMPDEST MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDCA JUMPI PUSH2 0x232C PUSH1 0x3 DUP8 ADD SLOAD PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2553 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x24DE JUMPI DUP3 PUSH2 0x100 SWAP8 SWAP6 SWAP4 PUSH1 0x8 SWAP8 SWAP6 SWAP4 PUSH2 0x236F SWAP4 DUP14 SWAP3 PUSH2 0x24D3 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST MLOAD PUSH1 0x4 DUP5 ADD SSTORE MLOAD PUSH1 0x5 DUP4 ADD SSTORE MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP2 DUP3 SWAP1 PUSH1 0x8 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x24A0 JUMPI JUMPDEST POP ISZERO PUSH2 0x244E JUMPI JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x243A JUMPI SWAP2 PUSH1 0x2 SWAP2 PUSH1 0xFF SWAP4 SSTORE PUSH2 0x23EA PUSH1 0x64 CALLDATALOAD DUP4 SLOAD PUSH2 0x318A JUMP JUMPDEST DUP3 SSTORE ADD SLOAD AND PUSH2 0x240D PUSH1 0x40 MLOAD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH32 0x23B0F39E0762759FFB18632A1A2B79C9EB58571454E5F7C36E0A2F81759E0A34 PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x248C JUMPI DUP1 PUSH1 0x1 PUSH2 0x246A SWAP3 ADD PUSH1 0x8 SSTORE PUSH2 0x2B27 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE CODESIZE PUSH2 0x23BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH2 0x24A9 DUP2 PUSH2 0x2B27 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24C9 JUMPI PUSH1 0x1 ADD PUSH2 0x23AB JUMP JUMPDEST POP POP PUSH1 0x1 CODESIZE PUSH2 0x23B3 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xAEE JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP8 ADD DUP11 MSTORE DUP1 DUP11 KECCAK256 SWAP2 DUP11 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x253B JUMPI POP SWAP3 PUSH1 0x8 SWAP7 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x100 SWAP10 SWAP8 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2522 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x2375 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2512 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x24EB JUMP JUMPDEST PUSH2 0x2580 SWAP1 PUSH1 0x3 DUP9 ADD DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDC0 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x31BB JUMP JUMPDEST CODESIZE PUSH2 0x2335 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x9857CBD9 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST DUP2 PUSH2 0x25B3 SWAP2 PUSH2 0x2D8B JUMP JUMPDEST PUSH2 0x171F JUMPI DUP8 CODESIZE PUSH2 0x21EA JUMP JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 REVERT JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST PUSH4 0xBCCD4043 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x1F899589 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST POP PUSH2 0x16E DUP3 LT ISZERO PUSH2 0x2150 JUMP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH2 0x2669 DUP4 PUSH2 0x2B27 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x26C8 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x13815491 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH2 0x120 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x741 JUMPI DUP4 SWAP2 PUSH2 0x285B JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2847 JUMPI PUSH2 0x2838 JUMPI CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x2816 JUMPI PUSH2 0x12C PUSH2 0x275B PUSH1 0xC0 DUP4 ADD MLOAD JUMPDEST TIMESTAMP PUSH1 0xE0 DUP6 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x1C75 JUMPI POP PUSH2 0x30FB JUMP JUMPDEST DIV SWAP1 DUP2 ISZERO PUSH2 0x2807 JUMPI SWAP1 PUSH1 0x60 PUSH2 0x2771 SWAP3 ADD MLOAD PUSH2 0x30D2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x27F8 JUMPI CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP5 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x27E4 JUMPI JUMPDEST POP PUSH2 0x604 DUP2 PUSH1 0x2 SLOAD PUSH2 0x30FB JUMP JUMPDEST DUP4 PUSH2 0x27F1 SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0x2D8B JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x27D7 JUMP JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0xED700A67 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH2 0x12C PUSH2 0x275B PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x2748 JUMP JUMPDEST PUSH4 0xE067835F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP1 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x288E JUMPI JUMPDEST PUSH2 0x2872 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST DUP2 ADD PUSH2 0x120 DUP3 DUP3 SUB SLT PUSH2 0x739 JUMPI PUSH2 0x2888 SWAP2 PUSH2 0x3108 JUMP JUMPDEST CODESIZE PUSH2 0x270A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2868 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD DUP1 SWAP2 PUSH1 0x8 DUP6 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x293E JUMPI POP POP POP DUP3 PUSH2 0x28F4 SWAP2 SUB DUP4 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x291C JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x290E JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x28DE JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2987 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND CALLER EQ PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x298F PUSH2 0x3457 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 SLOAD PUSH1 0x9 DUP3 ADD SLOAD SWAP3 MLOAD PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP5 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CE2 JUMPI DUP5 SWAP3 PUSH2 0x2AAD JUMPI JUMPDEST POP PUSH1 0x4 ADD SLOAD SWAP1 DUP2 ISZERO PUSH2 0x2A6F JUMPI PUSH1 0xA0 ADD MLOAD SWAP1 PUSH8 0xDE0B6B3A7640000 DUP2 MUL SWAP1 DUP2 DIV PUSH8 0xDE0B6B3A7640000 SUB PUSH2 0x243A JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x64 PUSH2 0x2A1E SWAP3 DIV SWAP1 PUSH2 0x30D2 JUMP JUMPDEST DIV DUP2 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x6 PUSH1 0x40 DUP5 KECCAK256 ADD SSTORE DUP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x2A58 PUSH1 0x6 PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD DUP3 DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x30FB JUMP JUMPDEST SWAP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 DUP4 KECCAK256 ADD SSTORE PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420636F766572206361706163697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 SWAP2 SWAP3 POP PUSH2 0x2AC5 SWAP1 RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0xFC9 DUP2 DUP4 PUSH2 0x2D8B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x29DA JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x65E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x65E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2AF5 PUSH2 0x2B0C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2B22 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x10 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2B86 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B76 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2BAF DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2B73 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BC8 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2C7D SWAP2 DUP2 MLOAD DUP2 MSTORE PUSH2 0x140 PUSH2 0x2C2B PUSH2 0x2C07 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x160 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD SWAP1 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x2C19 PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH2 0x140 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2B96 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2CB0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2C9A JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2C8F JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x2CCA DUP4 PUSH2 0x2C80 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2D20 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2CE6 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x2D06 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x2CF5 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D59 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D59 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D59 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2DD5 PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST PUSH2 0x100 DUP1 PUSH2 0x2DF4 PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x120 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD SWAP1 PUSH2 0x2B96 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D59 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2B22 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x2E59 DUP3 PUSH2 0x2E27 JUMP JUMPDEST SWAP3 PUSH2 0x2E67 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D8B JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2B22 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2B22 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B22 JUMPI DUP3 PUSH2 0x2EB8 SWAP2 PUSH1 0x4 ADD PUSH2 0x2E42 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B22 JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B22 JUMPI DUP3 PUSH2 0x2EE4 SWAP2 PUSH1 0x4 ADD PUSH2 0x2E42 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B22 JUMPI PUSH2 0x2F03 SWAP2 PUSH1 0x4 ADD PUSH2 0x2E42 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0xE4 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2F19 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2B22 JUMPI DUP1 MLOAD PUSH2 0x2F65 DUP2 PUSH2 0x2E27 JUMP JUMPDEST SWAP3 PUSH2 0x2F73 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D8B JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x2B22 JUMPI PUSH2 0x2C7D SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x2B73 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2B22 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x2B22 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B22 JUMPI ADD PUSH2 0x1E0 DUP2 DUP4 SUB SLT PUSH2 0x2B22 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1E0 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D59 JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B22 JUMPI PUSH2 0x300D SWAP2 DUP4 ADD PUSH2 0x2F4F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B22 JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2B22 JUMPI PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x2B22 JUMPI PUSH2 0x1C0 SWAP2 PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x30B8 PUSH2 0x1A0 DUP3 ADD PUSH2 0x2F91 JUMP JUMPDEST PUSH2 0x1A0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2B22 JUMPI PUSH2 0x1C0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x30E5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x30E5 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH2 0x120 SWAP2 SUB SLT PUSH2 0x2B22 JUMPI PUSH1 0x40 MLOAD PUSH2 0x3121 DUP2 PUSH2 0x2D3D JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x312C DUP2 PUSH2 0x2F91 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2B22 JUMPI PUSH2 0x100 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x30E5 JUMPI JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BC8 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2BC8 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x31C6 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x31BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x31DF DUP3 PUSH2 0x2D6F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x140 DUP4 PUSH1 0x0 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x30E5 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D59 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x325E DUP3 PUSH2 0x2D3D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x2B22 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B22 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2B22 JUMPI DUP2 MLOAD SWAP2 PUSH2 0x32EA DUP4 PUSH2 0x323A JUMP JUMPDEST SWAP3 PUSH2 0x32F8 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D8B JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x2B22 JUMPI PUSH1 0x20 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3324 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B22 JUMPI DUP3 ADD SWAP1 PUSH2 0x160 DUP3 DUP8 SUB PUSH1 0x1F NOT ADD SLT PUSH2 0x2B22 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3353 DUP3 PUSH2 0x2D6F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD DUP3 MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B22 JUMPI DUP8 PUSH1 0x20 PUSH2 0x337C SWAP3 DUP7 ADD ADD PUSH2 0x2F4F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B22 JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B22 JUMPI DUP8 PUSH1 0x20 PUSH2 0x33B6 SWAP3 DUP7 ADD ADD PUSH2 0x2F4F JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x100 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x160 DUP4 ADD MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x2B22 JUMPI PUSH2 0x3423 DUP9 PUSH1 0x20 DUP1 SWAP7 SWAP6 DUP2 SWAP7 ADD ADD PUSH2 0x2F4F JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x3315 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x20 PUSH2 0x344D PUSH2 0x3455 SWAP4 PUSH1 0x40 DUP8 MSTORE PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x2B96 JUMP JUMPDEST SWAP5 ADD SWAP1 PUSH2 0x2BBB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x3468 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x348D JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xC9 DUP8 SSTORE 0x4B PUSH8 0x26669D87EF1BE6B7 CALL TIMESTAMP PUSH6 0xF1BC16FA41B3 STATICCALL ORIGIN 0xF 0xBA 0xC 0xC CODESIZE 0xF6 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"2436:15688:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3524:25;2436:15688;;;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;3556:25;2436:15688;3556:25;;;;;2436:15688;3556:25;;;:::i;:::-;2436:15688;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;2436:15688:8;2627:22:0;;2623:91;;3004:6;2436:15688:8;;-1:-1:-1;;;;;;2436:15688:8;;;;;;;-1:-1:-1;;;;;2436:15688:8;3052:40:0;;;;2436:15688:8;;2623:91:0;-1:-1:-1;;;2672:31:0;;2436:15688:8;;;;;2672:31:0;;2436:15688:8;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;12665:10;2436:15688;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;:::i;:::-;2466:103:4;;:::i;:::-;-1:-1:-1;;;;;2436:15688:8;13095:1;13119:3;13102:8;2436:15688;13098:19;;;;;13152:11;;13095:1;13152:11;;:::i;:::-;2436:15688;;;;;;;;;13224:10;2436:15688;;;;;;;;;;;;;13264:18;;;2436:15688;;;;;;;13264:56;;;;13119:3;13260:170;;;13119:3;;;;2436:15688;13083:13;;13260:170;2436:15688;;;;;;;;13224:10;2436:15688;;;;;;;;;;;13264:18;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;13260:170;2436:15688;;;;;;;;;;;;;;;;;;;;;;;13260:170;;;;;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13264:56;13304:16;;;;2436:15688;13286:15;:34;13264:56;;;13098:19;;13095:1;2436:15688;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;2466:103:4;;:::i;:::-;15645:10:8;2436:15688;;;-1:-1:-1;;;15645:85:8;;2436:15688;15645:85;;2436:15688;;;15709:10;2436:15688;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;15645:85;;;;;;;;;;;2436:15688;15741:18;;15770:21;15709:10;2436:15688;;15806:18;2436:15688;;;;;;;;;;;;;;15806:44;15802:202;2436:15688;;;16235:9;16204:27;15883:21;:11;;;:::i;:::-;;:21;2436:15688;15802:202;16038:15;2436:15688;16082:11;;;:::i;:::-;;:22;2436:15688;16038:15;16068:36;16064:105;;16204:27;:::i;:::-;2436:15688;16262:13;;16257:234;16298:3;2436:15688;;16277:19;;;;;16450:29;2436:15688;16348:11;16400:35;16348:11;16400:19;16348:11;;;;:::i;:::-;;16400:19;2436:15688;16400:35;:::i;:::-;16450:29;;:::i;:::-;16298:3;2436:15688;16262:13;;;16277:19;;;15709:10;2436:15688;;15806:18;2436:15688;;;;;;;;;;16038:15;2436:15688;;;;;;;;;;;;;16571:36;;;;;2436:15688;;-1:-1:-1;;;16571:36:8;;15709:10;2436:15688;16571:36;;2436:15688;;;;;;;;;;;;;;;;;;16571:36;;;;;;;;16257:234;2436:15688;;16620:29;2436:15688;16620:29;2436:15688;16620:29;:::i;:::-;;2436:15688;;;;;;16667:46;2436:15688;15709:10;16667:46;;2436:15688;;;;;16571:36;;;;;:::i;:::-;2436:15688;;16571:36;;;;2436:15688;;;;16571:36;2436:15688;;;;;;;;;16571:36;2436:15688;;;16064:105;16135:11;2436:15688;16135:11;;;:::i;:::-;;:22;2436:15688;16204:27;:::i;15802:202::-;15709:10;2436:15688;;15806:18;2436:15688;;;;;;;;;;16235:9;16204:27;2436:15688;;;;15802:202;;15645:85;;;;;;;;;;;;:::i;:::-;;;2436:15688;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15645:85;;;;;;;2436:15688;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15645:85;2436:15688;;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;-1:-1:-1;;;;;2436:15688:8;;:::i;:::-;;;;3368:92;2436:15688;;;;;;;;;;;;;;;;;;;;;3368:92;;2436:15688;3368:92;2436:15688;3368:92;;;2436:15688;;;;3368:92;2436:15688;3368:92;2436:15688;3368:92;;;;2436:15688;:::i;:::-;;;;:::i;:::-;;3368:92;;2436:15688;3368:92;;;;2436:15688;;3368:92;;;2436:15688;3368:92;2436:15688;;3368:92;;;;2436:15688;3368:92;;2436:15688;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3003:24;2436:15688;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;2969:27;2436:15688;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;;;;;;;;:::i;:::-;5838:10:8;2436:15688;;;-1:-1:-1;;;5838:32:8;;2436:15688;5838:32;;2436:15688;;;;-1:-1:-1;;;;;2436:15688:8;;;;;5838:32;2436:15688;5838:32;2436:15688;;5838:32;;;;;;;;;;;2436:15688;-1:-1:-1;5886:13:8;;2436:15688;;;;-1:-1:-1;5886:13:8;5926:3;2436:15688;;5901:23;;;;;2436:15688;5995:15;;;;:::i;:::-;;:25;;2436:15688;;5978:43;2436:15688;5978:43;;2436:15688;5978:43;;;2436:15688;;;;;;;;;:::i;:::-;;;5978:43;;2436:15688;;5978:43;;;;;;:::i;:::-;2436:15688;5968:54;;2436:15688;;6053:28;2436:15688;;;6053:28;;2436:15688;6053:28;;;2436:15688;;;;;;;;:::i;6053:28::-;2436:15688;6043:39;;5968:114;5946:213;;2436:15688;;5886:13;;5946:213;-1:-1:-1;;;6124:19:8;;2436:15688;7616:19;6124;5901:23;;;;;;;;;;2436:15688;;;;;6208:26;;;2436:15688;6208:26;;2436:15688;6208:26;;5838:32;6208:26;;;;;;;;;;;;;5881:289;6251:13;2436:15688;6251:13;;2436:15688;5838:10;2436:15688;;;;;5838:10;2436:15688;;;;;;6251:25;;;:67;;;5881:289;6247:118;;6398:8;;2436:15688;6422:4;2436:15688;;;;;6422:4;2436:15688;;;;;;;6398:36;2436:15688;;6430:3;6422:4;2436:15688;;6398:36;;:::i;:::-;2436:15688;4868:52;;;;;;2436:15688;;;4868:52;2436:15688;;;;;;;;;4868:52;;;2436:15688;4868:52;;2436:15688;;5838:32;2436:15688;;;4868:52;;;;;;;;5881:289;2436:15688;;4933:12;;2436:15688;4933:12;:::i;:::-;;2436:15688;;;;;;;:::i;:::-;;;;;4986:373;;2436:15688;;;;;4986:373;;;;;;;:::i;:::-;;;;2436:15688;;;4986:373;;;2436:15688;6398:8;4986:373;;2436:15688;4986:373;;;;2436:15688;4986:373;2436:15688;4986:373;;2436:15688;4986:373;;;2436:15688;4986:373;;;;2436:15688;4986:373;;;2436:15688;;;;5370:6;2436:15688;;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;:::i;:::-;;;;;;5881:289;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5838:10;2436:15688;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;5838:10;2436:15688;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5838:10;2436:15688;;;;4986:373;;;2436:15688;;;;;6398:8;4986:373;;2436:15688;;;;;4986:373;;;2436:15688;;;;;;4986:373;;2436:15688;;;;;4986:373;;;2436:15688;;;;;4986:373;;;2436:15688;;;;;;4986:373;;;2436:15688;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5404:8;2436:15688;-1:-1:-1;;;2436:15688:8;;;;;;;;;;;;;5404:8;2436:15688;;:::i;:::-;;;5838:10;2436:15688;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;5437:39;;;;;2436:15688;;;;;;;;;;;;;;;;5437:39;;2436:15688;5437:39;;2436:15688;;5838:32;2436:15688;;;4868:52;2436:15688;;;;:::i;:::-;5437:39;;;;;;;;;;2436:15688;;;;5532:44;2436:15688;;;;;;;;;;;;;;;;;5532:44;2436:15688;;5532:44;;;;;:::i;:::-;;;;2436:15688;;5437:39;;;;;:::i;:::-;2436:15688;;5437:39;;;;2436:15688;-1:-1:-1;;;2436:15688:8;;;;;5838:32;2436:15688;;;;;;-1:-1:-1;2436:15688:8;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5838:10;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;2436:15688:8;;;;;-1:-1:-1;;;2436:15688:8;;;;;5838:32;2436:15688;;;;;;-1:-1:-1;2436:15688:8;;;;;5838:10;2436:15688;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5838:10;2436:15688;;;;;;;;;;;;5838:10;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5838:10;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;2436:15688:8;;;;;5838:32;2436:15688;;;;;;-1:-1:-1;2436:15688:8;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5838:10;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;2436:15688:8;;;;;5838:32;2436:15688;;4868:52;;;;;:::i;:::-;2436:15688;;4868:52;;;;2436:15688;;;;;-1:-1:-1;;;2436:15688:8;;;;;5838:32;2436:15688;;6247:118;-1:-1:-1;;;6342:11:8;;2436:15688;6947:11;6342;6251:67;6291:27;;;;2436:15688;6280:38;;6251:67;;2436:15688;-1:-1:-1;;;2436:15688:8;;;;;5838:32;2436:15688;;6208:26;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;2436:15688;;;;;;;;;5838:32;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;2436:15688;;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;:::i;:::-;;;;3102:48;2436:15688;;;;;;;;;;;;;;;;;;;;;;;11711:23;11750:13;11769:8;2436:15688;11745:180;11765:19;;;;;;2436:15688;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;12049:17;;;12082:13;12097:19;;;;;;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;12118:3;12151:11;;;:::i;:::-;2436:15688;;;;;;;;;11849:11;2436:15688;;;;;;;;12177:117;;12118:3;;2436:15688;;12082:13;;12177:117;2436:15688;;;12271:7;2436:15688;;;12242:6;2436:15688;;;;;11849:11;2436:15688;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;12217:35;;;;:::i;:::-;;;;;;:::i;:::-;;12271:7;:::i;:::-;12177:117;;;;2436:15688;;;;;:::i;:::-;;;;;;;;;;11786:3;11819:11;;;:::i;:::-;2436:15688;;;;;;;;11849:11;2436:15688;;;;;;;;11845:69;;11786:3;2436:15688;;11750:13;;11845:69;11885:13;;2436:15688;11885:13;;:::i;:::-;11845:69;;;;;2436:15688;;;;;6810:27;2436:15688;;;:::i;:::-;1500:62:0;;;;;;;;;;;;;:::i;:::-;2436:15688:8;;;;;6810:10;2436:15688;;;;;;;;;;;;;;6810:27;;;2436:15688;6810:27;;2436:15688;6810:27;;;;;;;;;;;2436:15688;6854:13;2436:15688;6854:13;;2436:15688;6810:10;2436:15688;;;;;6810:10;2436:15688;;;;;;6854:26;;;:69;;;2436:15688;6850:120;;2436:15688;;;7013:6;2436:15688;;7064:8;2436:15688;;;7064:8;;2436:15688;7089:4;2436:15688;;;;;7089:4;2436:15688;;;;;;;7089:4;2436:15688;7097:3;7064:37;2436:15688;;7064:37;;:::i;:::-;2436:15688;7126:17;;;;;2436:15688;7126:30;7122:81;;2436:15688;6810:27;2436:15688;;;;;;;;;;;;7254:57;;;2436:15688;7254:57;;2436:15688;7254:57;;;;;;;;;;;2436:15688;-1:-1:-1;7327:13:8;;2436:15688;;;;-1:-1:-1;7327:13:8;7367:3;2436:15688;;7342:23;;;;;7436:15;;;;;2436:15688;7436:15;;;;:::i;:::-;;:25;;2436:15688;;7419:43;2436:15688;7419:43;;2436:15688;7419:43;;;2436:15688;;;;;;;;;:::i;7419:43::-;2436:15688;7409:54;;2436:15688;7494:28;2436:15688;;;7494:28;;2436:15688;7494:28;;;2436:15688;;;;;;;;:::i;7494:28::-;2436:15688;7484:39;;7409:114;:165;;;;7367:3;7387:264;;;;;2436:15688;;7327:13;;7387:264;-1:-1:-1;;;7616:19:8;;2436:15688;7616:19;;7409:165;7544:15;;;;;:::i;:::-;;2436:15688;7544:30;;7409:165;;;;;7342:23;;;;;;;;;2436:15688;7701:14;;2436:15688;;;;-1:-1:-1;;;;;2436:15688:8;;;;7728:15;2436:15688;;7728:15;;2436:15688;;:::i;:::-;;;;;;7322:340;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7728:15;;2436:15688;;;;-1:-1:-1;;;;;2436:15688:8;;;;7767:12;2436:15688;6810:10;7767:12;;2436:15688;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6810:10;7767:12;;2436:15688;;7701:14;2436:15688;7701:14;;2436:15688;7837:10;;;2436:15688;;;-1:-1:-1;;;;;2436:15688:8;;;;;7866:9;;;2436:15688;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7866:9;;;2436:15688;;7893:20;;;2436:15688;;;;7988:30;7937:12;;;2436:15688;;;;7126:17;;;2436:15688;7988:30;;:::i;:::-;7970:15;;;2436:15688;;;7970:15;8035:28;;;;;;8101;;;;:::i;:::-;6810:10;2436:15688;-1:-1:-1;;;;;2436:15688:8;;8144:55;;;;;2436:15688;;8144:55;2436:15688;;;;;;;;;;;;8144:55;;;2436:15688;8144:55;;2436:15688;6810:27;2436:15688;;;8144:55;;;;;;;;;;;8031:364;;;;6810:10;2436:15688;-1:-1:-1;;;;;2436:15688:8;;8407:43;;;;;2436:15688;;;;;7866:9;2436:15688;;;;;;;;;;;;8407:43;;2436:15688;8407:43;;2436:15688;;6810:27;2436:15688;;;;;;;;;;7097:3;2436:15688;;;;;;;;;7728:15;;2436:15688;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2436:15688:8;;;;;6810:10;7767:12;;2436:15688;:::i;:::-;;7701:14;;2436:15688;;;;;7837:10;;;2436:15688;;;;;;;;;;;7126:17;;;2436:15688;;;;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;7866:9;2436:15688;:::i;:::-;8407:43;;;;;;;;;;8031:364;2436:15688;;8468:45;2436:15688;8468:45;2436:15688;;8468:45;;;;;:::i;8407:43::-;;;;;:::i;:::-;2436:15688;;8407:43;;;;8144:55;;;;;:::i;:::-;2436:15688;;8144:55;;;;2436:15688;;;;8144:55;2436:15688;;;;;;;;;8144:55;2436:15688;;;8031:364;8221:28;;;8217:178;;8031:364;;;;;8217:178;8287:28;;;:::i;:::-;6810:10;2436:15688;-1:-1:-1;;;;;2436:15688:8;;8330:53;;;;;2436:15688;;8330:53;2436:15688;;;;;;;;;;;;8330:53;;;2436:15688;8330:53;;2436:15688;6810:27;2436:15688;;;8330:53;;;;;;;;;;8217:178;8330:53;;;;;:::i;:::-;2436:15688;;8330:53;;8217:178;;2436:15688;;;;-1:-1:-1;2436:15688:8;;;;;7866:9;;;2436:15688;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7866:9;;;2436:15688;;;;;;;;;;6810:10;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7866:9;;;;2436:15688;;;;;;;;7837:10;2436:15688;;;;;;;;;;;7837:10;2436:15688;;;;:::i;:::-;;;;;-1:-1:-1;;;2436:15688:8;;;;;6810:27;2436:15688;;;;;;-1:-1:-1;2436:15688:8;;;;;7767:12;;6810:10;7767:12;;2436:15688;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;;6810:10;7767:12;;2436:15688;;;;;;;;;;6810:10;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7767:12;6810:10;7767:12;;2436:15688;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;2436:15688:8;;;;;6810:27;2436:15688;;;;;;;;;;;;7728:15;;2436:15688;7728:15;;2436:15688;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;;;7728:15;;2436:15688;;;;;;;;;;;6810:10;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7728:15;2436:15688;7728:15;;2436:15688;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7254:57;;;;;;;;;;;;;;:::i;:::-;;;;;7122:81;-1:-1:-1;;;7180:11:8;;2436:15688;6947:11;7180;2436:15688;-1:-1:-1;;;2436:15688:8;;;;;6810:27;2436:15688;;6850:120;-1:-1:-1;;;6947:11:8;;2436:15688;6947:11;;6854:69;6896:27;;;;2436:15688;6884:39;;6854:69;;2436:15688;-1:-1:-1;;;2436:15688:8;;;;;6810:27;2436:15688;;6810:27;;;;;;;;;;;;;;:::i;:::-;;;;;;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;2915:21;2436:15688;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;:::i;:::-;;;;;;17941:51;2436:15688;;;;;17963:10;2436:15688;;17949:10;:24;17941:51;:::i;:::-;2466:103:4;;:::i;:::-;2436:15688:8;;;;;;;;;12869:10;2436:15688;;;;;;;;;;;;;;12869:37;:51;2436:15688;;;12869:51;:::i;:::-;2436:15688;;;;12869:10;2436:15688;;;;;;;;;;12931:50;:36;2436:15688;;;12931:36;2436:15688;;;12931:50;:::i;:::-;2436:15688;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;:::i;:::-;;;;3209:70;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;;;;3159:43;2436:15688;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;:::i;:::-;16893:10;2436:15688;;;-1:-1:-1;;;16893:77:8;;2436:15688;;;;16893:77;;2436:15688;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;16893:77;;2436:15688;;;;;;;16893:77;;;;;;;;;;;2436:15688;-1:-1:-1;;;;;;2436:15688:8;;;;17019:15;2436:15688;;;;;;;;;;;;;;;;;;17428:9;;17397:27;;16983:21;;2436:15688;;;17087:21;;;;;;2436:15688;17015:184;;2436:15688;17231:15;17275:22;;2436:15688;17231:15;;17261:36;17257:105;;17015:184;17397:27;;:::i;:::-;2436:15688;;;;;;;17257:105;17314:36;;17257:105;;;17015:184;2436:15688;;;;17019:15;2436:15688;;;;;;;;;;;;17015:184;;;16893:77;;;;;;;;;;;;;;;:::i;:::-;;;2436:15688;16893:77;2436:15688;;;;;;;;;;17428:9;2436:15688;;17397:27;2436:15688;;:::i;:::-;16893:77;;;;;;;;;;;;;2436:15688;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;2436:15688:8;;-1:-1:-1;;;;;;2436:15688:8;;;;;;;-1:-1:-1;;;;;2436:15688:8;3052:40:0;2436:15688:8;;3052:40:0;2436:15688:8;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;:::i;:::-;10946:8;2436:15688;10888:23;;-1:-1:-1;;;;;2436:15688:8;10888:23;10942:19;;;;;;2436:15688;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;11255:17;;;11288:13;11303:19;;;;;;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;11324:3;11357:11;;;:::i;:::-;2436:15688;;;;;;;;;11026:10;2436:15688;;;;;;;;;;;;;;11387:31;2436:15688;11383:145;;11324:3;;2436:15688;;11288:13;;11383:145;2436:15688;;;11505:7;2436:15688;;;;11026:10;2436:15688;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11443:43;;;;:::i;:::-;;;;;;:::i;11505:7::-;11383:145;;;;2436:15688;;;;;:::i;:::-;;;;;;;;;;10963:3;10996:11;;;:::i;:::-;2436:15688;;;;;;;;;11026:10;2436:15688;;;;;;;;;;;;;;11026:31;2436:15688;11022:89;;10963:3;2436:15688;;10927:13;;11022:89;11082:13;;2436:15688;11082:13;;:::i;:::-;11022:89;;;;;2436:15688;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;3467:48;2436:15688;;;;;;;;;3467:48;;;2436:15688;3467:48;;2436:15688;;;;:::i;:::-;;;;;;:::i;:::-;3467:48;;;2436:15688;;;;;;;;;3467:48;;;2436:15688;:::i;:::-;;;;;;:::i;:::-;;3467:48;;2436:15688;3467:48;;;;2436:15688;3467:48;;;2436:15688;3467:48;;;2436:15688;3467:48;;;;2436:15688;3467:48;;;;2436:15688;;;;3467:48;;;;;2436:15688;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;:::i;:::-;;;;;;12475:6;2436:15688;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;13536:15;2436:15688;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;2466:103:4;;:::i;:::-;2436:15688:8;;8710:14;8706:69;;8805:2;8789:18;;;;:41;;;2436:15688;8785:103;;2436:15688;;;8903:11;2436:15688;;;;;;;;8902:22;8898:81;;2436:15688;;;9022:6;2436:15688;;;;;9067:15;;;;2436:15688;;;;9053:29;9049:94;;9180:17;;;:31;2436:15688;;;;9180:31;:::i;:::-;9245:20;;;2436:15688;;9228:37;;9224:102;;2436:15688;;;;-1:-1:-1;;;;;2436:15688:8;9338:33;;;;;2436:15688;;-1:-1:-1;;;9338:33:8;;9349:10;2436:15688;9338:33;;2436:15688;;;;;;;;;;;;;;;;;;9338:33;;;;;;;;2436:15688;;;;9516:40;2436:15688;;;9447:37;;;;:::i;9516:40::-;2436:15688;;9349:10;2436:15688;;9614:10;2436:15688;;;;;;;;;;;;;;9687:20;2436:15688;9687:25;9683:583;2436:15688;;;;9890:14;;;2436:15688;;;10127:6;2436:15688;;;;;10127:6;2436:15688;;;;;;;10093:41;:15;;:41;:::i;:::-;2436:15688;;;;;;:::i;:::-;9349:10;2436:15688;;;9764:419;;2436:15688;;;;9764:419;2436:15688;9764:419;;;;;:::i;:::-;2436:15688;;9934:15;2436:15688;9934:15;2436:15688;9934:15;2436:15688;9934:15;;2436:15688;:::i;:::-;;;;:::i;:::-;;9764:419;;2436:15688;;;;9764:419;;2436:15688;;;;;9764:419;;;2436:15688;;;;9764:419;;;2436:15688;;;;9764:419;;2436:15688;;9764:419;;;2436:15688;9349:10;2436:15688;;9614:10;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9890:14;2436:15688;;;:::i;:::-;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;:::i;:::-;;;;;;9683:583;2436:15688;;;;;;;;;;;9764:419;2436:15688;;;9067:15;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9245:20;2436:15688;;;;9764:419;;2436:15688;9180:17;2436:15688;;;;9764:419;;2436:15688;;;;;;;;;;;;;;10278:23;10317:10;2436:15688;9067:15;2436:15688;10312:184;10329:23;;;;;;10312:184;10512:11;;10508:73;;10312:184;9349:10;;2436:15688;;10591:13;2436:15688;;;;;;;;;;;;;;;;;10634:28;2436:15688;;;;10634:28;2436:15688;;;;10634:28;:::i;:::-;2436:15688;;10731:14;2436:15688;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10680:66;2436:15688;9349:10;10680:66;;2436:15688;;;;;;-1:-1:-1;;;2436:15688:8;;;;;;;;10508:73;-1:-1:-1;;;2436:15688:8;;;;;;;;;;9067:15;2436:15688;;:::i;:::-;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;9349:10;2436:15688;;;;;;10508:73;;;2436:15688;-1:-1:-1;;;2436:15688:8;;;;;;;;10354:3;10378:15;;;:::i;:::-;2436:15688;;;;;;;;-1:-1:-1;;;;;2436:15688:8;9349:10;10378:29;10374:111;;2436:15688;;10317:10;;10374:111;10428:17;;2436:15688;10464:5;;;2436:15688;;;;-1:-1:-1;2436:15688:8;;;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;9067:15;2436:15688;;;;;9764:419;2436:15688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;2436:15688:8;;;;;;;;9683:583;-1:-1:-1;;;10223:31:8;;2436:15688;10223:31;;9338:33;;;;;:::i;:::-;2436:15688;;9338:33;;;;9224:102;-1:-1:-1;;;9289:25:8;;2436:15688;15247:25;9289;9049:94;-1:-1:-1;;;9106:25:8;;2436:15688;15247:25;9106;8898:81;-1:-1:-1;;;8948:19:8;;2436:15688;8948:19;;8785:103;-1:-1:-1;;;8854:22:8;;2436:15688;8854:22;;8789:41;8811:19;8827:3;8811:19;;;8789:41;;8706:69;-1:-1:-1;;;8748:15:8;;2436:15688;8748:15;;2436:15688;;;;;;;;;;;;;3034:25;2436:15688;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;3066:29;2436:15688;3066:29;;;;;2436:15688;3066:29;;;:::i;:::-;2436:15688;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;2466:103:4;;:::i;:::-;14250:10:8;2436:15688;;;-1:-1:-1;;;14250:83:8;;2436:15688;14250:83;;2436:15688;;;14312:10;2436:15688;;;;;14250:83;;2436:15688;;;;;;-1:-1:-1;;;;;2436:15688:8;14250:83;;;;;;;;;;;2436:15688;14348:18;;;;2436:15688;;;;;;;14344:92;;14312:10;2436:15688;;14484:15;2436:15688;;;;;;;;;;;;;;14484:41;14480:196;2436:15688;;;14999:9;14968:27;14558:21;;;2436:15688;14480:196;14710:15;2436:15688;14754:22;;2436:15688;14710:15;;14740:36;14736:105;;14968:27;;:::i;:::-;2436:15688;15025:18;;;15021:77;;15134:23;;:39;:23;;2436:15688;15134:39;:::i;:::-;2436:15688;;15190:33;;15186:98;;14312:10;2436:15688;;14484:15;2436:15688;;;;;;;;;;14710:15;2436:15688;;;;;;;;;;;;15361:41;;;;;2436:15688;;-1:-1:-1;;;15361:41:8;;14312:10;2436:15688;15361:41;;2436:15688;;;;;;;;;;;;;;;;;;15361:41;;;;;;;;14480:196;2436:15688;15415:34;2436:15688;;;15415:34;:::i;15361:41::-;;;;;;;;:::i;:::-;;;;;15186:98;-1:-1:-1;;;15247:25:8;;2436:15688;15247:25;;15021:77;-1:-1:-1;;;15067:19:8;;2436:15688;15067:19;;14480:196;14312:10;2436:15688;;14484:15;2436:15688;;;;;;;;;;14999:9;14968:27;2436:15688;;;;14480:196;;14344:92;-1:-1:-1;;;14411:13:8;;2436:15688;14411:13;;2436:15688;-1:-1:-1;;;2436:15688:8;;;;;;;;14250:83;;;;;;;;;;;;;;:::i;:::-;;;;2436:15688;;;;;;;;;:::i;:::-;14250:83;;;;;;;;2436:15688;;;;;;;;;;;;;;;;;17749:12;2436:15688;;;;;;;;17749:12;2436:15688;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;-1:-1:-1;2436:15688:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;18051:50;2436:15688;;;;;18073:9;2436:15688;;18059:10;:23;18051:50;:::i;:::-;2466:103:4;;:::i;:::-;2436:15688:8;;;13681:6;2436:15688;;;;;;13736:10;2436:15688;13755:12;;;2436:15688;;;-1:-1:-1;;;13736:32:8;;2436:15688;13736:32;;2436:15688;;;;;;;;13736:32;;2436:15688;;-1:-1:-1;;;;;2436:15688:8;13736:32;;;;;;;;;;;2436:15688;13832:14;2436:15688;13832:14;2436:15688;13832:18;;;2436:15688;;13906:8;;2436:15688;;13936:4;2436:15688;;;;;13936:4;2436:15688;;;13936:4;2436:15688;13944:3;13906:42;2436:15688;;13906:42;;:::i;:::-;2436:15688;;;;13681:6;2436:15688;;18073:9;2436:15688;;;13967:31;2436:15688;;;;13681:6;2436:15688;;14048:75;18073:9;2436:15688;;;14048:31;2436:15688;;;;13681:6;2436:15688;;14095:28;2436:15688;;;14095:28;2436:15688;14048:75;;:::i;:::-;2436:15688;;;13681:6;2436:15688;;14018:26;2436:15688;;;14018:26;2436:15688;;;;;;;;;-1:-1:-1;;;2436:15688:8;;;;;;;;13736:32;2436:15688;;;-1:-1:-1;;;2436:15688:8;;;;;;;13736:32;2436:15688;13736:32;;;;;;;;;;;;;;:::i;:::-;;;;;2436:15688;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;:::i;:::-;;;;3286:73;2436:15688;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;:::o;:::-;;;;;3066:29;2436:15688;;;;;;3066:29;-1:-1:-1;2436:15688:8;;-1:-1:-1;2436:15688:8;;;-1:-1:-1;2436:15688:8;:::o;:::-;;;;;;;;;;;;;10946:8;2436:15688;;;;;;10946:8;-1:-1:-1;2436:15688:8;;-1:-1:-1;2436:15688:8;;;-1:-1:-1;2436:15688:8;:::o;:::-;;;;;;;;-1:-1:-1;;2436:15688:8;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;2436:15688:8;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;-1:-1:-1;2436:15688:8;;;;;-1:-1:-1;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;2436:15688:8;;;;;;;;-1:-1:-1;2436:15688:8;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;:::o;:::-;;;;-1:-1:-1;2436:15688:8;;;;;-1:-1:-1;2436:15688:8;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;2436:15688:8;;;;;;-1:-1:-1;;2436:15688:8;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;2436:15688:8;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;2436:15688:8;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2436:15688:8;;;;;;;;;;;;-1:-1:-1;;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2436:15688:8;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;2436:15688:8;;;;;;;-1:-1:-1;2436:15688:8;;;;;;;;;-1:-1:-1;2436:15688:8;;;;-1:-1:-1;2436:15688:8;;;;-1:-1:-1;2436:15688:8;;;;-1:-1:-1;2436:15688:8;;;;-1:-1:-1;2436:15688:8;;;;-1:-1:-1;2436:15688:8;;;;;;:::o;:::-;-1:-1:-1;;2436:15688:8;;;;;;;:::o;:::-;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;2436:15688:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;-1:-1:-1;;2436:15688:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2436:15688:8;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;2575:307:4:-;1899:1;2702:7;2436:15688:8;2702:18:4;2698:86;;1899:1;2702:7;2436:15688:8;2575:307:4:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;1796:162:0;2436:15688:8;;-1:-1:-1;;;;;2436:15688:8;735:10:2;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:2;1901:40:0;2436:15688:8;;-1:-1:-1;1901:40:0"},"methodIdentifiers":{"LastVaultClaimTime(address,uint256)":"0db981a0","NextLpClaimTime(address,uint256)":"7a728e7f","bqBTC()":"34808ec3","bqBTCAddress()":"996b8a6f","claimPayoutForLP(uint256)":"2d8a340c","clamPayoutForVault(uint256)":"a650c232","coverCount()":"feb0b8f5","coverExists(uint256)":"782ea619","coverFeeBalance()":"357917b7","coverIds(uint256)":"fb643583","covers(uint256)":"6299df6c","createCover(uint256,string,uint8,string,string,uint256,uint256,uint256)":"9732bdb5","deleteExpiredUserCovers(address)":"bfc664f3","getAllAvailableCovers()":"93b1ad38","getAllParticipants()":"195ec9ee","getAllUserCovers(address)":"649718b2","getCoverFeeBalance()":"609c7604","getCoverInfo(uint256)":"62858bfa","getDepositClaimableDays(address,uint256)":"73cce3ee","getLastClaimTime(address,uint256)":"10525814","getUserCoverInfo(address,uint256)":"cadcb471","getUserParticipation(address)":"46f84795","governance()":"5aa6e675","lpAddress()":"9b4dc8cc","lpContract()":"8acee3cf","owner()":"8da5cb5b","participants(uint256)":"35c1d349","participation(address)":"96f3a8ad","purchaseCover(uint256,uint256,uint256,uint256)":"602710a4","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateCover(uint256,string,uint8,string,string,uint256,uint256,uint256)":"8de4d101","updateMaxAmount(uint256)":"106b5da1","updateUserCoverValue(address,uint256,uint256)":"7ceb4a69","userCovers(address,uint256)":"9e7b399e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lpContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bqBTC\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CoverNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientPoolBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCoverDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LpNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoClaimableReward\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedCoverType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserHaveAlreadyPurchasedCover\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongPool\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"}],\"name\":\"CoverCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coverValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coverFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"}],\"name\":\"CoverPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"}],\"name\":\"CoverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PayoutClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LastVaultClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NextLpClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bqBTC\",\"outputs\":[{\"internalType\":\"contract IbqBTC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bqBTCAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"claimPayoutForLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"clamPayoutForVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"coverExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverFeeBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"coverIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"covers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"_riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_coverName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"createCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deleteExpiredUserCovers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAvailableCovers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllParticipants\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAllUserCovers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"coverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct CoverLib.GenericCoverInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCoverFeeBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"}],\"name\":\"getCoverInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getDepositClaimableDays\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getLastClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"}],\"name\":\"getUserCoverInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"coverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct CoverLib.GenericCoverInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserParticipation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpContract\",\"outputs\":[{\"internalType\":\"contract ILP\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"participation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverFee\",\"type\":\"uint256\"}],\"name\":\"purchaseCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"_riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"updateCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"}],\"name\":\"updateMaxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimPaid\",\"type\":\"uint256\"}],\"name\":\"updateUserCoverValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userCovers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"coverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsuranceCover.sol\":\"InsuranceCover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x5138397d8fe6477ca504eacf0b9a9f9273319a1927872d4b67a4cce9d4a1dc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5669416dad2b358d3309144ad62ae8e9d58cadc62c7101e01929c7a8e3d1bd39\",\"dweb:/ipfs/QmXK6Dy6Drr4SnDGBjL8VzKp8t41WagTcnTuavf1q58FpG\"]},\"contracts/InsuranceCover.sol\":{\"keccak256\":\"0x60e86d28175387a49543c163796e2c36326d8cd2dbfed27ed2e87d05bf4b6756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319dbfa43e18601346949b998759ac0a7c74efbb5dc79e32b2896c32abcebf\",\"dweb:/ipfs/QmX4V88uxZvZb4TEBwo3FtS174ufUnSjTHrRVLUCQ6cqSD\"]}},\"version\":1}"}}}}}