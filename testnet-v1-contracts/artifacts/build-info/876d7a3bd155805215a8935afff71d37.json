{"id":"876d7a3bd155805215a8935afff71d37","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/CoverLib.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary CoverLib {\r\n    struct DepositParams {\r\n        address depositor;\r\n        uint256 poolId;\r\n        uint256 amount;\r\n        uint256 period;\r\n        CoverLib.DepositType pdt;\r\n        CoverLib.AssetDepositType adt;\r\n        address asset;\r\n    }\r\n\r\n    struct Cover {\r\n        uint256 id;\r\n        string coverName;\r\n        RiskType riskType;\r\n        string chains;\r\n        uint256 capacity;\r\n        uint256 cost;\r\n        uint256 capacityAmount;\r\n        uint256 coverValues;\r\n        uint256 maxAmount;\r\n        uint256 poolId;\r\n        string CID;\r\n    }\r\n\r\n    struct GenericCoverInfo {\r\n        address user;\r\n        uint256 coverId;\r\n        RiskType riskType;\r\n        string coverName;\r\n        uint256 coverValue; // This is the value of the cover purchased\r\n        uint256 claimPaid;\r\n        uint256 coverPeriod; // This is the period the cover is purchased for in days\r\n        uint256 endDay; // When the cover expires\r\n        bool isActive;\r\n    }\r\n\r\n    enum RiskType {\r\n        Low,\r\n        Medium,\r\n        High\r\n    }\r\n\r\n    struct GenericCover {\r\n        RiskType riskType;\r\n        bytes coverData;\r\n    }\r\n\r\n    enum AssetDepositType {\r\n        Native,\r\n        ERC20\r\n    }\r\n\r\n    enum DepositType {\r\n        Normal,\r\n        Vault\r\n    }\r\n\r\n    struct Pool {\r\n        uint256 id;\r\n        string poolName;\r\n        CoverLib.RiskType riskType;\r\n        uint256 apy;\r\n        uint256 minPeriod;\r\n        uint256 tvl;\r\n        uint256 baseValue;\r\n        uint256 coverTvl;\r\n        uint256 tcp;\r\n        bool isActive;\r\n        uint256 percentageSplitBalance;\r\n        uint256 investmentArmPercent;\r\n        uint8 leverage;\r\n        address asset;\r\n        CoverLib.AssetDepositType assetType;\r\n    }\r\n\r\n    enum Status {\r\n        Active,\r\n        Due,\r\n        Withdrawn\r\n    }\r\n}\r\n"},"contracts/InsuranceCover.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"./CoverLib.sol\";\r\n\r\ninterface IbqBTC {\r\n    function bqMint(address account, uint256 amount) external;\r\n    function burn(address account, uint256 amount) external;\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\ninterface ILP {\r\n    struct Deposits {\r\n        address lp;\r\n        uint256 amount;\r\n        uint256 poolId;\r\n        uint256 dailyPayout;\r\n        Status status;\r\n        uint256 daysLeft;\r\n        uint256 startDate;\r\n        uint256 expiryDate;\r\n        uint256 accruedPayout;\r\n    }\r\n\r\n    struct Pool {\r\n        uint256 id;\r\n        string poolName;\r\n        CoverLib.RiskType riskType;\r\n        uint256 apy;\r\n        uint256 minPeriod;\r\n        uint256 tvl;\r\n        uint256 baseValue;\r\n        uint256 coverTvl;\r\n        uint256 tcp;\r\n        bool isActive;\r\n        uint256 percentageSplitBalance;\r\n        uint256 investmentArmPercent;\r\n        uint8 leverage;\r\n        address asset;\r\n        AssetDepositType assetType;\r\n    }\r\n\r\n    enum Status {\r\n        Active,\r\n        Expired\r\n    }\r\n\r\n    enum AssetDepositType {\r\n        Native,\r\n        ERC20\r\n    }\r\n\r\n    function getUserDeposit(\r\n        uint256 _poolId,\r\n        address _user\r\n    ) external view returns (Deposits memory);\r\n\r\n    function getVaultDeposits(\r\n        uint256 vaultId,\r\n        address user\r\n    ) external view returns (Deposits[] memory);\r\n\r\n    function getPool(\r\n        uint256 _poolId\r\n    )\r\n        external\r\n        view\r\n        returns (\r\n            string memory name,\r\n            CoverLib.RiskType riskType,\r\n            uint256 apy,\r\n            uint256 minPeriod,\r\n            uint256 tvl,\r\n            bool isActive,\r\n            uint256 percentageSplitBalance\r\n        );\r\n\r\n    function reducePercentageSplit(\r\n        uint256 _poolId,\r\n        uint256 __poolPercentageSplit\r\n    ) external;\r\n    function increasePercentageSplit(\r\n        uint256 _poolId,\r\n        uint256 __poolPercentageSplit\r\n    ) external;\r\n    function addPoolCover(\r\n        uint256 _poolId,\r\n        CoverLib.Cover memory _cover\r\n    ) external;\r\n    function updatePoolCovers(\r\n        uint256 _poolId,\r\n        CoverLib.Cover memory _cover\r\n    ) external;\r\n    function getPoolCovers(\r\n        uint256 _poolId\r\n    ) external view returns (CoverLib.Cover[] memory);\r\n}\r\n\r\ncontract InsuranceCover is ReentrancyGuard, Ownable {\r\n    using CoverLib for *;\r\n    using Math for uint256;\r\n\r\n    error LpNotActive();\r\n    error InsufficientPoolBalance();\r\n    error NoClaimableReward();\r\n    error InvalidCoverDuration();\r\n    error CoverNotAvailable();\r\n    error UserHaveAlreadyPurchasedCover();\r\n    error NameAlreadyExists();\r\n    error InvalidAmount();\r\n    error UnsupportedCoverType();\r\n    error WrongPool();\r\n\r\n    uint public coverFeeBalance;\r\n    ILP public lpContract;\r\n    IbqBTC public bqBTC;\r\n    address public bqBTCAddress;\r\n    address public lpAddress;\r\n    address public governance;\r\n    address[] public participants;\r\n    mapping(address => uint256) public participation;\r\n\r\n    mapping(uint256 => bool) public coverExists;\r\n    mapping(address => mapping(uint256 => uint256)) public NextLpClaimTime;\r\n    mapping(address => mapping(uint256 => uint256)) public LastVaultClaimTime;\r\n\r\n    mapping(address => mapping(uint256 => CoverLib.GenericCoverInfo))\r\n        public userCovers;\r\n    mapping(uint256 => CoverLib.Cover) public covers;\r\n\r\n    uint256 public coverCount;\r\n    uint256[] public coverIds;\r\n\r\n    event CoverCreated(\r\n        uint256 indexed coverId,\r\n        string name,\r\n        CoverLib.RiskType riskType\r\n    );\r\n    event CoverPurchased(\r\n        address indexed user,\r\n        uint256 coverValue,\r\n        uint256 coverFee,\r\n        CoverLib.RiskType riskType\r\n    );\r\n    event PayoutClaimed(\r\n        address indexed user,\r\n        uint256 indexed poolId,\r\n        uint256 amount\r\n    );\r\n    event CoverUpdated(\r\n        uint256 indexed coverId,\r\n        string coverName,\r\n        CoverLib.RiskType riskType\r\n    );\r\n\r\n    constructor(\r\n        address _lpContract,\r\n        address _initialOwner,\r\n        address _bqBTC\r\n    ) Ownable(_initialOwner) {\r\n        lpContract = ILP(_lpContract);\r\n        lpAddress = _lpContract;\r\n        bqBTC = IbqBTC(_bqBTC);\r\n        bqBTCAddress = _bqBTC;\r\n    }\r\n\r\n    function createCover(\r\n        uint256 coverId,\r\n        string memory _cid,\r\n        CoverLib.RiskType _riskType,\r\n        string memory _coverName,\r\n        string memory _chains,\r\n        uint256 _capacity,\r\n        uint256 _cost,\r\n        uint256 _poolId\r\n    ) public onlyOwner {\r\n        uint256 _maxAmount = _validateAndGetPoolInfo(\r\n            _coverName,\r\n            _poolId,\r\n            _riskType,\r\n            _capacity\r\n        );\r\n\r\n        lpContract.reducePercentageSplit(_poolId, _capacity);\r\n\r\n        coverCount++;\r\n        CoverLib.Cover memory cover = CoverLib.Cover({\r\n            id: coverId,\r\n            coverName: _coverName,\r\n            riskType: _riskType,\r\n            chains: _chains,\r\n            capacity: _capacity,\r\n            cost: _cost,\r\n            capacityAmount: _maxAmount,\r\n            coverValues: 0,\r\n            maxAmount: _maxAmount,\r\n            poolId: _poolId,\r\n            CID: _cid\r\n        });\r\n        covers[coverId] = cover;\r\n        coverIds.push(coverId);\r\n        lpContract.addPoolCover(_poolId, cover);\r\n        coverExists[coverId] = true;\r\n\r\n        emit CoverCreated(coverId, _coverName, _riskType);\r\n    }\r\n\r\n    function _validateAndGetPoolInfo(\r\n        string memory _coverName,\r\n        uint256 poolId,\r\n        CoverLib.RiskType riskType,\r\n        uint256 capacity\r\n    ) internal view returns (uint256) {\r\n        CoverLib.Cover[] memory coversInPool = lpContract.getPoolCovers(poolId);\r\n        for (uint256 i = 0; i < coversInPool.length; i++) {\r\n            if (\r\n                keccak256(abi.encodePacked(coversInPool[i].coverName)) ==\r\n                keccak256(abi.encodePacked(_coverName))\r\n            ) {\r\n                revert NameAlreadyExists();\r\n            }\r\n        }\r\n        (\r\n            ,\r\n            CoverLib.RiskType risk,\r\n            ,\r\n            ,\r\n            uint256 tvl,\r\n            ,\r\n            uint256 percentageSplitBalance\r\n        ) = lpContract.getPool(poolId);\r\n\r\n        if (risk != riskType || capacity > percentageSplitBalance) {\r\n            revert WrongPool();\r\n        }\r\n\r\n        uint256 maxAmount = (tvl * ((capacity * 1e18) / 100)) / 1e18;\r\n        return (maxAmount);\r\n    }\r\n\r\n    function updateCover(\r\n        uint256 _coverId,\r\n        string memory _coverName,\r\n        CoverLib.RiskType _riskType,\r\n        string memory _cid,\r\n        string memory _chains,\r\n        uint256 _capacity,\r\n        uint256 _cost,\r\n        uint256 _poolId\r\n    ) public onlyOwner {\r\n        (\r\n            ,\r\n            CoverLib.RiskType risk,\r\n            ,\r\n            ,\r\n            uint256 tvl,\r\n            ,\r\n            uint256 _percentageSplitBalance\r\n        ) = lpContract.getPool(_poolId);\r\n\r\n        if (risk != _riskType || _capacity > _percentageSplitBalance) {\r\n            revert WrongPool();\r\n        }\r\n\r\n        CoverLib.Cover storage cover = covers[_coverId];\r\n\r\n        uint256 _maxAmount = (tvl * ((_capacity * 1e18) / 100)) / 1e18;\r\n\r\n        if (cover.coverValues > _maxAmount) {\r\n            revert WrongPool();\r\n        }\r\n\r\n        CoverLib.Cover[] memory coversInPool = lpContract.getPoolCovers(\r\n            _poolId\r\n        );\r\n        for (uint256 i = 0; i < coversInPool.length; i++) {\r\n            if (\r\n                keccak256(abi.encodePacked(coversInPool[i].coverName)) ==\r\n                keccak256(abi.encodePacked(_coverName)) &&\r\n                coversInPool[i].id != _coverId\r\n            ) {\r\n                revert NameAlreadyExists();\r\n            }\r\n        }\r\n\r\n        uint256 oldCoverCapacity = cover.capacity;\r\n\r\n        cover.coverName = _coverName;\r\n        cover.chains = _chains;\r\n        cover.capacity = _capacity;\r\n        cover.cost = _cost;\r\n        cover.CID = _cid;\r\n        cover.capacityAmount = _maxAmount;\r\n        cover.poolId = _poolId;\r\n        cover.maxAmount = _maxAmount - cover.coverValues;\r\n\r\n        if (oldCoverCapacity > _capacity) {\r\n            uint256 difference = oldCoverCapacity - _capacity;\r\n            lpContract.increasePercentageSplit(_poolId, difference);\r\n        } else if (oldCoverCapacity < _capacity) {\r\n            uint256 difference = _capacity - oldCoverCapacity;\r\n            lpContract.reducePercentageSplit(_poolId, difference);\r\n        }\r\n\r\n        lpContract.updatePoolCovers(_poolId, cover);\r\n\r\n        emit CoverUpdated(_coverId, _coverName, _riskType);\r\n    }\r\n\r\n    function purchaseCover(\r\n        uint256 _coverId,\r\n        uint256 _coverValue,\r\n        uint256 _coverPeriod,\r\n        uint256 _coverFee\r\n    ) public nonReentrant {\r\n        if (_coverFee <= 0) {\r\n            revert InvalidAmount();\r\n        }\r\n        if (_coverPeriod <= 27 || _coverPeriod >= 366) {\r\n            revert InvalidCoverDuration();\r\n        }\r\n        if (!coverExists[_coverId]) {\r\n            revert CoverNotAvailable();\r\n        }\r\n\r\n        CoverLib.Cover storage cover = covers[_coverId];\r\n        if (_coverValue > cover.maxAmount) {\r\n            revert InsufficientPoolBalance();\r\n        }\r\n\r\n        uint256 newCoverValues = cover.coverValues + _coverValue;\r\n\r\n        if (newCoverValues > cover.capacityAmount) {\r\n            revert InsufficientPoolBalance();\r\n        }\r\n\r\n        bqBTC.burn(msg.sender, _coverFee);\r\n\r\n        cover.coverValues = newCoverValues;\r\n        cover.maxAmount = cover.capacityAmount - newCoverValues;\r\n\r\n        cover.maxAmount = (cover.capacityAmount - cover.coverValues);\r\n        CoverLib.GenericCoverInfo storage userCover = userCovers[msg.sender][\r\n            _coverId\r\n        ];\r\n\r\n        if (userCover.coverValue == 0) {\r\n            userCovers[msg.sender][_coverId] = CoverLib.GenericCoverInfo({\r\n                user: msg.sender,\r\n                coverId: _coverId,\r\n                riskType: cover.riskType,\r\n                coverName: cover.coverName,\r\n                coverValue: _coverValue,\r\n                claimPaid: 0,\r\n                coverPeriod: _coverPeriod,\r\n                endDay: block.timestamp + (_coverPeriod * 1 days),\r\n                isActive: true\r\n            });\r\n        } else {\r\n            revert UserHaveAlreadyPurchasedCover();\r\n        }\r\n\r\n        bool userExists = false;\r\n        for (uint i = 0; i < participants.length; i++) {\r\n            if (participants[i] == msg.sender) {\r\n                userExists = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!userExists) {\r\n            participants.push(msg.sender);\r\n        }\r\n        participation[msg.sender] += 1;\r\n\r\n        coverFeeBalance += _coverFee;\r\n\r\n        emit CoverPurchased(msg.sender, _coverValue, _coverFee, cover.riskType);\r\n    }\r\n\r\n    function getAllUserCovers(\r\n        address user\r\n    ) external view returns (CoverLib.GenericCoverInfo[] memory) {\r\n        uint256 actualCount = 0;\r\n        for (uint256 i = 0; i < coverIds.length; i++) {\r\n            uint256 id = coverIds[i];\r\n            if (userCovers[user][id].coverValue > 0) {\r\n                actualCount++;\r\n            }\r\n        }\r\n\r\n        CoverLib.GenericCoverInfo[]\r\n            memory userCoverList = new CoverLib.GenericCoverInfo[](actualCount);\r\n\r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < coverIds.length; i++) {\r\n            uint256 id = coverIds[i];\r\n            if (userCovers[user][id].coverValue > 0) {\r\n                userCoverList[index] = userCovers[user][id];\r\n                index++;\r\n            }\r\n        }\r\n\r\n        return userCoverList;\r\n    }\r\n\r\n    function getAllAvailableCovers()\r\n        external\r\n        view\r\n        returns (CoverLib.Cover[] memory)\r\n    {\r\n        uint256 actualCount = 0;\r\n        for (uint256 i = 0; i < coverIds.length; i++) {\r\n            uint256 id = coverIds[i];\r\n            if (coverExists[id]) {\r\n                actualCount++;\r\n            }\r\n        }\r\n\r\n        CoverLib.Cover[] memory availableCovers = new CoverLib.Cover[](\r\n            actualCount\r\n        );\r\n\r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < coverIds.length; i++) {\r\n            uint256 id = coverIds[i];\r\n            if (coverExists[id]) {\r\n                availableCovers[index] = covers[id];\r\n                index++;\r\n            }\r\n        }\r\n\r\n        return availableCovers;\r\n    }\r\n\r\n    function getCoverInfo(\r\n        uint256 _coverId\r\n    ) external view returns (CoverLib.Cover memory) {\r\n        return covers[_coverId];\r\n    }\r\n\r\n    function getUserCoverInfo(\r\n        address user,\r\n        uint256 _coverId\r\n    ) external view returns (CoverLib.GenericCoverInfo memory) {\r\n        return userCovers[user][_coverId];\r\n    }\r\n\r\n    function updateUserCoverValue(\r\n        address user,\r\n        uint256 _coverId,\r\n        uint256 _claimPaid\r\n    ) public onlyGovernance nonReentrant {\r\n        userCovers[user][_coverId].coverValue -= _claimPaid;\r\n        userCovers[user][_coverId].claimPaid += _claimPaid;\r\n    }\r\n\r\n    function deleteExpiredUserCovers(address _user) external nonReentrant {\r\n        for (uint256 i = 1; i < coverIds.length; i++) {\r\n            uint256 id = coverIds[i];\r\n            CoverLib.GenericCoverInfo storage userCover = userCovers[_user][id];\r\n            if (userCover.isActive && block.timestamp > userCover.endDay) {\r\n                userCover.isActive = false;\r\n                delete userCovers[_user][id];\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCoverFeeBalance() external view returns (uint256) {\r\n        return coverFeeBalance;\r\n    }\r\n\r\n    function updateMaxAmount(uint256 _coverId) public onlyPool nonReentrant {\r\n        CoverLib.Cover storage cover = covers[_coverId];\r\n        (, , , , uint256 tvl, , ) = lpContract.getPool(cover.poolId);\r\n        // require(tvl > 0, \"TVL is zero\");\r\n        require(cover.capacity > 0, \"Invalid cover capacity\");\r\n        uint256 amount = (tvl * ((cover.capacity * 1e18) / 100)) / 1e18;\r\n        covers[_coverId].capacityAmount = amount;\r\n        covers[_coverId].maxAmount = (covers[_coverId].capacityAmount -\r\n            covers[_coverId].coverValues);\r\n    }\r\n\r\n    function claimPayoutForLP(uint256 _poolId) external nonReentrant {\r\n        ILP.Deposits memory depositInfo = lpContract.getUserDeposit(\r\n            _poolId,\r\n            msg.sender\r\n        );\r\n        if (depositInfo.status != ILP.Status.Active) {\r\n            revert LpNotActive();\r\n        }\r\n\r\n        uint256 lastClaimTime;\r\n        if (NextLpClaimTime[msg.sender][_poolId] == 0) {\r\n            lastClaimTime = depositInfo.startDate;\r\n        } else {\r\n            lastClaimTime = NextLpClaimTime[msg.sender][_poolId];\r\n        }\r\n\r\n        uint256 currentTime = block.timestamp;\r\n        if (currentTime > depositInfo.expiryDate) {\r\n            currentTime = depositInfo.expiryDate;\r\n        }\r\n\r\n        // uint256 claimableDays = (currentTime - lastClaimTime) / 1 days;   Uncomment\r\n\r\n        uint256 claimableDays = (currentTime - lastClaimTime) / 5 minutes;\r\n\r\n        if (claimableDays <= 0) {\r\n            revert NoClaimableReward();\r\n        }\r\n        uint256 claimableAmount = depositInfo.dailyPayout * claimableDays;\r\n\r\n        if (claimableAmount > coverFeeBalance) {\r\n            revert InsufficientPoolBalance();\r\n        }\r\n        NextLpClaimTime[msg.sender][_poolId] = block.timestamp;\r\n\r\n        bqBTC.bqMint(msg.sender, claimableAmount);\r\n\r\n        coverFeeBalance -= claimableAmount;\r\n\r\n        emit PayoutClaimed(msg.sender, _poolId, claimableAmount);\r\n    }\r\n\r\n    function clamPayoutForVault(uint256 vaultId) external nonReentrant {\r\n        ILP.Deposits[] memory deposits = lpContract.getVaultDeposits(\r\n            vaultId,\r\n            msg.sender\r\n        );\r\n        uint256 totalClaim;\r\n        uint256 lastClaimTime;\r\n        if (LastVaultClaimTime[msg.sender][vaultId] == 0) {\r\n            lastClaimTime = deposits[0].startDate;\r\n        } else {\r\n            lastClaimTime = LastVaultClaimTime[msg.sender][vaultId];\r\n        }\r\n\r\n        uint256 currentTime = block.timestamp;\r\n        if (currentTime > deposits[0].expiryDate) {\r\n            currentTime = deposits[0].expiryDate;\r\n        }\r\n        uint256 claimableDays = (currentTime - lastClaimTime) / 5 minutes;\r\n\r\n        for (uint256 i = 0; i < deposits.length; i++) {\r\n            ILP.Deposits memory deposit = deposits[i];\r\n            uint256 claimableAmount = deposit.dailyPayout * claimableDays;\r\n            totalClaim += claimableAmount;\r\n        }\r\n\r\n        LastVaultClaimTime[msg.sender][vaultId] = block.timestamp;\r\n        bqBTC.bqMint(msg.sender, totalClaim);\r\n\r\n        coverFeeBalance -= totalClaim;\r\n\r\n        emit PayoutClaimed(msg.sender, vaultId, totalClaim);\r\n    }\r\n\r\n    function getDepositClaimableDays(\r\n        address user,\r\n        uint256 _poolId\r\n    ) public view returns (uint256) {\r\n        ILP.Deposits memory depositInfo = lpContract.getUserDeposit(\r\n            _poolId,\r\n            user\r\n        );\r\n\r\n        uint256 lastClaimTime;\r\n        if (NextLpClaimTime[user][_poolId] == 0) {\r\n            lastClaimTime = depositInfo.startDate;\r\n        } else {\r\n            lastClaimTime = NextLpClaimTime[user][_poolId];\r\n        }\r\n        uint256 currentTime = block.timestamp;\r\n        if (currentTime > depositInfo.expiryDate) {\r\n            currentTime = depositInfo.expiryDate;\r\n        }\r\n        uint256 claimableDays = (currentTime - lastClaimTime) / 5 minutes;\r\n\r\n        return claimableDays;\r\n    }\r\n\r\n    function getLastClaimTime(\r\n        address user,\r\n        uint256 _poolId\r\n    ) public view returns (uint256) {\r\n        return NextLpClaimTime[user][_poolId];\r\n    }\r\n\r\n    function getAllParticipants() public view returns (address[] memory) {\r\n        return participants;\r\n    }\r\n\r\n    function getUserParticipation(address user) public view returns (uint256) {\r\n        return participation[user];\r\n    }\r\n\r\n    modifier onlyGovernance() {\r\n        require(msg.sender == governance, \"Not authorized\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyPool() {\r\n        require(msg.sender == lpAddress, \"Not authorized\");\r\n        _;\r\n    }\r\n}\r\n"},"contracts/InsurancePool.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./CoverLib.sol\";\n\ninterface ICover {\n    function updateMaxAmount(uint256 _coverId) external;\n    function getDepositClaimableDays(\n        address user,\n        uint256 _poolId\n    ) external view returns (uint256);\n    function getLastClaimTime(\n        address user,\n        uint256 _poolId\n    ) external view returns (uint256);\n}\n\ninterface IVault {\n    struct Pool {\n        uint256 id;\n        string poolName;\n        CoverLib.RiskType riskType;\n        uint256 apy;\n        uint256 minPeriod;\n        uint256 tvl;\n        uint256 baseValue;\n        uint256 coverTvl;\n        uint256 tcp;\n        bool isActive;\n        uint256 percentageSplitBalance;\n        uint256 investmentArmPercent;\n        uint8 leverage;\n        address asset;\n        CoverLib.AssetDepositType assetType;\n    }\n\n    struct Vault {\n        uint256 id;\n        string vaultName;\n        Pool[] pools;\n        uint256 minInv;\n        uint256 maxInv;\n        uint256 minPeriod;\n        CoverLib.AssetDepositType assetType;\n        address asset;\n    }\n\n    struct VaultDeposit {\n        address lp;\n        uint256 amount;\n        uint256 vaultId;\n        uint256 dailyPayout;\n        CoverLib.Status status;\n        uint256 daysLeft;\n        uint256 startDate;\n        uint256 expiryDate;\n        uint256 accruedPayout;\n    }\n\n    function getVault(uint256 vaultId) external view returns (Vault memory);\n    function getUserVaultDeposit(\n        uint256 vaultId,\n        address user\n    ) external view returns (VaultDeposit memory);\n}\n\ninterface IbqBTC {\n    function bqMint(address account, uint256 amount) external;\n    function burn(address account, uint256 amount) external;\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\ninterface IGov {\n    struct ProposalParams {\n        address user;\n        CoverLib.RiskType riskType;\n        uint256 coverId;\n        string txHash;\n        string description;\n        uint256 poolId;\n        uint256 claimAmount;\n    }\n\n    struct Proposal {\n        uint256 id;\n        uint256 votesFor;\n        uint256 votesAgainst;\n        uint256 createdAt;\n        uint256 deadline;\n        uint256 timeleft;\n        ProposalStaus status;\n        bool executed;\n        ProposalParams proposalParam;\n    }\n\n    enum ProposalStaus {\n        Submitted,\n        Pending,\n        Approved,\n        Claimed,\n        Rejected\n    }\n\n    function getProposalDetails(\n        uint256 _proposalId\n    ) external returns (Proposal memory);\n    function updateProposalStatusToClaimed(uint256 proposalId) external;\n    function setUserVaultDepositToZero(uint256 vaultId, address user) external;\n}\n\ncontract InsurancePool is ReentrancyGuard, Ownable {\n    using CoverLib for *;\n\n    struct Vault {\n        uint256 id;\n        string vaultName;\n        CoverLib.Pool[] pools;\n        uint256 minInv;\n        uint256 maxInv;\n        uint256 minPeriod;\n        CoverLib.AssetDepositType assetType;\n        address asset;\n    }\n\n    struct Deposits {\n        address lp;\n        uint256 amount;\n        uint256 poolId;\n        uint256 dailyPayout;\n        CoverLib.Status status;\n        uint256 daysLeft;\n        uint256 startDate;\n        uint256 expiryDate;\n        uint256 accruedPayout;\n        CoverLib.DepositType pdt; // Vault deposit or normal pool deposit?\n    }\n\n    struct PoolInfo {\n        string poolName;\n        uint256 poolId;\n        uint256 dailyPayout;\n        uint256 depositAmount;\n        uint256 apy;\n        uint256 minPeriod;\n        uint256 tvl;\n        uint256 tcp; // Total claim paid to users\n        bool isActive; // Pool status to handle soft deletion\n        uint256 accruedPayout;\n    }\n\n    mapping(uint256 => mapping(uint256 => uint256)) vaultPercantageSplits; //vault id to pool id to the pool percentage split;\n    mapping(address => mapping(uint256 => mapping(CoverLib.DepositType => Deposits))) deposits;\n    mapping(uint256 => CoverLib.Cover[]) poolToCovers;\n    mapping(uint256 => CoverLib.Pool) public pools;\n    uint256 public poolCount;\n    address public governance;\n    ICover public ICoverContract;\n    IVault public IVaultContract;\n    IGov public IGovernanceContract;\n    IbqBTC public bqBTC;\n    address public bqBTCAddress;\n    address public coverContract;\n    address public vaultContract;\n    address public initialOwner;\n    address[] public participants;\n    mapping(address => uint256) public participation;\n\n    event Deposited(address indexed user, uint256 amount, string pool);\n    event Withdraw(address indexed user, uint256 amount, string pool);\n    event ClaimPaid(address indexed recipient, string pool, uint256 amount);\n    event PoolCreated(uint256 indexed id, string poolName);\n    event PoolUpdated(uint256 indexed poolId, uint256 apy, uint256 _minPeriod);\n    event ClaimAttempt(uint256, uint256, address);\n\n    constructor(address _initialOwner, address _bqBTC) Ownable(_initialOwner) {\n        initialOwner = _initialOwner;\n        bqBTC = IbqBTC(_bqBTC);\n        bqBTCAddress = _bqBTC;\n    }\n\n    function createPool(\n        uint256 poolId,\n        CoverLib.RiskType _riskType,\n        string memory _poolName,\n        uint256 _apy,\n        uint256 _minPeriod,\n        uint8 _leverage,\n        uint256 investmentarm,\n        CoverLib.AssetDepositType adt,\n        address asset\n    ) public onlyOwner {\n        require(\n            adt == CoverLib.AssetDepositType.Native || asset != address(0),\n            \"Wrong Asset for Deposit\"\n        );\n\n        poolCount += 1;\n        CoverLib.Pool storage newPool = pools[poolId];\n        newPool.id = poolId;\n        newPool.poolName = _poolName;\n        newPool.apy = _apy;\n        newPool.minPeriod = _minPeriod;\n        newPool.tvl = 0;\n        newPool.coverTvl = 0;\n        newPool.baseValue = 0;\n        newPool.isActive = true;\n        newPool.riskType = _riskType;\n        newPool.investmentArmPercent = investmentarm;\n        newPool.leverage = _leverage;\n        newPool.percentageSplitBalance = 100 - investmentarm;\n        newPool.assetType = adt;\n\n        emit PoolCreated(poolId, _poolName);\n    }\n\n    function updatePool(\n        uint256 _poolId,\n        uint256 _apy,\n        uint256 _minPeriod\n    ) public onlyOwner {\n        require(pools[_poolId].isActive, \"Pool does not exist or is inactive\");\n        require(_apy > 0, \"Invalid APY\");\n        require(_minPeriod > 0, \"Invalid minimum period\");\n\n        pools[_poolId].apy = _apy;\n        pools[_poolId].minPeriod = _minPeriod;\n\n        emit PoolUpdated(_poolId, _apy, _minPeriod);\n    }\n\n    function reducePercentageSplit(\n        uint256 _poolId,\n        uint256 __poolPercentageSplit\n    ) public onlyCover {\n        pools[_poolId].percentageSplitBalance -= __poolPercentageSplit;\n    }\n\n    function increasePercentageSplit(\n        uint256 _poolId,\n        uint256 __poolPercentageSplit\n    ) public onlyCover {\n        pools[_poolId].percentageSplitBalance += __poolPercentageSplit;\n    }\n\n    function deactivatePool(uint256 _poolId) public onlyOwner {\n        require(pools[_poolId].isActive, \"Pool is not active\");\n        pools[_poolId].isActive = false;\n    }\n\n    function getPool(\n        uint256 _poolId\n    ) public view returns (CoverLib.Pool memory) {\n        return pools[_poolId];\n    }\n\n    function getAllPools() public view returns (CoverLib.Pool[] memory) {\n        CoverLib.Pool[] memory result = new CoverLib.Pool[](poolCount);\n        for (uint256 i = 1; i <= poolCount; i++) {\n            CoverLib.Pool storage pool = pools[i];\n            result[i - 1] = CoverLib.Pool({\n                id: i,\n                poolName: pool.poolName,\n                riskType: pool.riskType,\n                apy: pool.apy,\n                minPeriod: pool.minPeriod,\n                tvl: pool.tvl,\n                baseValue: pool.baseValue,\n                coverTvl: pool.coverTvl,\n                tcp: pool.tcp,\n                isActive: pool.isActive,\n                percentageSplitBalance: pool.percentageSplitBalance,\n                investmentArmPercent: pool.investmentArmPercent,\n                leverage: pool.leverage,\n                asset: pool.asset,\n                assetType: pool.assetType\n            });\n        }\n        return result;\n    }\n\n    function updatePoolCovers(\n        uint256 _poolId,\n        CoverLib.Cover memory _cover\n    ) public onlyCover {\n        for (uint i = 0; i < poolToCovers[_poolId].length; i++) {\n            if (poolToCovers[_poolId][i].id == _cover.id) {\n                poolToCovers[_poolId][i] = _cover;\n                break;\n            }\n        }\n    }\n\n    function addPoolCover(\n        uint256 _poolId,\n        CoverLib.Cover memory _cover\n    ) public onlyCover {\n        poolToCovers[_poolId].push(_cover);\n    }\n\n    function getPoolCovers(\n        uint256 _poolId\n    ) public view returns (CoverLib.Cover[] memory) {\n        return poolToCovers[_poolId];\n    }\n\n    function getPoolsByAddress(\n        address _userAddress\n    ) public view returns (PoolInfo[] memory) {\n        uint256 resultCount = 0;\n        for (uint256 i = 1; i <= poolCount; i++) {\n            if (\n                deposits[_userAddress][i][CoverLib.DepositType.Normal].amount >\n                0\n            ) {\n                resultCount++;\n            }\n        }\n\n        PoolInfo[] memory result = new PoolInfo[](resultCount);\n\n        uint256 resultIndex = 0;\n\n        for (uint256 i = 1; i <= poolCount; i++) {\n            CoverLib.Pool storage pool = pools[i];\n            Deposits memory userDeposit = deposits[_userAddress][i][\n                CoverLib.DepositType.Normal\n            ];\n            uint256 claimableDays = ICoverContract.getDepositClaimableDays(\n                _userAddress,\n                i\n            );\n            uint256 accruedPayout = userDeposit.dailyPayout * claimableDays;\n            if (\n                deposits[_userAddress][i][CoverLib.DepositType.Normal].amount >\n                0\n            ) {\n                result[resultIndex++] = PoolInfo({\n                    poolName: pool.poolName,\n                    poolId: i,\n                    dailyPayout: deposits[_userAddress][i][\n                        CoverLib.DepositType.Normal\n                    ].dailyPayout,\n                    depositAmount: deposits[_userAddress][i][\n                        CoverLib.DepositType.Normal\n                    ].amount,\n                    apy: pool.apy,\n                    minPeriod: pool.minPeriod,\n                    tvl: pool.tvl,\n                    tcp: pool.tcp,\n                    isActive: pool.isActive,\n                    accruedPayout: accruedPayout\n                });\n            }\n        }\n        return result;\n    }\n\n    function poolWithdraw(uint256 _poolId) public nonReentrant {\n        CoverLib.Pool storage selectedPool = pools[_poolId];\n        Deposits storage userDeposit = deposits[msg.sender][_poolId][\n            CoverLib.DepositType.Normal\n        ];\n\n        require(userDeposit.amount > 0, \"No deposit found for this address\");\n        require(\n            userDeposit.status == CoverLib.Status.Active,\n            \"Deposit is not active\"\n        );\n        require(\n            block.timestamp >= userDeposit.expiryDate,\n            \"Deposit period has not ended\"\n        );\n\n        userDeposit.status = CoverLib.Status.Withdrawn;\n        selectedPool.tvl -= userDeposit.amount;\n        uint256 baseValue = selectedPool.tvl -\n            ((selectedPool.investmentArmPercent * selectedPool.tvl) / 100);\n\n        uint256 coverTvl = baseValue * selectedPool.leverage;\n        selectedPool.coverTvl = coverTvl;\n        selectedPool.baseValue = baseValue;\n        CoverLib.Cover[] memory poolCovers = getPoolCovers(_poolId);\n        for (uint i = 0; i < poolCovers.length; i++) {\n            ICoverContract.updateMaxAmount(poolCovers[i].id);\n        }\n\n        if (selectedPool.assetType == CoverLib.AssetDepositType.ERC20) {\n            bool success = IERC20(selectedPool.asset).transfer(\n                msg.sender,\n                userDeposit.amount\n            );\n            require(success, \"ERC20 transfer failed\");\n        } else {\n            (bool success, ) = msg.sender.call{value: userDeposit.amount}(\"\");\n            require(success, \"Native asset transfer failed\");\n        }\n\n        emit Withdraw(msg.sender, userDeposit.amount, selectedPool.poolName);\n    }\n\n    function withdrawUpdate(\n        address depositor,\n        uint256 _poolId,\n        CoverLib.DepositType pdt\n    ) public nonReentrant onlyVault {\n        CoverLib.Pool storage selectedPool = pools[_poolId];\n        Deposits storage userDeposit = deposits[depositor][_poolId][pdt];\n\n        require(userDeposit.amount > 0, \"No deposit found for this address\");\n        require(\n            userDeposit.status == CoverLib.Status.Active,\n            \"Deposit is not active\"\n        );\n        require(\n            block.timestamp >= userDeposit.expiryDate,\n            \"Deposit period has not ended\"\n        );\n\n        userDeposit.status = CoverLib.Status.Due;\n        selectedPool.tvl -= userDeposit.amount;\n        uint256 baseValue = selectedPool.tvl -\n            ((selectedPool.investmentArmPercent * selectedPool.tvl) / 100);\n\n        uint256 coverTvl = baseValue * selectedPool.leverage;\n        selectedPool.coverTvl = coverTvl;\n        selectedPool.baseValue = baseValue;\n        CoverLib.Cover[] memory poolCovers = getPoolCovers(_poolId);\n        for (uint i = 0; i < poolCovers.length; i++) {\n            ICoverContract.updateMaxAmount(poolCovers[i].id);\n        }\n\n        emit Withdraw(depositor, userDeposit.amount, selectedPool.poolName);\n    }\n\n    function vaultWithdraw(uint256 _vaultId) public nonReentrant {\n        IVault.VaultDeposit memory userVaultDeposit = IVaultContract\n            .getUserVaultDeposit(_vaultId, msg.sender);\n        require(userVaultDeposit.amount > 0, \"No active withdrawal for user\");\n        IVault.Vault memory vault = IVaultContract.getVault(_vaultId);\n        CoverLib.AssetDepositType adt = vault.assetType;\n        if (adt == CoverLib.AssetDepositType.ERC20) {\n            bool success = IERC20(vault.asset).transfer(\n                msg.sender,\n                userVaultDeposit.amount\n            );\n            require(success, \"ERC20 transfer failed\");\n        } else {\n            (bool success, ) = msg.sender.call{value: userVaultDeposit.amount}(\n                \"\"\n            );\n            require(success, \"Native asset transfer failed\");\n        }\n\n        IVaultContract.getUserVaultDeposit(_vaultId, msg.sender);\n    }\n\n    function deposit(\n        CoverLib.DepositParams memory depositParam\n    ) public payable nonReentrant returns (uint256, uint256) {\n        CoverLib.Pool storage selectedPool = pools[depositParam.poolId];\n\n        require(selectedPool.isActive, \"Pool is inactive or does not exist\");\n        require(\n            selectedPool.assetType == depositParam.adt,\n            \"Pool does not accept this deposit type\"\n        );\n        require(\n            depositParam.period <= selectedPool.minPeriod,\n            \"Period too short\"\n        );\n        require(\n            selectedPool.asset == depositParam.asset,\n            \"Pool does not accept this asset\"\n        );\n        require(\n            deposits[depositParam.depositor][depositParam.poolId][\n                depositParam.pdt\n            ].amount == 0,\n            \"User has already deposited into this pool\"\n        );\n\n        uint256 price;\n\n        if (selectedPool.assetType == CoverLib.AssetDepositType.ERC20) {\n            require(depositParam.amount > 0, \"Amount must be greater than 0\");\n            IERC20(depositParam.asset).transferFrom(\n                depositParam.depositor,\n                address(this),\n                depositParam.amount\n            );\n            selectedPool.tvl += depositParam.amount;\n            price = depositParam.amount;\n        } else {\n            require(msg.value > 0, \"Deposit cannot be zero\");\n            selectedPool.tvl += msg.value;\n            price = msg.value;\n        }\n\n        uint256 baseValue = selectedPool.tvl -\n            ((selectedPool.investmentArmPercent * selectedPool.tvl) / 100);\n\n        uint256 coverTvl = baseValue * selectedPool.leverage;\n\n        selectedPool.coverTvl = coverTvl;\n        selectedPool.baseValue = baseValue;\n\n        uint256 dailyPayout = (price * selectedPool.apy) / 100 / 365;\n        Deposits memory userDeposit = Deposits({\n            lp: depositParam.depositor,\n            amount: price,\n            poolId: depositParam.poolId,\n            dailyPayout: dailyPayout,\n            status: CoverLib.Status.Active,\n            daysLeft: depositParam.period,\n            startDate: block.timestamp,\n            expiryDate: block.timestamp + (depositParam.period * 1 days),\n            accruedPayout: 0,\n            pdt: depositParam.pdt\n        });\n\n        if (depositParam.pdt == CoverLib.DepositType.Normal) {\n            deposits[depositParam.depositor][depositParam.poolId][\n                CoverLib.DepositType.Normal\n            ] = userDeposit;\n        } else {\n            deposits[depositParam.depositor][depositParam.poolId][\n                CoverLib.DepositType.Vault\n            ] = userDeposit;\n        }\n\n        CoverLib.Cover[] memory poolCovers = getPoolCovers(depositParam.poolId);\n        for (uint i = 0; i < poolCovers.length; i++) {\n            ICoverContract.updateMaxAmount(poolCovers[i].id);\n        }\n\n        bool userExists = false;\n        for (uint i = 0; i < participants.length; i++) {\n            if (participants[i] == depositParam.depositor) {\n                userExists = true;\n                break;\n            }\n        }\n\n        if (!userExists) {\n            participants.push(depositParam.depositor);\n        }\n\n        participation[depositParam.depositor] += 1;\n\n        emit Deposited(\n            depositParam.depositor,\n            depositParam.amount,\n            selectedPool.poolName\n        );\n\n        return (price, dailyPayout);\n    }\n\n    function claimProposalFunds(uint256 _proposalId) public nonReentrant {\n        IGov.Proposal memory proposal = IGovernanceContract.getProposalDetails(\n            _proposalId\n        );\n        IGov.ProposalParams memory proposalParam = proposal.proposalParam;\n        require(\n            proposal.status == IGov.ProposalStaus.Approved && proposal.executed,\n            \"Proposal not approved\"\n        );\n        CoverLib.Pool storage pool = pools[proposalParam.poolId];\n        require(msg.sender == proposalParam.user, \"Not a valid proposal\");\n        require(pool.isActive, \"Pool is not active\");\n        require(\n            pool.tvl >= proposalParam.claimAmount,\n            \"Not enough funds in the pool\"\n        );\n\n        pool.tcp += proposalParam.claimAmount;\n        pool.tvl -= proposalParam.claimAmount;\n        CoverLib.Cover[] memory poolCovers = getPoolCovers(\n            proposalParam.poolId\n        );\n        for (uint i = 0; i < poolCovers.length; i++) {\n            ICoverContract.updateMaxAmount(poolCovers[i].id);\n        }\n\n        IGovernanceContract.updateProposalStatusToClaimed(_proposalId);\n\n        emit ClaimAttempt(\n            proposalParam.poolId,\n            proposalParam.claimAmount,\n            proposalParam.user\n        );\n\n        bqBTC.bqMint(msg.sender, proposalParam.claimAmount);\n\n        emit ClaimPaid(msg.sender, pool.poolName, proposalParam.claimAmount);\n    }\n\n    function getUserDeposit(\n        uint256 _poolId,\n        address _user\n    ) public view returns (Deposits memory) {\n        Deposits memory userDeposit = deposits[_user][_poolId][\n            CoverLib.DepositType.Normal\n        ];\n        uint256 claimTime = ICoverContract.getLastClaimTime(_user, _poolId);\n        uint lastClaimTime;\n        if (claimTime == 0) {\n            lastClaimTime = userDeposit.startDate;\n        } else {\n            lastClaimTime = claimTime;\n        }\n        uint256 currentTime = block.timestamp;\n        if (currentTime > userDeposit.expiryDate) {\n            currentTime = userDeposit.expiryDate;\n        }\n        uint256 claimableDays = (currentTime - lastClaimTime) / 5 minutes;\n        userDeposit.accruedPayout = userDeposit.dailyPayout * claimableDays;\n        if (userDeposit.expiryDate <= block.timestamp) {\n            userDeposit.daysLeft = 0;\n        } else {\n            uint256 timeLeft = userDeposit.expiryDate - block.timestamp;\n            userDeposit.daysLeft = (timeLeft + 1 days - 1) / 1 days;\n        }\n        return userDeposit;\n    }\n\n    function getPoolTVL(uint256 _poolId) public view returns (uint256) {\n        return pools[_poolId].tvl;\n    }\n\n    function poolActive(uint256 poolId) public view returns (bool) {\n        CoverLib.Pool storage pool = pools[poolId];\n        return pool.isActive;\n    }\n\n    function getAllParticipants() public view returns (address[] memory) {\n        return participants;\n    }\n\n    function getUserParticipation(address user) public view returns (uint256) {\n        return participation[user];\n    }\n\n    function setGovernance(address _governance) external onlyOwner {\n        require(governance == address(0), \"Governance already set\");\n        require(_governance != address(0), \"Governance address cannot be zero\");\n        governance = _governance;\n        IGovernanceContract = IGov(_governance);\n    }\n\n    function setCover(address _coverContract) external onlyOwner {\n        require(coverContract == address(0), \"Cover already set\");\n        require(_coverContract != address(0), \"Cover address cannot be zero\");\n        ICoverContract = ICover(_coverContract);\n        coverContract = _coverContract;\n    }\n\n    function setVault(address _vaultContract) external onlyOwner {\n        require(vaultContract == address(0), \"Vault already set\");\n        require(_vaultContract != address(0), \"Vault address cannot be zero\");\n        IVaultContract = IVault(_vaultContract);\n        coverContract = _vaultContract;\n    }\n\n    modifier onlyGovernance() {\n        require(\n            msg.sender == governance || msg.sender == initialOwner,\n            \"Caller is not the governance contract\"\n        );\n        _;\n    }\n\n    modifier onlyCover() {\n        require(\n            msg.sender == coverContract || msg.sender == initialOwner,\n            \"Caller is not the cover contract\"\n        );\n        _;\n    }\n\n    modifier onlyVault() {\n        require(\n            msg.sender == vaultContract || msg.sender == initialOwner,\n            \"Caller is not the vault contract\"\n        );\n        _;\n    }\n}\n"},"contracts/Vaults.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./CoverLib.sol\";\r\n\r\ninterface ICover {\r\n    function updateMaxAmount(uint256 _coverId) external;\r\n    function getDepositClaimableDays(\r\n        address user,\r\n        uint256 _poolId\r\n    ) external view returns (uint256);\r\n    function getLastClaimTime(\r\n        address user,\r\n        uint256 _poolId\r\n    ) external view returns (uint256);\r\n}\r\n\r\ninterface IbqBTC {\r\n    function bqMint(address account, uint256 amount) external;\r\n    function burn(address account, uint256 amount) external;\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\ninterface IPool {\r\n    function deposit(\r\n        CoverLib.DepositParams memory depositParam\r\n    ) external payable returns (uint256, uint256);\r\n\r\n    function withdrawUpdate(\r\n        address depositor,\r\n        uint256 _poolId,\r\n        CoverLib.DepositType pdt\r\n    ) external;\r\n    function updateVaultWithdrawToDue(\r\n        address user,\r\n        uint256 vaultId,\r\n        uint256 amount\r\n    ) external;\r\n\r\n    function getPool(\r\n        uint256 _poolId\r\n    ) external view returns (CoverLib.Pool memory);\r\n}\r\n\r\ninterface IGov {\r\n    struct ProposalParams {\r\n        address user;\r\n        CoverLib.RiskType riskType;\r\n        uint256 coverId;\r\n        string txHash;\r\n        string description;\r\n        uint256 poolId;\r\n        uint256 claimAmount;\r\n    }\r\n\r\n    struct Proposal {\r\n        uint256 id;\r\n        uint256 votesFor;\r\n        uint256 votesAgainst;\r\n        uint256 createdAt;\r\n        uint256 deadline;\r\n        uint256 timeleft;\r\n        ProposalStaus status;\r\n        bool executed;\r\n        ProposalParams proposalParam;\r\n    }\r\n\r\n    enum ProposalStaus {\r\n        Submitted,\r\n        Pending,\r\n        Approved,\r\n        Claimed,\r\n        Rejected\r\n    }\r\n\r\n    function getProposalDetails(\r\n        uint256 _proposalId\r\n    ) external returns (Proposal memory);\r\n    function updateProposalStatusToClaimed(uint256 proposalId) external;\r\n}\r\n\r\ncontract Vaults is ReentrancyGuard, Ownable {\r\n    using CoverLib for *;\r\n\r\n    struct Vault {\r\n        uint256 id;\r\n        string vaultName;\r\n        CoverLib.Pool[] pools;\r\n        uint256 minInv;\r\n        uint256 maxInv;\r\n        uint256 minPeriod;\r\n        CoverLib.AssetDepositType assetType;\r\n        address asset;\r\n    }\r\n\r\n    struct Deposits {\r\n        address lp;\r\n        uint256 amount;\r\n        uint256 poolId;\r\n        uint256 dailyPayout;\r\n        CoverLib.Status status;\r\n        uint256 daysLeft;\r\n        uint256 startDate;\r\n        uint256 expiryDate;\r\n        uint256 accruedPayout;\r\n    }\r\n\r\n    struct VaultDeposit {\r\n        address lp;\r\n        uint256 amount;\r\n        uint256 vaultId;\r\n        uint256 dailyPayout;\r\n        CoverLib.Status status;\r\n        uint256 daysLeft;\r\n        uint256 startDate;\r\n        uint256 expiryDate;\r\n        uint256 accruedPayout;\r\n    }\r\n\r\n    struct PoolInfo {\r\n        string poolName;\r\n        uint256 poolId;\r\n        uint256 dailyPayout;\r\n        uint256 depositAmount;\r\n        uint256 apy;\r\n        uint256 minPeriod;\r\n        uint256 tvl;\r\n        uint256 tcp; // Total claim paid to users\r\n        bool isActive; // Pool status to handle soft deletion\r\n        uint256 accruedPayout;\r\n    }\r\n\r\n    mapping(uint256 => mapping(uint256 => uint256)) vaultPercentageSplits; //vault id to pool id to the pool percentage split;\r\n    mapping(uint256 => Vault) vaults;\r\n    mapping(address => mapping(uint256 => mapping(CoverLib.DepositType => Deposits))) deposits;\r\n    mapping(address => mapping(uint256 => VaultDeposit)) userVaultDeposits;\r\n    uint256 public vaultCount;\r\n    address public governance;\r\n    ICover public ICoverContract;\r\n    IPool public IPoolContract;\r\n    IGov public IGovernanceContract;\r\n    IbqBTC public bqBTC;\r\n    address public poolContract;\r\n    address public bqBTCAddress;\r\n    address public coverContract;\r\n    address public initialOwner;\r\n    address[] public participants;\r\n    mapping(address => uint256) public participation;\r\n\r\n    event Deposited(address indexed user, uint256 amount, string pool);\r\n    event Withdraw(address indexed user, uint256 amount, string pool);\r\n    event ClaimPaid(address indexed recipient, string pool, uint256 amount);\r\n    event PoolCreated(uint256 indexed id, string poolName);\r\n    event PoolUpdated(uint256 indexed poolId, uint256 apy, uint256 _minPeriod);\r\n    event ClaimAttempt(uint256, uint256, address);\r\n\r\n    constructor(address _initialOwner, address _bqBTC) Ownable(_initialOwner) {\r\n        initialOwner = _initialOwner;\r\n        bqBTC = IbqBTC(_bqBTC);\r\n        bqBTCAddress = _bqBTC;\r\n    }\r\n\r\n    function createVault(\r\n        string memory _vaultName,\r\n        uint256[] memory _poolIds,\r\n        uint256[] memory poolPercentageSplit,\r\n        uint256 _minInv,\r\n        uint256 _maxInv,\r\n        uint256 _minPeriod,\r\n        CoverLib.AssetDepositType adt,\r\n        address asset\r\n    ) public onlyOwner {\r\n        require(\r\n            _poolIds.length == poolPercentageSplit.length,\r\n            \"Mismatched pool IDs and percentages\"\r\n        );\r\n        require(\r\n            adt == CoverLib.AssetDepositType.Native || asset != address(0),\r\n            \"Invalid asset for deposit type\"\r\n        );\r\n\r\n        vaultCount += 1;\r\n        Vault storage vault = vaults[vaultCount];\r\n        vault.id = vaultCount;\r\n        vault.vaultName = _vaultName;\r\n        vault.minInv = _minInv;\r\n        vault.maxInv = _maxInv;\r\n        vault.assetType = adt;\r\n        vault.asset = asset;\r\n\r\n        (uint256 percentageSplit, uint256 minPeriod) = validateAndSetPools(\r\n            vault,\r\n            _poolIds,\r\n            poolPercentageSplit,\r\n            adt\r\n        );\r\n\r\n        require(\r\n            _minPeriod >= minPeriod,\r\n            \"Minimun period must be greater than or equal to the minimum period of all pools within the vault\"\r\n        );\r\n        vault.minPeriod = _minPeriod;\r\n\r\n        require(percentageSplit == 100, \"Total split must equal 100%\");\r\n    }\r\n\r\n    function initialVaultWithdraw(uint256 _vaultId) public nonReentrant {\r\n        VaultDeposit storage userVaultDeposit = userVaultDeposits[msg.sender][\r\n            _vaultId\r\n        ];\r\n        require(\r\n            userVaultDeposit.amount > 0,\r\n            \"No deposit found for this address\"\r\n        );\r\n        require(\r\n            userVaultDeposit.status == CoverLib.Status.Active,\r\n            \"Deposit is not active\"\r\n        );\r\n        require(\r\n            block.timestamp >= userVaultDeposit.expiryDate,\r\n            \"Deposit period has not ended\"\r\n        );\r\n        Vault memory vault = vaults[_vaultId];\r\n        for (uint256 i = 0; i < vault.pools.length; i++) {\r\n            uint256 poolId = vault.pools[i].id;\r\n            IPoolContract.withdrawUpdate(\r\n                msg.sender,\r\n                poolId,\r\n                CoverLib.DepositType.Vault\r\n            );\r\n        }\r\n\r\n        userVaultDeposit.status = CoverLib.Status.Due;\r\n\r\n        emit Withdraw(msg.sender, userVaultDeposit.amount, vault.vaultName);\r\n    }\r\n\r\n    function vaultDeposit(\r\n        uint256 _vaultId,\r\n        uint256 _amount,\r\n        uint256 _period\r\n    ) public payable nonReentrant {\r\n        Vault memory vault = vaults[_vaultId];\r\n        require(\r\n            _period >= vault.minPeriod,\r\n            \"Period cannot be less than the vault min period\"\r\n        );\r\n        uint256 totalDailyPayout = 0;\r\n        uint256 totalAmount = 0;\r\n        for (uint256 i = 0; i < vault.pools.length; i++) {\r\n            uint256 poolId = vault.pools[i].id;\r\n            CoverLib.DepositParams memory depositParam = CoverLib\r\n                .DepositParams({\r\n                    depositor: msg.sender,\r\n                    poolId: poolId,\r\n                    amount: _amount,\r\n                    period: _period,\r\n                    pdt: CoverLib.DepositType.Vault,\r\n                    adt: vault.assetType,\r\n                    asset: vault.asset\r\n                });\r\n            (uint256 amount, uint256 dailyPayout) = IPoolContract.deposit{\r\n                value: msg.value\r\n            }(depositParam);\r\n            totalDailyPayout += dailyPayout;\r\n            totalAmount += amount;\r\n        }\r\n\r\n        VaultDeposit memory userDeposit = VaultDeposit({\r\n            lp: msg.sender,\r\n            amount: totalAmount,\r\n            vaultId: _vaultId,\r\n            dailyPayout: totalDailyPayout,\r\n            status: CoverLib.Status.Active,\r\n            daysLeft: _period,\r\n            startDate: block.timestamp,\r\n            expiryDate: block.timestamp + (_period * 1 days),\r\n            accruedPayout: 0\r\n        });\r\n        userVaultDeposits[msg.sender][_vaultId] = userDeposit;\r\n        emit Deposited(msg.sender, _amount, vault.vaultName);\r\n    }\r\n\r\n    function validateAndSetPools(\r\n        Vault storage vault,\r\n        uint256[] memory _poolIds,\r\n        uint256[] memory poolPercentageSplit,\r\n        CoverLib.AssetDepositType adt\r\n    ) internal returns (uint256 percentageSplit, uint256 minPeriod) {\r\n        minPeriod = 365;\r\n        for (uint256 i = 0; i < _poolIds.length; i++) {\r\n            CoverLib.Pool memory pool = IPoolContract.getPool(_poolIds[i]);\r\n            require(pool.assetType == adt, \"Incompatible asset type in pool\");\r\n            percentageSplit += poolPercentageSplit[i];\r\n            vaultPercentageSplits[vault.id][_poolIds[i]] = poolPercentageSplit[\r\n                i\r\n            ];\r\n            vault.pools.push(pool);\r\n            if (pool.minPeriod < minPeriod) {\r\n                minPeriod = pool.minPeriod;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getVault(uint256 vaultId) public view returns (Vault memory) {\r\n        return vaults[vaultId];\r\n    }\r\n\r\n    function getVaultPools(\r\n        uint256 vaultId\r\n    ) public view returns (CoverLib.Pool[] memory) {\r\n        return vaults[vaultId].pools;\r\n    }\r\n\r\n    function getUserVaultPoolDeposits(\r\n        uint256 vaultId,\r\n        address user\r\n    ) public view returns (Deposits[] memory) {\r\n        Vault memory vault = vaults[vaultId];\r\n        Deposits[] memory vaultDeposits = new Deposits[](vault.pools.length);\r\n        for (uint256 i = 0; i < vault.pools.length; i++) {\r\n            uint256 poolId = vault.pools[i].id;\r\n            vaultDeposits[i] = deposits[user][poolId][\r\n                CoverLib.DepositType.Vault\r\n            ];\r\n        }\r\n\r\n        return vaultDeposits;\r\n    }\r\n\r\n    function getUserVaultDeposit(\r\n        uint256 vaultId,\r\n        address user\r\n    ) public view returns (VaultDeposit memory) {\r\n        return userVaultDeposits[user][vaultId];\r\n    }\r\n\r\n    function setUserVaultDepositToZero(\r\n        uint256 vaultId,\r\n        address user\r\n    ) public nonReentrant onlyPool {\r\n        userVaultDeposits[user][vaultId].amount = 0;\r\n    }\r\n\r\n    function getVaults() public view returns (Vault[] memory) {\r\n        Vault[] memory allVaults = new Vault[](vaultCount);\r\n        for (uint256 i = 1; i <= vaultCount; i++) {\r\n            allVaults[i - 1] = vaults[i];\r\n        }\r\n\r\n        return allVaults;\r\n    }\r\n\r\n    function setGovernance(address _governance) external onlyOwner {\r\n        require(governance == address(0), \"Governance already set\");\r\n        require(_governance != address(0), \"Governance address cannot be zero\");\r\n        governance = _governance;\r\n        IGovernanceContract = IGov(_governance);\r\n    }\r\n\r\n    function setCover(address _coverContract) external onlyOwner {\r\n        require(coverContract == address(0), \"Governance already set\");\r\n        require(\r\n            _coverContract != address(0),\r\n            \"Governance address cannot be zero\"\r\n        );\r\n        ICoverContract = ICover(_coverContract);\r\n        coverContract = _coverContract;\r\n    }\r\n\r\n    modifier onlyGovernance() {\r\n        require(\r\n            msg.sender == governance || msg.sender == initialOwner,\r\n            \"Caller is not the governance contract\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyCover() {\r\n        require(\r\n            msg.sender == coverContract || msg.sender == initialOwner,\r\n            \"Caller is not the governance contract\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyPool() {\r\n        require(\r\n            msg.sender == poolContract || msg.sender == initialOwner,\r\n            \"Caller is not the governance contract\"\r\n        );\r\n        _;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[255],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":256,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,255],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[225]},"id":226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"132:71:1","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":225,"linearizedBaseContracts":[225],"name":"IERC20","nameLocation":"214:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"227:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":159,"name":"Transfer","nameLocation":"396:8:1","nodeType":"EventDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:1","nodeType":"VariableDeclaration","scope":159,"src":"405:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:1","nodeType":"VariableDeclaration","scope":159,"src":"427:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:1","nodeType":"VariableDeclaration","scope":159,"src":"447:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:1"},"src":"390:72:1"},{"anonymous":false,"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"468:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":168,"name":"Approval","nameLocation":"627:8:1","nodeType":"EventDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:1","nodeType":"VariableDeclaration","scope":168,"src":"636:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:1","nodeType":"VariableDeclaration","scope":168,"src":"659:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:1","nodeType":"VariableDeclaration","scope":168,"src":"684:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:1"},"src":"621:78:1"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"705:65:1","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":174,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"795:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":174,"src":"821:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:1"},"scope":225,"src":"775:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"836:71:1","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":182,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":182,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":225,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"986:213:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"1230:2:1","nodeType":"VariableDeclaration","scope":192,"src":"1222:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"1242:5:1","nodeType":"VariableDeclaration","scope":192,"src":"1234:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"1267:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:1"},"scope":225,"src":"1204:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1279:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:1","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"owner","nameLocation":"1575:5:1","nodeType":"VariableDeclaration","scope":202,"src":"1567:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1590:7:1","nodeType":"VariableDeclaration","scope":202,"src":"1582:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:1"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"1622:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:1"},"scope":225,"src":"1548:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"1637:667:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":212,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"spender","nameLocation":"2334:7:1","nodeType":"VariableDeclaration","scope":212,"src":"2326:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"value","nameLocation":"2351:5:1","nodeType":"VariableDeclaration","scope":212,"src":"2343:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"2376:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":209,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:1"},"scope":225,"src":"2309:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"2388:297:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"from","nameLocation":"2720:4:1","nodeType":"VariableDeclaration","scope":224,"src":"2712:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"to","nameLocation":"2734:2:1","nodeType":"VariableDeclaration","scope":224,"src":"2726:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"value","nameLocation":"2746:5:1","nodeType":"VariableDeclaration","scope":224,"src":"2738:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2771:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":221,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:1"},"scope":225,"src":"2690:87:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":226,"src":"204:2575:1","usedErrors":[],"usedEvents":[159,168]}],"src":"106:2674:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[255]},"id":256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":227,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"127:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":255,"linearizedBaseContracts":[255],"name":"Context","nameLocation":"642:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":236,"nodeType":"Block","src":"718:34:2","statements":[{"expression":{"expression":{"id":233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:2","memberName":"sender","nodeType":"MemberAccess","src":"735:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":232,"id":235,"nodeType":"Return","src":"728:17:2"}]},"id":237,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:2","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[],"src":"675:2:2"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:2"},"scope":255,"src":"656:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":245,"nodeType":"Block","src":"825:32:2","statements":[{"expression":{"expression":{"id":242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:2","memberName":"data","nodeType":"MemberAccess","src":"842:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":241,"id":244,"nodeType":"Return","src":"835:15:2"}]},"id":246,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"775:2:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":246,"src":"809:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":239,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:2"},"scope":255,"src":"758:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":253,"nodeType":"Block","src":"935:25:2","statements":[{"expression":{"hexValue":"30","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":250,"id":252,"nodeType":"Return","src":"945:8:2"}]},"id":254,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:2","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"892:2:2"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:2"},"scope":255,"src":"863:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":256,"src":"624:338:2","usedErrors":[],"usedEvents":[]}],"src":"101:862:2"},"id":2},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[307]},"id":308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":257,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"125:489:3","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":307,"linearizedBaseContracts":[307],"name":"Panic","nameLocation":"665:5:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"677:36:3","text":"@dev generic / unspecified error"},"id":262,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:3","nodeType":"VariableDeclaration","scope":307,"src":"718:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"764:37:3","text":"@dev used by the assert() builtin"},"id":266,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:3","nodeType":"VariableDeclaration","scope":307,"src":"806:39:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"851:41:3","text":"@dev arithmetic underflow or overflow"},"id":270,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:3","nodeType":"VariableDeclaration","scope":307,"src":"897:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:3","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"950:35:3","text":"@dev division or modulo by zero"},"id":274,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:3","nodeType":"VariableDeclaration","scope":307,"src":"990:49:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"1045:30:3","text":"@dev enum conversion error"},"id":278,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:3","nodeType":"VariableDeclaration","scope":307,"src":"1080:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:3","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"1140:36:3","text":"@dev invalid encoding in storage"},"id":282,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:3","nodeType":"VariableDeclaration","scope":307,"src":"1181:55:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:3","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"1242:24:3","text":"@dev empty array pop"},"id":286,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:3","nodeType":"VariableDeclaration","scope":307,"src":"1271:48:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"1325:35:3","text":"@dev array out of bounds access"},"id":290,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:3","nodeType":"VariableDeclaration","scope":307,"src":"1365:52:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"1423:65:3","text":"@dev resource error (too large allocation or too large array)"},"id":294,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:3","nodeType":"VariableDeclaration","scope":307,"src":"1493:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:3","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"1546:42:3","text":"@dev calling invalid internal function"},"id":298,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:3","nodeType":"VariableDeclaration","scope":307,"src":"1593:58:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:3","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"1819:151:3","statements":[{"AST":{"nativeSrc":"1854:110:3","nodeType":"YulBlock","src":"1854:110:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:3","nodeType":"YulLiteral","src":"1875:4:3","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:3","nodeType":"YulLiteral","src":"1881:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:3","nodeType":"YulIdentifier","src":"1868:6:3"},"nativeSrc":"1868:24:3","nodeType":"YulFunctionCall","src":"1868:24:3"},"nativeSrc":"1868:24:3","nodeType":"YulExpressionStatement","src":"1868:24:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:3","nodeType":"YulLiteral","src":"1912:4:3","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:3","nodeType":"YulIdentifier","src":"1918:4:3"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:3","nodeType":"YulIdentifier","src":"1905:6:3"},"nativeSrc":"1905:18:3","nodeType":"YulFunctionCall","src":"1905:18:3"},"nativeSrc":"1905:18:3","nodeType":"YulExpressionStatement","src":"1905:18:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:3","nodeType":"YulLiteral","src":"1943:4:3","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:3","nodeType":"YulLiteral","src":"1949:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:3","nodeType":"YulIdentifier","src":"1936:6:3"},"nativeSrc":"1936:18:3","nodeType":"YulFunctionCall","src":"1936:18:3"},"nativeSrc":"1936:18:3","nodeType":"YulExpressionStatement","src":"1936:18:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":301,"isOffset":false,"isSlot":false,"src":"1918:4:3","valueSize":1}],"flags":["memory-safe"],"id":304,"nodeType":"InlineAssembly","src":"1829:135:3"}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"1658:113:3","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":306,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:3","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"code","nameLocation":"1799:4:3","nodeType":"VariableDeclaration","scope":306,"src":"1791:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:3"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[],"src":"1819:0:3"},"scope":307,"src":"1776:194:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":308,"src":"657:1315:3","usedErrors":[],"usedEvents":[]}],"src":"99:1874:3"},"id":3},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[376]},"id":377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":309,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"135:894:4","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":376,"linearizedBaseContracts":[376],"name":"ReentrancyGuard","nameLocation":"1048:15:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":313,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:4","nodeType":"VariableDeclaration","scope":376,"src":"1818:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":316,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:4","nodeType":"VariableDeclaration","scope":376,"src":"1864:36:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":318,"mutability":"mutable","name":"_status","nameLocation":"1923:7:4","nodeType":"VariableDeclaration","scope":376,"src":"1907:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"1937:52:4","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":321,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:4","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"2028:2:4"},"src":"1994:37:4"},{"body":{"id":328,"nodeType":"Block","src":"2051:38:4","statements":[{"expression":{"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":324,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2061:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":325,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"2071:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":327,"nodeType":"ExpressionStatement","src":"2061:21:4"}]},"id":329,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"2048:2:4"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"2051:0:4"},"scope":376,"src":"2037:52:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":339,"nodeType":"Block","src":"2490:79:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":332,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"2500:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":334,"nodeType":"ExpressionStatement","src":"2500:21:4"},{"id":335,"nodeType":"PlaceholderStatement","src":"2531:1:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":336,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"2542:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"ExpressionStatement","src":"2542:20:4"}]},"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"2095:366:4","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":340,"name":"nonReentrant","nameLocation":"2475:12:4","nodeType":"ModifierDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[],"src":"2487:2:4"},"src":"2466:103:4","virtual":false,"visibility":"internal"},{"body":{"id":355,"nodeType":"Block","src":"2614:268:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2702:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":344,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2713:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":350,"nodeType":"IfStatement","src":"2698:86:4","trueBody":{"id":349,"nodeType":"Block","src":"2722:62:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":346,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2743:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":348,"nodeType":"RevertStatement","src":"2736:37:4"}]}},{"expression":{"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":351,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2858:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":352,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2868:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":354,"nodeType":"ExpressionStatement","src":"2858:17:4"}]},"id":356,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:4","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"2603:2:4"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"2614:0:4"},"scope":376,"src":"2575:307:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":363,"nodeType":"Block","src":"2926:170:4","statements":[{"expression":{"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":359,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3068:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":360,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3078:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":362,"nodeType":"ExpressionStatement","src":"3068:21:4"}]},"id":364,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:4","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[],"src":"2915:2:4"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[],"src":"2926:0:4"},"scope":376,"src":"2888:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":374,"nodeType":"Block","src":"3339:42:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":370,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3356:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":371,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"3367:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":369,"id":373,"nodeType":"Return","src":"3349:25:4"}]},"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"3102:168:4","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":375,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:4","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"3307:2:4"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"3333:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":367,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:4"},"scope":376,"src":"3275:106:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":377,"src":"1030:2353:4","usedErrors":[321],"usedEvents":[]}],"src":"109:3275:4"},"id":4},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1982],"Panic":[307],"SafeCast":[3747]},"id":1983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":378,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1983,"sourceUnit":308,"src":"129:35:5","symbolAliases":[{"foreign":{"id":379,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"137:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1983,"sourceUnit":3748,"src":"165:40:5","symbolAliases":[{"foreign":{"id":381,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"173:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"207:73:5","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1982,"linearizedBaseContracts":[1982],"name":"Math","nameLocation":"289:4:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":388,"members":[{"id":384,"name":"Floor","nameLocation":"324:5:5","nodeType":"EnumValue","src":"324:5:5"},{"id":385,"name":"Ceil","nameLocation":"367:4:5","nodeType":"EnumValue","src":"367:4:5"},{"id":386,"name":"Trunc","nameLocation":"409:5:5","nodeType":"EnumValue","src":"409:5:5"},{"id":387,"name":"Expand","nameLocation":"439:6:5","nodeType":"EnumValue","src":"439:6:5"}],"name":"Rounding","nameLocation":"305:8:5","nodeType":"EnumDefinition","src":"300:169:5"},{"body":{"id":419,"nodeType":"Block","src":"677:140:5","statements":[{"id":418,"nodeType":"UncheckedBlock","src":"687:124:5","statements":[{"assignments":[401],"declarations":[{"constant":false,"id":401,"mutability":"mutable","name":"c","nameLocation":"719:1:5","nodeType":"VariableDeclaration","scope":418,"src":"711:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":405,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"723:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"727:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":406,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"746:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"750:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"IfStatement","src":"742:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":399,"id":412,"nodeType":"Return","src":"753:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":415,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"798:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":399,"id":417,"nodeType":"Return","src":"784:16:5"}]}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"475:106:5","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:5","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"a","nameLocation":"610:1:5","nodeType":"VariableDeclaration","scope":420,"src":"602:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"b","nameLocation":"621:1:5","nodeType":"VariableDeclaration","scope":420,"src":"613:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:5"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"success","nameLocation":"652:7:5","nodeType":"VariableDeclaration","scope":420,"src":"647:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"result","nameLocation":"669:6:5","nodeType":"VariableDeclaration","scope":420,"src":"661:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:5"},"scope":1982,"src":"586:231:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":447,"nodeType":"Block","src":"1028:113:5","statements":[{"id":446,"nodeType":"UncheckedBlock","src":"1038:97:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"1066:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1070:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"1062:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":431,"id":438,"nodeType":"Return","src":"1073:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1118:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"1122:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":431,"id":445,"nodeType":"Return","src":"1104:20:5"}]}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"823:109:5","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":448,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:5","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"a","nameLocation":"961:1:5","nodeType":"VariableDeclaration","scope":448,"src":"953:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"b","nameLocation":"972:1:5","nodeType":"VariableDeclaration","scope":448,"src":"964:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:5"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"success","nameLocation":"1003:7:5","nodeType":"VariableDeclaration","scope":448,"src":"998:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":427,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"result","nameLocation":"1020:6:5","nodeType":"VariableDeclaration","scope":448,"src":"1012:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:5"},"scope":1982,"src":"937:204:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":489,"nodeType":"Block","src":"1355:417:5","statements":[{"id":488,"nodeType":"UncheckedBlock","src":"1365:401:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1623:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":467,"nodeType":"IfStatement","src":"1619:28:5","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":459,"id":466,"nodeType":"Return","src":"1631:16:5"}},{"assignments":[469],"declarations":[{"constant":false,"id":469,"mutability":"mutable","name":"c","nameLocation":"1669:1:5","nodeType":"VariableDeclaration","scope":488,"src":"1661:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":473,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1673:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":471,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"1677:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":474,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1696:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":475,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1700:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"1705:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":483,"nodeType":"IfStatement","src":"1692:33:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":459,"id":482,"nodeType":"Return","src":"1708:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":485,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1753:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":459,"id":487,"nodeType":"Return","src":"1739:16:5"}]}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"1147:112:5","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":490,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:5","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"a","nameLocation":"1288:1:5","nodeType":"VariableDeclaration","scope":490,"src":"1280:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"b","nameLocation":"1299:1:5","nodeType":"VariableDeclaration","scope":490,"src":"1291:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:5"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"success","nameLocation":"1330:7:5","nodeType":"VariableDeclaration","scope":490,"src":"1325:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":455,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"result","nameLocation":"1347:6:5","nodeType":"VariableDeclaration","scope":490,"src":"1339:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:5"},"scope":1982,"src":"1264:508:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":517,"nodeType":"Block","src":"1987:114:5","statements":[{"id":516,"nodeType":"UncheckedBlock","src":"1997:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2025:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":509,"nodeType":"IfStatement","src":"2021:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":501,"id":508,"nodeType":"Return","src":"2033:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"2078:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":512,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2082:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":501,"id":515,"nodeType":"Return","src":"2064:20:5"}]}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"1778:113:5","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":518,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:5","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"a","nameLocation":"1920:1:5","nodeType":"VariableDeclaration","scope":518,"src":"1912:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"b","nameLocation":"1931:1:5","nodeType":"VariableDeclaration","scope":518,"src":"1923:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:5"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"success","nameLocation":"1962:7:5","nodeType":"VariableDeclaration","scope":518,"src":"1957:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":500,"mutability":"mutable","name":"result","nameLocation":"1979:6:5","nodeType":"VariableDeclaration","scope":518,"src":"1971:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:5"},"scope":1982,"src":"1896:205:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":545,"nodeType":"Block","src":"2326:114:5","statements":[{"id":544,"nodeType":"UncheckedBlock","src":"2336:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":530,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2364:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":537,"nodeType":"IfStatement","src":"2360:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":529,"id":536,"nodeType":"Return","src":"2372:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2417:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2421:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":529,"id":543,"nodeType":"Return","src":"2403:20:5"}]}]},"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"2107:123:5","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":546,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:5","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"a","nameLocation":"2259:1:5","nodeType":"VariableDeclaration","scope":546,"src":"2251:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"b","nameLocation":"2270:1:5","nodeType":"VariableDeclaration","scope":546,"src":"2262:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:5"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"success","nameLocation":"2301:7:5","nodeType":"VariableDeclaration","scope":546,"src":"2296:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":525,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"result","nameLocation":"2318:6:5","nodeType":"VariableDeclaration","scope":546,"src":"2310:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:5"},"scope":1982,"src":"2235:205:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":572,"nodeType":"Block","src":"2912:207:5","statements":[{"id":571,"nodeType":"UncheckedBlock","src":"2922:191:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"3060:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"3066:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":560,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"3070:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":565,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"3091:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":563,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"3075:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"3075:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":557,"id":570,"nodeType":"Return","src":"3053:49:5"}]}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"2446:374:5","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":573,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:5","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"condition","nameLocation":"2847:9:5","nodeType":"VariableDeclaration","scope":573,"src":"2842:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":548,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"a","nameLocation":"2866:1:5","nodeType":"VariableDeclaration","scope":573,"src":"2858:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"b","nameLocation":"2877:1:5","nodeType":"VariableDeclaration","scope":573,"src":"2869:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:5"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":573,"src":"2903:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:5"},"scope":1982,"src":"2825:294:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":591,"nodeType":"Block","src":"3256:44:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":584,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"3281:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":585,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3285:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"3288:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3291:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":583,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3273:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":582,"id":590,"nodeType":"Return","src":"3266:27:5"}]},"documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"3125:59:5","text":" @dev Returns the largest of two numbers."},"id":592,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:5","nodeType":"FunctionDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"a","nameLocation":"3210:1:5","nodeType":"VariableDeclaration","scope":592,"src":"3202:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"b","nameLocation":"3221:1:5","nodeType":"VariableDeclaration","scope":592,"src":"3213:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:5"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":592,"src":"3247:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:5"},"scope":1982,"src":"3189:111:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":610,"nodeType":"Block","src":"3438:44:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3463:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":604,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3467:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":606,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3470:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":607,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3473:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":602,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3455:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":601,"id":609,"nodeType":"Return","src":"3448:27:5"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"3306:60:5","text":" @dev Returns the smallest of two numbers."},"id":611,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:5","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"a","nameLocation":"3392:1:5","nodeType":"VariableDeclaration","scope":611,"src":"3384:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"b","nameLocation":"3403:1:5","nodeType":"VariableDeclaration","scope":611,"src":"3395:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:5"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":611,"src":"3429:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:5"},"scope":1982,"src":"3371:111:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":633,"nodeType":"Block","src":"3666:82:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"3721:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"3725:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":625,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"3731:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":626,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"3735:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":620,"id":632,"nodeType":"Return","src":"3713:28:5"}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"3488:102:5","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:5","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"a","nameLocation":"3620:1:5","nodeType":"VariableDeclaration","scope":634,"src":"3612:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"b","nameLocation":"3631:1:5","nodeType":"VariableDeclaration","scope":634,"src":"3623:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:5"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":634,"src":"3657:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:5"},"scope":1982,"src":"3595:153:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"4040:633:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":644,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4054:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":655,"nodeType":"IfStatement","src":"4050:150:5","trueBody":{"id":654,"nodeType":"Block","src":"4062:138:5","statements":[{"expression":{"arguments":[{"expression":{"id":650,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4166:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":274,"src":"4166:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":647,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4154:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":306,"src":"4154:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"4154:35:5"}]}},{"id":673,"nodeType":"UncheckedBlock","src":"4583:84:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4630:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":656,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"4614:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"4614:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4641:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":666,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4650:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":643,"id":672,"nodeType":"Return","src":"4607:49:5"}]}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"3754:210:5","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:5","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"a","nameLocation":"3994:1:5","nodeType":"VariableDeclaration","scope":675,"src":"3986:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"b","nameLocation":"4005:1:5","nodeType":"VariableDeclaration","scope":675,"src":"3997:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:5"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"4031:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:5"},"scope":1982,"src":"3969:704:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":811,"nodeType":"Block","src":"5094:4128:5","statements":[{"id":810,"nodeType":"UncheckedBlock","src":"5104:4112:5","statements":[{"assignments":[688],"declarations":[{"constant":false,"id":688,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:5","nodeType":"VariableDeclaration","scope":810,"src":"5433:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":692,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":689,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"5449:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":690,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5453:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:5"},{"assignments":[694],"declarations":[{"constant":false,"id":694,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:5","nodeType":"VariableDeclaration","scope":810,"src":"5513:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":695,"nodeType":"VariableDeclarationStatement","src":"5513:13:5"},{"AST":{"nativeSrc":"5593:122:5","nodeType":"YulBlock","src":"5593:122:5","statements":[{"nativeSrc":"5611:30:5","nodeType":"YulVariableDeclaration","src":"5611:30:5","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:5","nodeType":"YulIdentifier","src":"5628:1:5"},{"name":"y","nativeSrc":"5631:1:5","nodeType":"YulIdentifier","src":"5631:1:5"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:5","nodeType":"YulLiteral","src":"5638:1:5","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:5","nodeType":"YulIdentifier","src":"5634:3:5"},"nativeSrc":"5634:6:5","nodeType":"YulFunctionCall","src":"5634:6:5"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:5","nodeType":"YulIdentifier","src":"5621:6:5"},"nativeSrc":"5621:20:5","nodeType":"YulFunctionCall","src":"5621:20:5"},"variables":[{"name":"mm","nativeSrc":"5615:2:5","nodeType":"YulTypedName","src":"5615:2:5","type":""}]},{"nativeSrc":"5658:43:5","nodeType":"YulAssignment","src":"5658:43:5","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:5","nodeType":"YulIdentifier","src":"5675:2:5"},{"name":"prod0","nativeSrc":"5679:5:5","nodeType":"YulIdentifier","src":"5679:5:5"}],"functionName":{"name":"sub","nativeSrc":"5671:3:5","nodeType":"YulIdentifier","src":"5671:3:5"},"nativeSrc":"5671:14:5","nodeType":"YulFunctionCall","src":"5671:14:5"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:5","nodeType":"YulIdentifier","src":"5690:2:5"},{"name":"prod0","nativeSrc":"5694:5:5","nodeType":"YulIdentifier","src":"5694:5:5"}],"functionName":{"name":"lt","nativeSrc":"5687:2:5","nodeType":"YulIdentifier","src":"5687:2:5"},"nativeSrc":"5687:13:5","nodeType":"YulFunctionCall","src":"5687:13:5"}],"functionName":{"name":"sub","nativeSrc":"5667:3:5","nodeType":"YulIdentifier","src":"5667:3:5"},"nativeSrc":"5667:34:5","nodeType":"YulFunctionCall","src":"5667:34:5"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:5","nodeType":"YulIdentifier","src":"5658:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":688,"isOffset":false,"isSlot":false,"src":"5679:5:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"5694:5:5","valueSize":1},{"declaration":694,"isOffset":false,"isSlot":false,"src":"5658:5:5","valueSize":1},{"declaration":678,"isOffset":false,"isSlot":false,"src":"5628:1:5","valueSize":1},{"declaration":680,"isOffset":false,"isSlot":false,"src":"5631:1:5","valueSize":1}],"id":696,"nodeType":"InlineAssembly","src":"5584:131:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":697,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"5796:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":705,"nodeType":"IfStatement","src":"5792:368:5","trueBody":{"id":704,"nodeType":"Block","src":"5808:352:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":700,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"6126:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":701,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6134:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":686,"id":703,"nodeType":"Return","src":"6119:26:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":706,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6270:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":707,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"6285:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":724,"nodeType":"IfStatement","src":"6266:143:5","trueBody":{"id":723,"nodeType":"Block","src":"6292:117:5","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":713,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6330:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":716,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6348:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":274,"src":"6348:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":718,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6372:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:5","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":270,"src":"6372:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":712,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6322:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":709,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6310:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":306,"src":"6310:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"6310:84:5"}]}},{"assignments":[726],"declarations":[{"constant":false,"id":726,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:5","nodeType":"VariableDeclaration","scope":810,"src":"6664:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":727,"nodeType":"VariableDeclarationStatement","src":"6664:17:5"},{"AST":{"nativeSrc":"6704:291:5","nodeType":"YulBlock","src":"6704:291:5","statements":[{"nativeSrc":"6773:38:5","nodeType":"YulAssignment","src":"6773:38:5","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:5","nodeType":"YulIdentifier","src":"6793:1:5"},{"name":"y","nativeSrc":"6796:1:5","nodeType":"YulIdentifier","src":"6796:1:5"},{"name":"denominator","nativeSrc":"6799:11:5","nodeType":"YulIdentifier","src":"6799:11:5"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:5","nodeType":"YulIdentifier","src":"6786:6:5"},"nativeSrc":"6786:25:5","nodeType":"YulFunctionCall","src":"6786:25:5"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:5","nodeType":"YulIdentifier","src":"6773:9:5"}]},{"nativeSrc":"6893:41:5","nodeType":"YulAssignment","src":"6893:41:5","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:5","nodeType":"YulIdentifier","src":"6906:5:5"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:5","nodeType":"YulIdentifier","src":"6916:9:5"},{"name":"prod0","nativeSrc":"6927:5:5","nodeType":"YulIdentifier","src":"6927:5:5"}],"functionName":{"name":"gt","nativeSrc":"6913:2:5","nodeType":"YulIdentifier","src":"6913:2:5"},"nativeSrc":"6913:20:5","nodeType":"YulFunctionCall","src":"6913:20:5"}],"functionName":{"name":"sub","nativeSrc":"6902:3:5","nodeType":"YulIdentifier","src":"6902:3:5"},"nativeSrc":"6902:32:5","nodeType":"YulFunctionCall","src":"6902:32:5"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:5","nodeType":"YulIdentifier","src":"6893:5:5"}]},{"nativeSrc":"6951:30:5","nodeType":"YulAssignment","src":"6951:30:5","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:5","nodeType":"YulIdentifier","src":"6964:5:5"},{"name":"remainder","nativeSrc":"6971:9:5","nodeType":"YulIdentifier","src":"6971:9:5"}],"functionName":{"name":"sub","nativeSrc":"6960:3:5","nodeType":"YulIdentifier","src":"6960:3:5"},"nativeSrc":"6960:21:5","nodeType":"YulFunctionCall","src":"6960:21:5"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:5","nodeType":"YulIdentifier","src":"6951:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":682,"isOffset":false,"isSlot":false,"src":"6799:11:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"6927:5:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"6951:5:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"6964:5:5","valueSize":1},{"declaration":694,"isOffset":false,"isSlot":false,"src":"6893:5:5","valueSize":1},{"declaration":694,"isOffset":false,"isSlot":false,"src":"6906:5:5","valueSize":1},{"declaration":726,"isOffset":false,"isSlot":false,"src":"6773:9:5","valueSize":1},{"declaration":726,"isOffset":false,"isSlot":false,"src":"6916:9:5","valueSize":1},{"declaration":726,"isOffset":false,"isSlot":false,"src":"6971:9:5","valueSize":1},{"declaration":678,"isOffset":false,"isSlot":false,"src":"6793:1:5","valueSize":1},{"declaration":680,"isOffset":false,"isSlot":false,"src":"6796:1:5","valueSize":1}],"id":728,"nodeType":"InlineAssembly","src":"6695:300:5"},{"assignments":[730],"declarations":[{"constant":false,"id":730,"mutability":"mutable","name":"twos","nameLocation":"7207:4:5","nodeType":"VariableDeclaration","scope":810,"src":"7199:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":737,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7214:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":733,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7233:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:5"},{"AST":{"nativeSrc":"7268:366:5","nodeType":"YulBlock","src":"7268:366:5","statements":[{"nativeSrc":"7333:37:5","nodeType":"YulAssignment","src":"7333:37:5","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:5","nodeType":"YulIdentifier","src":"7352:11:5"},{"name":"twos","nativeSrc":"7365:4:5","nodeType":"YulIdentifier","src":"7365:4:5"}],"functionName":{"name":"div","nativeSrc":"7348:3:5","nodeType":"YulIdentifier","src":"7348:3:5"},"nativeSrc":"7348:22:5","nodeType":"YulFunctionCall","src":"7348:22:5"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:5","nodeType":"YulIdentifier","src":"7333:11:5"}]},{"nativeSrc":"7437:25:5","nodeType":"YulAssignment","src":"7437:25:5","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:5","nodeType":"YulIdentifier","src":"7450:5:5"},{"name":"twos","nativeSrc":"7457:4:5","nodeType":"YulIdentifier","src":"7457:4:5"}],"functionName":{"name":"div","nativeSrc":"7446:3:5","nodeType":"YulIdentifier","src":"7446:3:5"},"nativeSrc":"7446:16:5","nodeType":"YulFunctionCall","src":"7446:16:5"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:5","nodeType":"YulIdentifier","src":"7437:5:5"}]},{"nativeSrc":"7581:39:5","nodeType":"YulAssignment","src":"7581:39:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:5","nodeType":"YulLiteral","src":"7601:1:5","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:5","nodeType":"YulIdentifier","src":"7604:4:5"}],"functionName":{"name":"sub","nativeSrc":"7597:3:5","nodeType":"YulIdentifier","src":"7597:3:5"},"nativeSrc":"7597:12:5","nodeType":"YulFunctionCall","src":"7597:12:5"},{"name":"twos","nativeSrc":"7611:4:5","nodeType":"YulIdentifier","src":"7611:4:5"}],"functionName":{"name":"div","nativeSrc":"7593:3:5","nodeType":"YulIdentifier","src":"7593:3:5"},"nativeSrc":"7593:23:5","nodeType":"YulFunctionCall","src":"7593:23:5"},{"kind":"number","nativeSrc":"7618:1:5","nodeType":"YulLiteral","src":"7618:1:5","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:5","nodeType":"YulIdentifier","src":"7589:3:5"},"nativeSrc":"7589:31:5","nodeType":"YulFunctionCall","src":"7589:31:5"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:5","nodeType":"YulIdentifier","src":"7581:4:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":682,"isOffset":false,"isSlot":false,"src":"7333:11:5","valueSize":1},{"declaration":682,"isOffset":false,"isSlot":false,"src":"7352:11:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"7437:5:5","valueSize":1},{"declaration":688,"isOffset":false,"isSlot":false,"src":"7450:5:5","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"7365:4:5","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"7457:4:5","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"7581:4:5","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"7604:4:5","valueSize":1},{"declaration":730,"isOffset":false,"isSlot":false,"src":"7611:4:5","valueSize":1}],"id":738,"nodeType":"InlineAssembly","src":"7259:375:5"},{"expression":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":739,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"7700:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":740,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"7709:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":741,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"7717:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":744,"nodeType":"ExpressionStatement","src":"7700:21:5"},{"assignments":[746],"declarations":[{"constant":false,"id":746,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:5","nodeType":"VariableDeclaration","scope":810,"src":"8056:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":753,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":748,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8079:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:5"},{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":754,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8312:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":756,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8327:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":757,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8341:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"8312:36:5"},{"expression":{"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":762,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8382:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8397:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":765,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8411:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":769,"nodeType":"ExpressionStatement","src":"8382:36:5"},{"expression":{"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":770,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8454:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":772,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8469:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":773,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8483:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":777,"nodeType":"ExpressionStatement","src":"8454:36:5"},{"expression":{"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":778,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8525:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":780,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8540:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":781,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8554:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":785,"nodeType":"ExpressionStatement","src":"8525:36:5"},{"expression":{"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":786,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8598:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8613:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":789,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8627:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":793,"nodeType":"ExpressionStatement","src":"8598:36:5"},{"expression":{"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":794,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8672:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8687:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":797,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8701:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":801,"nodeType":"ExpressionStatement","src":"8672:36:5"},{"expression":{"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"9154:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":803,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"9163:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":804,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":807,"nodeType":"ExpressionStatement","src":"9154:24:5"},{"expression":{"id":808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"9199:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":686,"id":809,"nodeType":"Return","src":"9192:13:5"}]}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"4679:312:5","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:5","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"x","nameLocation":"5020:1:5","nodeType":"VariableDeclaration","scope":812,"src":"5012:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"y","nameLocation":"5031:1:5","nodeType":"VariableDeclaration","scope":812,"src":"5023:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:5","nodeType":"VariableDeclaration","scope":812,"src":"5034:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:5"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"result","nameLocation":"5086:6:5","nodeType":"VariableDeclaration","scope":812,"src":"5078:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:5"},"scope":1982,"src":"4996:4226:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":848,"nodeType":"Block","src":"9461:128:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":828,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"9485:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":829,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"9488:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":830,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9491:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":827,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[812,849],"referencedDeclaration":812,"src":"9478:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":835,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"9539:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":834,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"9522:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$388_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":838,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"9559:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":839,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"9562:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":840,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9565:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":837,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:5","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":832,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"9506:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"9506:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":826,"id":847,"nodeType":"Return","src":"9471:111:5"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"9228:118:5","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:5","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"x","nameLocation":"9375:1:5","nodeType":"VariableDeclaration","scope":849,"src":"9367:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"y","nameLocation":"9386:1:5","nodeType":"VariableDeclaration","scope":849,"src":"9378:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:5","nodeType":"VariableDeclaration","scope":849,"src":"9389:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:5","nodeType":"VariableDeclaration","scope":849,"src":"9410:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":821,"nodeType":"UserDefinedTypeName","pathNode":{"id":820,"name":"Rounding","nameLocations":["9410:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"9410:8:5"},"referencedDeclaration":388,"src":"9410:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:5"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"9452:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:5"},"scope":1982,"src":"9351:238:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"10223:1849:5","statements":[{"id":944,"nodeType":"UncheckedBlock","src":"10233:1833:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10261:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":864,"nodeType":"IfStatement","src":"10257:20:5","trueBody":{"expression":{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":858,"id":863,"nodeType":"Return","src":"10269:8:5"}},{"assignments":[866],"declarations":[{"constant":false,"id":866,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:5","nodeType":"VariableDeclaration","scope":944,"src":"10748:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":870,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10768:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":868,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10772:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:5"},{"assignments":[872],"declarations":[{"constant":false,"id":872,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:5","nodeType":"VariableDeclaration","scope":944,"src":"10787:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":874,"initialValue":{"id":873,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10801:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:5"},{"assignments":[876],"declarations":[{"constant":false,"id":876,"mutability":"mutable","name":"x","nameLocation":"10945:1:5","nodeType":"VariableDeclaration","scope":944,"src":"10938:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":875,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":878,"initialValue":{"hexValue":"30","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:5"},{"assignments":[880],"declarations":[{"constant":false,"id":880,"mutability":"mutable","name":"y","nameLocation":"10971:1:5","nodeType":"VariableDeclaration","scope":944,"src":"10964:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":879,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":882,"initialValue":{"hexValue":"31","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:5"},{"body":{"id":919,"nodeType":"Block","src":"11014:882:5","statements":[{"assignments":[887],"declarations":[{"constant":false,"id":887,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:5","nodeType":"VariableDeclaration","scope":919,"src":"11032:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":891,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"11051:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":889,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11057:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:5"},{"expression":{"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":892,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"11086:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":893,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11091:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":894,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":895,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11191:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"11436:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11442:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":898,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11454:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:5","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"11085:395:5"},{"expression":{"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":904,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"11500:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":905,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"11503:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":906,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":907,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"11585:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"11839:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":909,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"11843:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":912,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11854:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":910,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:5","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:5","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":918,"nodeType":"ExpressionStatement","src":"11499:382:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":883,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"10998:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":920,"nodeType":"WhileStatement","src":"10991:905:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":921,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"11914:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"11910:22:5","trueBody":{"expression":{"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":858,"id":925,"nodeType":"Return","src":"11924:8:5"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":928,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"11983:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":931,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11990:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:5","subExpression":{"id":934,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"12003:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:5","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":940,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"12015:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:5","typeDescriptions":{}}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":927,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"11975:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":858,"id":943,"nodeType":"Return","src":"11968:50:5"}]}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"9595:553:5","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:5","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"a","nameLocation":"10177:1:5","nodeType":"VariableDeclaration","scope":946,"src":"10169:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"n","nameLocation":"10188:1:5","nodeType":"VariableDeclaration","scope":946,"src":"10180:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:5"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"10214:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:5"},"scope":1982,"src":"10153:1919:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"12672:82:5","statements":[{"id":965,"nodeType":"UncheckedBlock","src":"12682:66:5","statements":[{"expression":{"arguments":[{"id":958,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"12725:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":959,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"12728:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":962,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"12735:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":956,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"12713:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1982_$","typeString":"type(library Math)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:5","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":1003,"src":"12713:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":955,"id":964,"nodeType":"Return","src":"12706:31:5"}]}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"12078:514:5","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:5","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"a","nameLocation":"12626:1:5","nodeType":"VariableDeclaration","scope":967,"src":"12618:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"p","nameLocation":"12637:1:5","nodeType":"VariableDeclaration","scope":967,"src":"12629:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:5"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"12663:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:5"},"scope":1982,"src":"12597:157:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1002,"nodeType":"Block","src":"13524:174:5","statements":[{"assignments":[980,982],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"success","nameLocation":"13540:7:5","nodeType":"VariableDeclaration","scope":1002,"src":"13535:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":979,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"result","nameLocation":"13557:6:5","nodeType":"VariableDeclaration","scope":1002,"src":"13549:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":988,"initialValue":{"arguments":[{"id":984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"13577:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":985,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"13580:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":986,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"13583:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":983,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1027,1109],"referencedDeclaration":1027,"src":"13567:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:5"},{"condition":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:5","subExpression":{"id":989,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"13600:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":999,"nodeType":"IfStatement","src":"13595:74:5","trueBody":{"id":998,"nodeType":"Block","src":"13609:60:5","statements":[{"expression":{"arguments":[{"expression":{"id":994,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"13635:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":274,"src":"13635:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":991,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"13623:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":306,"src":"13623:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":997,"nodeType":"ExpressionStatement","src":"13623:35:5"}]}},{"expression":{"id":1000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"13685:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":978,"id":1001,"nodeType":"Return","src":"13678:13:5"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"12760:678:5","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":1003,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:5","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"b","nameLocation":"13467:1:5","nodeType":"VariableDeclaration","scope":1003,"src":"13459:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"e","nameLocation":"13478:1:5","nodeType":"VariableDeclaration","scope":1003,"src":"13470:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"m","nameLocation":"13489:1:5","nodeType":"VariableDeclaration","scope":1003,"src":"13481:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:5"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1003,"src":"13515:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:5"},"scope":1982,"src":"13443:255:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"14552:1493:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"14566:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1024,"nodeType":"IfStatement","src":"14562:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1016,"id":1023,"nodeType":"Return","src":"14574:17:5"}},{"AST":{"nativeSrc":"14626:1413:5","nodeType":"YulBlock","src":"14626:1413:5","statements":[{"nativeSrc":"14640:22:5","nodeType":"YulVariableDeclaration","src":"14640:22:5","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:5","nodeType":"YulLiteral","src":"14657:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:5","nodeType":"YulIdentifier","src":"14651:5:5"},"nativeSrc":"14651:11:5","nodeType":"YulFunctionCall","src":"14651:11:5"},"variables":[{"name":"ptr","nativeSrc":"14644:3:5","nodeType":"YulTypedName","src":"14644:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:5","nodeType":"YulIdentifier","src":"15570:3:5"},{"kind":"number","nativeSrc":"15575:4:5","nodeType":"YulLiteral","src":"15575:4:5","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:5","nodeType":"YulIdentifier","src":"15563:6:5"},"nativeSrc":"15563:17:5","nodeType":"YulFunctionCall","src":"15563:17:5"},"nativeSrc":"15563:17:5","nodeType":"YulExpressionStatement","src":"15563:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:5","nodeType":"YulIdentifier","src":"15604:3:5"},{"kind":"number","nativeSrc":"15609:4:5","nodeType":"YulLiteral","src":"15609:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:5","nodeType":"YulIdentifier","src":"15600:3:5"},"nativeSrc":"15600:14:5","nodeType":"YulFunctionCall","src":"15600:14:5"},{"kind":"number","nativeSrc":"15616:4:5","nodeType":"YulLiteral","src":"15616:4:5","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:5","nodeType":"YulIdentifier","src":"15593:6:5"},"nativeSrc":"15593:28:5","nodeType":"YulFunctionCall","src":"15593:28:5"},"nativeSrc":"15593:28:5","nodeType":"YulExpressionStatement","src":"15593:28:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:5","nodeType":"YulIdentifier","src":"15645:3:5"},{"kind":"number","nativeSrc":"15650:4:5","nodeType":"YulLiteral","src":"15650:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:5","nodeType":"YulIdentifier","src":"15641:3:5"},"nativeSrc":"15641:14:5","nodeType":"YulFunctionCall","src":"15641:14:5"},{"kind":"number","nativeSrc":"15657:4:5","nodeType":"YulLiteral","src":"15657:4:5","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:5","nodeType":"YulIdentifier","src":"15634:6:5"},"nativeSrc":"15634:28:5","nodeType":"YulFunctionCall","src":"15634:28:5"},"nativeSrc":"15634:28:5","nodeType":"YulExpressionStatement","src":"15634:28:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:5","nodeType":"YulIdentifier","src":"15686:3:5"},{"kind":"number","nativeSrc":"15691:4:5","nodeType":"YulLiteral","src":"15691:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:5","nodeType":"YulIdentifier","src":"15682:3:5"},"nativeSrc":"15682:14:5","nodeType":"YulFunctionCall","src":"15682:14:5"},{"name":"b","nativeSrc":"15698:1:5","nodeType":"YulIdentifier","src":"15698:1:5"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:5","nodeType":"YulIdentifier","src":"15675:6:5"},"nativeSrc":"15675:25:5","nodeType":"YulFunctionCall","src":"15675:25:5"},"nativeSrc":"15675:25:5","nodeType":"YulExpressionStatement","src":"15675:25:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:5","nodeType":"YulIdentifier","src":"15724:3:5"},{"kind":"number","nativeSrc":"15729:4:5","nodeType":"YulLiteral","src":"15729:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:5","nodeType":"YulIdentifier","src":"15720:3:5"},"nativeSrc":"15720:14:5","nodeType":"YulFunctionCall","src":"15720:14:5"},{"name":"e","nativeSrc":"15736:1:5","nodeType":"YulIdentifier","src":"15736:1:5"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:5","nodeType":"YulIdentifier","src":"15713:6:5"},"nativeSrc":"15713:25:5","nodeType":"YulFunctionCall","src":"15713:25:5"},"nativeSrc":"15713:25:5","nodeType":"YulExpressionStatement","src":"15713:25:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:5","nodeType":"YulIdentifier","src":"15762:3:5"},{"kind":"number","nativeSrc":"15767:4:5","nodeType":"YulLiteral","src":"15767:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:5","nodeType":"YulIdentifier","src":"15758:3:5"},"nativeSrc":"15758:14:5","nodeType":"YulFunctionCall","src":"15758:14:5"},{"name":"m","nativeSrc":"15774:1:5","nodeType":"YulIdentifier","src":"15774:1:5"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:5","nodeType":"YulIdentifier","src":"15751:6:5"},"nativeSrc":"15751:25:5","nodeType":"YulFunctionCall","src":"15751:25:5"},"nativeSrc":"15751:25:5","nodeType":"YulExpressionStatement","src":"15751:25:5"},{"nativeSrc":"15938:57:5","nodeType":"YulAssignment","src":"15938:57:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:5","nodeType":"YulIdentifier","src":"15960:3:5"},"nativeSrc":"15960:5:5","nodeType":"YulFunctionCall","src":"15960:5:5"},{"kind":"number","nativeSrc":"15967:4:5","nodeType":"YulLiteral","src":"15967:4:5","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:5","nodeType":"YulIdentifier","src":"15973:3:5"},{"kind":"number","nativeSrc":"15978:4:5","nodeType":"YulLiteral","src":"15978:4:5","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:5","nodeType":"YulLiteral","src":"15984:4:5","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:5","nodeType":"YulLiteral","src":"15990:4:5","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:5","nodeType":"YulIdentifier","src":"15949:10:5"},"nativeSrc":"15949:46:5","nodeType":"YulFunctionCall","src":"15949:46:5"},"variableNames":[{"name":"success","nativeSrc":"15938:7:5","nodeType":"YulIdentifier","src":"15938:7:5"}]},{"nativeSrc":"16008:21:5","nodeType":"YulAssignment","src":"16008:21:5","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:5","nodeType":"YulLiteral","src":"16024:4:5","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:5","nodeType":"YulIdentifier","src":"16018:5:5"},"nativeSrc":"16018:11:5","nodeType":"YulFunctionCall","src":"16018:11:5"},"variableNames":[{"name":"result","nativeSrc":"16008:6:5","nodeType":"YulIdentifier","src":"16008:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1006,"isOffset":false,"isSlot":false,"src":"15698:1:5","valueSize":1},{"declaration":1008,"isOffset":false,"isSlot":false,"src":"15736:1:5","valueSize":1},{"declaration":1010,"isOffset":false,"isSlot":false,"src":"15774:1:5","valueSize":1},{"declaration":1015,"isOffset":false,"isSlot":false,"src":"16008:6:5","valueSize":1},{"declaration":1013,"isOffset":false,"isSlot":false,"src":"15938:7:5","valueSize":1}],"flags":["memory-safe"],"id":1025,"nodeType":"InlineAssembly","src":"14601:1438:5"}]},"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"13704:738:5","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:5","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"b","nameLocation":"14474:1:5","nodeType":"VariableDeclaration","scope":1027,"src":"14466:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"e","nameLocation":"14485:1:5","nodeType":"VariableDeclaration","scope":1027,"src":"14477:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"m","nameLocation":"14496:1:5","nodeType":"VariableDeclaration","scope":1027,"src":"14488:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:5"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"success","nameLocation":"14527:7:5","nodeType":"VariableDeclaration","scope":1027,"src":"14522:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1012,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"result","nameLocation":"14544:6:5","nodeType":"VariableDeclaration","scope":1027,"src":"14536:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:5"},"scope":1982,"src":"14447:1598:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1062,"nodeType":"Block","src":"16242:179:5","statements":[{"assignments":[1040,1042],"declarations":[{"constant":false,"id":1040,"mutability":"mutable","name":"success","nameLocation":"16258:7:5","nodeType":"VariableDeclaration","scope":1062,"src":"16253:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1039,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"result","nameLocation":"16280:6:5","nodeType":"VariableDeclaration","scope":1062,"src":"16267:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1048,"initialValue":{"arguments":[{"id":1044,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"16300:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1045,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"16303:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1046,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"16306:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1043,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1027,1109],"referencedDeclaration":1109,"src":"16290:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:5"},{"condition":{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:5","subExpression":{"id":1049,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"16323:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1059,"nodeType":"IfStatement","src":"16318:74:5","trueBody":{"id":1058,"nodeType":"Block","src":"16332:60:5","statements":[{"expression":{"arguments":[{"expression":{"id":1054,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"16358:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":274,"src":"16358:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1051,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"16346:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$307_$","typeString":"type(library Panic)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":306,"src":"16346:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"16346:35:5"}]}},{"expression":{"id":1060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"16408:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1038,"id":1061,"nodeType":"Return","src":"16401:13:5"}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"16051:85:5","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1063,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:5","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"b","nameLocation":"16170:1:5","nodeType":"VariableDeclaration","scope":1063,"src":"16157:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1029,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"e","nameLocation":"16186:1:5","nodeType":"VariableDeclaration","scope":1063,"src":"16173:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1031,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"m","nameLocation":"16202:1:5","nodeType":"VariableDeclaration","scope":1063,"src":"16189:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:5"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1063,"src":"16228:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1036,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:5"},"scope":1982,"src":"16141:280:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1108,"nodeType":"Block","src":"16675:771:5","statements":[{"condition":{"arguments":[{"id":1078,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"16700:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1077,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"16689:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1087,"nodeType":"IfStatement","src":"16685:47:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1076,"id":1086,"nodeType":"Return","src":"16704:28:5"}},{"assignments":[1089],"declarations":[{"constant":false,"id":1089,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:5","nodeType":"VariableDeclaration","scope":1108,"src":"16743:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1092,"initialValue":{"expression":{"id":1090,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"16758:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:5","memberName":"length","nodeType":"MemberAccess","src":"16758:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:5"},{"expression":{"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"16848:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"16874:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:5","memberName":"length","nodeType":"MemberAccess","src":"16874:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1098,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"16884:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:5","memberName":"length","nodeType":"MemberAccess","src":"16884:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1100,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"16894:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1101,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"16900:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1102,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"16903:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1103,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"16906:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1094,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1106,"nodeType":"ExpressionStatement","src":"16848:60:5"},{"AST":{"nativeSrc":"16944:496:5","nodeType":"YulBlock","src":"16944:496:5","statements":[{"nativeSrc":"16958:32:5","nodeType":"YulVariableDeclaration","src":"16958:32:5","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:5","nodeType":"YulIdentifier","src":"16977:6:5"},{"kind":"number","nativeSrc":"16985:4:5","nodeType":"YulLiteral","src":"16985:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:5","nodeType":"YulIdentifier","src":"16973:3:5"},"nativeSrc":"16973:17:5","nodeType":"YulFunctionCall","src":"16973:17:5"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:5","nodeType":"YulTypedName","src":"16962:7:5","type":""}]},{"nativeSrc":"17080:73:5","nodeType":"YulAssignment","src":"17080:73:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:5","nodeType":"YulIdentifier","src":"17102:3:5"},"nativeSrc":"17102:5:5","nodeType":"YulFunctionCall","src":"17102:5:5"},{"kind":"number","nativeSrc":"17109:4:5","nodeType":"YulLiteral","src":"17109:4:5","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:5","nodeType":"YulIdentifier","src":"17115:7:5"},{"arguments":[{"name":"result","nativeSrc":"17130:6:5","nodeType":"YulIdentifier","src":"17130:6:5"}],"functionName":{"name":"mload","nativeSrc":"17124:5:5","nodeType":"YulIdentifier","src":"17124:5:5"},"nativeSrc":"17124:13:5","nodeType":"YulFunctionCall","src":"17124:13:5"},{"name":"dataPtr","nativeSrc":"17139:7:5","nodeType":"YulIdentifier","src":"17139:7:5"},{"name":"mLen","nativeSrc":"17148:4:5","nodeType":"YulIdentifier","src":"17148:4:5"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:5","nodeType":"YulIdentifier","src":"17091:10:5"},"nativeSrc":"17091:62:5","nodeType":"YulFunctionCall","src":"17091:62:5"},"variableNames":[{"name":"success","nativeSrc":"17080:7:5","nodeType":"YulIdentifier","src":"17080:7:5"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:5","nodeType":"YulIdentifier","src":"17309:6:5"},{"name":"mLen","nativeSrc":"17317:4:5","nodeType":"YulIdentifier","src":"17317:4:5"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:5","nodeType":"YulIdentifier","src":"17302:6:5"},"nativeSrc":"17302:20:5","nodeType":"YulFunctionCall","src":"17302:20:5"},"nativeSrc":"17302:20:5","nodeType":"YulExpressionStatement","src":"17302:20:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:5","nodeType":"YulLiteral","src":"17405:4:5","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:5","nodeType":"YulIdentifier","src":"17415:7:5"},{"name":"mLen","nativeSrc":"17424:4:5","nodeType":"YulIdentifier","src":"17424:4:5"}],"functionName":{"name":"add","nativeSrc":"17411:3:5","nodeType":"YulIdentifier","src":"17411:3:5"},"nativeSrc":"17411:18:5","nodeType":"YulFunctionCall","src":"17411:18:5"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:5","nodeType":"YulIdentifier","src":"17398:6:5"},"nativeSrc":"17398:32:5","nodeType":"YulFunctionCall","src":"17398:32:5"},"nativeSrc":"17398:32:5","nodeType":"YulExpressionStatement","src":"17398:32:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1089,"isOffset":false,"isSlot":false,"src":"17148:4:5","valueSize":1},{"declaration":1089,"isOffset":false,"isSlot":false,"src":"17317:4:5","valueSize":1},{"declaration":1089,"isOffset":false,"isSlot":false,"src":"17424:4:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"16977:6:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"17130:6:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"17309:6:5","valueSize":1},{"declaration":1073,"isOffset":false,"isSlot":false,"src":"17080:7:5","valueSize":1}],"flags":["memory-safe"],"id":1107,"nodeType":"InlineAssembly","src":"16919:521:5"}]},"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"16427:88:5","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":1109,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:5","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"b","nameLocation":"16561:1:5","nodeType":"VariableDeclaration","scope":1109,"src":"16548:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1065,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"e","nameLocation":"16585:1:5","nodeType":"VariableDeclaration","scope":1109,"src":"16572:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1067,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"m","nameLocation":"16609:1:5","nodeType":"VariableDeclaration","scope":1109,"src":"16596:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1069,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:5"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"success","nameLocation":"16645:7:5","nodeType":"VariableDeclaration","scope":1109,"src":"16640:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1072,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"result","nameLocation":"16667:6:5","nodeType":"VariableDeclaration","scope":1109,"src":"16654:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1074,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:5"},"scope":1982,"src":"16520:926:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1141,"nodeType":"Block","src":"17601:176:5","statements":[{"body":{"id":1137,"nodeType":"Block","src":"17658:92:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1128,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"17676:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1130,"indexExpression":{"id":1129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"17686:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1136,"nodeType":"IfStatement","src":"17672:68:5","trueBody":{"id":1135,"nodeType":"Block","src":"17695:45:5","statements":[{"expression":{"hexValue":"66616c7365","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1116,"id":1134,"nodeType":"Return","src":"17713:12:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"17631:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1122,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"17635:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:5","memberName":"length","nodeType":"MemberAccess","src":"17635:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1138,"initializationExpression":{"assignments":[1118],"declarations":[{"constant":false,"id":1118,"mutability":"mutable","name":"i","nameLocation":"17624:1:5","nodeType":"VariableDeclaration","scope":1138,"src":"17616:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1120,"initialValue":{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:5","subExpression":{"id":1125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"17655:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1127,"nodeType":"ExpressionStatement","src":"17653:3:5"},"nodeType":"ForStatement","src":"17611:139:5"},{"expression":{"hexValue":"74727565","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1116,"id":1140,"nodeType":"Return","src":"17759:11:5"}]},"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"17452:72:5","text":" @dev Returns whether the provided byte array is zero."},"id":1142,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:5","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:5","nodeType":"VariableDeclaration","scope":1142,"src":"17549:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1111,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:5"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1142,"src":"17595:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1114,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:5"},"scope":1982,"src":"17529:248:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1360,"nodeType":"Block","src":"18137:5124:5","statements":[{"id":1359,"nodeType":"UncheckedBlock","src":"18147:5108:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"18241:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1156,"nodeType":"IfStatement","src":"18237:53:5","trueBody":{"id":1155,"nodeType":"Block","src":"18249:41:5","statements":[{"expression":{"id":1153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"18274:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1149,"id":1154,"nodeType":"Return","src":"18267:8:5"}]}},{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"aa","nameLocation":"19225:2:5","nodeType":"VariableDeclaration","scope":1359,"src":"19217:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1160,"initialValue":{"id":1159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"19230:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:5"},{"assignments":[1162],"declarations":[{"constant":false,"id":1162,"mutability":"mutable","name":"xn","nameLocation":"19253:2:5","nodeType":"VariableDeclaration","scope":1359,"src":"19245:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1164,"initialValue":{"hexValue":"31","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1165,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19278:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"nodeType":"IfStatement","src":"19274:92:5","trueBody":{"id":1179,"nodeType":"Block","src":"19296:70:5","statements":[{"expression":{"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1171,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19314:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1174,"nodeType":"ExpressionStatement","src":"19314:10:5"},{"expression":{"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1175,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19342:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1178,"nodeType":"ExpressionStatement","src":"19342:9:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1181,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19383:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"19379:90:5","trueBody":{"id":1195,"nodeType":"Block","src":"19400:69:5","statements":[{"expression":{"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1187,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19418:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1190,"nodeType":"ExpressionStatement","src":"19418:9:5"},{"expression":{"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1191,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19445:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1194,"nodeType":"ExpressionStatement","src":"19445:9:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19486:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1212,"nodeType":"IfStatement","src":"19482:90:5","trueBody":{"id":1211,"nodeType":"Block","src":"19503:69:5","statements":[{"expression":{"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1203,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19521:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1206,"nodeType":"ExpressionStatement","src":"19521:9:5"},{"expression":{"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1207,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19548:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1210,"nodeType":"ExpressionStatement","src":"19548:9:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1213,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19589:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1228,"nodeType":"IfStatement","src":"19585:89:5","trueBody":{"id":1227,"nodeType":"Block","src":"19606:68:5","statements":[{"expression":{"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1219,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19624:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1222,"nodeType":"ExpressionStatement","src":"19624:9:5"},{"expression":{"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1223,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19651:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1226,"nodeType":"ExpressionStatement","src":"19651:8:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1229,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19691:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"19687:87:5","trueBody":{"id":1243,"nodeType":"Block","src":"19707:67:5","statements":[{"expression":{"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1235,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19725:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1238,"nodeType":"ExpressionStatement","src":"19725:8:5"},{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1239,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19751:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1242,"nodeType":"ExpressionStatement","src":"19751:8:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19791:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":1249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1260,"nodeType":"IfStatement","src":"19787:87:5","trueBody":{"id":1259,"nodeType":"Block","src":"19807:67:5","statements":[{"expression":{"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1251,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19825:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1254,"nodeType":"ExpressionStatement","src":"19825:8:5"},{"expression":{"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1255,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19851:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1258,"nodeType":"ExpressionStatement","src":"19851:8:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"19891:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":1265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1272,"nodeType":"IfStatement","src":"19887:61:5","trueBody":{"id":1271,"nodeType":"Block","src":"19907:41:5","statements":[{"expression":{"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1267,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"19925:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1270,"nodeType":"ExpressionStatement","src":"19925:8:5"}]}},{"expression":{"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1273,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"20368:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1275,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"20378:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1281,"nodeType":"ExpressionStatement","src":"20368:18:5"},{"expression":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1282,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22273:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22279:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22284:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1285,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22288:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ExpressionStatement","src":"22273:23:5"},{"expression":{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1293,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22382:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22388:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22393:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1296,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22397:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"nodeType":"ExpressionStatement","src":"22382:23:5"},{"expression":{"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1304,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22493:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1305,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22499:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22504:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1307,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22508:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ExpressionStatement","src":"22493:23:5"},{"expression":{"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1315,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22602:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1316,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22608:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22613:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1318,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22617:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ExpressionStatement","src":"22602:23:5"},{"expression":{"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1326,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22712:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22718:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22723:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1329,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22727:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1336,"nodeType":"ExpressionStatement","src":"22712:23:5"},{"expression":{"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1337,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22822:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22828:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"22833:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1340,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"22837:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1347,"nodeType":"ExpressionStatement","src":"22822:23:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1348,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"23211:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"23232:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"23237:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1353,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"23241:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1349,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"23216:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"23216:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1149,"id":1358,"nodeType":"Return","src":"23204:40:5"}]}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"17783:292:5","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:5","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"a","nameLocation":"18102:1:5","nodeType":"VariableDeclaration","scope":1361,"src":"18094:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:5"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"18128:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:5"},"scope":1982,"src":"18080:5181:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1394,"nodeType":"Block","src":"23434:171:5","statements":[{"id":1393,"nodeType":"UncheckedBlock","src":"23444:155:5","statements":[{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"result","nameLocation":"23476:6:5","nodeType":"VariableDeclaration","scope":1393,"src":"23468:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1377,"initialValue":{"arguments":[{"id":1375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"23490:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1361,1395],"referencedDeclaration":1361,"src":"23485:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"23513:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1382,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"23555:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":1381,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"23538:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$388_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"23568:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"23577:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"23586:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1379,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"23522:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"23522:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1371,"id":1392,"nodeType":"Return","src":"23506:82:5"}]}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"23267:86:5","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":1395,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:5","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"a","nameLocation":"23380:1:5","nodeType":"VariableDeclaration","scope":1395,"src":"23372:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:5","nodeType":"VariableDeclaration","scope":1395,"src":"23383:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"Rounding","nameLocations":["23383:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"23383:8:5"},"referencedDeclaration":388,"src":"23383:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:5"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"23425:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:5"},"scope":1982,"src":"23358:247:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"23796:981:5","statements":[{"assignments":[1404],"declarations":[{"constant":false,"id":1404,"mutability":"mutable","name":"result","nameLocation":"23814:6:5","nodeType":"VariableDeclaration","scope":1590,"src":"23806:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1406,"initialValue":{"hexValue":"30","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:5"},{"assignments":[1408],"declarations":[{"constant":false,"id":1408,"mutability":"mutable","name":"exp","nameLocation":"23842:3:5","nodeType":"VariableDeclaration","scope":1590,"src":"23834:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1409,"nodeType":"VariableDeclarationStatement","src":"23834:11:5"},{"id":1587,"nodeType":"UncheckedBlock","src":"23855:893:5","statements":[{"expression":{"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1410,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"23879:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"23907:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1412,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"23891:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"23891:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1425,"nodeType":"ExpressionStatement","src":"23879:51:5"},{"expression":{"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"23944:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1427,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"23954:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1429,"nodeType":"ExpressionStatement","src":"23944:13:5"},{"expression":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1430,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"23971:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1431,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"23981:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1433,"nodeType":"ExpressionStatement","src":"23971:13:5"},{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1434,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"23999:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24026:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1436,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24010:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24010:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1449,"nodeType":"ExpressionStatement","src":"23999:49:5"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24062:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1451,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24072:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ExpressionStatement","src":"24062:13:5"},{"expression":{"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24089:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1455,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24099:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1457,"nodeType":"ExpressionStatement","src":"24089:13:5"},{"expression":{"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1458,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24117:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24144:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1460,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24128:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24128:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ExpressionStatement","src":"24117:49:5"},{"expression":{"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24180:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1475,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24190:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1477,"nodeType":"ExpressionStatement","src":"24180:13:5"},{"expression":{"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24207:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1479,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24217:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1481,"nodeType":"ExpressionStatement","src":"24207:13:5"},{"expression":{"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1482,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24235:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24262:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:5","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1484,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24246:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24246:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1497,"nodeType":"ExpressionStatement","src":"24235:49:5"},{"expression":{"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24298:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1499,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24308:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1501,"nodeType":"ExpressionStatement","src":"24298:13:5"},{"expression":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24325:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1503,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24335:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1505,"nodeType":"ExpressionStatement","src":"24325:13:5"},{"expression":{"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1506,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24353:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24379:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1508,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24363:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24363:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1521,"nodeType":"ExpressionStatement","src":"24353:47:5"},{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24414:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1523,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24424:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1525,"nodeType":"ExpressionStatement","src":"24414:13:5"},{"expression":{"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24441:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1527,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24451:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"nodeType":"ExpressionStatement","src":"24441:13:5"},{"expression":{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1530,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24469:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24495:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":1538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1532,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24479:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24479:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1545,"nodeType":"ExpressionStatement","src":"24469:47:5"},{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24530:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1547,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24540:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1549,"nodeType":"ExpressionStatement","src":"24530:13:5"},{"expression":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24557:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1551,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24567:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1553,"nodeType":"ExpressionStatement","src":"24557:13:5"},{"expression":{"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1554,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24585:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24611:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":1562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1556,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24595:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24595:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1569,"nodeType":"ExpressionStatement","src":"24585:47:5"},{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24646:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":1571,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24656:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"24646:13:5"},{"expression":{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24673:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1575,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"24683:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1577,"nodeType":"ExpressionStatement","src":"24673:13:5"},{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24701:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"24727:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1579,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"24711:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"24711:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1586,"nodeType":"ExpressionStatement","src":"24701:36:5"}]},{"expression":{"id":1588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"24764:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1402,"id":1589,"nodeType":"Return","src":"24757:13:5"}]},"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"23611:119:5","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:5","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"value","nameLocation":"23757:5:5","nodeType":"VariableDeclaration","scope":1591,"src":"23749:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:5"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"23787:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:5"},"scope":1982,"src":"23735:1042:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1624,"nodeType":"Block","src":"25010:175:5","statements":[{"id":1623,"nodeType":"UncheckedBlock","src":"25020:159:5","statements":[{"assignments":[1603],"declarations":[{"constant":false,"id":1603,"mutability":"mutable","name":"result","nameLocation":"25052:6:5","nodeType":"VariableDeclaration","scope":1623,"src":"25044:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1607,"initialValue":{"arguments":[{"id":1605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"25066:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1604,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1591,1625],"referencedDeclaration":1591,"src":"25061:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"25093:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1612,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"25135:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":1611,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"25118:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$388_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"25153:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"25162:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1609,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"25102:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"25102:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1601,"id":1622,"nodeType":"Return","src":"25086:82:5"}]}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"24783:142:5","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1625,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:5","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"value","nameLocation":"24952:5:5","nodeType":"VariableDeclaration","scope":1625,"src":"24944:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:5","nodeType":"VariableDeclaration","scope":1625,"src":"24959:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":1596,"nodeType":"UserDefinedTypeName","pathNode":{"id":1595,"name":"Rounding","nameLocations":["24959:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"24959:8:5"},"referencedDeclaration":388,"src":"24959:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:5"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1625,"src":"25001:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:5"},"scope":1982,"src":"24930:255:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1753,"nodeType":"Block","src":"25378:854:5","statements":[{"assignments":[1634],"declarations":[{"constant":false,"id":1634,"mutability":"mutable","name":"result","nameLocation":"25396:6:5","nodeType":"VariableDeclaration","scope":1753,"src":"25388:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1636,"initialValue":{"hexValue":"30","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:5"},{"id":1750,"nodeType":"UncheckedBlock","src":"25416:787:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25444:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1653,"nodeType":"IfStatement","src":"25440:103:5","trueBody":{"id":1652,"nodeType":"Block","src":"25463:80:5","statements":[{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25481:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1647,"nodeType":"ExpressionStatement","src":"25481:17:5"},{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25516:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ExpressionStatement","src":"25516:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25560:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1670,"nodeType":"IfStatement","src":"25556:103:5","trueBody":{"id":1669,"nodeType":"Block","src":"25579:80:5","statements":[{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25597:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ExpressionStatement","src":"25597:17:5"},{"expression":{"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25632:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1668,"nodeType":"ExpressionStatement","src":"25632:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25676:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"nodeType":"IfStatement","src":"25672:103:5","trueBody":{"id":1686,"nodeType":"Block","src":"25695:80:5","statements":[{"expression":{"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25713:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1681,"nodeType":"ExpressionStatement","src":"25713:17:5"},{"expression":{"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25748:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1685,"nodeType":"ExpressionStatement","src":"25748:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25792:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1704,"nodeType":"IfStatement","src":"25788:100:5","trueBody":{"id":1703,"nodeType":"Block","src":"25810:78:5","statements":[{"expression":{"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25828:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1698,"nodeType":"ExpressionStatement","src":"25828:16:5"},{"expression":{"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25862:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1702,"nodeType":"ExpressionStatement","src":"25862:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25905:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1721,"nodeType":"IfStatement","src":"25901:100:5","trueBody":{"id":1720,"nodeType":"Block","src":"25923:78:5","statements":[{"expression":{"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"25941:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1715,"nodeType":"ExpressionStatement","src":"25941:16:5"},{"expression":{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25975:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1719,"nodeType":"ExpressionStatement","src":"25975:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"26018:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1738,"nodeType":"IfStatement","src":"26014:100:5","trueBody":{"id":1737,"nodeType":"Block","src":"26036:78:5","statements":[{"expression":{"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"26054:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1732,"nodeType":"ExpressionStatement","src":"26054:16:5"},{"expression":{"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"26088:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1736,"nodeType":"ExpressionStatement","src":"26088:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"26131:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1749,"nodeType":"IfStatement","src":"26127:66:5","trueBody":{"id":1748,"nodeType":"Block","src":"26149:44:5","statements":[{"expression":{"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"26167:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1747,"nodeType":"ExpressionStatement","src":"26167:11:5"}]}}]},{"expression":{"id":1751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"26219:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1632,"id":1752,"nodeType":"Return","src":"26212:13:5"}]},"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"25191:120:5","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:5","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"value","nameLocation":"25339:5:5","nodeType":"VariableDeclaration","scope":1754,"src":"25331:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:5"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"25369:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:5"},"scope":1982,"src":"25316:916:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1787,"nodeType":"Block","src":"26467:177:5","statements":[{"id":1786,"nodeType":"UncheckedBlock","src":"26477:161:5","statements":[{"assignments":[1766],"declarations":[{"constant":false,"id":1766,"mutability":"mutable","name":"result","nameLocation":"26509:6:5","nodeType":"VariableDeclaration","scope":1786,"src":"26501:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1770,"initialValue":{"arguments":[{"id":1768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"26524:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1767,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1754,1788],"referencedDeclaration":1754,"src":"26518:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"26551:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1775,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"26593:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":1774,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"26576:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$388_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"26612:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"26621:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1772,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"26560:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"26560:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1764,"id":1785,"nodeType":"Return","src":"26544:83:5"}]}]},"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"26238:143:5","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1788,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:5","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"value","nameLocation":"26409:5:5","nodeType":"VariableDeclaration","scope":1788,"src":"26401:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:5","nodeType":"VariableDeclaration","scope":1788,"src":"26416:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":1759,"nodeType":"UserDefinedTypeName","pathNode":{"id":1758,"name":"Rounding","nameLocations":["26416:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"26416:8:5"},"referencedDeclaration":388,"src":"26416:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:5"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"26458:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:5"},"scope":1982,"src":"26386:258:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1924,"nodeType":"Block","src":"26964:674:5","statements":[{"assignments":[1797],"declarations":[{"constant":false,"id":1797,"mutability":"mutable","name":"result","nameLocation":"26982:6:5","nodeType":"VariableDeclaration","scope":1924,"src":"26974:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1799,"initialValue":{"hexValue":"30","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:5"},{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:5","nodeType":"VariableDeclaration","scope":1924,"src":"27002:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1802,"nodeType":"VariableDeclarationStatement","src":"27002:12:5"},{"id":1921,"nodeType":"UncheckedBlock","src":"27024:585:5","statements":[{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1803,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27048:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27071:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1804,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27055:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27055:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"nodeType":"ExpressionStatement","src":"27048:46:5"},{"expression":{"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27108:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1818,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27118:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1822,"nodeType":"ExpressionStatement","src":"27108:20:5"},{"expression":{"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1823,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27142:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27152:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1828,"nodeType":"ExpressionStatement","src":"27142:19:5"},{"expression":{"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1829,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27176:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27199:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1830,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27183:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27183:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1842,"nodeType":"ExpressionStatement","src":"27176:45:5"},{"expression":{"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27235:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1844,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27245:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1848,"nodeType":"ExpressionStatement","src":"27235:19:5"},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27268:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1850,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27278:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1854,"nodeType":"ExpressionStatement","src":"27268:18:5"},{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1855,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27301:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27324:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1856,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27308:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27308:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"27301:45:5"},{"expression":{"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27360:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1870,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27370:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1874,"nodeType":"ExpressionStatement","src":"27360:19:5"},{"expression":{"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27393:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1876,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27403:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1880,"nodeType":"ExpressionStatement","src":"27393:18:5"},{"expression":{"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1881,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27426:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27449:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:5","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1882,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27433:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27433:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1894,"nodeType":"ExpressionStatement","src":"27426:45:5"},{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27485:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1896,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27495:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1900,"nodeType":"ExpressionStatement","src":"27485:19:5"},{"expression":{"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27518:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1902,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"27528:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1906,"nodeType":"ExpressionStatement","src":"27518:18:5"},{"expression":{"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27551:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"27577:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1908,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27561:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27561:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ExpressionStatement","src":"27551:47:5"}]},{"expression":{"id":1922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"27625:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1795,"id":1923,"nodeType":"Return","src":"27618:13:5"}]},"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"26650:246:5","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1925,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:5","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"value","nameLocation":"26925:5:5","nodeType":"VariableDeclaration","scope":1925,"src":"26917:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:5"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1925,"src":"26955:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:5"},"scope":1982,"src":"26901:737:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1961,"nodeType":"Block","src":"27875:184:5","statements":[{"id":1960,"nodeType":"UncheckedBlock","src":"27885:168:5","statements":[{"assignments":[1937],"declarations":[{"constant":false,"id":1937,"mutability":"mutable","name":"result","nameLocation":"27917:6:5","nodeType":"VariableDeclaration","scope":1960,"src":"27909:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1941,"initialValue":{"arguments":[{"id":1939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"27933:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1938,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1925,1962],"referencedDeclaration":1925,"src":"27926:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"27960:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1946,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"28002:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":1945,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"27985:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$388_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"28021:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"28036:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1943,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"27969:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3747_$","typeString":"type(library SafeCast)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"27969:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1935,"id":1959,"nodeType":"Return","src":"27953:89:5"}]}]},"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"27644:144:5","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:5","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"value","nameLocation":"27817:5:5","nodeType":"VariableDeclaration","scope":1962,"src":"27809:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:5","nodeType":"VariableDeclaration","scope":1962,"src":"27824:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":1930,"nodeType":"UserDefinedTypeName","pathNode":{"id":1929,"name":"Rounding","nameLocations":["27824:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"27824:8:5"},"referencedDeclaration":388,"src":"27824:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:5"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"27866:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:5"},"scope":1982,"src":"27793:266:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"28257:48:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1973,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"28280:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1971,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:5","typeDescriptions":{}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1970,"id":1979,"nodeType":"Return","src":"28267:31:5"}]},"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"28065:113:5","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:5","nodeType":"FunctionDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:5","nodeType":"VariableDeclaration","scope":1981,"src":"28209:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"},"typeName":{"id":1965,"nodeType":"UserDefinedTypeName","pathNode":{"id":1964,"name":"Rounding","nameLocations":["28209:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"28209:8:5"},"referencedDeclaration":388,"src":"28209:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$388","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:5"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"28251:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1968,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:5"},"scope":1982,"src":"28183:122:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1983,"src":"281:28026:5","usedErrors":[],"usedEvents":[]}],"src":"103:28205:5"},"id":5},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[3747]},"id":3748,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1984,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"218:550:6","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":3747,"linearizedBaseContracts":[3747],"name":"SafeCast","nameLocation":"777:8:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"792:68:6","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":1992,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:6","nodeType":"ErrorDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"bits","nameLocation":"908:4:6","nodeType":"VariableDeclaration","scope":1992,"src":"902:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1987,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"value","nameLocation":"922:5:6","nodeType":"VariableDeclaration","scope":1992,"src":"914:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:6"},"src":"865:64:6"},{"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"935:75:6","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":1997,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:6","nodeType":"ErrorDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"1056:5:6","nodeType":"VariableDeclaration","scope":1997,"src":"1049:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1994,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:6"},"src":"1015:48:6"},{"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"1069:67:6","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":2004,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:6","nodeType":"ErrorDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"bits","nameLocation":"1183:4:6","nodeType":"VariableDeclaration","scope":2004,"src":"1177:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1999,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"value","nameLocation":"1196:5:6","nodeType":"VariableDeclaration","scope":2004,"src":"1189:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2001,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:6"},"src":"1141:62:6"},{"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"1209:75:6","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2009,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:6","nodeType":"ErrorDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"value","nameLocation":"1331:5:6","nodeType":"VariableDeclaration","scope":2009,"src":"1323:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:6"},"src":"1289:49:6"},{"body":{"id":2036,"nodeType":"Block","src":"1695:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1709:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2019,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2018,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:6","memberName":"max","nodeType":"MemberAccess","src":"1717:17:6","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2030,"nodeType":"IfStatement","src":"1705:105:6","trueBody":{"id":2029,"nodeType":"Block","src":"1736:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:6","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1793:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2024,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"1757:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2028,"nodeType":"RevertStatement","src":"1750:49:6"}]}},{"expression":{"arguments":[{"id":2033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1834:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2031,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:6","typeDescriptions":{}}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2016,"id":2035,"nodeType":"Return","src":"1819:21:6"}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"1344:280:6","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:6","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"value","nameLocation":"1656:5:6","nodeType":"VariableDeclaration","scope":2037,"src":"1648:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:6"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"1686:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2014,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:6","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:6"},"scope":3747,"src":"1629:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2064,"nodeType":"Block","src":"2204:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"2218:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2047,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2046,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:6","memberName":"max","nodeType":"MemberAccess","src":"2226:17:6","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2058,"nodeType":"IfStatement","src":"2214:105:6","trueBody":{"id":2057,"nodeType":"Block","src":"2245:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:6","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"2302:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2052,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"2266:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2056,"nodeType":"RevertStatement","src":"2259:49:6"}]}},{"expression":{"arguments":[{"id":2061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"2343:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2059,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:6","typeDescriptions":{}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2044,"id":2063,"nodeType":"Return","src":"2328:21:6"}]},"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"1853:280:6","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:6","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"value","nameLocation":"2165:5:6","nodeType":"VariableDeclaration","scope":2065,"src":"2157:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:6"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"2195:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2042,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:6","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:6"},"scope":3747,"src":"2138:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"2713:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"2727:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2075,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2074,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:6","memberName":"max","nodeType":"MemberAccess","src":"2735:17:6","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2086,"nodeType":"IfStatement","src":"2723:105:6","trueBody":{"id":2085,"nodeType":"Block","src":"2754:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:6","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"2811:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2080,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"2775:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2084,"nodeType":"RevertStatement","src":"2768:49:6"}]}},{"expression":{"arguments":[{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"2852:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2087,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:6","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2072,"id":2091,"nodeType":"Return","src":"2837:21:6"}]},"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"2362:280:6","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:6","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"value","nameLocation":"2674:5:6","nodeType":"VariableDeclaration","scope":2093,"src":"2666:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:6"},"returnParameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"2704:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2070,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:6","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:6"},"scope":3747,"src":"2647:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2120,"nodeType":"Block","src":"3222:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"3236:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2103,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2102,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:6","memberName":"max","nodeType":"MemberAccess","src":"3244:17:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2114,"nodeType":"IfStatement","src":"3232:105:6","trueBody":{"id":2113,"nodeType":"Block","src":"3263:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:6","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"3320:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2108,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"3284:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2112,"nodeType":"RevertStatement","src":"3277:49:6"}]}},{"expression":{"arguments":[{"id":2117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"3361:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2115,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:6","typeDescriptions":{}}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2100,"id":2119,"nodeType":"Return","src":"3346:21:6"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"2871:280:6","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:6","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"value","nameLocation":"3183:5:6","nodeType":"VariableDeclaration","scope":2121,"src":"3175:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:6"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2121,"src":"3213:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2098,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:6"},"scope":3747,"src":"3156:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2148,"nodeType":"Block","src":"3731:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"3745:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2131,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":2130,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:6","memberName":"max","nodeType":"MemberAccess","src":"3753:17:6","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2142,"nodeType":"IfStatement","src":"3741:105:6","trueBody":{"id":2141,"nodeType":"Block","src":"3772:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:6","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"3829:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2136,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"3793:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2140,"nodeType":"RevertStatement","src":"3786:49:6"}]}},{"expression":{"arguments":[{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"3870:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2143,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:6","typeDescriptions":{}}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":2128,"id":2147,"nodeType":"Return","src":"3855:21:6"}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"3380:280:6","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:6","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"value","nameLocation":"3692:5:6","nodeType":"VariableDeclaration","scope":2149,"src":"3684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:6"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"3722:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2126,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:6","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:6"},"scope":3747,"src":"3665:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"4240:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"4254:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2159,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2158,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:6","memberName":"max","nodeType":"MemberAccess","src":"4262:17:6","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2170,"nodeType":"IfStatement","src":"4250:105:6","trueBody":{"id":2169,"nodeType":"Block","src":"4281:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:6","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"4338:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2164,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"4302:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2168,"nodeType":"RevertStatement","src":"4295:49:6"}]}},{"expression":{"arguments":[{"id":2173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"4379:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2171,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:6","typeDescriptions":{}}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2156,"id":2175,"nodeType":"Return","src":"4364:21:6"}]},"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"3889:280:6","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:6","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"value","nameLocation":"4201:5:6","nodeType":"VariableDeclaration","scope":2177,"src":"4193:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:6"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2177,"src":"4231:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2154,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:6","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:6"},"scope":3747,"src":"4174:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"4749:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4763:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2187,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2186,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:6","memberName":"max","nodeType":"MemberAccess","src":"4771:17:6","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"nodeType":"IfStatement","src":"4759:105:6","trueBody":{"id":2197,"nodeType":"Block","src":"4790:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:6","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4847:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2192,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"4811:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2196,"nodeType":"RevertStatement","src":"4804:49:6"}]}},{"expression":{"arguments":[{"id":2201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4888:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2199,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:6","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2184,"id":2203,"nodeType":"Return","src":"4873:21:6"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"4398:280:6","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:6","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"value","nameLocation":"4710:5:6","nodeType":"VariableDeclaration","scope":2205,"src":"4702:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:6"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2205,"src":"4740:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2182,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:6","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:6"},"scope":3747,"src":"4683:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2232,"nodeType":"Block","src":"5258:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"5272:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2215,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2214,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:6","memberName":"max","nodeType":"MemberAccess","src":"5280:17:6","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2226,"nodeType":"IfStatement","src":"5268:105:6","trueBody":{"id":2225,"nodeType":"Block","src":"5299:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:6","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"5356:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2220,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5320:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2224,"nodeType":"RevertStatement","src":"5313:49:6"}]}},{"expression":{"arguments":[{"id":2229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"5397:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2227,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:6","typeDescriptions":{}}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2212,"id":2231,"nodeType":"Return","src":"5382:21:6"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"4907:280:6","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2233,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:6","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"value","nameLocation":"5219:5:6","nodeType":"VariableDeclaration","scope":2233,"src":"5211:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:6"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2233,"src":"5249:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2210,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:6","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:6"},"scope":3747,"src":"5192:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2260,"nodeType":"Block","src":"5767:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"5781:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2243,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":2242,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:6","memberName":"max","nodeType":"MemberAccess","src":"5789:17:6","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2254,"nodeType":"IfStatement","src":"5777:105:6","trueBody":{"id":2253,"nodeType":"Block","src":"5808:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:6","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"5865:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2248,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5829:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2252,"nodeType":"RevertStatement","src":"5822:49:6"}]}},{"expression":{"arguments":[{"id":2257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"5906:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2255,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:6","typeDescriptions":{}}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":2240,"id":2259,"nodeType":"Return","src":"5891:21:6"}]},"documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"5416:280:6","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":2261,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:6","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"value","nameLocation":"5728:5:6","nodeType":"VariableDeclaration","scope":2261,"src":"5720:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:6"},"returnParameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2261,"src":"5758:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":2238,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:6","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:6"},"scope":3747,"src":"5701:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2288,"nodeType":"Block","src":"6276:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6290:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2271,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":2270,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:6","memberName":"max","nodeType":"MemberAccess","src":"6298:17:6","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2282,"nodeType":"IfStatement","src":"6286:105:6","trueBody":{"id":2281,"nodeType":"Block","src":"6317:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:6","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":2278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2276,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"6338:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2280,"nodeType":"RevertStatement","src":"6331:49:6"}]}},{"expression":{"arguments":[{"id":2285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6415:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2283,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:6","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":2268,"id":2287,"nodeType":"Return","src":"6400:21:6"}]},"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"5925:280:6","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:6","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"value","nameLocation":"6237:5:6","nodeType":"VariableDeclaration","scope":2289,"src":"6229:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:6"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"6267:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":2266,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:6","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:6"},"scope":3747,"src":"6210:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"6785:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6799:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2299,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":2298,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:6","memberName":"max","nodeType":"MemberAccess","src":"6807:17:6","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2310,"nodeType":"IfStatement","src":"6795:105:6","trueBody":{"id":2309,"nodeType":"Block","src":"6826:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:6","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":2306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6883:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2304,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"6847:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2308,"nodeType":"RevertStatement","src":"6840:49:6"}]}},{"expression":{"arguments":[{"id":2313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6924:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2311,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:6","typeDescriptions":{}}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":2296,"id":2315,"nodeType":"Return","src":"6909:21:6"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"6434:280:6","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:6","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"value","nameLocation":"6746:5:6","nodeType":"VariableDeclaration","scope":2317,"src":"6738:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:6"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"6776:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":2294,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:6","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:6"},"scope":3747,"src":"6719:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2344,"nodeType":"Block","src":"7294:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7308:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2327,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":2326,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:6","memberName":"max","nodeType":"MemberAccess","src":"7316:17:6","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2338,"nodeType":"IfStatement","src":"7304:105:6","trueBody":{"id":2337,"nodeType":"Block","src":"7335:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:6","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":2334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7392:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2332,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"7356:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2336,"nodeType":"RevertStatement","src":"7349:49:6"}]}},{"expression":{"arguments":[{"id":2341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7433:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2339,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:6","typeDescriptions":{}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":2324,"id":2343,"nodeType":"Return","src":"7418:21:6"}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"6943:280:6","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":2345,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:6","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"value","nameLocation":"7255:5:6","nodeType":"VariableDeclaration","scope":2345,"src":"7247:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:6"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"7285:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2322,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:6","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:6"},"scope":3747,"src":"7228:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2372,"nodeType":"Block","src":"7803:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7817:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2355,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":2354,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:6","memberName":"max","nodeType":"MemberAccess","src":"7825:17:6","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2366,"nodeType":"IfStatement","src":"7813:105:6","trueBody":{"id":2365,"nodeType":"Block","src":"7844:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:6","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":2362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7901:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2360,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"7865:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2364,"nodeType":"RevertStatement","src":"7858:49:6"}]}},{"expression":{"arguments":[{"id":2369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7942:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2367,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:6","typeDescriptions":{}}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":2352,"id":2371,"nodeType":"Return","src":"7927:21:6"}]},"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"7452:280:6","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:6","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"value","nameLocation":"7764:5:6","nodeType":"VariableDeclaration","scope":2373,"src":"7756:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:6"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2373,"src":"7794:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":2350,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:6","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:6"},"scope":3747,"src":"7737:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2400,"nodeType":"Block","src":"8312:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"8326:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2383,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":2382,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:6","memberName":"max","nodeType":"MemberAccess","src":"8334:17:6","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2394,"nodeType":"IfStatement","src":"8322:105:6","trueBody":{"id":2393,"nodeType":"Block","src":"8353:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:6","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":2390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"8410:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2388,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8374:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2392,"nodeType":"RevertStatement","src":"8367:49:6"}]}},{"expression":{"arguments":[{"id":2397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"8451:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2395,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:6","typeDescriptions":{}}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":2380,"id":2399,"nodeType":"Return","src":"8436:21:6"}]},"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"7961:280:6","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":2401,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:6","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"value","nameLocation":"8273:5:6","nodeType":"VariableDeclaration","scope":2401,"src":"8265:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:6"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2401,"src":"8303:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":2378,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:6","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:6"},"scope":3747,"src":"8246:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"8821:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8835:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2411,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":2410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:6","memberName":"max","nodeType":"MemberAccess","src":"8843:17:6","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2422,"nodeType":"IfStatement","src":"8831:105:6","trueBody":{"id":2421,"nodeType":"Block","src":"8862:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:6","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":2418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8919:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2416,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8883:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2420,"nodeType":"RevertStatement","src":"8876:49:6"}]}},{"expression":{"arguments":[{"id":2425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8960:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2423,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:6","typeDescriptions":{}}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":2408,"id":2427,"nodeType":"Return","src":"8945:21:6"}]},"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"8470:280:6","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:6","nodeType":"FunctionDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"value","nameLocation":"8782:5:6","nodeType":"VariableDeclaration","scope":2429,"src":"8774:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:6"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"8812:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":2406,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:6","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:6"},"scope":3747,"src":"8755:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2456,"nodeType":"Block","src":"9330:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9344:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2439,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":2438,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:6","memberName":"max","nodeType":"MemberAccess","src":"9352:17:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"nodeType":"IfStatement","src":"9340:105:6","trueBody":{"id":2449,"nodeType":"Block","src":"9371:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":2446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9428:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2444,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"9392:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2448,"nodeType":"RevertStatement","src":"9385:49:6"}]}},{"expression":{"arguments":[{"id":2453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"9469:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2451,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:6","typeDescriptions":{}}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2436,"id":2455,"nodeType":"Return","src":"9454:21:6"}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"8979:280:6","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:6","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"value","nameLocation":"9291:5:6","nodeType":"VariableDeclaration","scope":2457,"src":"9283:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:6"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2457,"src":"9321:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2434,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:6"},"scope":3747,"src":"9264:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2484,"nodeType":"Block","src":"9839:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"9853:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2467,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":2466,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:6","memberName":"max","nodeType":"MemberAccess","src":"9861:17:6","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2478,"nodeType":"IfStatement","src":"9849:105:6","trueBody":{"id":2477,"nodeType":"Block","src":"9880:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:6","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":2474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"9937:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2472,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"9901:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2476,"nodeType":"RevertStatement","src":"9894:49:6"}]}},{"expression":{"arguments":[{"id":2481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"9978:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2479,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:6","typeDescriptions":{}}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":2464,"id":2483,"nodeType":"Return","src":"9963:21:6"}]},"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"9488:280:6","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":2485,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:6","nodeType":"FunctionDefinition","parameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"value","nameLocation":"9800:5:6","nodeType":"VariableDeclaration","scope":2485,"src":"9792:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:6"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2485,"src":"9830:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":2462,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:6","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:6"},"scope":3747,"src":"9773:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2512,"nodeType":"Block","src":"10348:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"10362:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2495,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":2494,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:6","memberName":"max","nodeType":"MemberAccess","src":"10370:17:6","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2506,"nodeType":"IfStatement","src":"10358:105:6","trueBody":{"id":2505,"nodeType":"Block","src":"10389:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:6","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":2502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"10446:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2500,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"10410:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2504,"nodeType":"RevertStatement","src":"10403:49:6"}]}},{"expression":{"arguments":[{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"10487:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2507,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:6","typeDescriptions":{}}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":2492,"id":2511,"nodeType":"Return","src":"10472:21:6"}]},"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"9997:280:6","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":2513,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:6","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"value","nameLocation":"10309:5:6","nodeType":"VariableDeclaration","scope":2513,"src":"10301:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:6"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2513,"src":"10339:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2490,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:6","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:6"},"scope":3747,"src":"10282:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2540,"nodeType":"Block","src":"10857:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"10871:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":2523,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":2522,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:6","memberName":"max","nodeType":"MemberAccess","src":"10879:17:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"10867:105:6","trueBody":{"id":2533,"nodeType":"Block","src":"10898:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:6","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":2530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"10955:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2528,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"10919:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2532,"nodeType":"RevertStatement","src":"10912:49:6"}]}},{"expression":{"arguments":[{"id":2537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"10996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":2535,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:6","typeDescriptions":{}}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":2520,"id":2539,"nodeType":"Return","src":"10981:21:6"}]},"documentation":{"id":2514,"nodeType":"StructuredDocumentation","src":"10506:280:6","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:6","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"value","nameLocation":"10818:5:6","nodeType":"VariableDeclaration","scope":2541,"src":"10810:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:6"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"10848:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":2518,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:6"},"scope":3747,"src":"10791:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2568,"nodeType":"Block","src":"11360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"11374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2551,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":2550,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:6","memberName":"max","nodeType":"MemberAccess","src":"11382:16:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2562,"nodeType":"IfStatement","src":"11370:103:6","trueBody":{"id":2561,"nodeType":"Block","src":"11400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":2558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"11456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2556,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"11421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2560,"nodeType":"RevertStatement","src":"11414:48:6"}]}},{"expression":{"arguments":[{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"11496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2563,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:6","typeDescriptions":{}}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":2548,"id":2567,"nodeType":"Return","src":"11482:20:6"}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"11015:276:6","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"value","nameLocation":"11322:5:6","nodeType":"VariableDeclaration","scope":2569,"src":"11314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:6"},"returnParameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2569,"src":"11352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2546,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:6"},"scope":3747,"src":"11296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"11860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"11874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":2579,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":2578,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:6","memberName":"max","nodeType":"MemberAccess","src":"11882:16:6","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2590,"nodeType":"IfStatement","src":"11870:103:6","trueBody":{"id":2589,"nodeType":"Block","src":"11900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":2586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"11956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2584,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"11921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2588,"nodeType":"RevertStatement","src":"11914:48:6"}]}},{"expression":{"arguments":[{"id":2593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"11996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":2591,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:6","typeDescriptions":{}}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":2576,"id":2595,"nodeType":"Return","src":"11982:20:6"}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"11515:276:6","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:6","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"value","nameLocation":"11822:5:6","nodeType":"VariableDeclaration","scope":2597,"src":"11814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:6"},"returnParameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"11852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":2574,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:6","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:6"},"scope":3747,"src":"11796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2624,"nodeType":"Block","src":"12360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"12374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":2607,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":2606,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:6","memberName":"max","nodeType":"MemberAccess","src":"12382:16:6","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"nodeType":"IfStatement","src":"12370:103:6","trueBody":{"id":2617,"nodeType":"Block","src":"12400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":2614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"12456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2612,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"12421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2616,"nodeType":"RevertStatement","src":"12414:48:6"}]}},{"expression":{"arguments":[{"id":2621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"12496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":2619,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:6","typeDescriptions":{}}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":2604,"id":2623,"nodeType":"Return","src":"12482:20:6"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"12015:276:6","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"value","nameLocation":"12322:5:6","nodeType":"VariableDeclaration","scope":2625,"src":"12314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:6"},"returnParameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"12352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":2602,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:6","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:6"},"scope":3747,"src":"12296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2652,"nodeType":"Block","src":"12860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"12874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":2635,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":2634,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:6","memberName":"max","nodeType":"MemberAccess","src":"12882:16:6","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2646,"nodeType":"IfStatement","src":"12870:103:6","trueBody":{"id":2645,"nodeType":"Block","src":"12900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":2642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"12956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2640,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"12921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2644,"nodeType":"RevertStatement","src":"12914:48:6"}]}},{"expression":{"arguments":[{"id":2649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"12996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":2647,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:6","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":2632,"id":2651,"nodeType":"Return","src":"12982:20:6"}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"12515:276:6","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":2653,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:6","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"value","nameLocation":"12822:5:6","nodeType":"VariableDeclaration","scope":2653,"src":"12814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:6"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2653,"src":"12852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":2630,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:6","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:6"},"scope":3747,"src":"12796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2680,"nodeType":"Block","src":"13360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"13374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2663,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":2662,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:6","memberName":"max","nodeType":"MemberAccess","src":"13382:16:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2674,"nodeType":"IfStatement","src":"13370:103:6","trueBody":{"id":2673,"nodeType":"Block","src":"13400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":2670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"13456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2668,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"13421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2672,"nodeType":"RevertStatement","src":"13414:48:6"}]}},{"expression":{"arguments":[{"id":2677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"13496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2675,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:6","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":2660,"id":2679,"nodeType":"Return","src":"13482:20:6"}]},"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"13015:276:6","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":2681,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"value","nameLocation":"13322:5:6","nodeType":"VariableDeclaration","scope":2681,"src":"13314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:6"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2681,"src":"13352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2658,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:6"},"scope":3747,"src":"13296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"13860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"13874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":2691,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":2690,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:6","memberName":"max","nodeType":"MemberAccess","src":"13882:16:6","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2702,"nodeType":"IfStatement","src":"13870:103:6","trueBody":{"id":2701,"nodeType":"Block","src":"13900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":2698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"13956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2696,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"13921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2700,"nodeType":"RevertStatement","src":"13914:48:6"}]}},{"expression":{"arguments":[{"id":2705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"13996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":2703,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:6","typeDescriptions":{}}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":2688,"id":2707,"nodeType":"Return","src":"13982:20:6"}]},"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"13515:276:6","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:6","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"value","nameLocation":"13822:5:6","nodeType":"VariableDeclaration","scope":2709,"src":"13814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:6"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"13852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":2686,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:6","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:6"},"scope":3747,"src":"13796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2736,"nodeType":"Block","src":"14360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"14374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2719,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2718,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:6","memberName":"max","nodeType":"MemberAccess","src":"14382:16:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2730,"nodeType":"IfStatement","src":"14370:103:6","trueBody":{"id":2729,"nodeType":"Block","src":"14400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"14456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2724,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"14421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2728,"nodeType":"RevertStatement","src":"14414:48:6"}]}},{"expression":{"arguments":[{"id":2733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"14496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2731,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:6","typeDescriptions":{}}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":2716,"id":2735,"nodeType":"Return","src":"14482:20:6"}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"14015:276:6","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"value","nameLocation":"14322:5:6","nodeType":"VariableDeclaration","scope":2737,"src":"14314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:6"},"returnParameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2737,"src":"14352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2714,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:6"},"scope":3747,"src":"14296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2764,"nodeType":"Block","src":"14860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"14874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2747,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":2746,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:6","memberName":"max","nodeType":"MemberAccess","src":"14882:16:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2758,"nodeType":"IfStatement","src":"14870:103:6","trueBody":{"id":2757,"nodeType":"Block","src":"14900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"14956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2752,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"14921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2756,"nodeType":"RevertStatement","src":"14914:48:6"}]}},{"expression":{"arguments":[{"id":2761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"14996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2759,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:6","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":2744,"id":2763,"nodeType":"Return","src":"14982:20:6"}]},"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"14515:276:6","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":2765,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:6","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"value","nameLocation":"14822:5:6","nodeType":"VariableDeclaration","scope":2765,"src":"14814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:6"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2765,"src":"14852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":2742,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:6"},"scope":3747,"src":"14796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"15360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"15374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2775,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":2774,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:6","memberName":"max","nodeType":"MemberAccess","src":"15382:16:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2786,"nodeType":"IfStatement","src":"15370:103:6","trueBody":{"id":2785,"nodeType":"Block","src":"15400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"15456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2780,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"15421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2784,"nodeType":"RevertStatement","src":"15414:48:6"}]}},{"expression":{"arguments":[{"id":2789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"15496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2787,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:6","typeDescriptions":{}}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2772,"id":2791,"nodeType":"Return","src":"15482:20:6"}]},"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"15015:276:6","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"value","nameLocation":"15322:5:6","nodeType":"VariableDeclaration","scope":2793,"src":"15314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:6"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"15352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2770,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:6"},"scope":3747,"src":"15296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2820,"nodeType":"Block","src":"15860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"15874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2803,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":2802,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:6","memberName":"max","nodeType":"MemberAccess","src":"15882:16:6","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2814,"nodeType":"IfStatement","src":"15870:103:6","trueBody":{"id":2813,"nodeType":"Block","src":"15900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":2810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"15956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2808,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"15921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2812,"nodeType":"RevertStatement","src":"15914:48:6"}]}},{"expression":{"arguments":[{"id":2817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"15996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2815,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:6","typeDescriptions":{}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":2800,"id":2819,"nodeType":"Return","src":"15982:20:6"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"15515:276:6","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":2821,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:6","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"value","nameLocation":"15822:5:6","nodeType":"VariableDeclaration","scope":2821,"src":"15814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:6"},"returnParameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2821,"src":"15852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2798,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:6","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:6"},"scope":3747,"src":"15796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2848,"nodeType":"Block","src":"16360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"16374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2831,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":2830,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:6","memberName":"max","nodeType":"MemberAccess","src":"16382:16:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2842,"nodeType":"IfStatement","src":"16370:103:6","trueBody":{"id":2841,"nodeType":"Block","src":"16400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"16456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2836,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"16421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2840,"nodeType":"RevertStatement","src":"16414:48:6"}]}},{"expression":{"arguments":[{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"16496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2843,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:6","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":2828,"id":2847,"nodeType":"Return","src":"16482:20:6"}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"16015:276:6","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:6","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"value","nameLocation":"16322:5:6","nodeType":"VariableDeclaration","scope":2849,"src":"16314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:6"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2849,"src":"16352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2826,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:6"},"scope":3747,"src":"16296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2876,"nodeType":"Block","src":"16854:146:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"16868:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2859,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2858,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:6","memberName":"max","nodeType":"MemberAccess","src":"16876:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2870,"nodeType":"IfStatement","src":"16864:101:6","trueBody":{"id":2869,"nodeType":"Block","src":"16893:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"16948:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2864,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"16914:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2868,"nodeType":"RevertStatement","src":"16907:47:6"}]}},{"expression":{"arguments":[{"id":2873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"16987:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2871,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:6","typeDescriptions":{}}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2856,"id":2875,"nodeType":"Return","src":"16974:19:6"}]},"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"16515:272:6","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:6","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"value","nameLocation":"16817:5:6","nodeType":"VariableDeclaration","scope":2877,"src":"16809:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:6"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2877,"src":"16847:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2854,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:6"},"scope":3747,"src":"16792:208:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2899,"nodeType":"Block","src":"17236:128:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"17250:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2893,"nodeType":"IfStatement","src":"17246:81:6","trueBody":{"id":2892,"nodeType":"Block","src":"17261:66:6","statements":[{"errorCall":{"arguments":[{"id":2889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"17310:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2888,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"17282:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2891,"nodeType":"RevertStatement","src":"17275:41:6"}]}},{"expression":{"arguments":[{"id":2896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"17351:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:6","typeDescriptions":{}}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2884,"id":2898,"nodeType":"Return","src":"17336:21:6"}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"17006:160:6","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":2900,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:6","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"value","nameLocation":"17197:5:6","nodeType":"VariableDeclaration","scope":2900,"src":"17190:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2879,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:6"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2900,"src":"17227:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:6"},"scope":3747,"src":"17171:193:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2925,"nodeType":"Block","src":"17761:150:6","statements":[{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2908,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"17771:10:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"17791:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2909,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:6","typeDescriptions":{}}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":2914,"nodeType":"ExpressionStatement","src":"17771:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"17811:10:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"17825:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2924,"nodeType":"IfStatement","src":"17807:98:6","trueBody":{"id":2923,"nodeType":"Block","src":"17832:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:6","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"17888:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2918,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"17853:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2922,"nodeType":"RevertStatement","src":"17846:48:6"}]}}]},"documentation":{"id":2901,"nodeType":"StructuredDocumentation","src":"17370:312:6","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2926,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:6","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"value","nameLocation":"17712:5:6","nodeType":"VariableDeclaration","scope":2926,"src":"17705:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2902,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:6"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:6","nodeType":"VariableDeclaration","scope":2926,"src":"17742:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":2905,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:6"},"scope":3747,"src":"17687:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2951,"nodeType":"Block","src":"18308:150:6","statements":[{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2934,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"18318:10:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18338:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2935,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:6","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":2940,"nodeType":"ExpressionStatement","src":"18318:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"18358:10:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18372:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"IfStatement","src":"18354:98:6","trueBody":{"id":2949,"nodeType":"Block","src":"18379:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:6","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"18435:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2944,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"18400:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2948,"nodeType":"RevertStatement","src":"18393:48:6"}]}}]},"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"17917:312:6","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2952,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:6","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"value","nameLocation":"18259:5:6","nodeType":"VariableDeclaration","scope":2952,"src":"18252:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2928,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:6"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:6","nodeType":"VariableDeclaration","scope":2952,"src":"18289:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":2931,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:6"},"scope":3747,"src":"18234:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"18855:150:6","statements":[{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2960,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"18865:10:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"18885:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2961,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:6","typeDescriptions":{}}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":2966,"nodeType":"ExpressionStatement","src":"18865:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"18905:10:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"18919:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2976,"nodeType":"IfStatement","src":"18901:98:6","trueBody":{"id":2975,"nodeType":"Block","src":"18926:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:6","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"18982:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2970,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"18947:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2974,"nodeType":"RevertStatement","src":"18940:48:6"}]}}]},"documentation":{"id":2953,"nodeType":"StructuredDocumentation","src":"18464:312:6","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2978,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:6","nodeType":"FunctionDefinition","parameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"value","nameLocation":"18806:5:6","nodeType":"VariableDeclaration","scope":2978,"src":"18799:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2954,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:6"},"returnParameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:6","nodeType":"VariableDeclaration","scope":2978,"src":"18836:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":2957,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:6"},"scope":3747,"src":"18781:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3003,"nodeType":"Block","src":"19402:150:6","statements":[{"expression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2986,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"19412:10:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"19432:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2987,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:6","typeDescriptions":{}}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":2992,"nodeType":"ExpressionStatement","src":"19412:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2993,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"19452:10:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"19466:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3002,"nodeType":"IfStatement","src":"19448:98:6","trueBody":{"id":3001,"nodeType":"Block","src":"19473:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:6","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"19529:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2996,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"19494:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3000,"nodeType":"RevertStatement","src":"19487:48:6"}]}}]},"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"19011:312:6","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:6","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"value","nameLocation":"19353:5:6","nodeType":"VariableDeclaration","scope":3004,"src":"19346:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2980,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:6"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:6","nodeType":"VariableDeclaration","scope":3004,"src":"19383:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":2983,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:6"},"scope":3747,"src":"19328:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"19949:150:6","statements":[{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3012,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"19959:10:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"19979:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3013,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:6","typeDescriptions":{}}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3018,"nodeType":"ExpressionStatement","src":"19959:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"19999:10:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"20013:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3028,"nodeType":"IfStatement","src":"19995:98:6","trueBody":{"id":3027,"nodeType":"Block","src":"20020:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:6","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"20076:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3022,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"20041:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3026,"nodeType":"RevertStatement","src":"20034:48:6"}]}}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"19558:312:6","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:6","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"value","nameLocation":"19900:5:6","nodeType":"VariableDeclaration","scope":3030,"src":"19893:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3006,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:6"},"returnParameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:6","nodeType":"VariableDeclaration","scope":3030,"src":"19930:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3009,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:6"},"scope":3747,"src":"19875:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3055,"nodeType":"Block","src":"20496:150:6","statements":[{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"20506:10:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"20526:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3039,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:6","typeDescriptions":{}}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3044,"nodeType":"ExpressionStatement","src":"20506:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"20546:10:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"20560:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3054,"nodeType":"IfStatement","src":"20542:98:6","trueBody":{"id":3053,"nodeType":"Block","src":"20567:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:6","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"20623:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3048,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"20588:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3052,"nodeType":"RevertStatement","src":"20581:48:6"}]}}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"20105:312:6","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3056,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:6","nodeType":"FunctionDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"value","nameLocation":"20447:5:6","nodeType":"VariableDeclaration","scope":3056,"src":"20440:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3032,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:6"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:6","nodeType":"VariableDeclaration","scope":3056,"src":"20477:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3035,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:6"},"scope":3747,"src":"20422:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3081,"nodeType":"Block","src":"21043:150:6","statements":[{"expression":{"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"21053:10:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"21073:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3065,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:6","typeDescriptions":{}}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3070,"nodeType":"ExpressionStatement","src":"21053:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3071,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"21093:10:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"21107:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3080,"nodeType":"IfStatement","src":"21089:98:6","trueBody":{"id":3079,"nodeType":"Block","src":"21114:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:6","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"21170:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3074,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"21135:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3078,"nodeType":"RevertStatement","src":"21128:48:6"}]}}]},"documentation":{"id":3057,"nodeType":"StructuredDocumentation","src":"20652:312:6","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3082,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:6","nodeType":"FunctionDefinition","parameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"value","nameLocation":"20994:5:6","nodeType":"VariableDeclaration","scope":3082,"src":"20987:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3058,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:6"},"returnParameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:6","nodeType":"VariableDeclaration","scope":3082,"src":"21024:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3061,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:6"},"scope":3747,"src":"20969:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3107,"nodeType":"Block","src":"21590:150:6","statements":[{"expression":{"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"21600:10:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"21620:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3091,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:6","typeDescriptions":{}}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3096,"nodeType":"ExpressionStatement","src":"21600:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"21640:10:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"21654:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3106,"nodeType":"IfStatement","src":"21636:98:6","trueBody":{"id":3105,"nodeType":"Block","src":"21661:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:6","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"21717:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3100,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"21682:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3104,"nodeType":"RevertStatement","src":"21675:48:6"}]}}]},"documentation":{"id":3083,"nodeType":"StructuredDocumentation","src":"21199:312:6","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3108,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:6","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"value","nameLocation":"21541:5:6","nodeType":"VariableDeclaration","scope":3108,"src":"21534:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3084,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:6"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:6","nodeType":"VariableDeclaration","scope":3108,"src":"21571:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3087,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:6"},"scope":3747,"src":"21516:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3133,"nodeType":"Block","src":"22137:150:6","statements":[{"expression":{"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3116,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"22147:10:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"22167:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3117,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:6","typeDescriptions":{}}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3122,"nodeType":"ExpressionStatement","src":"22147:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"22187:10:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"22201:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3132,"nodeType":"IfStatement","src":"22183:98:6","trueBody":{"id":3131,"nodeType":"Block","src":"22208:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:6","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"22264:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3126,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"22229:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3130,"nodeType":"RevertStatement","src":"22222:48:6"}]}}]},"documentation":{"id":3109,"nodeType":"StructuredDocumentation","src":"21746:312:6","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3134,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:6","nodeType":"FunctionDefinition","parameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"value","nameLocation":"22088:5:6","nodeType":"VariableDeclaration","scope":3134,"src":"22081:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3110,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:6"},"returnParameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:6","nodeType":"VariableDeclaration","scope":3134,"src":"22118:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3113,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:6"},"scope":3747,"src":"22063:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"22684:150:6","statements":[{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3142,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"22694:10:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"22714:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":3143,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:6","typeDescriptions":{}}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":3148,"nodeType":"ExpressionStatement","src":"22694:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"22734:10:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"22748:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3158,"nodeType":"IfStatement","src":"22730:98:6","trueBody":{"id":3157,"nodeType":"Block","src":"22755:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:6","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"22811:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3152,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"22776:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3156,"nodeType":"RevertStatement","src":"22769:48:6"}]}}]},"documentation":{"id":3135,"nodeType":"StructuredDocumentation","src":"22293:312:6","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:6","nodeType":"FunctionDefinition","parameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"value","nameLocation":"22635:5:6","nodeType":"VariableDeclaration","scope":3160,"src":"22628:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3136,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:6"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:6","nodeType":"VariableDeclaration","scope":3160,"src":"22665:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":3139,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:6"},"scope":3747,"src":"22610:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3185,"nodeType":"Block","src":"23231:150:6","statements":[{"expression":{"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3168,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"23241:10:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"23261:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":3169,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:6","typeDescriptions":{}}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":3174,"nodeType":"ExpressionStatement","src":"23241:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"23281:10:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"23295:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3184,"nodeType":"IfStatement","src":"23277:98:6","trueBody":{"id":3183,"nodeType":"Block","src":"23302:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:6","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"23358:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3178,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"23323:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3182,"nodeType":"RevertStatement","src":"23316:48:6"}]}}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"22840:312:6","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3186,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:6","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"value","nameLocation":"23182:5:6","nodeType":"VariableDeclaration","scope":3186,"src":"23175:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3162,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:6"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:6","nodeType":"VariableDeclaration","scope":3186,"src":"23212:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":3165,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:6"},"scope":3747,"src":"23157:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3211,"nodeType":"Block","src":"23778:150:6","statements":[{"expression":{"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3194,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"23788:10:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"23808:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":3195,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:6","typeDescriptions":{}}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":3200,"nodeType":"ExpressionStatement","src":"23788:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3201,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"23828:10:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"23842:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3210,"nodeType":"IfStatement","src":"23824:98:6","trueBody":{"id":3209,"nodeType":"Block","src":"23849:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:6","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"23905:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3204,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"23870:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3208,"nodeType":"RevertStatement","src":"23863:48:6"}]}}]},"documentation":{"id":3187,"nodeType":"StructuredDocumentation","src":"23387:312:6","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3212,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:6","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"value","nameLocation":"23729:5:6","nodeType":"VariableDeclaration","scope":3212,"src":"23722:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3188,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:6"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:6","nodeType":"VariableDeclaration","scope":3212,"src":"23759:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":3191,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:6"},"scope":3747,"src":"23704:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3237,"nodeType":"Block","src":"24325:150:6","statements":[{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3220,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"24335:10:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"24355:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":3221,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:6","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":3226,"nodeType":"ExpressionStatement","src":"24335:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"24375:10:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"24389:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"24371:98:6","trueBody":{"id":3235,"nodeType":"Block","src":"24396:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:6","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"24452:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3230,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"24417:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3234,"nodeType":"RevertStatement","src":"24410:48:6"}]}}]},"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"23934:312:6","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:6","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"value","nameLocation":"24276:5:6","nodeType":"VariableDeclaration","scope":3238,"src":"24269:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3214,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:6"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:6","nodeType":"VariableDeclaration","scope":3238,"src":"24306:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":3217,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:6"},"scope":3747,"src":"24251:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3263,"nodeType":"Block","src":"24872:150:6","statements":[{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3246,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"24882:10:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"24902:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":3247,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:6","typeDescriptions":{}}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":3252,"nodeType":"ExpressionStatement","src":"24882:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"24922:10:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"24936:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"nodeType":"IfStatement","src":"24918:98:6","trueBody":{"id":3261,"nodeType":"Block","src":"24943:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:6","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"24999:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3256,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"24964:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3260,"nodeType":"RevertStatement","src":"24957:48:6"}]}}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"24481:312:6","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3264,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:6","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"value","nameLocation":"24823:5:6","nodeType":"VariableDeclaration","scope":3264,"src":"24816:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3240,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:6"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:6","nodeType":"VariableDeclaration","scope":3264,"src":"24853:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":3243,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:6"},"scope":3747,"src":"24798:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"25419:150:6","statements":[{"expression":{"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"25429:10:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"25449:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":3273,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:6","typeDescriptions":{}}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":3278,"nodeType":"ExpressionStatement","src":"25429:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"25469:10:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"25483:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3288,"nodeType":"IfStatement","src":"25465:98:6","trueBody":{"id":3287,"nodeType":"Block","src":"25490:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:6","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"25546:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3282,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"25511:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3286,"nodeType":"RevertStatement","src":"25504:48:6"}]}}]},"documentation":{"id":3265,"nodeType":"StructuredDocumentation","src":"25028:312:6","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:6","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"value","nameLocation":"25370:5:6","nodeType":"VariableDeclaration","scope":3290,"src":"25363:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3266,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:6"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:6","nodeType":"VariableDeclaration","scope":3290,"src":"25400:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":3269,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:6"},"scope":3747,"src":"25345:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3315,"nodeType":"Block","src":"25966:150:6","statements":[{"expression":{"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"25976:10:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"25996:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":3299,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:6","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3304,"nodeType":"ExpressionStatement","src":"25976:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"26016:10:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"26030:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3314,"nodeType":"IfStatement","src":"26012:98:6","trueBody":{"id":3313,"nodeType":"Block","src":"26037:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"26093:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3308,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"26058:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3312,"nodeType":"RevertStatement","src":"26051:48:6"}]}}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"25575:312:6","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3316,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:6","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"value","nameLocation":"25917:5:6","nodeType":"VariableDeclaration","scope":3316,"src":"25910:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3292,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:6"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:6","nodeType":"VariableDeclaration","scope":3316,"src":"25947:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3295,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:6"},"scope":3747,"src":"25892:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3341,"nodeType":"Block","src":"26513:150:6","statements":[{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3324,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"26523:10:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"26543:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":3325,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:6","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":3330,"nodeType":"ExpressionStatement","src":"26523:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"26563:10:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"26577:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3340,"nodeType":"IfStatement","src":"26559:98:6","trueBody":{"id":3339,"nodeType":"Block","src":"26584:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:6","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"26640:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3334,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"26605:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3338,"nodeType":"RevertStatement","src":"26598:48:6"}]}}]},"documentation":{"id":3317,"nodeType":"StructuredDocumentation","src":"26122:312:6","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3342,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:6","nodeType":"FunctionDefinition","parameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"value","nameLocation":"26464:5:6","nodeType":"VariableDeclaration","scope":3342,"src":"26457:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3318,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:6"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:6","nodeType":"VariableDeclaration","scope":3342,"src":"26494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":3321,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:6"},"scope":3747,"src":"26439:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3367,"nodeType":"Block","src":"27060:150:6","statements":[{"expression":{"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"27070:10:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"27090:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":3351,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:6","typeDescriptions":{}}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":3356,"nodeType":"ExpressionStatement","src":"27070:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"27110:10:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"27124:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3366,"nodeType":"IfStatement","src":"27106:98:6","trueBody":{"id":3365,"nodeType":"Block","src":"27131:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:6","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"27187:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3360,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"27152:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3364,"nodeType":"RevertStatement","src":"27145:48:6"}]}}]},"documentation":{"id":3343,"nodeType":"StructuredDocumentation","src":"26669:312:6","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3368,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:6","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"value","nameLocation":"27011:5:6","nodeType":"VariableDeclaration","scope":3368,"src":"27004:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3344,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:6"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:6","nodeType":"VariableDeclaration","scope":3368,"src":"27041:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":3347,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:6"},"scope":3747,"src":"26986:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3393,"nodeType":"Block","src":"27607:150:6","statements":[{"expression":{"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3376,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"27617:10:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"27637:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":3377,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:6","typeDescriptions":{}}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":3382,"nodeType":"ExpressionStatement","src":"27617:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"27657:10:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"27671:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3392,"nodeType":"IfStatement","src":"27653:98:6","trueBody":{"id":3391,"nodeType":"Block","src":"27678:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:6","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"27734:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3386,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"27699:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3390,"nodeType":"RevertStatement","src":"27692:48:6"}]}}]},"documentation":{"id":3369,"nodeType":"StructuredDocumentation","src":"27216:312:6","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:6","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"value","nameLocation":"27558:5:6","nodeType":"VariableDeclaration","scope":3394,"src":"27551:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3370,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:6"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:6","nodeType":"VariableDeclaration","scope":3394,"src":"27588:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":3373,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:6"},"scope":3747,"src":"27533:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3419,"nodeType":"Block","src":"28147:148:6","statements":[{"expression":{"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"28157:10:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"28176:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":3403,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:6","typeDescriptions":{}}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":3408,"nodeType":"ExpressionStatement","src":"28157:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"28196:10:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"28210:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3418,"nodeType":"IfStatement","src":"28192:97:6","trueBody":{"id":3417,"nodeType":"Block","src":"28217:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:6","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"28272:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3412,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"28238:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3416,"nodeType":"RevertStatement","src":"28231:47:6"}]}}]},"documentation":{"id":3395,"nodeType":"StructuredDocumentation","src":"27763:307:6","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3420,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:6","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"value","nameLocation":"28099:5:6","nodeType":"VariableDeclaration","scope":3420,"src":"28092:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3396,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:6"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:6","nodeType":"VariableDeclaration","scope":3420,"src":"28129:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":3399,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:6"},"scope":3747,"src":"28075:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3445,"nodeType":"Block","src":"28685:148:6","statements":[{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"28695:10:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"28714:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":3429,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:6","typeDescriptions":{}}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":3434,"nodeType":"ExpressionStatement","src":"28695:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"28734:10:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"28748:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3444,"nodeType":"IfStatement","src":"28730:97:6","trueBody":{"id":3443,"nodeType":"Block","src":"28755:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:6","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"28810:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3438,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"28776:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3442,"nodeType":"RevertStatement","src":"28769:47:6"}]}}]},"documentation":{"id":3421,"nodeType":"StructuredDocumentation","src":"28301:307:6","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3446,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:6","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"value","nameLocation":"28637:5:6","nodeType":"VariableDeclaration","scope":3446,"src":"28630:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3422,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:6"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:6","nodeType":"VariableDeclaration","scope":3446,"src":"28667:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":3425,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:6"},"scope":3747,"src":"28613:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3471,"nodeType":"Block","src":"29223:148:6","statements":[{"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"29233:10:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"29252:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":3455,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:6","typeDescriptions":{}}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":3460,"nodeType":"ExpressionStatement","src":"29233:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3461,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"29272:10:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"29286:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3470,"nodeType":"IfStatement","src":"29268:97:6","trueBody":{"id":3469,"nodeType":"Block","src":"29293:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:6","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"29348:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3464,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"29314:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3468,"nodeType":"RevertStatement","src":"29307:47:6"}]}}]},"documentation":{"id":3447,"nodeType":"StructuredDocumentation","src":"28839:307:6","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3472,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:6","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"value","nameLocation":"29175:5:6","nodeType":"VariableDeclaration","scope":3472,"src":"29168:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3448,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:6"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:6","nodeType":"VariableDeclaration","scope":3472,"src":"29205:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":3451,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:6"},"scope":3747,"src":"29151:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3497,"nodeType":"Block","src":"29761:148:6","statements":[{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"29771:10:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"29790:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":3481,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:6","typeDescriptions":{}}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":3486,"nodeType":"ExpressionStatement","src":"29771:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"29810:10:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"29824:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3496,"nodeType":"IfStatement","src":"29806:97:6","trueBody":{"id":3495,"nodeType":"Block","src":"29831:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:6","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"29886:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3490,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"29852:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3494,"nodeType":"RevertStatement","src":"29845:47:6"}]}}]},"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"29377:307:6","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3498,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:6","nodeType":"FunctionDefinition","parameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3475,"mutability":"mutable","name":"value","nameLocation":"29713:5:6","nodeType":"VariableDeclaration","scope":3498,"src":"29706:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3474,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:6"},"returnParameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:6","nodeType":"VariableDeclaration","scope":3498,"src":"29743:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":3477,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:6"},"scope":3747,"src":"29689:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3523,"nodeType":"Block","src":"30299:148:6","statements":[{"expression":{"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"30309:10:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"30328:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":3507,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:6","typeDescriptions":{}}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":3512,"nodeType":"ExpressionStatement","src":"30309:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"30348:10:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"30362:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3522,"nodeType":"IfStatement","src":"30344:97:6","trueBody":{"id":3521,"nodeType":"Block","src":"30369:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"30424:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3516,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"30390:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3520,"nodeType":"RevertStatement","src":"30383:47:6"}]}}]},"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"29915:307:6","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3524,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:6","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"value","nameLocation":"30251:5:6","nodeType":"VariableDeclaration","scope":3524,"src":"30244:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3500,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:6"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:6","nodeType":"VariableDeclaration","scope":3524,"src":"30281:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3503,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:6"},"scope":3747,"src":"30227:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3549,"nodeType":"Block","src":"30837:148:6","statements":[{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"30847:10:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"30866:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":3533,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:6","typeDescriptions":{}}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":3538,"nodeType":"ExpressionStatement","src":"30847:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"30886:10:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"30900:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3548,"nodeType":"IfStatement","src":"30882:97:6","trueBody":{"id":3547,"nodeType":"Block","src":"30907:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:6","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"30962:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3542,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"30928:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3546,"nodeType":"RevertStatement","src":"30921:47:6"}]}}]},"documentation":{"id":3525,"nodeType":"StructuredDocumentation","src":"30453:307:6","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3550,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:6","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"value","nameLocation":"30789:5:6","nodeType":"VariableDeclaration","scope":3550,"src":"30782:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3526,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:6"},"returnParameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:6","nodeType":"VariableDeclaration","scope":3550,"src":"30819:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":3529,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:6"},"scope":3747,"src":"30765:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3575,"nodeType":"Block","src":"31375:148:6","statements":[{"expression":{"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"31385:10:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"31404:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":3559,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:6","typeDescriptions":{}}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":3564,"nodeType":"ExpressionStatement","src":"31385:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"31424:10:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"31438:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3574,"nodeType":"IfStatement","src":"31420:97:6","trueBody":{"id":3573,"nodeType":"Block","src":"31445:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:6","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"31500:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3568,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"31466:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3572,"nodeType":"RevertStatement","src":"31459:47:6"}]}}]},"documentation":{"id":3551,"nodeType":"StructuredDocumentation","src":"30991:307:6","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3576,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:6","nodeType":"FunctionDefinition","parameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"value","nameLocation":"31327:5:6","nodeType":"VariableDeclaration","scope":3576,"src":"31320:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3552,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:6"},"returnParameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:6","nodeType":"VariableDeclaration","scope":3576,"src":"31357:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":3555,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:6"},"scope":3747,"src":"31303:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3601,"nodeType":"Block","src":"31913:148:6","statements":[{"expression":{"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"31923:10:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"31942:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":3585,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:6","typeDescriptions":{}}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":3590,"nodeType":"ExpressionStatement","src":"31923:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"31962:10:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"31976:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3600,"nodeType":"IfStatement","src":"31958:97:6","trueBody":{"id":3599,"nodeType":"Block","src":"31983:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:6","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"32038:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3594,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"32004:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3598,"nodeType":"RevertStatement","src":"31997:47:6"}]}}]},"documentation":{"id":3577,"nodeType":"StructuredDocumentation","src":"31529:307:6","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3602,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:6","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"value","nameLocation":"31865:5:6","nodeType":"VariableDeclaration","scope":3602,"src":"31858:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3578,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:6"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:6","nodeType":"VariableDeclaration","scope":3602,"src":"31895:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":3581,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:6"},"scope":3747,"src":"31841:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"32451:148:6","statements":[{"expression":{"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"32461:10:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"32480:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3611,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:6","typeDescriptions":{}}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3616,"nodeType":"ExpressionStatement","src":"32461:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"32500:10:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"32514:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3626,"nodeType":"IfStatement","src":"32496:97:6","trueBody":{"id":3625,"nodeType":"Block","src":"32521:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"32576:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3620,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"32542:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3624,"nodeType":"RevertStatement","src":"32535:47:6"}]}}]},"documentation":{"id":3603,"nodeType":"StructuredDocumentation","src":"32067:307:6","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:6","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"value","nameLocation":"32403:5:6","nodeType":"VariableDeclaration","scope":3628,"src":"32396:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3604,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:6"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:6","nodeType":"VariableDeclaration","scope":3628,"src":"32433:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3607,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:6"},"scope":3747,"src":"32379:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3653,"nodeType":"Block","src":"32989:148:6","statements":[{"expression":{"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"32999:10:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"33018:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3637,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:6","typeDescriptions":{}}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":3642,"nodeType":"ExpressionStatement","src":"32999:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"33038:10:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"33052:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3652,"nodeType":"IfStatement","src":"33034:97:6","trueBody":{"id":3651,"nodeType":"Block","src":"33059:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:6","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"33114:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3646,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"33080:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3650,"nodeType":"RevertStatement","src":"33073:47:6"}]}}]},"documentation":{"id":3629,"nodeType":"StructuredDocumentation","src":"32605:307:6","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:6","nodeType":"FunctionDefinition","parameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"value","nameLocation":"32941:5:6","nodeType":"VariableDeclaration","scope":3654,"src":"32934:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3630,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:6"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:6","nodeType":"VariableDeclaration","scope":3654,"src":"32971:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3633,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:6"},"scope":3747,"src":"32917:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3679,"nodeType":"Block","src":"33527:148:6","statements":[{"expression":{"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"33537:10:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"33556:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":3663,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:6","typeDescriptions":{}}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":3668,"nodeType":"ExpressionStatement","src":"33537:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3669,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"33576:10:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"33590:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3678,"nodeType":"IfStatement","src":"33572:97:6","trueBody":{"id":3677,"nodeType":"Block","src":"33597:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"33652:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3672,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"33618:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3676,"nodeType":"RevertStatement","src":"33611:47:6"}]}}]},"documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"33143:307:6","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3680,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:6","nodeType":"FunctionDefinition","parameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"value","nameLocation":"33479:5:6","nodeType":"VariableDeclaration","scope":3680,"src":"33472:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3656,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:6"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:6","nodeType":"VariableDeclaration","scope":3680,"src":"33509:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":3659,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:6"},"scope":3747,"src":"33455:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3705,"nodeType":"Block","src":"34058:146:6","statements":[{"expression":{"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"34068:10:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"34086:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":3689,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:6","typeDescriptions":{}}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":3694,"nodeType":"ExpressionStatement","src":"34068:24:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"34106:10:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"34120:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3704,"nodeType":"IfStatement","src":"34102:96:6","trueBody":{"id":3703,"nodeType":"Block","src":"34127:71:6","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"34181:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3698,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"34148:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3702,"nodeType":"RevertStatement","src":"34141:46:6"}]}}]},"documentation":{"id":3681,"nodeType":"StructuredDocumentation","src":"33681:302:6","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:6","nodeType":"FunctionDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"value","nameLocation":"34011:5:6","nodeType":"VariableDeclaration","scope":3706,"src":"34004:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3682,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:6"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:6","nodeType":"VariableDeclaration","scope":3706,"src":"34041:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":3685,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:6"},"scope":3747,"src":"33988:216:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3735,"nodeType":"Block","src":"34444:250:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"34557:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":3719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3718,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3717,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:6","memberName":"max","nodeType":"MemberAccess","src":"34573:16:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:6","typeDescriptions":{}}},"id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3729,"nodeType":"IfStatement","src":"34553:105:6","trueBody":{"id":3728,"nodeType":"Block","src":"34592:66:6","statements":[{"errorCall":{"arguments":[{"id":3725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"34641:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3724,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"34613:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3727,"nodeType":"RevertStatement","src":"34606:41:6"}]}},{"expression":{"arguments":[{"id":3732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"34681:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3730,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:6","typeDescriptions":{}}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3713,"id":3734,"nodeType":"Return","src":"34667:20:6"}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"34210:165:6","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":3736,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:6","nodeType":"FunctionDefinition","parameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"value","nameLocation":"34406:5:6","nodeType":"VariableDeclaration","scope":3736,"src":"34398:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:6"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3736,"src":"34436:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3711,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:6"},"scope":3747,"src":"34380:314:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"34853:87:6","statements":[{"AST":{"nativeSrc":"34888:46:6","nodeType":"YulBlock","src":"34888:46:6","statements":[{"nativeSrc":"34902:22:6","nodeType":"YulAssignment","src":"34902:22:6","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:6","nodeType":"YulIdentifier","src":"34921:1:6"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:6","nodeType":"YulIdentifier","src":"34914:6:6"},"nativeSrc":"34914:9:6","nodeType":"YulFunctionCall","src":"34914:9:6"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:6","nodeType":"YulIdentifier","src":"34907:6:6"},"nativeSrc":"34907:17:6","nodeType":"YulFunctionCall","src":"34907:17:6"},"variableNames":[{"name":"u","nativeSrc":"34902:1:6","nodeType":"YulIdentifier","src":"34902:1:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3739,"isOffset":false,"isSlot":false,"src":"34921:1:6","valueSize":1},{"declaration":3742,"isOffset":false,"isSlot":false,"src":"34902:1:6","valueSize":1}],"flags":["memory-safe"],"id":3744,"nodeType":"InlineAssembly","src":"34863:71:6"}]},"documentation":{"id":3737,"nodeType":"StructuredDocumentation","src":"34700:90:6","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:6","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"b","nameLocation":"34816:1:6","nodeType":"VariableDeclaration","scope":3746,"src":"34811:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3738,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:6"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"u","nameLocation":"34850:1:6","nodeType":"VariableDeclaration","scope":3746,"src":"34842:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:6"},"scope":3747,"src":"34795:145:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3748,"src":"769:34173:6","usedErrors":[1992,1997,2004,2009],"usedEvents":[]}],"src":"192:34751:6"},"id":6},"contracts/CoverLib.sol":{"ast":{"absolutePath":"contracts/CoverLib.sol","exportedSymbols":{"CoverLib":[3864]},"id":3865,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3749,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"CoverLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3864,"linearizedBaseContracts":[3864],"name":"CoverLib","nameLocation":"68:8:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CoverLib.DepositParams","id":3766,"members":[{"constant":false,"id":3751,"mutability":"mutable","name":"depositor","nameLocation":"124:9:7","nodeType":"VariableDeclaration","scope":3766,"src":"116:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3750,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"poolId","nameLocation":"152:6:7","nodeType":"VariableDeclaration","scope":3766,"src":"144:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"144:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"amount","nameLocation":"177:6:7","nodeType":"VariableDeclaration","scope":3766,"src":"169:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"169:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"period","nameLocation":"202:6:7","nodeType":"VariableDeclaration","scope":3766,"src":"194:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"194:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"pdt","nameLocation":"240:3:7","nodeType":"VariableDeclaration","scope":3766,"src":"219:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"},"typeName":{"id":3759,"nodeType":"UserDefinedTypeName","pathNode":{"id":3758,"name":"CoverLib.DepositType","nameLocations":["219:8:7","228:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"219:20:7"},"referencedDeclaration":3826,"src":"219:20:7","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"visibility":"internal"},{"constant":false,"id":3763,"mutability":"mutable","name":"adt","nameLocation":"280:3:7","nodeType":"VariableDeclaration","scope":3766,"src":"254:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":3762,"nodeType":"UserDefinedTypeName","pathNode":{"id":3761,"name":"CoverLib.AssetDepositType","nameLocations":["254:8:7","263:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"254:25:7"},"referencedDeclaration":3823,"src":"254:25:7","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":3765,"mutability":"mutable","name":"asset","nameLocation":"302:5:7","nodeType":"VariableDeclaration","scope":3766,"src":"294:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3764,"name":"address","nodeType":"ElementaryTypeName","src":"294:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DepositParams","nameLocation":"91:13:7","nodeType":"StructDefinition","scope":3864,"src":"84:231:7","visibility":"public"},{"canonicalName":"CoverLib.Cover","id":3790,"members":[{"constant":false,"id":3768,"mutability":"mutable","name":"id","nameLocation":"355:2:7","nodeType":"VariableDeclaration","scope":3790,"src":"347:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3770,"mutability":"mutable","name":"coverName","nameLocation":"375:9:7","nodeType":"VariableDeclaration","scope":3790,"src":"368:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3769,"name":"string","nodeType":"ElementaryTypeName","src":"368:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3773,"mutability":"mutable","name":"riskType","nameLocation":"404:8:7","nodeType":"VariableDeclaration","scope":3790,"src":"395:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3772,"nodeType":"UserDefinedTypeName","pathNode":{"id":3771,"name":"RiskType","nameLocations":["395:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"395:8:7"},"referencedDeclaration":3814,"src":"395:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"chains","nameLocation":"430:6:7","nodeType":"VariableDeclaration","scope":3790,"src":"423:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3774,"name":"string","nodeType":"ElementaryTypeName","src":"423:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"capacity","nameLocation":"455:8:7","nodeType":"VariableDeclaration","scope":3790,"src":"447:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3779,"mutability":"mutable","name":"cost","nameLocation":"482:4:7","nodeType":"VariableDeclaration","scope":3790,"src":"474:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3781,"mutability":"mutable","name":"capacityAmount","nameLocation":"505:14:7","nodeType":"VariableDeclaration","scope":3790,"src":"497:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3783,"mutability":"mutable","name":"coverValues","nameLocation":"538:11:7","nodeType":"VariableDeclaration","scope":3790,"src":"530:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3785,"mutability":"mutable","name":"maxAmount","nameLocation":"568:9:7","nodeType":"VariableDeclaration","scope":3790,"src":"560:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"poolId","nameLocation":"596:6:7","nodeType":"VariableDeclaration","scope":3790,"src":"588:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"CID","nameLocation":"620:3:7","nodeType":"VariableDeclaration","scope":3790,"src":"613:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3788,"name":"string","nodeType":"ElementaryTypeName","src":"613:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Cover","nameLocation":"330:5:7","nodeType":"StructDefinition","scope":3864,"src":"323:308:7","visibility":"public"},{"canonicalName":"CoverLib.GenericCoverInfo","id":3810,"members":[{"constant":false,"id":3792,"mutability":"mutable","name":"user","nameLocation":"682:4:7","nodeType":"VariableDeclaration","scope":3810,"src":"674:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"coverId","nameLocation":"705:7:7","nodeType":"VariableDeclaration","scope":3810,"src":"697:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"riskType","nameLocation":"732:8:7","nodeType":"VariableDeclaration","scope":3810,"src":"723:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3796,"nodeType":"UserDefinedTypeName","pathNode":{"id":3795,"name":"RiskType","nameLocations":["723:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"723:8:7"},"referencedDeclaration":3814,"src":"723:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"coverName","nameLocation":"758:9:7","nodeType":"VariableDeclaration","scope":3810,"src":"751:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3798,"name":"string","nodeType":"ElementaryTypeName","src":"751:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"coverValue","nameLocation":"786:10:7","nodeType":"VariableDeclaration","scope":3810,"src":"778:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"claimPaid","nameLocation":"859:9:7","nodeType":"VariableDeclaration","scope":3810,"src":"851:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"coverPeriod","nameLocation":"887:11:7","nodeType":"VariableDeclaration","scope":3810,"src":"879:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"endDay","nameLocation":"974:6:7","nodeType":"VariableDeclaration","scope":3810,"src":"966:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"966:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"isActive","nameLocation":"1022:8:7","nodeType":"VariableDeclaration","scope":3810,"src":"1017:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3808,"name":"bool","nodeType":"ElementaryTypeName","src":"1017:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"GenericCoverInfo","nameLocation":"646:16:7","nodeType":"StructDefinition","scope":3864,"src":"639:399:7","visibility":"public"},{"canonicalName":"CoverLib.RiskType","id":3814,"members":[{"id":3811,"name":"Low","nameLocation":"1071:3:7","nodeType":"EnumValue","src":"1071:3:7"},{"id":3812,"name":"Medium","nameLocation":"1085:6:7","nodeType":"EnumValue","src":"1085:6:7"},{"id":3813,"name":"High","nameLocation":"1102:4:7","nodeType":"EnumValue","src":"1102:4:7"}],"name":"RiskType","nameLocation":"1051:8:7","nodeType":"EnumDefinition","src":"1046:67:7"},{"canonicalName":"CoverLib.GenericCover","id":3820,"members":[{"constant":false,"id":3817,"mutability":"mutable","name":"riskType","nameLocation":"1161:8:7","nodeType":"VariableDeclaration","scope":3820,"src":"1152:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3816,"nodeType":"UserDefinedTypeName","pathNode":{"id":3815,"name":"RiskType","nameLocations":["1152:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"1152:8:7"},"referencedDeclaration":3814,"src":"1152:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3819,"mutability":"mutable","name":"coverData","nameLocation":"1186:9:7","nodeType":"VariableDeclaration","scope":3820,"src":"1180:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3818,"name":"bytes","nodeType":"ElementaryTypeName","src":"1180:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"GenericCover","nameLocation":"1128:12:7","nodeType":"StructDefinition","scope":3864,"src":"1121:82:7","visibility":"public"},{"canonicalName":"CoverLib.AssetDepositType","id":3823,"members":[{"id":3821,"name":"Native","nameLocation":"1244:6:7","nodeType":"EnumValue","src":"1244:6:7"},{"id":3822,"name":"ERC20","nameLocation":"1261:5:7","nodeType":"EnumValue","src":"1261:5:7"}],"name":"AssetDepositType","nameLocation":"1216:16:7","nodeType":"EnumDefinition","src":"1211:62:7"},{"canonicalName":"CoverLib.DepositType","id":3826,"members":[{"id":3824,"name":"Normal","nameLocation":"1309:6:7","nodeType":"EnumValue","src":"1309:6:7"},{"id":3825,"name":"Vault","nameLocation":"1326:5:7","nodeType":"EnumValue","src":"1326:5:7"}],"name":"DepositType","nameLocation":"1286:11:7","nodeType":"EnumDefinition","src":"1281:57:7"},{"canonicalName":"CoverLib.Pool","id":3859,"members":[{"constant":false,"id":3828,"mutability":"mutable","name":"id","nameLocation":"1377:2:7","nodeType":"VariableDeclaration","scope":3859,"src":"1369:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"poolName","nameLocation":"1397:8:7","nodeType":"VariableDeclaration","scope":3859,"src":"1390:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3829,"name":"string","nodeType":"ElementaryTypeName","src":"1390:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"riskType","nameLocation":"1434:8:7","nodeType":"VariableDeclaration","scope":3859,"src":"1416:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3832,"nodeType":"UserDefinedTypeName","pathNode":{"id":3831,"name":"CoverLib.RiskType","nameLocations":["1416:8:7","1425:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"1416:17:7"},"referencedDeclaration":3814,"src":"1416:17:7","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"apy","nameLocation":"1461:3:7","nodeType":"VariableDeclaration","scope":3859,"src":"1453:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1453:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"minPeriod","nameLocation":"1483:9:7","nodeType":"VariableDeclaration","scope":3859,"src":"1475:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"tvl","nameLocation":"1511:3:7","nodeType":"VariableDeclaration","scope":3859,"src":"1503:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"baseValue","nameLocation":"1533:9:7","nodeType":"VariableDeclaration","scope":3859,"src":"1525:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"coverTvl","nameLocation":"1561:8:7","nodeType":"VariableDeclaration","scope":3859,"src":"1553:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1553:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"tcp","nameLocation":"1588:3:7","nodeType":"VariableDeclaration","scope":3859,"src":"1580:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"isActive","nameLocation":"1607:8:7","nodeType":"VariableDeclaration","scope":3859,"src":"1602:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3846,"name":"bool","nodeType":"ElementaryTypeName","src":"1602:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"percentageSplitBalance","nameLocation":"1634:22:7","nodeType":"VariableDeclaration","scope":3859,"src":"1626:30:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1626:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"investmentArmPercent","nameLocation":"1675:20:7","nodeType":"VariableDeclaration","scope":3859,"src":"1667:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1667:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"leverage","nameLocation":"1712:8:7","nodeType":"VariableDeclaration","scope":3859,"src":"1706:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3852,"name":"uint8","nodeType":"ElementaryTypeName","src":"1706:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"asset","nameLocation":"1739:5:7","nodeType":"VariableDeclaration","scope":3859,"src":"1731:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3854,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"assetType","nameLocation":"1781:9:7","nodeType":"VariableDeclaration","scope":3859,"src":"1755:35:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":3857,"nodeType":"UserDefinedTypeName","pathNode":{"id":3856,"name":"CoverLib.AssetDepositType","nameLocations":["1755:8:7","1764:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"1755:25:7"},"referencedDeclaration":3823,"src":"1755:25:7","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"}],"name":"Pool","nameLocation":"1353:4:7","nodeType":"StructDefinition","scope":3864,"src":"1346:452:7","visibility":"public"},{"canonicalName":"CoverLib.Status","id":3863,"members":[{"id":3860,"name":"Active","nameLocation":"1829:6:7","nodeType":"EnumValue","src":"1829:6:7"},{"id":3861,"name":"Due","nameLocation":"1846:3:7","nodeType":"EnumValue","src":"1846:3:7"},{"id":3862,"name":"Withdrawn","nameLocation":"1860:9:7","nodeType":"EnumValue","src":"1860:9:7"}],"name":"Status","nameLocation":"1811:6:7","nodeType":"EnumDefinition","src":"1806:70:7"}],"scope":3865,"src":"60:1819:7","usedErrors":[],"usedEvents":[]}],"src":"33:1848:7"},"id":7},"contracts/InsuranceCover.sol":{"ast":{"absolutePath":"contracts/InsuranceCover.sol","exportedSymbols":{"Context":[255],"CoverLib":[3864],"IERC20":[225],"ILP":[4037],"IbqBTC":[3897],"InsuranceCover":[5671],"Math":[1982],"Ownable":[147],"Panic":[307],"ReentrancyGuard":[376],"SafeCast":[3747]},"id":5672,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3866,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5672,"sourceUnit":226,"src":"60:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3868,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5672,"sourceUnit":148,"src":"118:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":3869,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5672,"sourceUnit":377,"src":"172:59:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":3870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5672,"sourceUnit":1983,"src":"233:53:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CoverLib.sol","file":"./CoverLib.sol","id":3871,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5672,"sourceUnit":3865,"src":"288:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IbqBTC","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3897,"linearizedBaseContracts":[3897],"name":"IbqBTC","nameLocation":"326:6:8","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e2094eda","id":3878,"implemented":false,"kind":"function","modifiers":[],"name":"bqMint","nameLocation":"349:6:8","nodeType":"FunctionDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"account","nameLocation":"364:7:8","nodeType":"VariableDeclaration","scope":3878,"src":"356:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3872,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"amount","nameLocation":"381:6:8","nodeType":"VariableDeclaration","scope":3878,"src":"373:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"373:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"355:33:8"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[],"src":"397:0:8"},"scope":3897,"src":"340:58:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9dc29fac","id":3885,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"413:4:8","nodeType":"FunctionDefinition","parameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"account","nameLocation":"426:7:8","nodeType":"VariableDeclaration","scope":3885,"src":"418:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3879,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"amount","nameLocation":"443:6:8","nodeType":"VariableDeclaration","scope":3885,"src":"435:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"417:33:8"},"returnParameters":{"id":3884,"nodeType":"ParameterList","parameters":[],"src":"459:0:8"},"scope":3897,"src":"404:56:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":3896,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"475:12:8","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"from","nameLocation":"506:4:8","nodeType":"VariableDeclaration","scope":3896,"src":"498:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3886,"name":"address","nodeType":"ElementaryTypeName","src":"498:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3889,"mutability":"mutable","name":"to","nameLocation":"529:2:8","nodeType":"VariableDeclaration","scope":3896,"src":"521:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3888,"name":"address","nodeType":"ElementaryTypeName","src":"521:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"amount","nameLocation":"550:6:8","nodeType":"VariableDeclaration","scope":3896,"src":"542:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"487:76:8"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3896,"src":"582:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3893,"name":"bool","nodeType":"ElementaryTypeName","src":"582:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"581:6:8"},"scope":3897,"src":"466:122:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5672,"src":"316:275:8","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"ILP","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4037,"linearizedBaseContracts":[4037],"name":"ILP","nameLocation":"605:3:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ILP.Deposits","id":3917,"members":[{"constant":false,"id":3899,"mutability":"mutable","name":"lp","nameLocation":"651:2:8","nodeType":"VariableDeclaration","scope":3917,"src":"643:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3898,"name":"address","nodeType":"ElementaryTypeName","src":"643:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"amount","nameLocation":"672:6:8","nodeType":"VariableDeclaration","scope":3917,"src":"664:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3903,"mutability":"mutable","name":"poolId","nameLocation":"697:6:8","nodeType":"VariableDeclaration","scope":3917,"src":"689:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"689:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"dailyPayout","nameLocation":"722:11:8","nodeType":"VariableDeclaration","scope":3917,"src":"714:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3908,"mutability":"mutable","name":"status","nameLocation":"751:6:8","nodeType":"VariableDeclaration","scope":3917,"src":"744:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3953","typeString":"enum ILP.Status"},"typeName":{"id":3907,"nodeType":"UserDefinedTypeName","pathNode":{"id":3906,"name":"Status","nameLocations":["744:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3953,"src":"744:6:8"},"referencedDeclaration":3953,"src":"744:6:8","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3953","typeString":"enum ILP.Status"}},"visibility":"internal"},{"constant":false,"id":3910,"mutability":"mutable","name":"daysLeft","nameLocation":"776:8:8","nodeType":"VariableDeclaration","scope":3917,"src":"768:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"startDate","nameLocation":"803:9:8","nodeType":"VariableDeclaration","scope":3917,"src":"795:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3914,"mutability":"mutable","name":"expiryDate","nameLocation":"831:10:8","nodeType":"VariableDeclaration","scope":3917,"src":"823:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"accruedPayout","nameLocation":"860:13:8","nodeType":"VariableDeclaration","scope":3917,"src":"852:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Deposits","nameLocation":"623:8:8","nodeType":"StructDefinition","scope":4037,"src":"616:265:8","visibility":"public"},{"canonicalName":"ILP.Pool","id":3950,"members":[{"constant":false,"id":3919,"mutability":"mutable","name":"id","nameLocation":"920:2:8","nodeType":"VariableDeclaration","scope":3950,"src":"912:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3918,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"poolName","nameLocation":"940:8:8","nodeType":"VariableDeclaration","scope":3950,"src":"933:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3920,"name":"string","nodeType":"ElementaryTypeName","src":"933:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"riskType","nameLocation":"977:8:8","nodeType":"VariableDeclaration","scope":3950,"src":"959:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3923,"nodeType":"UserDefinedTypeName","pathNode":{"id":3922,"name":"CoverLib.RiskType","nameLocations":["959:8:8","968:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"959:17:8"},"referencedDeclaration":3814,"src":"959:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"apy","nameLocation":"1004:3:8","nodeType":"VariableDeclaration","scope":3950,"src":"996:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"996:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3928,"mutability":"mutable","name":"minPeriod","nameLocation":"1026:9:8","nodeType":"VariableDeclaration","scope":3950,"src":"1018:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3930,"mutability":"mutable","name":"tvl","nameLocation":"1054:3:8","nodeType":"VariableDeclaration","scope":3950,"src":"1046:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"baseValue","nameLocation":"1076:9:8","nodeType":"VariableDeclaration","scope":3950,"src":"1068:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1068:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"coverTvl","nameLocation":"1104:8:8","nodeType":"VariableDeclaration","scope":3950,"src":"1096:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1096:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"tcp","nameLocation":"1131:3:8","nodeType":"VariableDeclaration","scope":3950,"src":"1123:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1123:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"isActive","nameLocation":"1150:8:8","nodeType":"VariableDeclaration","scope":3950,"src":"1145:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3937,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3940,"mutability":"mutable","name":"percentageSplitBalance","nameLocation":"1177:22:8","nodeType":"VariableDeclaration","scope":3950,"src":"1169:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1169:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3942,"mutability":"mutable","name":"investmentArmPercent","nameLocation":"1218:20:8","nodeType":"VariableDeclaration","scope":3950,"src":"1210:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1210:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3944,"mutability":"mutable","name":"leverage","nameLocation":"1255:8:8","nodeType":"VariableDeclaration","scope":3950,"src":"1249:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3943,"name":"uint8","nodeType":"ElementaryTypeName","src":"1249:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3946,"mutability":"mutable","name":"asset","nameLocation":"1282:5:8","nodeType":"VariableDeclaration","scope":3950,"src":"1274:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3945,"name":"address","nodeType":"ElementaryTypeName","src":"1274:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"assetType","nameLocation":"1315:9:8","nodeType":"VariableDeclaration","scope":3950,"src":"1298:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3956","typeString":"enum ILP.AssetDepositType"},"typeName":{"id":3948,"nodeType":"UserDefinedTypeName","pathNode":{"id":3947,"name":"AssetDepositType","nameLocations":["1298:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3956,"src":"1298:16:8"},"referencedDeclaration":3956,"src":"1298:16:8","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3956","typeString":"enum ILP.AssetDepositType"}},"visibility":"internal"}],"name":"Pool","nameLocation":"896:4:8","nodeType":"StructDefinition","scope":4037,"src":"889:443:8","visibility":"public"},{"canonicalName":"ILP.Status","id":3953,"members":[{"id":3951,"name":"Active","nameLocation":"1363:6:8","nodeType":"EnumValue","src":"1363:6:8"},{"id":3952,"name":"Expired","nameLocation":"1380:7:8","nodeType":"EnumValue","src":"1380:7:8"}],"name":"Status","nameLocation":"1345:6:8","nodeType":"EnumDefinition","src":"1340:54:8"},{"canonicalName":"ILP.AssetDepositType","id":3956,"members":[{"id":3954,"name":"Native","nameLocation":"1435:6:8","nodeType":"EnumValue","src":"1435:6:8"},{"id":3955,"name":"ERC20","nameLocation":"1452:5:8","nodeType":"EnumValue","src":"1452:5:8"}],"name":"AssetDepositType","nameLocation":"1407:16:8","nodeType":"EnumDefinition","src":"1402:62:8"},{"functionSelector":"4e055244","id":3966,"implemented":false,"kind":"function","modifiers":[],"name":"getUserDeposit","nameLocation":"1481:14:8","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"_poolId","nameLocation":"1514:7:8","nodeType":"VariableDeclaration","scope":3966,"src":"1506:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3960,"mutability":"mutable","name":"_user","nameLocation":"1540:5:8","nodeType":"VariableDeclaration","scope":3966,"src":"1532:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3959,"name":"address","nodeType":"ElementaryTypeName","src":"1532:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1495:57:8"},"returnParameters":{"id":3965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3966,"src":"1576:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits"},"typeName":{"id":3963,"nodeType":"UserDefinedTypeName","pathNode":{"id":3962,"name":"Deposits","nameLocations":["1576:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3917,"src":"1576:8:8"},"referencedDeclaration":3917,"src":"1576:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_storage_ptr","typeString":"struct ILP.Deposits"}},"visibility":"internal"}],"src":"1575:17:8"},"scope":4037,"src":"1472:121:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"82457766","id":3977,"implemented":false,"kind":"function","modifiers":[],"name":"getVaultDeposits","nameLocation":"1610:16:8","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"vaultId","nameLocation":"1645:7:8","nodeType":"VariableDeclaration","scope":3977,"src":"1637:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3970,"mutability":"mutable","name":"user","nameLocation":"1671:4:8","nodeType":"VariableDeclaration","scope":3977,"src":"1663:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3969,"name":"address","nodeType":"ElementaryTypeName","src":"1663:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1626:56:8"},"returnParameters":{"id":3976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3977,"src":"1706:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3917_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits[]"},"typeName":{"baseType":{"id":3973,"nodeType":"UserDefinedTypeName","pathNode":{"id":3972,"name":"Deposits","nameLocations":["1706:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3917,"src":"1706:8:8"},"referencedDeclaration":3917,"src":"1706:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_storage_ptr","typeString":"struct ILP.Deposits"}},"id":3974,"nodeType":"ArrayTypeName","src":"1706:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3917_storage_$dyn_storage_ptr","typeString":"struct ILP.Deposits[]"}},"visibility":"internal"}],"src":"1705:19:8"},"scope":4037,"src":"1601:124:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"068bcd8d","id":3997,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"1742:7:8","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"_poolId","nameLocation":"1768:7:8","nodeType":"VariableDeclaration","scope":3997,"src":"1760:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1749:33:8"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"name","nameLocation":"1861:4:8","nodeType":"VariableDeclaration","scope":3997,"src":"1847:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3981,"name":"string","nodeType":"ElementaryTypeName","src":"1847:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"riskType","nameLocation":"1898:8:8","nodeType":"VariableDeclaration","scope":3997,"src":"1880:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":3984,"nodeType":"UserDefinedTypeName","pathNode":{"id":3983,"name":"CoverLib.RiskType","nameLocations":["1880:8:8","1889:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"1880:17:8"},"referencedDeclaration":3814,"src":"1880:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":3987,"mutability":"mutable","name":"apy","nameLocation":"1929:3:8","nodeType":"VariableDeclaration","scope":3997,"src":"1921:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1921:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"minPeriod","nameLocation":"1955:9:8","nodeType":"VariableDeclaration","scope":3997,"src":"1947:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1947:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"tvl","nameLocation":"1987:3:8","nodeType":"VariableDeclaration","scope":3997,"src":"1979:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"1979:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"isActive","nameLocation":"2010:8:8","nodeType":"VariableDeclaration","scope":3997,"src":"2005:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3992,"name":"bool","nodeType":"ElementaryTypeName","src":"2005:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3995,"mutability":"mutable","name":"percentageSplitBalance","nameLocation":"2041:22:8","nodeType":"VariableDeclaration","scope":3997,"src":"2033:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"2033:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1832:242:8"},"scope":4037,"src":"1733:342:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a4948d85","id":4004,"implemented":false,"kind":"function","modifiers":[],"name":"reducePercentageSplit","nameLocation":"2092:21:8","nodeType":"FunctionDefinition","parameters":{"id":4002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"_poolId","nameLocation":"2132:7:8","nodeType":"VariableDeclaration","scope":4004,"src":"2124:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"__poolPercentageSplit","nameLocation":"2158:21:8","nodeType":"VariableDeclaration","scope":4004,"src":"2150:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"2150:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2113:73:8"},"returnParameters":{"id":4003,"nodeType":"ParameterList","parameters":[],"src":"2195:0:8"},"scope":4037,"src":"2083:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9fd36b15","id":4011,"implemented":false,"kind":"function","modifiers":[],"name":"increasePercentageSplit","nameLocation":"2211:23:8","nodeType":"FunctionDefinition","parameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"_poolId","nameLocation":"2253:7:8","nodeType":"VariableDeclaration","scope":4011,"src":"2245:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2245:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"__poolPercentageSplit","nameLocation":"2279:21:8","nodeType":"VariableDeclaration","scope":4011,"src":"2271:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2234:73:8"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[],"src":"2316:0:8"},"scope":4037,"src":"2202:115:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c7aa9874","id":4019,"implemented":false,"kind":"function","modifiers":[],"name":"addPoolCover","nameLocation":"2332:12:8","nodeType":"FunctionDefinition","parameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"_poolId","nameLocation":"2363:7:8","nodeType":"VariableDeclaration","scope":4019,"src":"2355:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2355:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"_cover","nameLocation":"2403:6:8","nodeType":"VariableDeclaration","scope":4019,"src":"2381:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":4015,"nodeType":"UserDefinedTypeName","pathNode":{"id":4014,"name":"CoverLib.Cover","nameLocations":["2381:8:8","2390:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"2381:14:8"},"referencedDeclaration":3790,"src":"2381:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"src":"2344:72:8"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[],"src":"2425:0:8"},"scope":4037,"src":"2323:103:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a14764d0","id":4027,"implemented":false,"kind":"function","modifiers":[],"name":"updatePoolCovers","nameLocation":"2441:16:8","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"_poolId","nameLocation":"2476:7:8","nodeType":"VariableDeclaration","scope":4027,"src":"2468:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4024,"mutability":"mutable","name":"_cover","nameLocation":"2516:6:8","nodeType":"VariableDeclaration","scope":4027,"src":"2494:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":4023,"nodeType":"UserDefinedTypeName","pathNode":{"id":4022,"name":"CoverLib.Cover","nameLocations":["2494:8:8","2503:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"2494:14:8"},"referencedDeclaration":3790,"src":"2494:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"src":"2457:72:8"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[],"src":"2538:0:8"},"scope":4037,"src":"2432:107:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7eb111f0","id":4036,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolCovers","nameLocation":"2554:13:8","nodeType":"FunctionDefinition","parameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"_poolId","nameLocation":"2586:7:8","nodeType":"VariableDeclaration","scope":4036,"src":"2578:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2578:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2567:33:8"},"returnParameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4036,"src":"2624:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":4032,"nodeType":"UserDefinedTypeName","pathNode":{"id":4031,"name":"CoverLib.Cover","nameLocations":["2624:8:8","2633:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"2624:14:8"},"referencedDeclaration":3790,"src":"2624:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":4033,"nodeType":"ArrayTypeName","src":"2624:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"src":"2623:25:8"},"scope":4037,"src":"2545:104:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5672,"src":"595:2057:8","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":4038,"name":"ReentrancyGuard","nameLocations":["2683:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":376,"src":"2683:15:8"},"id":4039,"nodeType":"InheritanceSpecifier","src":"2683:15:8"},{"baseName":{"id":4040,"name":"Ownable","nameLocations":["2700:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2700:7:8"},"id":4041,"nodeType":"InheritanceSpecifier","src":"2700:7:8"}],"canonicalName":"InsuranceCover","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5671,"linearizedBaseContracts":[5671,147,255,376],"name":"InsuranceCover","nameLocation":"2665:14:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4043,"libraryName":{"id":4042,"name":"CoverLib","nameLocations":["2721:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3864,"src":"2721:8:8"},"nodeType":"UsingForDirective","src":"2715:21:8"},{"global":false,"id":4046,"libraryName":{"id":4044,"name":"Math","nameLocations":["2748:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"2748:4:8"},"nodeType":"UsingForDirective","src":"2742:23:8","typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"2757:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"errorSelector":"e067835f","id":4048,"name":"LpNotActive","nameLocation":"2779:11:8","nodeType":"ErrorDefinition","parameters":{"id":4047,"nodeType":"ParameterList","parameters":[],"src":"2790:2:8"},"src":"2773:20:8"},{"errorSelector":"bc6072f1","id":4050,"name":"InsufficientPoolBalance","nameLocation":"2805:23:8","nodeType":"ErrorDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[],"src":"2828:2:8"},"src":"2799:32:8"},{"errorSelector":"ed700a67","id":4052,"name":"NoClaimableReward","nameLocation":"2843:17:8","nodeType":"ErrorDefinition","parameters":{"id":4051,"nodeType":"ParameterList","parameters":[],"src":"2860:2:8"},"src":"2837:26:8"},{"errorSelector":"3f132b12","id":4054,"name":"InvalidCoverDuration","nameLocation":"2875:20:8","nodeType":"ErrorDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[],"src":"2895:2:8"},"src":"2869:29:8"},{"errorSelector":"bccd4043","id":4056,"name":"CoverNotAvailable","nameLocation":"2910:17:8","nodeType":"ErrorDefinition","parameters":{"id":4055,"nodeType":"ParameterList","parameters":[],"src":"2927:2:8"},"src":"2904:26:8"},{"errorSelector":"9857cbd9","id":4058,"name":"UserHaveAlreadyPurchasedCover","nameLocation":"2942:29:8","nodeType":"ErrorDefinition","parameters":{"id":4057,"nodeType":"ParameterList","parameters":[],"src":"2971:2:8"},"src":"2936:38:8"},{"errorSelector":"d202940c","id":4060,"name":"NameAlreadyExists","nameLocation":"2986:17:8","nodeType":"ErrorDefinition","parameters":{"id":4059,"nodeType":"ParameterList","parameters":[],"src":"3003:2:8"},"src":"2980:26:8"},{"errorSelector":"2c5211c6","id":4062,"name":"InvalidAmount","nameLocation":"3018:13:8","nodeType":"ErrorDefinition","parameters":{"id":4061,"nodeType":"ParameterList","parameters":[],"src":"3031:2:8"},"src":"3012:22:8"},{"errorSelector":"1ba7dd47","id":4064,"name":"UnsupportedCoverType","nameLocation":"3046:20:8","nodeType":"ErrorDefinition","parameters":{"id":4063,"nodeType":"ParameterList","parameters":[],"src":"3066:2:8"},"src":"3040:29:8"},{"errorSelector":"d3c913ea","id":4066,"name":"WrongPool","nameLocation":"3081:9:8","nodeType":"ErrorDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[],"src":"3090:2:8"},"src":"3075:18:8"},{"constant":false,"functionSelector":"357917b7","id":4068,"mutability":"mutable","name":"coverFeeBalance","nameLocation":"3113:15:8","nodeType":"VariableDeclaration","scope":5671,"src":"3101:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4067,"name":"uint","nodeType":"ElementaryTypeName","src":"3101:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8acee3cf","id":4071,"mutability":"mutable","name":"lpContract","nameLocation":"3146:10:8","nodeType":"VariableDeclaration","scope":5671,"src":"3135:21:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"},"typeName":{"id":4070,"nodeType":"UserDefinedTypeName","pathNode":{"id":4069,"name":"ILP","nameLocations":["3135:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":4037,"src":"3135:3:8"},"referencedDeclaration":4037,"src":"3135:3:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"visibility":"public"},{"constant":false,"functionSelector":"34808ec3","id":4074,"mutability":"mutable","name":"bqBTC","nameLocation":"3177:5:8","nodeType":"VariableDeclaration","scope":5671,"src":"3163:19:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3897","typeString":"contract IbqBTC"},"typeName":{"id":4073,"nodeType":"UserDefinedTypeName","pathNode":{"id":4072,"name":"IbqBTC","nameLocations":["3163:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3897,"src":"3163:6:8"},"referencedDeclaration":3897,"src":"3163:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3897","typeString":"contract IbqBTC"}},"visibility":"public"},{"constant":false,"functionSelector":"996b8a6f","id":4076,"mutability":"mutable","name":"bqBTCAddress","nameLocation":"3204:12:8","nodeType":"VariableDeclaration","scope":5671,"src":"3189:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4075,"name":"address","nodeType":"ElementaryTypeName","src":"3189:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9b4dc8cc","id":4078,"mutability":"mutable","name":"lpAddress","nameLocation":"3238:9:8","nodeType":"VariableDeclaration","scope":5671,"src":"3223:24:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4077,"name":"address","nodeType":"ElementaryTypeName","src":"3223:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"5aa6e675","id":4080,"mutability":"mutable","name":"governance","nameLocation":"3269:10:8","nodeType":"VariableDeclaration","scope":5671,"src":"3254:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4079,"name":"address","nodeType":"ElementaryTypeName","src":"3254:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"35c1d349","id":4083,"mutability":"mutable","name":"participants","nameLocation":"3303:12:8","nodeType":"VariableDeclaration","scope":5671,"src":"3286:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4081,"name":"address","nodeType":"ElementaryTypeName","src":"3286:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4082,"nodeType":"ArrayTypeName","src":"3286:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"96f3a8ad","id":4087,"mutability":"mutable","name":"participation","nameLocation":"3357:13:8","nodeType":"VariableDeclaration","scope":5671,"src":"3322:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4086,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4084,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3322:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"3341:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"782ea619","id":4091,"mutability":"mutable","name":"coverExists","nameLocation":"3411:11:8","nodeType":"VariableDeclaration","scope":5671,"src":"3379:43:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":4090,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"3387:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3379:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4089,"name":"bool","nodeType":"ElementaryTypeName","src":"3398:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"7a728e7f","id":4097,"mutability":"mutable","name":"NextLpClaimTime","nameLocation":"3484:15:8","nodeType":"VariableDeclaration","scope":5671,"src":"3429:70:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":4096,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4092,"name":"address","nodeType":"ElementaryTypeName","src":"3437:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3429:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4095,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3456:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3448:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"3467:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"0db981a0","id":4103,"mutability":"mutable","name":"LastVaultClaimTime","nameLocation":"3561:18:8","nodeType":"VariableDeclaration","scope":5671,"src":"3506:73:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":4102,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3506:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4101,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4099,"name":"uint256","nodeType":"ElementaryTypeName","src":"3533:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3525:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3544:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"9e7b399e","id":4110,"mutability":"mutable","name":"userCovers","nameLocation":"3670:10:8","nodeType":"VariableDeclaration","scope":5671,"src":"3588:92:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo))"},"typeName":{"id":4109,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4104,"name":"address","nodeType":"ElementaryTypeName","src":"3596:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3588:65:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4108,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4105,"name":"uint256","nodeType":"ElementaryTypeName","src":"3615:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3607:45:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4107,"nodeType":"UserDefinedTypeName","pathNode":{"id":4106,"name":"CoverLib.GenericCoverInfo","nameLocations":["3626:8:8","3635:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"3626:25:8"},"referencedDeclaration":3810,"src":"3626:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}}}},"visibility":"public"},{"constant":false,"functionSelector":"6299df6c","id":4115,"mutability":"mutable","name":"covers","nameLocation":"3729:6:8","nodeType":"VariableDeclaration","scope":5671,"src":"3687:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover)"},"typeName":{"id":4114,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4111,"name":"uint256","nodeType":"ElementaryTypeName","src":"3695:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3687:34:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4113,"nodeType":"UserDefinedTypeName","pathNode":{"id":4112,"name":"CoverLib.Cover","nameLocations":["3706:8:8","3715:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"3706:14:8"},"referencedDeclaration":3790,"src":"3706:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}}},"visibility":"public"},{"constant":false,"functionSelector":"feb0b8f5","id":4117,"mutability":"mutable","name":"coverCount","nameLocation":"3759:10:8","nodeType":"VariableDeclaration","scope":5671,"src":"3744:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fb643583","id":4120,"mutability":"mutable","name":"coverIds","nameLocation":"3793:8:8","nodeType":"VariableDeclaration","scope":5671,"src":"3776:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"3776:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4119,"nodeType":"ArrayTypeName","src":"3776:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5928d65cc6ae9f07a7673f1a5a2f98d81f1bb0c2bc53bcaa33d6f11cf426f25e","id":4129,"name":"CoverCreated","nameLocation":"3816:12:8","nodeType":"EventDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"indexed":true,"mutability":"mutable","name":"coverId","nameLocation":"3855:7:8","nodeType":"VariableDeclaration","scope":4129,"src":"3839:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"3839:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4124,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"3880:4:8","nodeType":"VariableDeclaration","scope":4129,"src":"3873:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4123,"name":"string","nodeType":"ElementaryTypeName","src":"3873:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4127,"indexed":false,"mutability":"mutable","name":"riskType","nameLocation":"3913:8:8","nodeType":"VariableDeclaration","scope":4129,"src":"3895:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4126,"nodeType":"UserDefinedTypeName","pathNode":{"id":4125,"name":"CoverLib.RiskType","nameLocations":["3895:8:8","3904:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"3895:17:8"},"referencedDeclaration":3814,"src":"3895:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"}],"src":"3828:100:8"},"src":"3810:119:8"},{"anonymous":false,"eventSelector":"23b0f39e0762759ffb18632a1a2b79c9eb58571454e5f7c36e0a2f81759e0a34","id":4140,"name":"CoverPurchased","nameLocation":"3941:14:8","nodeType":"EventDefinition","parameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3982:4:8","nodeType":"VariableDeclaration","scope":4140,"src":"3966:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4130,"name":"address","nodeType":"ElementaryTypeName","src":"3966:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4133,"indexed":false,"mutability":"mutable","name":"coverValue","nameLocation":"4005:10:8","nodeType":"VariableDeclaration","scope":4140,"src":"3997:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4135,"indexed":false,"mutability":"mutable","name":"coverFee","nameLocation":"4034:8:8","nodeType":"VariableDeclaration","scope":4140,"src":"4026:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"4026:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4138,"indexed":false,"mutability":"mutable","name":"riskType","nameLocation":"4071:8:8","nodeType":"VariableDeclaration","scope":4140,"src":"4053:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4137,"nodeType":"UserDefinedTypeName","pathNode":{"id":4136,"name":"CoverLib.RiskType","nameLocations":["4053:8:8","4062:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"4053:17:8"},"referencedDeclaration":3814,"src":"4053:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"}],"src":"3955:131:8"},"src":"3935:152:8"},{"anonymous":false,"eventSelector":"0408e6e0b73daf4c873106e95fd067260fbff8bf9d1b499cad563d4480d45bac","id":4148,"name":"PayoutClaimed","nameLocation":"4099:13:8","nodeType":"EventDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4139:4:8","nodeType":"VariableDeclaration","scope":4148,"src":"4123:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4141,"name":"address","nodeType":"ElementaryTypeName","src":"4123:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4144,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"4170:6:8","nodeType":"VariableDeclaration","scope":4148,"src":"4154:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4143,"name":"uint256","nodeType":"ElementaryTypeName","src":"4154:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4146,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4195:6:8","nodeType":"VariableDeclaration","scope":4148,"src":"4187:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4187:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4112:96:8"},"src":"4093:116:8"},{"anonymous":false,"eventSelector":"758a67328ba53c1867c0272bbd2ca10d6fe71d37120188c523fe7ae7bdbbe469","id":4157,"name":"CoverUpdated","nameLocation":"4221:12:8","nodeType":"EventDefinition","parameters":{"id":4156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"indexed":true,"mutability":"mutable","name":"coverId","nameLocation":"4260:7:8","nodeType":"VariableDeclaration","scope":4157,"src":"4244:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"4244:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4152,"indexed":false,"mutability":"mutable","name":"coverName","nameLocation":"4285:9:8","nodeType":"VariableDeclaration","scope":4157,"src":"4278:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4151,"name":"string","nodeType":"ElementaryTypeName","src":"4278:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4155,"indexed":false,"mutability":"mutable","name":"riskType","nameLocation":"4323:8:8","nodeType":"VariableDeclaration","scope":4157,"src":"4305:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4154,"nodeType":"UserDefinedTypeName","pathNode":{"id":4153,"name":"CoverLib.RiskType","nameLocations":["4305:8:8","4314:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"4305:17:8"},"referencedDeclaration":3814,"src":"4305:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"}],"src":"4233:105:8"},"src":"4215:124:8"},{"body":{"id":4189,"nodeType":"Block","src":"4476:147:8","statements":[{"expression":{"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4169,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"4487:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4171,"name":"_lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"4504:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4170,"name":"ILP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"4500:3:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILP_$4037_$","typeString":"type(contract ILP)"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4500:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"src":"4487:29:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":4174,"nodeType":"ExpressionStatement","src":"4487:29:8"},{"expression":{"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4175,"name":"lpAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"4527:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4176,"name":"_lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"4539:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4527:23:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4178,"nodeType":"ExpressionStatement","src":"4527:23:8"},{"expression":{"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4179,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"4561:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3897","typeString":"contract IbqBTC"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4181,"name":"_bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"4576:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4180,"name":"IbqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"4569:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IbqBTC_$3897_$","typeString":"type(contract IbqBTC)"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4569:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3897","typeString":"contract IbqBTC"}},"src":"4561:22:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3897","typeString":"contract IbqBTC"}},"id":4184,"nodeType":"ExpressionStatement","src":"4561:22:8"},{"expression":{"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4185,"name":"bqBTCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"4594:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4186,"name":"_bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"4609:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4594:21:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4188,"nodeType":"ExpressionStatement","src":"4594:21:8"}]},"id":4190,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4166,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"4461:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4167,"kind":"baseConstructorSpecifier","modifierName":{"id":4165,"name":"Ownable","nameLocations":["4453:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"4453:7:8"},"nodeType":"ModifierInvocation","src":"4453:22:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"_lpContract","nameLocation":"4377:11:8","nodeType":"VariableDeclaration","scope":4190,"src":"4369:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4158,"name":"address","nodeType":"ElementaryTypeName","src":"4369:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4161,"mutability":"mutable","name":"_initialOwner","nameLocation":"4407:13:8","nodeType":"VariableDeclaration","scope":4190,"src":"4399:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4160,"name":"address","nodeType":"ElementaryTypeName","src":"4399:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"_bqBTC","nameLocation":"4439:6:8","nodeType":"VariableDeclaration","scope":4190,"src":"4431:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4162,"name":"address","nodeType":"ElementaryTypeName","src":"4431:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4358:94:8"},"returnParameters":{"id":4168,"nodeType":"ParameterList","parameters":[],"src":"4476:0:8"},"scope":5671,"src":"4347:276:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4282,"nodeType":"Block","src":"4914:890:8","statements":[{"assignments":[4213],"declarations":[{"constant":false,"id":4213,"mutability":"mutable","name":"_maxAmount","nameLocation":"4933:10:8","nodeType":"VariableDeclaration","scope":4282,"src":"4925:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4925:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4220,"initialValue":{"arguments":[{"id":4215,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"4984:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4216,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"5009:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4217,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"5031:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},{"id":4218,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"5055:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4214,"name":"_validateAndGetPoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"4946:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_enum$_RiskType_$3814_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,enum CoverLib.RiskType,uint256) view returns (uint256)"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4946:129:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4925:150:8"},{"expression":{"arguments":[{"id":4224,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"5121:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4225,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"5130:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4221,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"5088:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5099:21:8","memberName":"reducePercentageSplit","nodeType":"MemberAccess","referencedDeclaration":4004,"src":"5088:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4227,"nodeType":"ExpressionStatement","src":"5088:52:8"},{"expression":{"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5153:12:8","subExpression":{"id":4228,"name":"coverCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"5153:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4230,"nodeType":"ExpressionStatement","src":"5153:12:8"},{"assignments":[4235],"declarations":[{"constant":false,"id":4235,"mutability":"mutable","name":"cover","nameLocation":"5198:5:8","nodeType":"VariableDeclaration","scope":4282,"src":"5176:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":4234,"nodeType":"UserDefinedTypeName","pathNode":{"id":4233,"name":"CoverLib.Cover","nameLocations":["5176:8:8","5185:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"5176:14:8"},"referencedDeclaration":3790,"src":"5176:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"id":4250,"initialValue":{"arguments":[{"id":4238,"name":"coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"5240:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4239,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"5273:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4240,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"5308:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},{"id":4241,"name":"_chains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"5340:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4242,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"5372:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4243,"name":"_cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"5402:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4244,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"5438:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5476:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4246,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"5503:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4247,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"5536:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4248,"name":"_cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"5563:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4236,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"5206:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5215:5:8","memberName":"Cover","nodeType":"MemberAccess","referencedDeclaration":3790,"src":"5206:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Cover_$3790_storage_ptr_$","typeString":"type(struct CoverLib.Cover storage pointer)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5236:2:8","5262:9:8","5298:8:8","5332:6:8","5362:8:8","5396:4:8","5422:14:8","5463:11:8","5492:9:8","5528:6:8","5558:3:8"],"names":["id","coverName","riskType","chains","capacity","cost","capacityAmount","coverValues","maxAmount","poolId","CID"],"nodeType":"FunctionCall","src":"5206:373:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"nodeType":"VariableDeclarationStatement","src":"5176:403:8"},{"expression":{"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4251,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"5590:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":4253,"indexExpression":{"id":4252,"name":"coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"5597:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5590:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4254,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"5608:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"src":"5590:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":4256,"nodeType":"ExpressionStatement","src":"5590:23:8"},{"expression":{"arguments":[{"id":4260,"name":"coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"5638:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4257,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"5624:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5633:4:8","memberName":"push","nodeType":"MemberAccess","src":"5624:13:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5624:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4262,"nodeType":"ExpressionStatement","src":"5624:22:8"},{"expression":{"arguments":[{"id":4266,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"5681:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4267,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"5690:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}],"expression":{"id":4263,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"5657:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5668:12:8","memberName":"addPoolCover","nodeType":"MemberAccess","referencedDeclaration":4019,"src":"5657:23:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_struct$_Cover_$3790_memory_ptr_$returns$__$","typeString":"function (uint256,struct CoverLib.Cover memory) external"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5657:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4269,"nodeType":"ExpressionStatement","src":"5657:39:8"},{"expression":{"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4270,"name":"coverExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"5707:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4272,"indexExpression":{"id":4271,"name":"coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"5719:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5707:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5730:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5707:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4275,"nodeType":"ExpressionStatement","src":"5707:27:8"},{"eventCall":{"arguments":[{"id":4277,"name":"coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"5765:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4278,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"5774:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4279,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"5786:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}],"id":4276,"name":"CoverCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"5752:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_enum$_RiskType_$3814_$returns$__$","typeString":"function (uint256,string memory,enum CoverLib.RiskType)"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4281,"nodeType":"EmitStatement","src":"5747:49:8"}]},"functionSelector":"9732bdb5","id":4283,"implemented":true,"kind":"function","modifiers":[{"id":4210,"kind":"modifierInvocation","modifierName":{"id":4209,"name":"onlyOwner","nameLocations":["4904:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4904:9:8"},"nodeType":"ModifierInvocation","src":"4904:9:8"}],"name":"createCover","nameLocation":"4640:11:8","nodeType":"FunctionDefinition","parameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"coverId","nameLocation":"4670:7:8","nodeType":"VariableDeclaration","scope":4283,"src":"4662:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"4662:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4194,"mutability":"mutable","name":"_cid","nameLocation":"4702:4:8","nodeType":"VariableDeclaration","scope":4283,"src":"4688:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4193,"name":"string","nodeType":"ElementaryTypeName","src":"4688:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4197,"mutability":"mutable","name":"_riskType","nameLocation":"4735:9:8","nodeType":"VariableDeclaration","scope":4283,"src":"4717:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4196,"nodeType":"UserDefinedTypeName","pathNode":{"id":4195,"name":"CoverLib.RiskType","nameLocations":["4717:8:8","4726:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"4717:17:8"},"referencedDeclaration":3814,"src":"4717:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":4199,"mutability":"mutable","name":"_coverName","nameLocation":"4769:10:8","nodeType":"VariableDeclaration","scope":4283,"src":"4755:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4198,"name":"string","nodeType":"ElementaryTypeName","src":"4755:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"_chains","nameLocation":"4804:7:8","nodeType":"VariableDeclaration","scope":4283,"src":"4790:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4200,"name":"string","nodeType":"ElementaryTypeName","src":"4790:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4203,"mutability":"mutable","name":"_capacity","nameLocation":"4830:9:8","nodeType":"VariableDeclaration","scope":4283,"src":"4822:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"4822:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4205,"mutability":"mutable","name":"_cost","nameLocation":"4858:5:8","nodeType":"VariableDeclaration","scope":4283,"src":"4850:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4850:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"_poolId","nameLocation":"4882:7:8","nodeType":"VariableDeclaration","scope":4283,"src":"4874:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4874:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4651:245:8"},"returnParameters":{"id":4211,"nodeType":"ParameterList","parameters":[],"src":"4914:0:8"},"scope":5671,"src":"4631:1173:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4386,"nodeType":"Block","src":"6008:826:8","statements":[{"assignments":[4302],"declarations":[{"constant":false,"id":4302,"mutability":"mutable","name":"coversInPool","nameLocation":"6043:12:8","nodeType":"VariableDeclaration","scope":4386,"src":"6019:36:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":4300,"nodeType":"UserDefinedTypeName","pathNode":{"id":4299,"name":"CoverLib.Cover","nameLocations":["6019:8:8","6028:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"6019:14:8"},"referencedDeclaration":3790,"src":"6019:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":4301,"nodeType":"ArrayTypeName","src":"6019:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":4307,"initialValue":{"arguments":[{"id":4305,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"6083:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4303,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"6058:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6069:13:8","memberName":"getPoolCovers","nodeType":"MemberAccess","referencedDeclaration":4036,"src":"6058:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view external returns (struct CoverLib.Cover memory[] memory)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6058:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6019:71:8"},{"body":{"id":4340,"nodeType":"Block","src":"6151:239:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":4322,"name":"coversInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"6215:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":4324,"indexExpression":{"id":4323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"6228:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6215:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":4325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6231:9:8","memberName":"coverName","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"6215:25:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4320,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6198:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6202:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"6198:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4319,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6188:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4331,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"6290:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4329,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6273:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6277:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"6273:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4328,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6263:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6263:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6188:114:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4339,"nodeType":"IfStatement","src":"6166:213:8","trueBody":{"id":4338,"nodeType":"Block","src":"6318:61:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4335,"name":"NameAlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"6344:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6344:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4337,"nodeType":"RevertStatement","src":"6337:26:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"6121:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4313,"name":"coversInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"6125:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6138:6:8","memberName":"length","nodeType":"MemberAccess","src":"6125:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6121:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4341,"initializationExpression":{"assignments":[4309],"declarations":[{"constant":false,"id":4309,"mutability":"mutable","name":"i","nameLocation":"6114:1:8","nodeType":"VariableDeclaration","scope":4341,"src":"6106:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4311,"initialValue":{"hexValue":"30","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6118:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6106:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6146:3:8","subExpression":{"id":4316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"6146:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4318,"nodeType":"ExpressionStatement","src":"6146:3:8"},"nodeType":"ForStatement","src":"6101:289:8"},{"assignments":[null,4346,null,null,4348,null,4350],"declarations":[null,{"constant":false,"id":4346,"mutability":"mutable","name":"risk","nameLocation":"6448:4:8","nodeType":"VariableDeclaration","scope":4386,"src":"6430:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4345,"nodeType":"UserDefinedTypeName","pathNode":{"id":4344,"name":"CoverLib.RiskType","nameLocations":["6430:8:8","6439:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"6430:17:8"},"referencedDeclaration":3814,"src":"6430:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},null,null,{"constant":false,"id":4348,"mutability":"mutable","name":"tvl","nameLocation":"6505:3:8","nodeType":"VariableDeclaration","scope":4386,"src":"6497:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"6497:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,{"constant":false,"id":4350,"mutability":"mutable","name":"percentageSplitBalance","nameLocation":"6546:22:8","nodeType":"VariableDeclaration","scope":4386,"src":"6538:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4349,"name":"uint256","nodeType":"ElementaryTypeName","src":"6538:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4355,"initialValue":{"arguments":[{"id":4353,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"6601:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4351,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"6582:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6593:7:8","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"6582:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_enum$_RiskType_$3814_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,enum CoverLib.RiskType,uint256,uint256,uint256,bool,uint256)"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_enum$_RiskType_$3814_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(string memory,enum CoverLib.RiskType,uint256,uint256,uint256,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6400:208:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4356,"name":"risk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"6625:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4357,"name":"riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"6633:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"src":"6625:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4359,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"6645:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4360,"name":"percentageSplitBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"6656:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6645:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6625:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4367,"nodeType":"IfStatement","src":"6621:104:8","trueBody":{"id":4366,"nodeType":"Block","src":"6680:45:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4363,"name":"WrongPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"6702:9:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6702:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4365,"nodeType":"RevertStatement","src":"6695:18:8"}]}},{"assignments":[4369],"declarations":[{"constant":false,"id":4369,"mutability":"mutable","name":"maxAmount","nameLocation":"6745:9:8","nodeType":"VariableDeclaration","scope":4386,"src":"6737:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6737:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4382,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4370,"name":"tvl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"6758:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4371,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"6766:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6777:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"6766:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6765:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6785:3:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6765:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6764:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6793:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"6757:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6737:60:8"},{"expression":{"components":[{"id":4383,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"6816:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6815:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4296,"id":4385,"nodeType":"Return","src":"6808:18:8"}]},"id":4387,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAndGetPoolInfo","nameLocation":"5821:23:8","nodeType":"FunctionDefinition","parameters":{"id":4293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"_coverName","nameLocation":"5869:10:8","nodeType":"VariableDeclaration","scope":4387,"src":"5855:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4284,"name":"string","nodeType":"ElementaryTypeName","src":"5855:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4287,"mutability":"mutable","name":"poolId","nameLocation":"5898:6:8","nodeType":"VariableDeclaration","scope":4387,"src":"5890:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"5890:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4290,"mutability":"mutable","name":"riskType","nameLocation":"5933:8:8","nodeType":"VariableDeclaration","scope":4387,"src":"5915:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4289,"nodeType":"UserDefinedTypeName","pathNode":{"id":4288,"name":"CoverLib.RiskType","nameLocations":["5915:8:8","5924:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"5915:17:8"},"referencedDeclaration":3814,"src":"5915:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"capacity","nameLocation":"5960:8:8","nodeType":"VariableDeclaration","scope":4387,"src":"5952:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"5952:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5844:131:8"},"returnParameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4387,"src":"5999:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"5999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5998:9:8"},"scope":5671,"src":"5812:1022:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4625,"nodeType":"Block","src":"7126:1887:8","statements":[{"assignments":[null,4413,null,null,4415,null,4417],"declarations":[null,{"constant":false,"id":4413,"mutability":"mutable","name":"risk","nameLocation":"7185:4:8","nodeType":"VariableDeclaration","scope":4625,"src":"7167:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4412,"nodeType":"UserDefinedTypeName","pathNode":{"id":4411,"name":"CoverLib.RiskType","nameLocations":["7167:8:8","7176:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"7167:17:8"},"referencedDeclaration":3814,"src":"7167:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},null,null,{"constant":false,"id":4415,"mutability":"mutable","name":"tvl","nameLocation":"7242:3:8","nodeType":"VariableDeclaration","scope":4625,"src":"7234:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4414,"name":"uint256","nodeType":"ElementaryTypeName","src":"7234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,{"constant":false,"id":4417,"mutability":"mutable","name":"_percentageSplitBalance","nameLocation":"7283:23:8","nodeType":"VariableDeclaration","scope":4625,"src":"7275:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"7275:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4422,"initialValue":{"arguments":[{"id":4420,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"7339:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4418,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"7320:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7331:7:8","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"7320:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_enum$_RiskType_$3814_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,enum CoverLib.RiskType,uint256,uint256,uint256,bool,uint256)"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7320:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_enum$_RiskType_$3814_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(string memory,enum CoverLib.RiskType,uint256,uint256,uint256,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7137:210:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"risk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"7364:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4424,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"7372:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"src":"7364:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"7385:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4427,"name":"_percentageSplitBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"7397:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7385:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7364:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4434,"nodeType":"IfStatement","src":"7360:107:8","trueBody":{"id":4433,"nodeType":"Block","src":"7422:45:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4430,"name":"WrongPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"7444:9:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7444:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4432,"nodeType":"RevertStatement","src":"7437:18:8"}]}},{"assignments":[4439],"declarations":[{"constant":false,"id":4439,"mutability":"mutable","name":"cover","nameLocation":"7502:5:8","nodeType":"VariableDeclaration","scope":4625,"src":"7479:28:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":4438,"nodeType":"UserDefinedTypeName","pathNode":{"id":4437,"name":"CoverLib.Cover","nameLocations":["7479:8:8","7488:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"7479:14:8"},"referencedDeclaration":3790,"src":"7479:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"id":4443,"initialValue":{"baseExpression":{"id":4440,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"7510:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":4442,"indexExpression":{"id":4441,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"7517:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7510:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7479:47:8"},{"assignments":[4445],"declarations":[{"constant":false,"id":4445,"mutability":"mutable","name":"_maxAmount","nameLocation":"7547:10:8","nodeType":"VariableDeclaration","scope":4625,"src":"7539:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"7539:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4458,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4446,"name":"tvl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"7561:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4447,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"7569:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7581:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7569:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7568:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7589:3:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7568:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7567:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7561:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7560:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7597:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7560:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7539:62:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4459,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"7618:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7624:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"7618:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4461,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"7638:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7618:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4467,"nodeType":"IfStatement","src":"7614:81:8","trueBody":{"id":4466,"nodeType":"Block","src":"7650:45:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4463,"name":"WrongPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"7672:9:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7672:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4465,"nodeType":"RevertStatement","src":"7665:18:8"}]}},{"assignments":[4473],"declarations":[{"constant":false,"id":4473,"mutability":"mutable","name":"coversInPool","nameLocation":"7731:12:8","nodeType":"VariableDeclaration","scope":4625,"src":"7707:36:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":4471,"nodeType":"UserDefinedTypeName","pathNode":{"id":4470,"name":"CoverLib.Cover","nameLocations":["7707:8:8","7716:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"7707:14:8"},"referencedDeclaration":3790,"src":"7707:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":4472,"nodeType":"ArrayTypeName","src":"7707:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":4478,"initialValue":{"arguments":[{"id":4476,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"7785:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4474,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"7746:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7757:13:8","memberName":"getPoolCovers","nodeType":"MemberAccess","referencedDeclaration":4036,"src":"7746:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view external returns (struct CoverLib.Cover memory[] memory)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7746:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7707:96:8"},{"body":{"id":4518,"nodeType":"Block","src":"7864:290:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":4493,"name":"coversInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"7928:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":4495,"indexExpression":{"id":4494,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"7941:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7928:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":4496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7944:9:8","memberName":"coverName","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"7928:25:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4491,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7911:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7915:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"7911:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7911:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4490,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7901:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7901:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4502,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"8003:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4500,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7986:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7990:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"7986:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7986:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4499,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7976:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7976:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7901:114:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4506,"name":"coversInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8036:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":4508,"indexExpression":{"id":4507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"8049:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8036:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":4509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8052:2:8","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"8036:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4510,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"8058:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8036:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7901:165:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4517,"nodeType":"IfStatement","src":"7879:264:8","trueBody":{"id":4516,"nodeType":"Block","src":"8082:61:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4513,"name":"NameAlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"8108:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8108:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4515,"nodeType":"RevertStatement","src":"8101:26:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"7834:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4484,"name":"coversInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"7838:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7851:6:8","memberName":"length","nodeType":"MemberAccess","src":"7838:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7834:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4519,"initializationExpression":{"assignments":[4480],"declarations":[{"constant":false,"id":4480,"mutability":"mutable","name":"i","nameLocation":"7827:1:8","nodeType":"VariableDeclaration","scope":4519,"src":"7819:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"7819:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4482,"initialValue":{"hexValue":"30","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7831:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7819:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7859:3:8","subExpression":{"id":4487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"7859:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4489,"nodeType":"ExpressionStatement","src":"7859:3:8"},"nodeType":"ForStatement","src":"7814:340:8"},{"assignments":[4521],"declarations":[{"constant":false,"id":4521,"mutability":"mutable","name":"oldCoverCapacity","nameLocation":"8174:16:8","nodeType":"VariableDeclaration","scope":4625,"src":"8166:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"8166:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4524,"initialValue":{"expression":{"id":4522,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8193:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8199:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"8193:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8166:41:8"},{"expression":{"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4525,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8220:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8226:9:8","memberName":"coverName","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"8220:15:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4528,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"8238:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8220:28:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4530,"nodeType":"ExpressionStatement","src":"8220:28:8"},{"expression":{"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4531,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8259:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8265:6:8","memberName":"chains","nodeType":"MemberAccess","referencedDeclaration":3775,"src":"8259:12:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4534,"name":"_chains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8274:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8259:22:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4536,"nodeType":"ExpressionStatement","src":"8259:22:8"},{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4537,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8292:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8298:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"8292:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4540,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"8309:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8292:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4542,"nodeType":"ExpressionStatement","src":"8292:26:8"},{"expression":{"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4543,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8329:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8335:4:8","memberName":"cost","nodeType":"MemberAccess","referencedDeclaration":3779,"src":"8329:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4546,"name":"_cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"8342:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8329:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4548,"nodeType":"ExpressionStatement","src":"8329:18:8"},{"expression":{"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4549,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8358:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8364:3:8","memberName":"CID","nodeType":"MemberAccess","referencedDeclaration":3789,"src":"8358:9:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4552,"name":"_cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"8370:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8358:16:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4554,"nodeType":"ExpressionStatement","src":"8358:16:8"},{"expression":{"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4555,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8385:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8391:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"8385:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4558,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"8408:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8385:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4560,"nodeType":"ExpressionStatement","src":"8385:33:8"},{"expression":{"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4561,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8429:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8435:6:8","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"8429:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4564,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"8444:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8429:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4566,"nodeType":"ExpressionStatement","src":"8429:22:8"},{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4567,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8462:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8468:9:8","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"8462:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"8480:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4571,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8493:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8499:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"8493:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8480:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8462:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4575,"nodeType":"ExpressionStatement","src":"8462:48:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4576,"name":"oldCoverCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8527:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4577,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"8546:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8527:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"oldCoverCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8713:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4594,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"8732:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8713:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4610,"nodeType":"IfStatement","src":"8709:178:8","trueBody":{"id":4609,"nodeType":"Block","src":"8743:144:8","statements":[{"assignments":[4597],"declarations":[{"constant":false,"id":4597,"mutability":"mutable","name":"difference","nameLocation":"8766:10:8","nodeType":"VariableDeclaration","scope":4609,"src":"8758:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4601,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4598,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"8779:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4599,"name":"oldCoverCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8791:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8779:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8758:49:8"},{"expression":{"arguments":[{"id":4605,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"8855:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4606,"name":"difference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"8864:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4602,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"8822:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8833:21:8","memberName":"reducePercentageSplit","nodeType":"MemberAccess","referencedDeclaration":4004,"src":"8822:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8822:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4608,"nodeType":"ExpressionStatement","src":"8822:53:8"}]}},"id":4611,"nodeType":"IfStatement","src":"8523:364:8","trueBody":{"id":4592,"nodeType":"Block","src":"8557:146:8","statements":[{"assignments":[4580],"declarations":[{"constant":false,"id":4580,"mutability":"mutable","name":"difference","nameLocation":"8580:10:8","nodeType":"VariableDeclaration","scope":4592,"src":"8572:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4579,"name":"uint256","nodeType":"ElementaryTypeName","src":"8572:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4584,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"oldCoverCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"8593:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4582,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"8612:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8593:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8572:49:8"},{"expression":{"arguments":[{"id":4588,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"8671:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4589,"name":"difference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"8680:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4585,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"8636:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8647:23:8","memberName":"increasePercentageSplit","nodeType":"MemberAccess","referencedDeclaration":4011,"src":"8636:34:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8636:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4591,"nodeType":"ExpressionStatement","src":"8636:55:8"}]}},{"expression":{"arguments":[{"id":4615,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"8927:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4616,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"8936:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}],"expression":{"id":4612,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"8899:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8910:16:8","memberName":"updatePoolCovers","nodeType":"MemberAccess","referencedDeclaration":4027,"src":"8899:27:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_struct$_Cover_$3790_memory_ptr_$returns$__$","typeString":"function (uint256,struct CoverLib.Cover memory) external"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8899:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4618,"nodeType":"ExpressionStatement","src":"8899:43:8"},{"eventCall":{"arguments":[{"id":4620,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"8973:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4621,"name":"_coverName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"8983:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4622,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"8995:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}],"id":4619,"name":"CoverUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"8960:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_enum$_RiskType_$3814_$returns$__$","typeString":"function (uint256,string memory,enum CoverLib.RiskType)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4624,"nodeType":"EmitStatement","src":"8955:50:8"}]},"functionSelector":"8de4d101","id":4626,"implemented":true,"kind":"function","modifiers":[{"id":4407,"kind":"modifierInvocation","modifierName":{"id":4406,"name":"onlyOwner","nameLocations":["7116:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7116:9:8"},"nodeType":"ModifierInvocation","src":"7116:9:8"}],"name":"updateCover","nameLocation":"6851:11:8","nodeType":"FunctionDefinition","parameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"_coverId","nameLocation":"6881:8:8","nodeType":"VariableDeclaration","scope":4626,"src":"6873:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"6873:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4391,"mutability":"mutable","name":"_coverName","nameLocation":"6914:10:8","nodeType":"VariableDeclaration","scope":4626,"src":"6900:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4390,"name":"string","nodeType":"ElementaryTypeName","src":"6900:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"_riskType","nameLocation":"6953:9:8","nodeType":"VariableDeclaration","scope":4626,"src":"6935:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":4393,"nodeType":"UserDefinedTypeName","pathNode":{"id":4392,"name":"CoverLib.RiskType","nameLocations":["6935:8:8","6944:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"6935:17:8"},"referencedDeclaration":3814,"src":"6935:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"_cid","nameLocation":"6987:4:8","nodeType":"VariableDeclaration","scope":4626,"src":"6973:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4395,"name":"string","nodeType":"ElementaryTypeName","src":"6973:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4398,"mutability":"mutable","name":"_chains","nameLocation":"7016:7:8","nodeType":"VariableDeclaration","scope":4626,"src":"7002:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4397,"name":"string","nodeType":"ElementaryTypeName","src":"7002:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4400,"mutability":"mutable","name":"_capacity","nameLocation":"7042:9:8","nodeType":"VariableDeclaration","scope":4626,"src":"7034:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4399,"name":"uint256","nodeType":"ElementaryTypeName","src":"7034:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4402,"mutability":"mutable","name":"_cost","nameLocation":"7070:5:8","nodeType":"VariableDeclaration","scope":4626,"src":"7062:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"7062:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"_poolId","nameLocation":"7094:7:8","nodeType":"VariableDeclaration","scope":4626,"src":"7086:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6862:246:8"},"returnParameters":{"id":4408,"nodeType":"ParameterList","parameters":[],"src":"7126:0:8"},"scope":5671,"src":"6842:2171:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4848,"nodeType":"Block","src":"9187:2059:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4639,"name":"_coverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"9202:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9215:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9202:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4646,"nodeType":"IfStatement","src":"9198:69:8","trueBody":{"id":4645,"nodeType":"Block","src":"9218:49:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4642,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"9240:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9240:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4644,"nodeType":"RevertStatement","src":"9233:22:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4647,"name":"_coverPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"9281:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3237","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9297:2:8","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"9281:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4650,"name":"_coverPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"9303:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"333636","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9319:3:8","typeDescriptions":{"typeIdentifier":"t_rational_366_by_1","typeString":"int_const 366"},"value":"366"},"src":"9303:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9281:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4658,"nodeType":"IfStatement","src":"9277:103:8","trueBody":{"id":4657,"nodeType":"Block","src":"9324:56:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4654,"name":"InvalidCoverDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"9346:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9346:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4656,"nodeType":"RevertStatement","src":"9339:29:8"}]}},{"condition":{"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9394:22:8","subExpression":{"baseExpression":{"id":4659,"name":"coverExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"9395:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4661,"indexExpression":{"id":4660,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"9407:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9395:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4667,"nodeType":"IfStatement","src":"9390:81:8","trueBody":{"id":4666,"nodeType":"Block","src":"9418:53:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4663,"name":"CoverNotAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"9440:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9440:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4665,"nodeType":"RevertStatement","src":"9433:26:8"}]}},{"assignments":[4672],"declarations":[{"constant":false,"id":4672,"mutability":"mutable","name":"cover","nameLocation":"9506:5:8","nodeType":"VariableDeclaration","scope":4848,"src":"9483:28:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":4671,"nodeType":"UserDefinedTypeName","pathNode":{"id":4670,"name":"CoverLib.Cover","nameLocations":["9483:8:8","9492:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"9483:14:8"},"referencedDeclaration":3790,"src":"9483:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"id":4676,"initialValue":{"baseExpression":{"id":4673,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"9514:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":4675,"indexExpression":{"id":4674,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"9521:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9514:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9483:47:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"_coverValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"9545:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4678,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"9559:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9565:9:8","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"9559:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9545:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4685,"nodeType":"IfStatement","src":"9541:94:8","trueBody":{"id":4684,"nodeType":"Block","src":"9576:59:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4681,"name":"InsufficientPoolBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"9598:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9598:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4683,"nodeType":"RevertStatement","src":"9591:32:8"}]}},{"assignments":[4687],"declarations":[{"constant":false,"id":4687,"mutability":"mutable","name":"newCoverValues","nameLocation":"9655:14:8","nodeType":"VariableDeclaration","scope":4848,"src":"9647:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"9647:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4692,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4688,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"9672:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9678:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"9672:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4690,"name":"_coverValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"9692:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9672:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9647:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4693,"name":"newCoverValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"9720:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4694,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"9737:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9743:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"9737:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9720:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4701,"nodeType":"IfStatement","src":"9716:102:8","trueBody":{"id":4700,"nodeType":"Block","src":"9759:59:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4697,"name":"InsufficientPoolBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"9781:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9781:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4699,"nodeType":"RevertStatement","src":"9774:32:8"}]}},{"expression":{"arguments":[{"expression":{"id":4705,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9841:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9845:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9841:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4707,"name":"_coverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"9853:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4702,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"9830:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3897","typeString":"contract IbqBTC"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9836:4:8","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":3885,"src":"9830:10:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9830:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4709,"nodeType":"ExpressionStatement","src":"9830:33:8"},{"expression":{"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4710,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"9876:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9882:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"9876:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4713,"name":"newCoverValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"9896:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9876:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4715,"nodeType":"ExpressionStatement","src":"9876:34:8"},{"expression":{"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4716,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"9921:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9927:9:8","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"9921:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4719,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"9939:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9945:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"9939:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4721,"name":"newCoverValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"9962:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9939:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9921:55:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4724,"nodeType":"ExpressionStatement","src":"9921:55:8"},{"expression":{"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4725,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"9989:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9995:9:8","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"9989:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4728,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"10008:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10014:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"10008:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4730,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"10031:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10037:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"10031:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10008:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10007:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9989:60:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4735,"nodeType":"ExpressionStatement","src":"9989:60:8"},{"assignments":[4740],"declarations":[{"constant":false,"id":4740,"mutability":"mutable","name":"userCover","nameLocation":"10094:9:8","nodeType":"VariableDeclaration","scope":4848,"src":"10060:43:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"},"typeName":{"id":4739,"nodeType":"UserDefinedTypeName","pathNode":{"id":4738,"name":"CoverLib.GenericCoverInfo","nameLocations":["10060:8:8","10069:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"10060:25:8"},"referencedDeclaration":3810,"src":"10060:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"visibility":"internal"}],"id":4747,"initialValue":{"baseExpression":{"baseExpression":{"id":4741,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"10106:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":4744,"indexExpression":{"expression":{"id":4742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10117:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10121:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10117:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10106:22:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":4746,"indexExpression":{"id":4745,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"10143:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10106:56:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10060:102:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4748,"name":"userCover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"10179:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo storage pointer"}},"id":4749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10189:10:8","memberName":"coverValue","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"10179:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10203:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10179:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4785,"nodeType":"Block","src":"10693:65:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4782,"name":"UserHaveAlreadyPurchasedCover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"10715:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10715:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4784,"nodeType":"RevertStatement","src":"10708:38:8"}]},"id":4786,"nodeType":"IfStatement","src":"10175:583:8","trueBody":{"id":4781,"nodeType":"Block","src":"10206:481:8","statements":[{"expression":{"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4752,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"10221:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":4756,"indexExpression":{"expression":{"id":4753,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10232:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10236:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10232:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10221:22:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":4757,"indexExpression":{"id":4755,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"10244:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10221:32:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4760,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10307:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10311:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10307:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4762,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"10345:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4763,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"10382:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10388:8:8","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":3773,"src":"10382:14:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},{"expression":{"id":4765,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"10426:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10432:9:8","memberName":"coverName","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"10426:15:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":4767,"name":"_coverValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"10472:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10513:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4769,"name":"_coverPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"10546:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4770,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10585:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10591:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"10585:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4772,"name":"_coverPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"10604:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10619:6:8","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"10604:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10603:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10585:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10655:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4758,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"10256:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10265:16:8","memberName":"GenericCoverInfo","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"10256:25:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GenericCoverInfo_$3810_storage_ptr_$","typeString":"type(struct CoverLib.GenericCoverInfo storage pointer)"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10301:4:8","10336:7:8","10372:8:8","10415:9:8","10460:10:8","10502:9:8","10533:11:8","10577:6:8","10645:8:8"],"names":["user","coverId","riskType","coverName","coverValue","claimPaid","coverPeriod","endDay","isActive"],"nodeType":"FunctionCall","src":"10256:419:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory"}},"src":"10221:454:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"id":4780,"nodeType":"ExpressionStatement","src":"10221:454:8"}]}},{"assignments":[4788],"declarations":[{"constant":false,"id":4788,"mutability":"mutable","name":"userExists","nameLocation":"10775:10:8","nodeType":"VariableDeclaration","scope":4848,"src":"10770:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4787,"name":"bool","nodeType":"ElementaryTypeName","src":"10770:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4790,"initialValue":{"hexValue":"66616c7365","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10788:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"10770:23:8"},{"body":{"id":4815,"nodeType":"Block","src":"10851:137:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4802,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"10870:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4804,"indexExpression":{"id":4803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"10883:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10870:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4805,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10889:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10893:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10889:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10870:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4814,"nodeType":"IfStatement","src":"10866:111:8","trueBody":{"id":4813,"nodeType":"Block","src":"10901:76:8","statements":[{"expression":{"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4808,"name":"userExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"10920:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10933:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10920:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4811,"nodeType":"ExpressionStatement","src":"10920:17:8"},{"id":4812,"nodeType":"Break","src":"10956:5:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4795,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"10821:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4796,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"10825:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10838:6:8","memberName":"length","nodeType":"MemberAccess","src":"10825:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10821:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4816,"initializationExpression":{"assignments":[4792],"declarations":[{"constant":false,"id":4792,"mutability":"mutable","name":"i","nameLocation":"10814:1:8","nodeType":"VariableDeclaration","scope":4816,"src":"10809:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint","nodeType":"ElementaryTypeName","src":"10809:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4794,"initialValue":{"hexValue":"30","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10818:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10809:10:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10846:3:8","subExpression":{"id":4799,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"10846:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4801,"nodeType":"ExpressionStatement","src":"10846:3:8"},"nodeType":"ForStatement","src":"10804:184:8"},{"condition":{"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11004:11:8","subExpression":{"id":4817,"name":"userExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"11005:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4827,"nodeType":"IfStatement","src":"11000:73:8","trueBody":{"id":4826,"nodeType":"Block","src":"11017:56:8","statements":[{"expression":{"arguments":[{"expression":{"id":4822,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11050:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11054:6:8","memberName":"sender","nodeType":"MemberAccess","src":"11050:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4819,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11032:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11045:4:8","memberName":"push","nodeType":"MemberAccess","src":"11032:17:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4825,"nodeType":"ExpressionStatement","src":"11032:29:8"}]}},{"expression":{"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4828,"name":"participation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"11083:13:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4831,"indexExpression":{"expression":{"id":4829,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11097:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11101:6:8","memberName":"sender","nodeType":"MemberAccess","src":"11097:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11083:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11112:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11083:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4834,"nodeType":"ExpressionStatement","src":"11083:30:8"},{"expression":{"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4835,"name":"coverFeeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"11126:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4836,"name":"_coverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"11145:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11126:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4838,"nodeType":"ExpressionStatement","src":"11126:28:8"},{"eventCall":{"arguments":[{"expression":{"id":4840,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11187:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11191:6:8","memberName":"sender","nodeType":"MemberAccess","src":"11187:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4842,"name":"_coverValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"11199:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4843,"name":"_coverFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"11212:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4844,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"11223:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":4845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11229:8:8","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":3773,"src":"11223:14:8","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}],"id":4839,"name":"CoverPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"11172:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_RiskType_$3814_$returns$__$","typeString":"function (address,uint256,uint256,enum CoverLib.RiskType)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11172:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4847,"nodeType":"EmitStatement","src":"11167:71:8"}]},"functionSelector":"602710a4","id":4849,"implemented":true,"kind":"function","modifiers":[{"id":4637,"kind":"modifierInvocation","modifierName":{"id":4636,"name":"nonReentrant","nameLocations":["9174:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"9174:12:8"},"nodeType":"ModifierInvocation","src":"9174:12:8"}],"name":"purchaseCover","nameLocation":"9030:13:8","nodeType":"FunctionDefinition","parameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"_coverId","nameLocation":"9062:8:8","nodeType":"VariableDeclaration","scope":4849,"src":"9054:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"9054:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"_coverValue","nameLocation":"9089:11:8","nodeType":"VariableDeclaration","scope":4849,"src":"9081:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4632,"mutability":"mutable","name":"_coverPeriod","nameLocation":"9119:12:8","nodeType":"VariableDeclaration","scope":4849,"src":"9111:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"9111:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4634,"mutability":"mutable","name":"_coverFee","nameLocation":"9150:9:8","nodeType":"VariableDeclaration","scope":4849,"src":"9142:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"9142:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9043:123:8"},"returnParameters":{"id":4638,"nodeType":"ParameterList","parameters":[],"src":"9187:0:8"},"scope":5671,"src":"9021:2225:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4955,"nodeType":"Block","src":"11369:702:8","statements":[{"assignments":[4859],"declarations":[{"constant":false,"id":4859,"mutability":"mutable","name":"actualCount","nameLocation":"11388:11:8","nodeType":"VariableDeclaration","scope":4955,"src":"11380:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4858,"name":"uint256","nodeType":"ElementaryTypeName","src":"11380:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4861,"initialValue":{"hexValue":"30","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11402:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11380:23:8"},{"body":{"id":4892,"nodeType":"Block","src":"11460:154:8","statements":[{"assignments":[4874],"declarations":[{"constant":false,"id":4874,"mutability":"mutable","name":"id","nameLocation":"11483:2:8","nodeType":"VariableDeclaration","scope":4892,"src":"11475:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4873,"name":"uint256","nodeType":"ElementaryTypeName","src":"11475:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4878,"initialValue":{"baseExpression":{"id":4875,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"11488:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4877,"indexExpression":{"id":4876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"11497:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11488:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11475:24:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":4879,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"11518:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":4881,"indexExpression":{"id":4880,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"11529:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11518:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":4883,"indexExpression":{"id":4882,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"11535:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11518:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"id":4884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11539:10:8","memberName":"coverValue","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"11518:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11552:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11518:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4891,"nodeType":"IfStatement","src":"11514:89:8","trueBody":{"id":4890,"nodeType":"Block","src":"11555:48:8","statements":[{"expression":{"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11574:13:8","subExpression":{"id":4887,"name":"actualCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"11574:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4889,"nodeType":"ExpressionStatement","src":"11574:13:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"11434:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4867,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"11438:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11447:6:8","memberName":"length","nodeType":"MemberAccess","src":"11438:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11434:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4893,"initializationExpression":{"assignments":[4863],"declarations":[{"constant":false,"id":4863,"mutability":"mutable","name":"i","nameLocation":"11427:1:8","nodeType":"VariableDeclaration","scope":4893,"src":"11419:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"11419:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4865,"initialValue":{"hexValue":"30","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11431:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11419:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11455:3:8","subExpression":{"id":4870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"11455:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4872,"nodeType":"ExpressionStatement","src":"11455:3:8"},"nodeType":"ForStatement","src":"11414:200:8"},{"assignments":[4899],"declarations":[{"constant":false,"id":4899,"mutability":"mutable","name":"userCoverList","nameLocation":"11674:13:8","nodeType":"VariableDeclaration","scope":4955,"src":"11626:61:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo[]"},"typeName":{"baseType":{"id":4897,"nodeType":"UserDefinedTypeName","pathNode":{"id":4896,"name":"CoverLib.GenericCoverInfo","nameLocations":["11626:8:8","11635:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"11626:25:8"},"referencedDeclaration":3810,"src":"11626:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"id":4898,"nodeType":"ArrayTypeName","src":"11626:27:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_storage_$dyn_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo[]"}},"visibility":"internal"}],"id":4906,"initialValue":{"arguments":[{"id":4904,"name":"actualCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"11722:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11690:31:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct CoverLib.GenericCoverInfo memory[] memory)"},"typeName":{"baseType":{"id":4901,"nodeType":"UserDefinedTypeName","pathNode":{"id":4900,"name":"CoverLib.GenericCoverInfo","nameLocations":["11694:8:8","11703:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"11694:25:8"},"referencedDeclaration":3810,"src":"11694:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"id":4902,"nodeType":"ArrayTypeName","src":"11694:27:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_storage_$dyn_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo[]"}}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11690:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11626:108:8"},{"assignments":[4908],"declarations":[{"constant":false,"id":4908,"mutability":"mutable","name":"index","nameLocation":"11755:5:8","nodeType":"VariableDeclaration","scope":4955,"src":"11747:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4907,"name":"uint256","nodeType":"ElementaryTypeName","src":"11747:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4910,"initialValue":{"hexValue":"30","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11763:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11747:17:8"},{"body":{"id":4951,"nodeType":"Block","src":"11821:210:8","statements":[{"assignments":[4923],"declarations":[{"constant":false,"id":4923,"mutability":"mutable","name":"id","nameLocation":"11844:2:8","nodeType":"VariableDeclaration","scope":4951,"src":"11836:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"11836:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4927,"initialValue":{"baseExpression":{"id":4924,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"11849:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4926,"indexExpression":{"id":4925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"11858:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11849:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11836:24:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":4928,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"11879:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":4930,"indexExpression":{"id":4929,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"11890:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11879:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":4932,"indexExpression":{"id":4931,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"11896:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11879:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"id":4933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11900:10:8","memberName":"coverValue","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"11879:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11913:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11879:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4950,"nodeType":"IfStatement","src":"11875:145:8","trueBody":{"id":4949,"nodeType":"Block","src":"11916:104:8","statements":[{"expression":{"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4936,"name":"userCoverList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"11935:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory[] memory"}},"id":4938,"indexExpression":{"id":4937,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4908,"src":"11949:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11935:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":4939,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"11958:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":4941,"indexExpression":{"id":4940,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"11969:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11958:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":4943,"indexExpression":{"id":4942,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"11975:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11958:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"src":"11935:43:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory"}},"id":4945,"nodeType":"ExpressionStatement","src":"11935:43:8"},{"expression":{"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11997:7:8","subExpression":{"id":4946,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4908,"src":"11997:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4948,"nodeType":"ExpressionStatement","src":"11997:7:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4915,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"11795:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4916,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"11799:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11808:6:8","memberName":"length","nodeType":"MemberAccess","src":"11799:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11795:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4952,"initializationExpression":{"assignments":[4912],"declarations":[{"constant":false,"id":4912,"mutability":"mutable","name":"i","nameLocation":"11788:1:8","nodeType":"VariableDeclaration","scope":4952,"src":"11780:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4911,"name":"uint256","nodeType":"ElementaryTypeName","src":"11780:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4914,"initialValue":{"hexValue":"30","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11780:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11816:3:8","subExpression":{"id":4919,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"11816:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4921,"nodeType":"ExpressionStatement","src":"11816:3:8"},"nodeType":"ForStatement","src":"11775:256:8"},{"expression":{"id":4953,"name":"userCoverList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"12050:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo memory[] memory"}},"functionReturnParameters":4857,"id":4954,"nodeType":"Return","src":"12043:20:8"}]},"functionSelector":"649718b2","id":4956,"implemented":true,"kind":"function","modifiers":[],"name":"getAllUserCovers","nameLocation":"11263:16:8","nodeType":"FunctionDefinition","parameters":{"id":4852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4851,"mutability":"mutable","name":"user","nameLocation":"11298:4:8","nodeType":"VariableDeclaration","scope":4956,"src":"11290:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4850,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11279:30:8"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4956,"src":"11333:34:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo[]"},"typeName":{"baseType":{"id":4854,"nodeType":"UserDefinedTypeName","pathNode":{"id":4853,"name":"CoverLib.GenericCoverInfo","nameLocations":["11333:8:8","11342:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"11333:25:8"},"referencedDeclaration":3810,"src":"11333:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"id":4855,"nodeType":"ArrayTypeName","src":"11333:27:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GenericCoverInfo_$3810_storage_$dyn_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo[]"}},"visibility":"internal"}],"src":"11332:36:8"},"scope":5671,"src":"11254:817:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5048,"nodeType":"Block","src":"12192:647:8","statements":[{"assignments":[4964],"declarations":[{"constant":false,"id":4964,"mutability":"mutable","name":"actualCount","nameLocation":"12211:11:8","nodeType":"VariableDeclaration","scope":5048,"src":"12203:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"12203:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4966,"initialValue":{"hexValue":"30","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12225:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12203:23:8"},{"body":{"id":4992,"nodeType":"Block","src":"12283:134:8","statements":[{"assignments":[4979],"declarations":[{"constant":false,"id":4979,"mutability":"mutable","name":"id","nameLocation":"12306:2:8","nodeType":"VariableDeclaration","scope":4992,"src":"12298:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"12298:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4983,"initialValue":{"baseExpression":{"id":4980,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"12311:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4982,"indexExpression":{"id":4981,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"12320:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12311:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12298:24:8"},{"condition":{"baseExpression":{"id":4984,"name":"coverExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"12341:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4986,"indexExpression":{"id":4985,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"12353:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12341:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"nodeType":"IfStatement","src":"12337:69:8","trueBody":{"id":4990,"nodeType":"Block","src":"12358:48:8","statements":[{"expression":{"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12377:13:8","subExpression":{"id":4987,"name":"actualCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"12377:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4989,"nodeType":"ExpressionStatement","src":"12377:13:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"12257:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4972,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"12261:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12270:6:8","memberName":"length","nodeType":"MemberAccess","src":"12261:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12257:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4993,"initializationExpression":{"assignments":[4968],"declarations":[{"constant":false,"id":4968,"mutability":"mutable","name":"i","nameLocation":"12250:1:8","nodeType":"VariableDeclaration","scope":4993,"src":"12242:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4967,"name":"uint256","nodeType":"ElementaryTypeName","src":"12242:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4970,"initialValue":{"hexValue":"30","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12254:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12242:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12278:3:8","subExpression":{"id":4975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"12278:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4977,"nodeType":"ExpressionStatement","src":"12278:3:8"},"nodeType":"ForStatement","src":"12237:180:8"},{"assignments":[4999],"declarations":[{"constant":false,"id":4999,"mutability":"mutable","name":"availableCovers","nameLocation":"12453:15:8","nodeType":"VariableDeclaration","scope":5048,"src":"12429:39:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":4997,"nodeType":"UserDefinedTypeName","pathNode":{"id":4996,"name":"CoverLib.Cover","nameLocations":["12429:8:8","12438:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"12429:14:8"},"referencedDeclaration":3790,"src":"12429:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":4998,"nodeType":"ArrayTypeName","src":"12429:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":5006,"initialValue":{"arguments":[{"id":5004,"name":"actualCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"12506:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12471:20:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct CoverLib.Cover memory[] memory)"},"typeName":{"baseType":{"id":5001,"nodeType":"UserDefinedTypeName","pathNode":{"id":5000,"name":"CoverLib.Cover","nameLocations":["12475:8:8","12484:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"12475:14:8"},"referencedDeclaration":3790,"src":"12475:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":5002,"nodeType":"ArrayTypeName","src":"12475:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12471:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12429:99:8"},{"assignments":[5008],"declarations":[{"constant":false,"id":5008,"mutability":"mutable","name":"index","nameLocation":"12549:5:8","nodeType":"VariableDeclaration","scope":5048,"src":"12541:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"12541:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5010,"initialValue":{"hexValue":"30","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12557:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12541:17:8"},{"body":{"id":5044,"nodeType":"Block","src":"12615:182:8","statements":[{"assignments":[5023],"declarations":[{"constant":false,"id":5023,"mutability":"mutable","name":"id","nameLocation":"12638:2:8","nodeType":"VariableDeclaration","scope":5044,"src":"12630:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"12630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5027,"initialValue":{"baseExpression":{"id":5024,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"12643:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5026,"indexExpression":{"id":5025,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"12652:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12643:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12630:24:8"},{"condition":{"baseExpression":{"id":5028,"name":"coverExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"12673:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":5030,"indexExpression":{"id":5029,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"12685:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12673:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"12669:117:8","trueBody":{"id":5042,"nodeType":"Block","src":"12690:96:8","statements":[{"expression":{"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5031,"name":"availableCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"12709:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":5033,"indexExpression":{"id":5032,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"12725:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12709:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5034,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"12734:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5036,"indexExpression":{"id":5035,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"12741:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12734:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"src":"12709:35:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":5038,"nodeType":"ExpressionStatement","src":"12709:35:8"},{"expression":{"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12763:7:8","subExpression":{"id":5039,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"12763:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5041,"nodeType":"ExpressionStatement","src":"12763:7:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5015,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"12589:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5016,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"12593:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12602:6:8","memberName":"length","nodeType":"MemberAccess","src":"12593:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12589:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5045,"initializationExpression":{"assignments":[5012],"declarations":[{"constant":false,"id":5012,"mutability":"mutable","name":"i","nameLocation":"12582:1:8","nodeType":"VariableDeclaration","scope":5045,"src":"12574:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"12574:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5014,"initialValue":{"hexValue":"30","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12586:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12574:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12610:3:8","subExpression":{"id":5019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"12610:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5021,"nodeType":"ExpressionStatement","src":"12610:3:8"},"nodeType":"ForStatement","src":"12569:228:8"},{"expression":{"id":5046,"name":"availableCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"12816:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"functionReturnParameters":4962,"id":5047,"nodeType":"Return","src":"12809:22:8"}]},"functionSelector":"93b1ad38","id":5049,"implemented":true,"kind":"function","modifiers":[],"name":"getAllAvailableCovers","nameLocation":"12088:21:8","nodeType":"FunctionDefinition","parameters":{"id":4957,"nodeType":"ParameterList","parameters":[],"src":"12109:2:8"},"returnParameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5049,"src":"12162:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":4959,"nodeType":"UserDefinedTypeName","pathNode":{"id":4958,"name":"CoverLib.Cover","nameLocations":["12162:8:8","12171:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"12162:14:8"},"referencedDeclaration":3790,"src":"12162:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":4960,"nodeType":"ArrayTypeName","src":"12162:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"src":"12161:25:8"},"scope":5671,"src":"12079:760:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5061,"nodeType":"Block","src":"12949:42:8","statements":[{"expression":{"baseExpression":{"id":5057,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"12967:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5059,"indexExpression":{"id":5058,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"12974:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12967:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"functionReturnParameters":5056,"id":5060,"nodeType":"Return","src":"12960:23:8"}]},"functionSelector":"62858bfa","id":5062,"implemented":true,"kind":"function","modifiers":[],"name":"getCoverInfo","nameLocation":"12856:12:8","nodeType":"FunctionDefinition","parameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"_coverId","nameLocation":"12887:8:8","nodeType":"VariableDeclaration","scope":5062,"src":"12879:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5050,"name":"uint256","nodeType":"ElementaryTypeName","src":"12879:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12868:34:8"},"returnParameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5062,"src":"12926:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":5054,"nodeType":"UserDefinedTypeName","pathNode":{"id":5053,"name":"CoverLib.Cover","nameLocations":["12926:8:8","12935:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"12926:14:8"},"referencedDeclaration":3790,"src":"12926:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"src":"12925:23:8"},"scope":5671,"src":"12847:144:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5078,"nodeType":"Block","src":"13139:52:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":5072,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"13157:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":5074,"indexExpression":{"id":5073,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"13168:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13157:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":5076,"indexExpression":{"id":5075,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"13174:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13157:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"functionReturnParameters":5071,"id":5077,"nodeType":"Return","src":"13150:33:8"}]},"functionSelector":"cadcb471","id":5079,"implemented":true,"kind":"function","modifiers":[],"name":"getUserCoverInfo","nameLocation":"13008:16:8","nodeType":"FunctionDefinition","parameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"user","nameLocation":"13043:4:8","nodeType":"VariableDeclaration","scope":5079,"src":"13035:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5063,"name":"address","nodeType":"ElementaryTypeName","src":"13035:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5066,"mutability":"mutable","name":"_coverId","nameLocation":"13066:8:8","nodeType":"VariableDeclaration","scope":5079,"src":"13058:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"13058:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13024:57:8"},"returnParameters":{"id":5071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5079,"src":"13105:32:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_memory_ptr","typeString":"struct CoverLib.GenericCoverInfo"},"typeName":{"id":5069,"nodeType":"UserDefinedTypeName","pathNode":{"id":5068,"name":"CoverLib.GenericCoverInfo","nameLocations":["13105:8:8","13114:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"13105:25:8"},"referencedDeclaration":3810,"src":"13105:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"visibility":"internal"}],"src":"13104:34:8"},"scope":5671,"src":"12999:192:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5110,"nodeType":"Block","src":"13350:131:8","statements":[{"expression":{"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5092,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"13361:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":5095,"indexExpression":{"id":5093,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"13372:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13361:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":5096,"indexExpression":{"id":5094,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"13378:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13361:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"id":5097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13388:10:8","memberName":"coverValue","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"13361:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5098,"name":"_claimPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"13402:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13361:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5100,"nodeType":"ExpressionStatement","src":"13361:51:8"},{"expression":{"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5101,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"13423:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":5104,"indexExpression":{"id":5102,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"13434:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13423:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":5105,"indexExpression":{"id":5103,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"13440:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13423:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"id":5106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13450:9:8","memberName":"claimPaid","nodeType":"MemberAccess","referencedDeclaration":3803,"src":"13423:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5107,"name":"_claimPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"13463:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13423:50:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5109,"nodeType":"ExpressionStatement","src":"13423:50:8"}]},"functionSelector":"7ceb4a69","id":5111,"implemented":true,"kind":"function","modifiers":[{"id":5088,"kind":"modifierInvocation","modifierName":{"id":5087,"name":"onlyGovernance","nameLocations":["13322:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":5658,"src":"13322:14:8"},"nodeType":"ModifierInvocation","src":"13322:14:8"},{"id":5090,"kind":"modifierInvocation","modifierName":{"id":5089,"name":"nonReentrant","nameLocations":["13337:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"13337:12:8"},"nodeType":"ModifierInvocation","src":"13337:12:8"}],"name":"updateUserCoverValue","nameLocation":"13208:20:8","nodeType":"FunctionDefinition","parameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"user","nameLocation":"13247:4:8","nodeType":"VariableDeclaration","scope":5111,"src":"13239:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5080,"name":"address","nodeType":"ElementaryTypeName","src":"13239:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5083,"mutability":"mutable","name":"_coverId","nameLocation":"13270:8:8","nodeType":"VariableDeclaration","scope":5111,"src":"13262:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5082,"name":"uint256","nodeType":"ElementaryTypeName","src":"13262:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5085,"mutability":"mutable","name":"_claimPaid","nameLocation":"13297:10:8","nodeType":"VariableDeclaration","scope":5111,"src":"13289:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5084,"name":"uint256","nodeType":"ElementaryTypeName","src":"13289:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13228:86:8"},"returnParameters":{"id":5091,"nodeType":"ParameterList","parameters":[],"src":"13350:0:8"},"scope":5671,"src":"13199:282:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5171,"nodeType":"Block","src":"13559:381:8","statements":[{"body":{"id":5169,"nodeType":"Block","src":"13616:317:8","statements":[{"assignments":[5130],"declarations":[{"constant":false,"id":5130,"mutability":"mutable","name":"id","nameLocation":"13639:2:8","nodeType":"VariableDeclaration","scope":5169,"src":"13631:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5129,"name":"uint256","nodeType":"ElementaryTypeName","src":"13631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5134,"initialValue":{"baseExpression":{"id":5131,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"13644:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5133,"indexExpression":{"id":5132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"13653:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13644:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13631:24:8"},{"assignments":[5139],"declarations":[{"constant":false,"id":5139,"mutability":"mutable","name":"userCover","nameLocation":"13704:9:8","nodeType":"VariableDeclaration","scope":5169,"src":"13670:43:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"},"typeName":{"id":5138,"nodeType":"UserDefinedTypeName","pathNode":{"id":5137,"name":"CoverLib.GenericCoverInfo","nameLocations":["13670:8:8","13679:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"13670:25:8"},"referencedDeclaration":3810,"src":"13670:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo"}},"visibility":"internal"}],"id":5145,"initialValue":{"baseExpression":{"baseExpression":{"id":5140,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"13716:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":5142,"indexExpression":{"id":5141,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"13727:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13716:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":5144,"indexExpression":{"id":5143,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"13734:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13716:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13670:67:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5146,"name":"userCover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"13756:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo storage pointer"}},"id":5147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13766:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3809,"src":"13756:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5148,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13778:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13784:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"13778:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5150,"name":"userCover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"13796:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo storage pointer"}},"id":5151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13806:6:8","memberName":"endDay","nodeType":"MemberAccess","referencedDeclaration":3807,"src":"13796:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13778:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13756:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5168,"nodeType":"IfStatement","src":"13752:170:8","trueBody":{"id":5167,"nodeType":"Block","src":"13814:108:8","statements":[{"expression":{"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5154,"name":"userCover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"13833:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage_ptr","typeString":"struct CoverLib.GenericCoverInfo storage pointer"}},"id":5156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13843:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3809,"src":"13833:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13854:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13833:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5159,"nodeType":"ExpressionStatement","src":"13833:26:8"},{"expression":{"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"13878:28:8","subExpression":{"baseExpression":{"baseExpression":{"id":5160,"name":"userCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"13885:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref))"}},"id":5162,"indexExpression":{"id":5161,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"13896:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13885:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GenericCoverInfo_$3810_storage_$","typeString":"mapping(uint256 => struct CoverLib.GenericCoverInfo storage ref)"}},"id":5164,"indexExpression":{"id":5163,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"13903:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13885:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_GenericCoverInfo_$3810_storage","typeString":"struct CoverLib.GenericCoverInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5166,"nodeType":"ExpressionStatement","src":"13878:28:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"13590:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5123,"name":"coverIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"13594:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13603:6:8","memberName":"length","nodeType":"MemberAccess","src":"13594:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13590:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5170,"initializationExpression":{"assignments":[5119],"declarations":[{"constant":false,"id":5119,"mutability":"mutable","name":"i","nameLocation":"13583:1:8","nodeType":"VariableDeclaration","scope":5170,"src":"13575:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"13575:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5121,"initialValue":{"hexValue":"31","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13587:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13575:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13611:3:8","subExpression":{"id":5126,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"13611:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5128,"nodeType":"ExpressionStatement","src":"13611:3:8"},"nodeType":"ForStatement","src":"13570:363:8"}]},"functionSelector":"bfc664f3","id":5172,"implemented":true,"kind":"function","modifiers":[{"id":5116,"kind":"modifierInvocation","modifierName":{"id":5115,"name":"nonReentrant","nameLocations":["13546:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"13546:12:8"},"nodeType":"ModifierInvocation","src":"13546:12:8"}],"name":"deleteExpiredUserCovers","nameLocation":"13498:23:8","nodeType":"FunctionDefinition","parameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"_user","nameLocation":"13530:5:8","nodeType":"VariableDeclaration","scope":5172,"src":"13522:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5112,"name":"address","nodeType":"ElementaryTypeName","src":"13522:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13521:15:8"},"returnParameters":{"id":5117,"nodeType":"ParameterList","parameters":[],"src":"13559:0:8"},"scope":5671,"src":"13489:451:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5179,"nodeType":"Block","src":"14010:41:8","statements":[{"expression":{"id":5177,"name":"coverFeeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"14028:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5176,"id":5178,"nodeType":"Return","src":"14021:22:8"}]},"functionSelector":"609c7604","id":5180,"implemented":true,"kind":"function","modifiers":[],"name":"getCoverFeeBalance","nameLocation":"13957:18:8","nodeType":"FunctionDefinition","parameters":{"id":5173,"nodeType":"ParameterList","parameters":[],"src":"13975:2:8"},"returnParameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5180,"src":"14001:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"14001:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14000:9:8"},"scope":5671,"src":"13948:103:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5253,"nodeType":"Block","src":"14131:488:8","statements":[{"assignments":[5193],"declarations":[{"constant":false,"id":5193,"mutability":"mutable","name":"cover","nameLocation":"14165:5:8","nodeType":"VariableDeclaration","scope":5253,"src":"14142:28:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":5192,"nodeType":"UserDefinedTypeName","pathNode":{"id":5191,"name":"CoverLib.Cover","nameLocations":["14142:8:8","14151:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"14142:14:8"},"referencedDeclaration":3790,"src":"14142:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"id":5197,"initialValue":{"baseExpression":{"id":5194,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"14173:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5196,"indexExpression":{"id":5195,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"14180:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14173:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14142:47:8"},{"assignments":[null,null,null,null,5199,null,null],"declarations":[null,null,null,null,{"constant":false,"id":5199,"mutability":"mutable","name":"tvl","nameLocation":"14217:3:8","nodeType":"VariableDeclaration","scope":5253,"src":"14209:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5198,"name":"uint256","nodeType":"ElementaryTypeName","src":"14209:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null],"id":5205,"initialValue":{"arguments":[{"expression":{"id":5202,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"14247:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":5203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14253:6:8","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"14247:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5200,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"14228:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14239:7:8","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"14228:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_enum$_RiskType_$3814_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,enum CoverLib.RiskType,uint256,uint256,uint256,bool,uint256)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14228:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_enum$_RiskType_$3814_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(string memory,enum CoverLib.RiskType,uint256,uint256,uint256,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14200:60:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5207,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"14324:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":5208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14330:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"14324:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14341:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14324:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f766572206361706163697479","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14344:24:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c475833ceff1add43d22d7c125e1185634884360affabe727fc26b9a0aab4a4f","typeString":"literal_string \"Invalid cover capacity\""},"value":"Invalid cover capacity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c475833ceff1add43d22d7c125e1185634884360affabe727fc26b9a0aab4a4f","typeString":"literal_string \"Invalid cover capacity\""}],"id":5206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14316:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14316:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5213,"nodeType":"ExpressionStatement","src":"14316:53:8"},{"assignments":[5215],"declarations":[{"constant":false,"id":5215,"mutability":"mutable","name":"amount","nameLocation":"14388:6:8","nodeType":"VariableDeclaration","scope":5253,"src":"14380:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5214,"name":"uint256","nodeType":"ElementaryTypeName","src":"14380:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5229,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"tvl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"14398:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5217,"name":"cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"14406:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover storage pointer"}},"id":5218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14412:8:8","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"14406:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14423:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"14406:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14405:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14431:3:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"14405:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14404:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14398:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14397:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14439:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"14397:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14380:63:8"},{"expression":{"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5230,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"14454:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5232,"indexExpression":{"id":5231,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"14461:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14454:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":5233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14471:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"14454:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5234,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"14488:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14454:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5236,"nodeType":"ExpressionStatement","src":"14454:40:8"},{"expression":{"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5237,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"14505:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5239,"indexExpression":{"id":5238,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"14512:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14505:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":5240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14522:9:8","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3785,"src":"14505:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5241,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"14535:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5243,"indexExpression":{"id":5242,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"14542:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14535:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":5244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14552:14:8","memberName":"capacityAmount","nodeType":"MemberAccess","referencedDeclaration":3781,"src":"14535:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":5245,"name":"covers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"14582:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Cover_$3790_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref)"}},"id":5247,"indexExpression":{"id":5246,"name":"_coverId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"14589:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14582:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":5248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14599:11:8","memberName":"coverValues","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"14582:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14535:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14534:77:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14505:106:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5252,"nodeType":"ExpressionStatement","src":"14505:106:8"}]},"functionSelector":"106b5da1","id":5254,"implemented":true,"kind":"function","modifiers":[{"id":5185,"kind":"modifierInvocation","modifierName":{"id":5184,"name":"onlyPool","nameLocations":["14109:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":5670,"src":"14109:8:8"},"nodeType":"ModifierInvocation","src":"14109:8:8"},{"id":5187,"kind":"modifierInvocation","modifierName":{"id":5186,"name":"nonReentrant","nameLocations":["14118:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"14118:12:8"},"nodeType":"ModifierInvocation","src":"14118:12:8"}],"name":"updateMaxAmount","nameLocation":"14068:15:8","nodeType":"FunctionDefinition","parameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"mutability":"mutable","name":"_coverId","nameLocation":"14092:8:8","nodeType":"VariableDeclaration","scope":5254,"src":"14084:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5181,"name":"uint256","nodeType":"ElementaryTypeName","src":"14084:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14083:18:8"},"returnParameters":{"id":5188,"nodeType":"ParameterList","parameters":[],"src":"14131:0:8"},"scope":5671,"src":"14059:560:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5389,"nodeType":"Block","src":"14692:1321:8","statements":[{"assignments":[5265],"declarations":[{"constant":false,"id":5265,"mutability":"mutable","name":"depositInfo","nameLocation":"14723:11:8","nodeType":"VariableDeclaration","scope":5389,"src":"14703:31:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits"},"typeName":{"id":5264,"nodeType":"UserDefinedTypeName","pathNode":{"id":5263,"name":"ILP.Deposits","nameLocations":["14703:3:8","14707:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3917,"src":"14703:12:8"},"referencedDeclaration":3917,"src":"14703:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_storage_ptr","typeString":"struct ILP.Deposits"}},"visibility":"internal"}],"id":5272,"initialValue":{"arguments":[{"id":5268,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"14777:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14799:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14803:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14799:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5266,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"14737:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14748:14:8","memberName":"getUserDeposit","nodeType":"MemberAccess","referencedDeclaration":3966,"src":"14737:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_struct$_Deposits_$3917_memory_ptr_$","typeString":"function (uint256,address) view external returns (struct ILP.Deposits memory)"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14737:83:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"nodeType":"VariableDeclarationStatement","src":"14703:117:8"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$3953","typeString":"enum ILP.Status"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5273,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"14835:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14847:6:8","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"14835:18:8","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3953","typeString":"enum ILP.Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":5275,"name":"ILP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"14857:3:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILP_$4037_$","typeString":"type(contract ILP)"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14861:6:8","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":3953,"src":"14857:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$3953_$","typeString":"type(enum ILP.Status)"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14868:6:8","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":3951,"src":"14857:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3953","typeString":"enum ILP.Status"}},"src":"14835:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5283,"nodeType":"IfStatement","src":"14831:92:8","trueBody":{"id":5282,"nodeType":"Block","src":"14876:47:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5279,"name":"LpNotActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"14898:11:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14898:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5281,"nodeType":"RevertStatement","src":"14891:20:8"}]}},{"assignments":[5285],"declarations":[{"constant":false,"id":5285,"mutability":"mutable","name":"lastClaimTime","nameLocation":"14943:13:8","nodeType":"VariableDeclaration","scope":5389,"src":"14935:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5284,"name":"uint256","nodeType":"ElementaryTypeName","src":"14935:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5286,"nodeType":"VariableDeclarationStatement","src":"14935:21:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5287,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"14971:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5290,"indexExpression":{"expression":{"id":5288,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14987:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14991:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14987:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14971:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5292,"indexExpression":{"id":5291,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"14999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14971:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15011:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14971:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5310,"nodeType":"Block","src":"15084:79:8","statements":[{"expression":{"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5301,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"15099:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":5302,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"15115:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5305,"indexExpression":{"expression":{"id":5303,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15131:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15135:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15131:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15115:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5307,"indexExpression":{"id":5306,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"15143:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15115:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15099:52:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5309,"nodeType":"ExpressionStatement","src":"15099:52:8"}]},"id":5311,"nodeType":"IfStatement","src":"14967:196:8","trueBody":{"id":5300,"nodeType":"Block","src":"15014:64:8","statements":[{"expression":{"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5295,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"15029:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5296,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"15045:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15057:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"15045:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15029:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5299,"nodeType":"ExpressionStatement","src":"15029:37:8"}]}},{"assignments":[5313],"declarations":[{"constant":false,"id":5313,"mutability":"mutable","name":"currentTime","nameLocation":"15183:11:8","nodeType":"VariableDeclaration","scope":5389,"src":"15175:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5312,"name":"uint256","nodeType":"ElementaryTypeName","src":"15175:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5316,"initialValue":{"expression":{"id":5314,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15197:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15203:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"15197:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15175:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5317,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"15227:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5318,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"15241:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15253:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"15241:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15227:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5327,"nodeType":"IfStatement","src":"15223:105:8","trueBody":{"id":5326,"nodeType":"Block","src":"15265:63:8","statements":[{"expression":{"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5321,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"15280:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5322,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"15294:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15306:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"15294:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15280:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5325,"nodeType":"ExpressionStatement","src":"15280:36:8"}]}},{"assignments":[5329],"declarations":[{"constant":false,"id":5329,"mutability":"mutable","name":"claimableDays","nameLocation":"15438:13:8","nodeType":"VariableDeclaration","scope":5389,"src":"15430:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5328,"name":"uint256","nodeType":"ElementaryTypeName","src":"15430:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5336,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"15455:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5331,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"15469:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15455:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15454:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:9:8","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"src":"15454:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15430:65:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5337,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"15512:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15529:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15512:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5344,"nodeType":"IfStatement","src":"15508:77:8","trueBody":{"id":5343,"nodeType":"Block","src":"15532:53:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5340,"name":"NoClaimableReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"15554:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15554:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5342,"nodeType":"RevertStatement","src":"15547:26:8"}]}},{"assignments":[5346],"declarations":[{"constant":false,"id":5346,"mutability":"mutable","name":"claimableAmount","nameLocation":"15603:15:8","nodeType":"VariableDeclaration","scope":5389,"src":"15595:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5345,"name":"uint256","nodeType":"ElementaryTypeName","src":"15595:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5351,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5347,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"15621:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15633:11:8","memberName":"dailyPayout","nodeType":"MemberAccess","referencedDeclaration":3905,"src":"15621:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5349,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"15647:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15621:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15595:65:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"15677:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5353,"name":"coverFeeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"15695:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15677:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5359,"nodeType":"IfStatement","src":"15673:98:8","trueBody":{"id":5358,"nodeType":"Block","src":"15712:59:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5355,"name":"InsufficientPoolBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"15734:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15734:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5357,"nodeType":"RevertStatement","src":"15727:32:8"}]}},{"expression":{"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5360,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"15781:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5364,"indexExpression":{"expression":{"id":5361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15797:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15801:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15797:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15781:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5365,"indexExpression":{"id":5363,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"15809:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15781:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5366,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15820:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15826:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"15820:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15781:54:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5369,"nodeType":"ExpressionStatement","src":"15781:54:8"},{"expression":{"arguments":[{"expression":{"id":5373,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15861:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15865:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15861:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5375,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"15873:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5370,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"15848:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3897","typeString":"contract IbqBTC"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15854:6:8","memberName":"bqMint","nodeType":"MemberAccess","referencedDeclaration":3878,"src":"15848:12:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15848:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5377,"nodeType":"ExpressionStatement","src":"15848:41:8"},{"expression":{"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5378,"name":"coverFeeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"15902:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5379,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"15921:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15902:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5381,"nodeType":"ExpressionStatement","src":"15902:34:8"},{"eventCall":{"arguments":[{"expression":{"id":5383,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15968:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15972:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15968:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5385,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"15980:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5386,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"15989:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5382,"name":"PayoutClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"15954:13:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15954:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5388,"nodeType":"EmitStatement","src":"15949:56:8"}]},"functionSelector":"2d8a340c","id":5390,"implemented":true,"kind":"function","modifiers":[{"id":5259,"kind":"modifierInvocation","modifierName":{"id":5258,"name":"nonReentrant","nameLocations":["14679:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"14679:12:8"},"nodeType":"ModifierInvocation","src":"14679:12:8"}],"name":"claimPayoutForLP","nameLocation":"14636:16:8","nodeType":"FunctionDefinition","parameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"_poolId","nameLocation":"14661:7:8","nodeType":"VariableDeclaration","scope":5390,"src":"14653:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"14653:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14652:17:8"},"returnParameters":{"id":5260,"nodeType":"ParameterList","parameters":[],"src":"14692:0:8"},"scope":5671,"src":"14627:1386:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5534,"nodeType":"Block","src":"16088:1120:8","statements":[{"assignments":[5402],"declarations":[{"constant":false,"id":5402,"mutability":"mutable","name":"deposits","nameLocation":"16121:8:8","nodeType":"VariableDeclaration","scope":5534,"src":"16099:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3917_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits[]"},"typeName":{"baseType":{"id":5400,"nodeType":"UserDefinedTypeName","pathNode":{"id":5399,"name":"ILP.Deposits","nameLocations":["16099:3:8","16103:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3917,"src":"16099:12:8"},"referencedDeclaration":3917,"src":"16099:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_storage_ptr","typeString":"struct ILP.Deposits"}},"id":5401,"nodeType":"ArrayTypeName","src":"16099:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3917_storage_$dyn_storage_ptr","typeString":"struct ILP.Deposits[]"}},"visibility":"internal"}],"id":5409,"initialValue":{"arguments":[{"id":5405,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"16174:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16196:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16200:6:8","memberName":"sender","nodeType":"MemberAccess","src":"16196:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5403,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"16132:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16143:16:8","memberName":"getVaultDeposits","nodeType":"MemberAccess","referencedDeclaration":3977,"src":"16132:27:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_array$_t_struct$_Deposits_$3917_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256,address) view external returns (struct ILP.Deposits memory[] memory)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16132:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3917_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16099:118:8"},{"assignments":[5411],"declarations":[{"constant":false,"id":5411,"mutability":"mutable","name":"totalClaim","nameLocation":"16236:10:8","nodeType":"VariableDeclaration","scope":5534,"src":"16228:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5410,"name":"uint256","nodeType":"ElementaryTypeName","src":"16228:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5412,"nodeType":"VariableDeclarationStatement","src":"16228:18:8"},{"assignments":[5414],"declarations":[{"constant":false,"id":5414,"mutability":"mutable","name":"lastClaimTime","nameLocation":"16265:13:8","nodeType":"VariableDeclaration","scope":5534,"src":"16257:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5413,"name":"uint256","nodeType":"ElementaryTypeName","src":"16257:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5415,"nodeType":"VariableDeclarationStatement","src":"16257:21:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5416,"name":"LastVaultClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"16293:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5419,"indexExpression":{"expression":{"id":5417,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16312:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16316:6:8","memberName":"sender","nodeType":"MemberAccess","src":"16312:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16293:30:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5421,"indexExpression":{"id":5420,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"16324:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16293:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16293:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5441,"nodeType":"Block","src":"16409:82:8","statements":[{"expression":{"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5432,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"16424:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":5433,"name":"LastVaultClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"16440:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5436,"indexExpression":{"expression":{"id":5434,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16459:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16463:6:8","memberName":"sender","nodeType":"MemberAccess","src":"16459:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16440:30:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5438,"indexExpression":{"id":5437,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"16471:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16440:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16424:55:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5440,"nodeType":"ExpressionStatement","src":"16424:55:8"}]},"id":5442,"nodeType":"IfStatement","src":"16289:202:8","trueBody":{"id":5431,"nodeType":"Block","src":"16339:64:8","statements":[{"expression":{"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5424,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"16354:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5425,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"16370:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3917_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"id":5427,"indexExpression":{"hexValue":"30","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16379:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16370:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16382:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"16370:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16354:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5430,"nodeType":"ExpressionStatement","src":"16354:37:8"}]}},{"assignments":[5444],"declarations":[{"constant":false,"id":5444,"mutability":"mutable","name":"currentTime","nameLocation":"16511:11:8","nodeType":"VariableDeclaration","scope":5534,"src":"16503:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5443,"name":"uint256","nodeType":"ElementaryTypeName","src":"16503:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5447,"initialValue":{"expression":{"id":5445,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16525:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16531:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"16525:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16503:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5448,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"16555:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":5449,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"16569:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3917_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"id":5451,"indexExpression":{"hexValue":"30","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16578:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16569:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16581:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"16569:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16555:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5462,"nodeType":"IfStatement","src":"16551:105:8","trueBody":{"id":5461,"nodeType":"Block","src":"16593:63:8","statements":[{"expression":{"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5454,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"16608:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5455,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"16622:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3917_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"id":5457,"indexExpression":{"hexValue":"30","id":5456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16631:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16622:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16634:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"16622:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16608:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5460,"nodeType":"ExpressionStatement","src":"16608:36:8"}]}},{"assignments":[5464],"declarations":[{"constant":false,"id":5464,"mutability":"mutable","name":"claimableDays","nameLocation":"16674:13:8","nodeType":"VariableDeclaration","scope":5534,"src":"16666:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"16666:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5471,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5465,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"16691:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5466,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"16705:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16691:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16690:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16722:9:8","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"src":"16690:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16666:65:8"},{"body":{"id":5503,"nodeType":"Block","src":"16790:188:8","statements":[{"assignments":[5487],"declarations":[{"constant":false,"id":5487,"mutability":"mutable","name":"deposit","nameLocation":"16825:7:8","nodeType":"VariableDeclaration","scope":5503,"src":"16805:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits"},"typeName":{"id":5486,"nodeType":"UserDefinedTypeName","pathNode":{"id":5485,"name":"ILP.Deposits","nameLocations":["16805:3:8","16809:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3917,"src":"16805:12:8"},"referencedDeclaration":3917,"src":"16805:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_storage_ptr","typeString":"struct ILP.Deposits"}},"visibility":"internal"}],"id":5491,"initialValue":{"baseExpression":{"id":5488,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"16835:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3917_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"id":5490,"indexExpression":{"id":5489,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"16844:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16835:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"nodeType":"VariableDeclarationStatement","src":"16805:41:8"},{"assignments":[5493],"declarations":[{"constant":false,"id":5493,"mutability":"mutable","name":"claimableAmount","nameLocation":"16869:15:8","nodeType":"VariableDeclaration","scope":5503,"src":"16861:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5492,"name":"uint256","nodeType":"ElementaryTypeName","src":"16861:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5498,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5494,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"16887:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16895:11:8","memberName":"dailyPayout","nodeType":"MemberAccess","referencedDeclaration":3905,"src":"16887:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5496,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"16909:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16887:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16861:61:8"},{"expression":{"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5499,"name":"totalClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"16937:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5500,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"16951:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16937:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5502,"nodeType":"ExpressionStatement","src":"16937:29:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"16764:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5477,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"16768:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$3917_memory_ptr_$dyn_memory_ptr","typeString":"struct ILP.Deposits memory[] memory"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16777:6:8","memberName":"length","nodeType":"MemberAccess","src":"16768:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16764:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5504,"initializationExpression":{"assignments":[5473],"declarations":[{"constant":false,"id":5473,"mutability":"mutable","name":"i","nameLocation":"16757:1:8","nodeType":"VariableDeclaration","scope":5504,"src":"16749:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"16749:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5475,"initialValue":{"hexValue":"30","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16761:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16749:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16785:3:8","subExpression":{"id":5480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"16785:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5482,"nodeType":"ExpressionStatement","src":"16785:3:8"},"nodeType":"ForStatement","src":"16744:234:8"},{"expression":{"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5505,"name":"LastVaultClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"16990:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5509,"indexExpression":{"expression":{"id":5506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17009:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17013:6:8","memberName":"sender","nodeType":"MemberAccess","src":"17009:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16990:30:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5510,"indexExpression":{"id":5508,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"17021:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16990:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5511,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17032:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17038:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"17032:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16990:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5514,"nodeType":"ExpressionStatement","src":"16990:57:8"},{"expression":{"arguments":[{"expression":{"id":5518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17071:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17075:6:8","memberName":"sender","nodeType":"MemberAccess","src":"17071:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5520,"name":"totalClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"17083:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5515,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"17058:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$3897","typeString":"contract IbqBTC"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17064:6:8","memberName":"bqMint","nodeType":"MemberAccess","referencedDeclaration":3878,"src":"17058:12:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17058:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5522,"nodeType":"ExpressionStatement","src":"17058:36:8"},{"expression":{"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5523,"name":"coverFeeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"17107:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5524,"name":"totalClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"17126:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17107:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5526,"nodeType":"ExpressionStatement","src":"17107:29:8"},{"eventCall":{"arguments":[{"expression":{"id":5528,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17168:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17172:6:8","memberName":"sender","nodeType":"MemberAccess","src":"17168:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5530,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"17180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5531,"name":"totalClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"17189:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5527,"name":"PayoutClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"17154:13:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17154:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5533,"nodeType":"EmitStatement","src":"17149:51:8"}]},"functionSelector":"a650c232","id":5535,"implemented":true,"kind":"function","modifiers":[{"id":5395,"kind":"modifierInvocation","modifierName":{"id":5394,"name":"nonReentrant","nameLocations":["16075:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"16075:12:8"},"nodeType":"ModifierInvocation","src":"16075:12:8"}],"name":"clamPayoutForVault","nameLocation":"16030:18:8","nodeType":"FunctionDefinition","parameters":{"id":5393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"vaultId","nameLocation":"16057:7:8","nodeType":"VariableDeclaration","scope":5535,"src":"16049:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5391,"name":"uint256","nodeType":"ElementaryTypeName","src":"16049:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16048:17:8"},"returnParameters":{"id":5396,"nodeType":"ParameterList","parameters":[],"src":"16088:0:8"},"scope":5671,"src":"16021:1187:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5608,"nodeType":"Block","src":"17335:630:8","statements":[{"assignments":[5548],"declarations":[{"constant":false,"id":5548,"mutability":"mutable","name":"depositInfo","nameLocation":"17366:11:8","nodeType":"VariableDeclaration","scope":5608,"src":"17346:31:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits"},"typeName":{"id":5547,"nodeType":"UserDefinedTypeName","pathNode":{"id":5546,"name":"ILP.Deposits","nameLocations":["17346:3:8","17350:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":3917,"src":"17346:12:8"},"referencedDeclaration":3917,"src":"17346:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_storage_ptr","typeString":"struct ILP.Deposits"}},"visibility":"internal"}],"id":5554,"initialValue":{"arguments":[{"id":5551,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"17420:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5552,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"17442:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5549,"name":"lpContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"17380:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_ILP_$4037","typeString":"contract ILP"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17391:14:8","memberName":"getUserDeposit","nodeType":"MemberAccess","referencedDeclaration":3966,"src":"17380:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_struct$_Deposits_$3917_memory_ptr_$","typeString":"function (uint256,address) view external returns (struct ILP.Deposits memory)"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17380:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:111:8"},{"assignments":[5556],"declarations":[{"constant":false,"id":5556,"mutability":"mutable","name":"lastClaimTime","nameLocation":"17478:13:8","nodeType":"VariableDeclaration","scope":5608,"src":"17470:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5555,"name":"uint256","nodeType":"ElementaryTypeName","src":"17470:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5557,"nodeType":"VariableDeclarationStatement","src":"17470:21:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5558,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"17506:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5560,"indexExpression":{"id":5559,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"17522:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17506:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5562,"indexExpression":{"id":5561,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"17528:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17506:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17540:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17506:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5579,"nodeType":"Block","src":"17613:73:8","statements":[{"expression":{"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5571,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"17628:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":5572,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"17644:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5574,"indexExpression":{"id":5573,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"17660:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17644:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5576,"indexExpression":{"id":5575,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"17666:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17644:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17628:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5578,"nodeType":"ExpressionStatement","src":"17628:46:8"}]},"id":5580,"nodeType":"IfStatement","src":"17502:184:8","trueBody":{"id":5570,"nodeType":"Block","src":"17543:64:8","statements":[{"expression":{"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5565,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"17558:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5566,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"17574:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17586:9:8","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"17574:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17558:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5569,"nodeType":"ExpressionStatement","src":"17558:37:8"}]}},{"assignments":[5582],"declarations":[{"constant":false,"id":5582,"mutability":"mutable","name":"currentTime","nameLocation":"17704:11:8","nodeType":"VariableDeclaration","scope":5608,"src":"17696:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5581,"name":"uint256","nodeType":"ElementaryTypeName","src":"17696:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5585,"initialValue":{"expression":{"id":5583,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17718:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17724:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"17718:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17696:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5586,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"17748:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5587,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"17762:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17774:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"17762:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17748:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5596,"nodeType":"IfStatement","src":"17744:105:8","trueBody":{"id":5595,"nodeType":"Block","src":"17786:63:8","statements":[{"expression":{"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5590,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"17801:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5591,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"17815:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$3917_memory_ptr","typeString":"struct ILP.Deposits memory"}},"id":5592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17827:10:8","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"17815:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17801:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5594,"nodeType":"ExpressionStatement","src":"17801:36:8"}]}},{"assignments":[5598],"declarations":[{"constant":false,"id":5598,"mutability":"mutable","name":"claimableDays","nameLocation":"17867:13:8","nodeType":"VariableDeclaration","scope":5608,"src":"17859:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"17859:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5605,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5599,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"17884:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5600,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"17898:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17884:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17883:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17915:9:8","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"src":"17883:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17859:65:8"},{"expression":{"id":5606,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"17944:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5543,"id":5607,"nodeType":"Return","src":"17937:20:8"}]},"functionSelector":"73cce3ee","id":5609,"implemented":true,"kind":"function","modifiers":[],"name":"getDepositClaimableDays","nameLocation":"17225:23:8","nodeType":"FunctionDefinition","parameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"user","nameLocation":"17267:4:8","nodeType":"VariableDeclaration","scope":5609,"src":"17259:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5536,"name":"address","nodeType":"ElementaryTypeName","src":"17259:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5539,"mutability":"mutable","name":"_poolId","nameLocation":"17290:7:8","nodeType":"VariableDeclaration","scope":5609,"src":"17282:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"17282:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17248:56:8"},"returnParameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5609,"src":"17326:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"17326:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17325:9:8"},"scope":5671,"src":"17216:749:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5624,"nodeType":"Block","src":"18085:56:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":5618,"name":"NextLpClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"18103:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5620,"indexExpression":{"id":5619,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"18119:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18103:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5622,"indexExpression":{"id":5621,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"18125:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18103:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5617,"id":5623,"nodeType":"Return","src":"18096:37:8"}]},"functionSelector":"10525814","id":5625,"implemented":true,"kind":"function","modifiers":[],"name":"getLastClaimTime","nameLocation":"17982:16:8","nodeType":"FunctionDefinition","parameters":{"id":5614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"user","nameLocation":"18017:4:8","nodeType":"VariableDeclaration","scope":5625,"src":"18009:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5610,"name":"address","nodeType":"ElementaryTypeName","src":"18009:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5613,"mutability":"mutable","name":"_poolId","nameLocation":"18040:7:8","nodeType":"VariableDeclaration","scope":5625,"src":"18032:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"18032:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17998:56:8"},"returnParameters":{"id":5617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5625,"src":"18076:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5615,"name":"uint256","nodeType":"ElementaryTypeName","src":"18076:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18075:9:8"},"scope":5671,"src":"17973:168:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5633,"nodeType":"Block","src":"18218:38:8","statements":[{"expression":{"id":5631,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"18236:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":5630,"id":5632,"nodeType":"Return","src":"18229:19:8"}]},"functionSelector":"195ec9ee","id":5634,"implemented":true,"kind":"function","modifiers":[],"name":"getAllParticipants","nameLocation":"18158:18:8","nodeType":"FunctionDefinition","parameters":{"id":5626,"nodeType":"ParameterList","parameters":[],"src":"18176:2:8"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5634,"src":"18200:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5627,"name":"address","nodeType":"ElementaryTypeName","src":"18200:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5628,"nodeType":"ArrayTypeName","src":"18200:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18199:18:8"},"scope":5671,"src":"18149:107:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5645,"nodeType":"Block","src":"18338:45:8","statements":[{"expression":{"baseExpression":{"id":5641,"name":"participation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"18356:13:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5643,"indexExpression":{"id":5642,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"18370:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18356:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5640,"id":5644,"nodeType":"Return","src":"18349:26:8"}]},"functionSelector":"46f84795","id":5646,"implemented":true,"kind":"function","modifiers":[],"name":"getUserParticipation","nameLocation":"18273:20:8","nodeType":"FunctionDefinition","parameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"user","nameLocation":"18302:4:8","nodeType":"VariableDeclaration","scope":5646,"src":"18294:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5635,"name":"address","nodeType":"ElementaryTypeName","src":"18294:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18293:14:8"},"returnParameters":{"id":5640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5646,"src":"18329:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5638,"name":"uint256","nodeType":"ElementaryTypeName","src":"18329:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18328:9:8"},"scope":5671,"src":"18264:119:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5657,"nodeType":"Block","src":"18417:82:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18436:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18440:6:8","memberName":"sender","nodeType":"MemberAccess","src":"18436:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5651,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"18450:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18436:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18462:16:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":5648,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18428:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18428:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5655,"nodeType":"ExpressionStatement","src":"18428:51:8"},{"id":5656,"nodeType":"PlaceholderStatement","src":"18490:1:8"}]},"id":5658,"name":"onlyGovernance","nameLocation":"18400:14:8","nodeType":"ModifierDefinition","parameters":{"id":5647,"nodeType":"ParameterList","parameters":[],"src":"18414:2:8"},"src":"18391:108:8","virtual":false,"visibility":"internal"},{"body":{"id":5669,"nodeType":"Block","src":"18527:81:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5661,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18546:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18550:6:8","memberName":"sender","nodeType":"MemberAccess","src":"18546:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5663,"name":"lpAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"18560:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18546:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18571:16:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":5660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18538:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18538:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5667,"nodeType":"ExpressionStatement","src":"18538:50:8"},{"id":5668,"nodeType":"PlaceholderStatement","src":"18599:1:8"}]},"id":5670,"name":"onlyPool","nameLocation":"18516:8:8","nodeType":"ModifierDefinition","parameters":{"id":5659,"nodeType":"ParameterList","parameters":[],"src":"18524:2:8"},"src":"18507:101:8","virtual":false,"visibility":"internal"}],"scope":5672,"src":"2656:15955:8","usedErrors":[13,18,321,4048,4050,4052,4054,4056,4058,4060,4062,4064,4066],"usedEvents":[24,4129,4140,4148,4157]}],"src":"33:18580:8"},"id":8},"contracts/InsurancePool.sol":{"ast":{"absolutePath":"contracts/InsurancePool.sol","exportedSymbols":{"Context":[255],"CoverLib":[3864],"ICover":[5701],"IERC20":[225],"IGov":[5883],"IVault":[5793],"IbqBTC":[5819],"InsurancePool":[7952],"Ownable":[147],"ReentrancyGuard":[376]},"id":7953,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5673,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7953,"sourceUnit":226,"src":"57:56:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":5675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7953,"sourceUnit":377,"src":"114:59:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7953,"sourceUnit":148,"src":"174:52:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CoverLib.sol","file":"./CoverLib.sol","id":5677,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7953,"sourceUnit":3865,"src":"227:24:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ICover","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5701,"linearizedBaseContracts":[5701],"name":"ICover","nameLocation":"263:6:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"106b5da1","id":5682,"implemented":false,"kind":"function","modifiers":[],"name":"updateMaxAmount","nameLocation":"285:15:9","nodeType":"FunctionDefinition","parameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"_coverId","nameLocation":"309:8:9","nodeType":"VariableDeclaration","scope":5682,"src":"301:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"301:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"300:18:9"},"returnParameters":{"id":5681,"nodeType":"ParameterList","parameters":[],"src":"327:0:9"},"scope":5701,"src":"276:52:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"73cce3ee","id":5691,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositClaimableDays","nameLocation":"342:23:9","nodeType":"FunctionDefinition","parameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"user","nameLocation":"383:4:9","nodeType":"VariableDeclaration","scope":5691,"src":"375:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5683,"name":"address","nodeType":"ElementaryTypeName","src":"375:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5686,"mutability":"mutable","name":"_poolId","nameLocation":"405:7:9","nodeType":"VariableDeclaration","scope":5691,"src":"397:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5685,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"365:53:9"},"returnParameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5691,"src":"442:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5688,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"441:9:9"},"scope":5701,"src":"333:118:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"10525814","id":5700,"implemented":false,"kind":"function","modifiers":[],"name":"getLastClaimTime","nameLocation":"465:16:9","nodeType":"FunctionDefinition","parameters":{"id":5696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5693,"mutability":"mutable","name":"user","nameLocation":"499:4:9","nodeType":"VariableDeclaration","scope":5700,"src":"491:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5692,"name":"address","nodeType":"ElementaryTypeName","src":"491:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5695,"mutability":"mutable","name":"_poolId","nameLocation":"521:7:9","nodeType":"VariableDeclaration","scope":5700,"src":"513:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5694,"name":"uint256","nodeType":"ElementaryTypeName","src":"513:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:53:9"},"returnParameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5700,"src":"558:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5697,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"557:9:9"},"scope":5701,"src":"456:111:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7953,"src":"253:316:9","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5793,"linearizedBaseContracts":[5793],"name":"IVault","nameLocation":"581:6:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IVault.Pool","id":5734,"members":[{"constant":false,"id":5703,"mutability":"mutable","name":"id","nameLocation":"624:2:9","nodeType":"VariableDeclaration","scope":5734,"src":"616:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5702,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5705,"mutability":"mutable","name":"poolName","nameLocation":"643:8:9","nodeType":"VariableDeclaration","scope":5734,"src":"636:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5704,"name":"string","nodeType":"ElementaryTypeName","src":"636:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5708,"mutability":"mutable","name":"riskType","nameLocation":"679:8:9","nodeType":"VariableDeclaration","scope":5734,"src":"661:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":5707,"nodeType":"UserDefinedTypeName","pathNode":{"id":5706,"name":"CoverLib.RiskType","nameLocations":["661:8:9","670:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"661:17:9"},"referencedDeclaration":3814,"src":"661:17:9","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":5710,"mutability":"mutable","name":"apy","nameLocation":"705:3:9","nodeType":"VariableDeclaration","scope":5734,"src":"697:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5712,"mutability":"mutable","name":"minPeriod","nameLocation":"726:9:9","nodeType":"VariableDeclaration","scope":5734,"src":"718:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5711,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5714,"mutability":"mutable","name":"tvl","nameLocation":"753:3:9","nodeType":"VariableDeclaration","scope":5734,"src":"745:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5716,"mutability":"mutable","name":"baseValue","nameLocation":"774:9:9","nodeType":"VariableDeclaration","scope":5734,"src":"766:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5718,"mutability":"mutable","name":"coverTvl","nameLocation":"801:8:9","nodeType":"VariableDeclaration","scope":5734,"src":"793:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5717,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5720,"mutability":"mutable","name":"tcp","nameLocation":"827:3:9","nodeType":"VariableDeclaration","scope":5734,"src":"819:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5719,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5722,"mutability":"mutable","name":"isActive","nameLocation":"845:8:9","nodeType":"VariableDeclaration","scope":5734,"src":"840:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5721,"name":"bool","nodeType":"ElementaryTypeName","src":"840:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5724,"mutability":"mutable","name":"percentageSplitBalance","nameLocation":"871:22:9","nodeType":"VariableDeclaration","scope":5734,"src":"863:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5723,"name":"uint256","nodeType":"ElementaryTypeName","src":"863:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5726,"mutability":"mutable","name":"investmentArmPercent","nameLocation":"911:20:9","nodeType":"VariableDeclaration","scope":5734,"src":"903:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5728,"mutability":"mutable","name":"leverage","nameLocation":"947:8:9","nodeType":"VariableDeclaration","scope":5734,"src":"941:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5727,"name":"uint8","nodeType":"ElementaryTypeName","src":"941:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5730,"mutability":"mutable","name":"asset","nameLocation":"973:5:9","nodeType":"VariableDeclaration","scope":5734,"src":"965:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5729,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5733,"mutability":"mutable","name":"assetType","nameLocation":"1014:9:9","nodeType":"VariableDeclaration","scope":5734,"src":"988:35:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":5732,"nodeType":"UserDefinedTypeName","pathNode":{"id":5731,"name":"CoverLib.AssetDepositType","nameLocations":["988:8:9","997:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"988:25:9"},"referencedDeclaration":3823,"src":"988:25:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"}],"name":"Pool","nameLocation":"601:4:9","nodeType":"StructDefinition","scope":5793,"src":"594:436:9","visibility":"public"},{"canonicalName":"IVault.Vault","id":5754,"members":[{"constant":false,"id":5736,"mutability":"mutable","name":"id","nameLocation":"1067:2:9","nodeType":"VariableDeclaration","scope":5754,"src":"1059:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5738,"mutability":"mutable","name":"vaultName","nameLocation":"1086:9:9","nodeType":"VariableDeclaration","scope":5754,"src":"1079:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5737,"name":"string","nodeType":"ElementaryTypeName","src":"1079:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5742,"mutability":"mutable","name":"pools","nameLocation":"1112:5:9","nodeType":"VariableDeclaration","scope":5754,"src":"1105:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5734_storage_$dyn_storage_ptr","typeString":"struct IVault.Pool[]"},"typeName":{"baseType":{"id":5740,"nodeType":"UserDefinedTypeName","pathNode":{"id":5739,"name":"Pool","nameLocations":["1105:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":5734,"src":"1105:4:9"},"referencedDeclaration":5734,"src":"1105:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5734_storage_ptr","typeString":"struct IVault.Pool"}},"id":5741,"nodeType":"ArrayTypeName","src":"1105:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$5734_storage_$dyn_storage_ptr","typeString":"struct IVault.Pool[]"}},"visibility":"internal"},{"constant":false,"id":5744,"mutability":"mutable","name":"minInv","nameLocation":"1135:6:9","nodeType":"VariableDeclaration","scope":5754,"src":"1127:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5746,"mutability":"mutable","name":"maxInv","nameLocation":"1159:6:9","nodeType":"VariableDeclaration","scope":5754,"src":"1151:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5748,"mutability":"mutable","name":"minPeriod","nameLocation":"1183:9:9","nodeType":"VariableDeclaration","scope":5754,"src":"1175:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5751,"mutability":"mutable","name":"assetType","nameLocation":"1228:9:9","nodeType":"VariableDeclaration","scope":5754,"src":"1202:35:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":5750,"nodeType":"UserDefinedTypeName","pathNode":{"id":5749,"name":"CoverLib.AssetDepositType","nameLocations":["1202:8:9","1211:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"1202:25:9"},"referencedDeclaration":3823,"src":"1202:25:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":5753,"mutability":"mutable","name":"asset","nameLocation":"1255:5:9","nodeType":"VariableDeclaration","scope":5754,"src":"1247:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5752,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Vault","nameLocation":"1043:5:9","nodeType":"StructDefinition","scope":5793,"src":"1036:231:9","visibility":"public"},{"canonicalName":"IVault.VaultDeposit","id":5774,"members":[{"constant":false,"id":5756,"mutability":"mutable","name":"lp","nameLocation":"1311:2:9","nodeType":"VariableDeclaration","scope":5774,"src":"1303:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5755,"name":"address","nodeType":"ElementaryTypeName","src":"1303:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5758,"mutability":"mutable","name":"amount","nameLocation":"1331:6:9","nodeType":"VariableDeclaration","scope":5774,"src":"1323:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5760,"mutability":"mutable","name":"vaultId","nameLocation":"1355:7:9","nodeType":"VariableDeclaration","scope":5774,"src":"1347:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5762,"mutability":"mutable","name":"dailyPayout","nameLocation":"1380:11:9","nodeType":"VariableDeclaration","scope":5774,"src":"1372:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5765,"mutability":"mutable","name":"status","nameLocation":"1417:6:9","nodeType":"VariableDeclaration","scope":5774,"src":"1401:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"},"typeName":{"id":5764,"nodeType":"UserDefinedTypeName","pathNode":{"id":5763,"name":"CoverLib.Status","nameLocations":["1401:8:9","1410:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":3863,"src":"1401:15:9"},"referencedDeclaration":3863,"src":"1401:15:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"visibility":"internal"},{"constant":false,"id":5767,"mutability":"mutable","name":"daysLeft","nameLocation":"1441:8:9","nodeType":"VariableDeclaration","scope":5774,"src":"1433:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5769,"mutability":"mutable","name":"startDate","nameLocation":"1467:9:9","nodeType":"VariableDeclaration","scope":5774,"src":"1459:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5771,"mutability":"mutable","name":"expiryDate","nameLocation":"1494:10:9","nodeType":"VariableDeclaration","scope":5774,"src":"1486:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1486:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5773,"mutability":"mutable","name":"accruedPayout","nameLocation":"1522:13:9","nodeType":"VariableDeclaration","scope":5774,"src":"1514:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1514:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VaultDeposit","nameLocation":"1280:12:9","nodeType":"StructDefinition","scope":5793,"src":"1273:269:9","visibility":"public"},{"functionSelector":"9403b634","id":5782,"implemented":false,"kind":"function","modifiers":[],"name":"getVault","nameLocation":"1557:8:9","nodeType":"FunctionDefinition","parameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"vaultId","nameLocation":"1574:7:9","nodeType":"VariableDeclaration","scope":5782,"src":"1566:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1565:17:9"},"returnParameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5782,"src":"1606:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$5754_memory_ptr","typeString":"struct IVault.Vault"},"typeName":{"id":5779,"nodeType":"UserDefinedTypeName","pathNode":{"id":5778,"name":"Vault","nameLocations":["1606:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":5754,"src":"1606:5:9"},"referencedDeclaration":5754,"src":"1606:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$5754_storage_ptr","typeString":"struct IVault.Vault"}},"visibility":"internal"}],"src":"1605:14:9"},"scope":5793,"src":"1548:72:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"57656486","id":5792,"implemented":false,"kind":"function","modifiers":[],"name":"getUserVaultDeposit","nameLocation":"1634:19:9","nodeType":"FunctionDefinition","parameters":{"id":5787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5784,"mutability":"mutable","name":"vaultId","nameLocation":"1671:7:9","nodeType":"VariableDeclaration","scope":5792,"src":"1663:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5783,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5786,"mutability":"mutable","name":"user","nameLocation":"1696:4:9","nodeType":"VariableDeclaration","scope":5792,"src":"1688:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5785,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1653:53:9"},"returnParameters":{"id":5791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5792,"src":"1730:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$5774_memory_ptr","typeString":"struct IVault.VaultDeposit"},"typeName":{"id":5789,"nodeType":"UserDefinedTypeName","pathNode":{"id":5788,"name":"VaultDeposit","nameLocations":["1730:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":5774,"src":"1730:12:9"},"referencedDeclaration":5774,"src":"1730:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$5774_storage_ptr","typeString":"struct IVault.VaultDeposit"}},"visibility":"internal"}],"src":"1729:21:9"},"scope":5793,"src":"1625:126:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7953,"src":"571:1182:9","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IbqBTC","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5819,"linearizedBaseContracts":[5819],"name":"IbqBTC","nameLocation":"1765:6:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e2094eda","id":5800,"implemented":false,"kind":"function","modifiers":[],"name":"bqMint","nameLocation":"1787:6:9","nodeType":"FunctionDefinition","parameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"account","nameLocation":"1802:7:9","nodeType":"VariableDeclaration","scope":5800,"src":"1794:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5794,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5797,"mutability":"mutable","name":"amount","nameLocation":"1819:6:9","nodeType":"VariableDeclaration","scope":5800,"src":"1811:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1811:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1793:33:9"},"returnParameters":{"id":5799,"nodeType":"ParameterList","parameters":[],"src":"1835:0:9"},"scope":5819,"src":"1778:58:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9dc29fac","id":5807,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1850:4:9","nodeType":"FunctionDefinition","parameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"account","nameLocation":"1863:7:9","nodeType":"VariableDeclaration","scope":5807,"src":"1855:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5801,"name":"address","nodeType":"ElementaryTypeName","src":"1855:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5804,"mutability":"mutable","name":"amount","nameLocation":"1880:6:9","nodeType":"VariableDeclaration","scope":5807,"src":"1872:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1854:33:9"},"returnParameters":{"id":5806,"nodeType":"ParameterList","parameters":[],"src":"1896:0:9"},"scope":5819,"src":"1841:56:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":5818,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1911:12:9","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5809,"mutability":"mutable","name":"from","nameLocation":"1941:4:9","nodeType":"VariableDeclaration","scope":5818,"src":"1933:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5808,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5811,"mutability":"mutable","name":"to","nameLocation":"1963:2:9","nodeType":"VariableDeclaration","scope":5818,"src":"1955:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5810,"name":"address","nodeType":"ElementaryTypeName","src":"1955:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5813,"mutability":"mutable","name":"amount","nameLocation":"1983:6:9","nodeType":"VariableDeclaration","scope":5818,"src":"1975:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:72:9"},"returnParameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5818,"src":"2014:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5815,"name":"bool","nodeType":"ElementaryTypeName","src":"2014:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2013:6:9"},"scope":5819,"src":"1902:118:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7953,"src":"1755:267:9","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IGov","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5883,"linearizedBaseContracts":[5883],"name":"IGov","nameLocation":"2034:4:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IGov.ProposalParams","id":5835,"members":[{"constant":false,"id":5821,"mutability":"mutable","name":"user","nameLocation":"2085:4:9","nodeType":"VariableDeclaration","scope":5835,"src":"2077:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5820,"name":"address","nodeType":"ElementaryTypeName","src":"2077:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5824,"mutability":"mutable","name":"riskType","nameLocation":"2117:8:9","nodeType":"VariableDeclaration","scope":5835,"src":"2099:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":5823,"nodeType":"UserDefinedTypeName","pathNode":{"id":5822,"name":"CoverLib.RiskType","nameLocations":["2099:8:9","2108:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"2099:17:9"},"referencedDeclaration":3814,"src":"2099:17:9","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":5826,"mutability":"mutable","name":"coverId","nameLocation":"2143:7:9","nodeType":"VariableDeclaration","scope":5835,"src":"2135:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5825,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5828,"mutability":"mutable","name":"txHash","nameLocation":"2167:6:9","nodeType":"VariableDeclaration","scope":5835,"src":"2160:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5827,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5830,"mutability":"mutable","name":"description","nameLocation":"2190:11:9","nodeType":"VariableDeclaration","scope":5835,"src":"2183:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5829,"name":"string","nodeType":"ElementaryTypeName","src":"2183:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5832,"mutability":"mutable","name":"poolId","nameLocation":"2219:6:9","nodeType":"VariableDeclaration","scope":5835,"src":"2211:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5831,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5834,"mutability":"mutable","name":"claimAmount","nameLocation":"2243:11:9","nodeType":"VariableDeclaration","scope":5835,"src":"2235:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ProposalParams","nameLocation":"2052:14:9","nodeType":"StructDefinition","scope":5883,"src":"2045:216:9","visibility":"public"},{"canonicalName":"IGov.Proposal","id":5856,"members":[{"constant":false,"id":5837,"mutability":"mutable","name":"id","nameLocation":"2301:2:9","nodeType":"VariableDeclaration","scope":5856,"src":"2293:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2293:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5839,"mutability":"mutable","name":"votesFor","nameLocation":"2321:8:9","nodeType":"VariableDeclaration","scope":5856,"src":"2313:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5838,"name":"uint256","nodeType":"ElementaryTypeName","src":"2313:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5841,"mutability":"mutable","name":"votesAgainst","nameLocation":"2347:12:9","nodeType":"VariableDeclaration","scope":5856,"src":"2339:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5843,"mutability":"mutable","name":"createdAt","nameLocation":"2377:9:9","nodeType":"VariableDeclaration","scope":5856,"src":"2369:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5842,"name":"uint256","nodeType":"ElementaryTypeName","src":"2369:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5845,"mutability":"mutable","name":"deadline","nameLocation":"2404:8:9","nodeType":"VariableDeclaration","scope":5856,"src":"2396:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5844,"name":"uint256","nodeType":"ElementaryTypeName","src":"2396:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5847,"mutability":"mutable","name":"timeleft","nameLocation":"2430:8:9","nodeType":"VariableDeclaration","scope":5856,"src":"2422:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"2422:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5850,"mutability":"mutable","name":"status","nameLocation":"2462:6:9","nodeType":"VariableDeclaration","scope":5856,"src":"2448:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalStaus_$5862","typeString":"enum IGov.ProposalStaus"},"typeName":{"id":5849,"nodeType":"UserDefinedTypeName","pathNode":{"id":5848,"name":"ProposalStaus","nameLocations":["2448:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":5862,"src":"2448:13:9"},"referencedDeclaration":5862,"src":"2448:13:9","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalStaus_$5862","typeString":"enum IGov.ProposalStaus"}},"visibility":"internal"},{"constant":false,"id":5852,"mutability":"mutable","name":"executed","nameLocation":"2483:8:9","nodeType":"VariableDeclaration","scope":5856,"src":"2478:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5851,"name":"bool","nodeType":"ElementaryTypeName","src":"2478:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5855,"mutability":"mutable","name":"proposalParam","nameLocation":"2516:13:9","nodeType":"VariableDeclaration","scope":5856,"src":"2501:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_storage_ptr","typeString":"struct IGov.ProposalParams"},"typeName":{"id":5854,"nodeType":"UserDefinedTypeName","pathNode":{"id":5853,"name":"ProposalParams","nameLocations":["2501:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":5835,"src":"2501:14:9"},"referencedDeclaration":5835,"src":"2501:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_storage_ptr","typeString":"struct IGov.ProposalParams"}},"visibility":"internal"}],"name":"Proposal","nameLocation":"2274:8:9","nodeType":"StructDefinition","scope":5883,"src":"2267:269:9","visibility":"public"},{"canonicalName":"IGov.ProposalStaus","id":5862,"members":[{"id":5857,"name":"Submitted","nameLocation":"2571:9:9","nodeType":"EnumValue","src":"2571:9:9"},{"id":5858,"name":"Pending","nameLocation":"2590:7:9","nodeType":"EnumValue","src":"2590:7:9"},{"id":5859,"name":"Approved","nameLocation":"2607:8:9","nodeType":"EnumValue","src":"2607:8:9"},{"id":5860,"name":"Claimed","nameLocation":"2625:7:9","nodeType":"EnumValue","src":"2625:7:9"},{"id":5861,"name":"Rejected","nameLocation":"2642:8:9","nodeType":"EnumValue","src":"2642:8:9"}],"name":"ProposalStaus","nameLocation":"2547:13:9","nodeType":"EnumDefinition","src":"2542:114:9"},{"functionSelector":"3b4d01a7","id":5870,"implemented":false,"kind":"function","modifiers":[],"name":"getProposalDetails","nameLocation":"2671:18:9","nodeType":"FunctionDefinition","parameters":{"id":5865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5864,"mutability":"mutable","name":"_proposalId","nameLocation":"2707:11:9","nodeType":"VariableDeclaration","scope":5870,"src":"2699:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5863,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2689:35:9"},"returnParameters":{"id":5869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5870,"src":"2743:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$5856_memory_ptr","typeString":"struct IGov.Proposal"},"typeName":{"id":5867,"nodeType":"UserDefinedTypeName","pathNode":{"id":5866,"name":"Proposal","nameLocations":["2743:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5856,"src":"2743:8:9"},"referencedDeclaration":5856,"src":"2743:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$5856_storage_ptr","typeString":"struct IGov.Proposal"}},"visibility":"internal"}],"src":"2742:17:9"},"scope":5883,"src":"2662:98:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1b4bf9d","id":5875,"implemented":false,"kind":"function","modifiers":[],"name":"updateProposalStatusToClaimed","nameLocation":"2774:29:9","nodeType":"FunctionDefinition","parameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"proposalId","nameLocation":"2812:10:9","nodeType":"VariableDeclaration","scope":5875,"src":"2804:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5871,"name":"uint256","nodeType":"ElementaryTypeName","src":"2804:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2803:20:9"},"returnParameters":{"id":5874,"nodeType":"ParameterList","parameters":[],"src":"2832:0:9"},"scope":5883,"src":"2765:68:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1f8be73c","id":5882,"implemented":false,"kind":"function","modifiers":[],"name":"setUserVaultDepositToZero","nameLocation":"2847:25:9","nodeType":"FunctionDefinition","parameters":{"id":5880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"vaultId","nameLocation":"2881:7:9","nodeType":"VariableDeclaration","scope":5882,"src":"2873:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2873:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5879,"mutability":"mutable","name":"user","nameLocation":"2898:4:9","nodeType":"VariableDeclaration","scope":5882,"src":"2890:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5878,"name":"address","nodeType":"ElementaryTypeName","src":"2890:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2872:31:9"},"returnParameters":{"id":5881,"nodeType":"ParameterList","parameters":[],"src":"2912:0:9"},"scope":5883,"src":"2838:75:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7953,"src":"2024:891:9","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":5884,"name":"ReentrancyGuard","nameLocations":["2943:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":376,"src":"2943:15:9"},"id":5885,"nodeType":"InheritanceSpecifier","src":"2943:15:9"},{"baseName":{"id":5886,"name":"Ownable","nameLocations":["2960:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2960:7:9"},"id":5887,"nodeType":"InheritanceSpecifier","src":"2960:7:9"}],"canonicalName":"InsurancePool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7952,"linearizedBaseContracts":[7952,147,255,376],"name":"InsurancePool","nameLocation":"2926:13:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5889,"libraryName":{"id":5888,"name":"CoverLib","nameLocations":["2980:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":3864,"src":"2980:8:9"},"nodeType":"UsingForDirective","src":"2974:21:9"},{"canonicalName":"InsurancePool.Vault","id":5909,"members":[{"constant":false,"id":5891,"mutability":"mutable","name":"id","nameLocation":"3032:2:9","nodeType":"VariableDeclaration","scope":5909,"src":"3024:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5890,"name":"uint256","nodeType":"ElementaryTypeName","src":"3024:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5893,"mutability":"mutable","name":"vaultName","nameLocation":"3051:9:9","nodeType":"VariableDeclaration","scope":5909,"src":"3044:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5892,"name":"string","nodeType":"ElementaryTypeName","src":"3044:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5897,"mutability":"mutable","name":"pools","nameLocation":"3086:5:9","nodeType":"VariableDeclaration","scope":5909,"src":"3070:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"},"typeName":{"baseType":{"id":5895,"nodeType":"UserDefinedTypeName","pathNode":{"id":5894,"name":"CoverLib.Pool","nameLocations":["3070:8:9","3079:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"3070:13:9"},"referencedDeclaration":3859,"src":"3070:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"id":5896,"nodeType":"ArrayTypeName","src":"3070:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"}},"visibility":"internal"},{"constant":false,"id":5899,"mutability":"mutable","name":"minInv","nameLocation":"3109:6:9","nodeType":"VariableDeclaration","scope":5909,"src":"3101:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"3101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5901,"mutability":"mutable","name":"maxInv","nameLocation":"3133:6:9","nodeType":"VariableDeclaration","scope":5909,"src":"3125:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5903,"mutability":"mutable","name":"minPeriod","nameLocation":"3157:9:9","nodeType":"VariableDeclaration","scope":5909,"src":"3149:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5902,"name":"uint256","nodeType":"ElementaryTypeName","src":"3149:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5906,"mutability":"mutable","name":"assetType","nameLocation":"3202:9:9","nodeType":"VariableDeclaration","scope":5909,"src":"3176:35:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":5905,"nodeType":"UserDefinedTypeName","pathNode":{"id":5904,"name":"CoverLib.AssetDepositType","nameLocations":["3176:8:9","3185:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"3176:25:9"},"referencedDeclaration":3823,"src":"3176:25:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":5908,"mutability":"mutable","name":"asset","nameLocation":"3229:5:9","nodeType":"VariableDeclaration","scope":5909,"src":"3221:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5907,"name":"address","nodeType":"ElementaryTypeName","src":"3221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Vault","nameLocation":"3008:5:9","nodeType":"StructDefinition","scope":7952,"src":"3001:240:9","visibility":"public"},{"canonicalName":"InsurancePool.Deposits","id":5932,"members":[{"constant":false,"id":5911,"mutability":"mutable","name":"lp","nameLocation":"3281:2:9","nodeType":"VariableDeclaration","scope":5932,"src":"3273:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5910,"name":"address","nodeType":"ElementaryTypeName","src":"3273:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5913,"mutability":"mutable","name":"amount","nameLocation":"3301:6:9","nodeType":"VariableDeclaration","scope":5932,"src":"3293:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5912,"name":"uint256","nodeType":"ElementaryTypeName","src":"3293:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5915,"mutability":"mutable","name":"poolId","nameLocation":"3325:6:9","nodeType":"VariableDeclaration","scope":5932,"src":"3317:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5914,"name":"uint256","nodeType":"ElementaryTypeName","src":"3317:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5917,"mutability":"mutable","name":"dailyPayout","nameLocation":"3349:11:9","nodeType":"VariableDeclaration","scope":5932,"src":"3341:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5916,"name":"uint256","nodeType":"ElementaryTypeName","src":"3341:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5920,"mutability":"mutable","name":"status","nameLocation":"3386:6:9","nodeType":"VariableDeclaration","scope":5932,"src":"3370:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"},"typeName":{"id":5919,"nodeType":"UserDefinedTypeName","pathNode":{"id":5918,"name":"CoverLib.Status","nameLocations":["3370:8:9","3379:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":3863,"src":"3370:15:9"},"referencedDeclaration":3863,"src":"3370:15:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"visibility":"internal"},{"constant":false,"id":5922,"mutability":"mutable","name":"daysLeft","nameLocation":"3410:8:9","nodeType":"VariableDeclaration","scope":5932,"src":"3402:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5924,"mutability":"mutable","name":"startDate","nameLocation":"3436:9:9","nodeType":"VariableDeclaration","scope":5932,"src":"3428:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5923,"name":"uint256","nodeType":"ElementaryTypeName","src":"3428:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5926,"mutability":"mutable","name":"expiryDate","nameLocation":"3463:10:9","nodeType":"VariableDeclaration","scope":5932,"src":"3455:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5925,"name":"uint256","nodeType":"ElementaryTypeName","src":"3455:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5928,"mutability":"mutable","name":"accruedPayout","nameLocation":"3491:13:9","nodeType":"VariableDeclaration","scope":5932,"src":"3483:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5927,"name":"uint256","nodeType":"ElementaryTypeName","src":"3483:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5931,"mutability":"mutable","name":"pdt","nameLocation":"3535:3:9","nodeType":"VariableDeclaration","scope":5932,"src":"3514:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"},"typeName":{"id":5930,"nodeType":"UserDefinedTypeName","pathNode":{"id":5929,"name":"CoverLib.DepositType","nameLocations":["3514:8:9","3523:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"3514:20:9"},"referencedDeclaration":3826,"src":"3514:20:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"visibility":"internal"}],"name":"Deposits","nameLocation":"3254:8:9","nodeType":"StructDefinition","scope":7952,"src":"3247:339:9","visibility":"public"},{"canonicalName":"InsurancePool.PoolInfo","id":5953,"members":[{"constant":false,"id":5934,"mutability":"mutable","name":"poolName","nameLocation":"3625:8:9","nodeType":"VariableDeclaration","scope":5953,"src":"3618:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5933,"name":"string","nodeType":"ElementaryTypeName","src":"3618:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5936,"mutability":"mutable","name":"poolId","nameLocation":"3651:6:9","nodeType":"VariableDeclaration","scope":5953,"src":"3643:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5935,"name":"uint256","nodeType":"ElementaryTypeName","src":"3643:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5938,"mutability":"mutable","name":"dailyPayout","nameLocation":"3675:11:9","nodeType":"VariableDeclaration","scope":5953,"src":"3667:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3667:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5940,"mutability":"mutable","name":"depositAmount","nameLocation":"3704:13:9","nodeType":"VariableDeclaration","scope":5953,"src":"3696:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5939,"name":"uint256","nodeType":"ElementaryTypeName","src":"3696:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5942,"mutability":"mutable","name":"apy","nameLocation":"3735:3:9","nodeType":"VariableDeclaration","scope":5953,"src":"3727:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint256","nodeType":"ElementaryTypeName","src":"3727:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5944,"mutability":"mutable","name":"minPeriod","nameLocation":"3756:9:9","nodeType":"VariableDeclaration","scope":5953,"src":"3748:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5943,"name":"uint256","nodeType":"ElementaryTypeName","src":"3748:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5946,"mutability":"mutable","name":"tvl","nameLocation":"3783:3:9","nodeType":"VariableDeclaration","scope":5953,"src":"3775:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5945,"name":"uint256","nodeType":"ElementaryTypeName","src":"3775:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5948,"mutability":"mutable","name":"tcp","nameLocation":"3804:3:9","nodeType":"VariableDeclaration","scope":5953,"src":"3796:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5947,"name":"uint256","nodeType":"ElementaryTypeName","src":"3796:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5950,"mutability":"mutable","name":"isActive","nameLocation":"3851:8:9","nodeType":"VariableDeclaration","scope":5953,"src":"3846:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5949,"name":"bool","nodeType":"ElementaryTypeName","src":"3846:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5952,"mutability":"mutable","name":"accruedPayout","nameLocation":"3916:13:9","nodeType":"VariableDeclaration","scope":5953,"src":"3908:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5951,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"3599:8:9","nodeType":"StructDefinition","scope":7952,"src":"3592:344:9","visibility":"public"},{"constant":false,"id":5959,"mutability":"mutable","name":"vaultPercantageSplits","nameLocation":"3990:21:9","nodeType":"VariableDeclaration","scope":7952,"src":"3942:69:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"typeName":{"id":5958,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5954,"name":"uint256","nodeType":"ElementaryTypeName","src":"3950:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3942:47:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5957,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"3969:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3961:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5956,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":5969,"mutability":"mutable","name":"deposits","nameLocation":"4151:8:9","nodeType":"VariableDeclaration","scope":7952,"src":"4069:90:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits)))"},"typeName":{"id":5968,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5960,"name":"address","nodeType":"ElementaryTypeName","src":"4077:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4069:81:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5967,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5961,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4088:61:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5966,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5963,"nodeType":"UserDefinedTypeName","pathNode":{"id":5962,"name":"CoverLib.DepositType","nameLocations":["4115:8:9","4124:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"4115:20:9"},"referencedDeclaration":3826,"src":"4115:20:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"nodeType":"Mapping","src":"4107:41:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5965,"nodeType":"UserDefinedTypeName","pathNode":{"id":5964,"name":"Deposits","nameLocations":["4139:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5932,"src":"4139:8:9"},"referencedDeclaration":5932,"src":"4139:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits"}}}}},"visibility":"internal"},{"constant":false,"id":5975,"mutability":"mutable","name":"poolToCovers","nameLocation":"4202:12:9","nodeType":"VariableDeclaration","scope":7952,"src":"4165:49:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover[])"},"typeName":{"id":5974,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5970,"name":"uint256","nodeType":"ElementaryTypeName","src":"4173:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4165:36:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":5972,"nodeType":"UserDefinedTypeName","pathNode":{"id":5971,"name":"CoverLib.Cover","nameLocations":["4184:8:9","4193:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"4184:14:9"},"referencedDeclaration":3790,"src":"4184:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":5973,"nodeType":"ArrayTypeName","src":"4184:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}}},"visibility":"internal"},{"constant":false,"functionSelector":"ac4afa38","id":5980,"mutability":"mutable","name":"pools","nameLocation":"4261:5:9","nodeType":"VariableDeclaration","scope":7952,"src":"4220:46:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool)"},"typeName":{"id":5979,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"4228:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4220:33:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5978,"nodeType":"UserDefinedTypeName","pathNode":{"id":5977,"name":"CoverLib.Pool","nameLocations":["4239:8:9","4248:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"4239:13:9"},"referencedDeclaration":3859,"src":"4239:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}}},"visibility":"public"},{"constant":false,"functionSelector":"f525cb68","id":5982,"mutability":"mutable","name":"poolCount","nameLocation":"4287:9:9","nodeType":"VariableDeclaration","scope":7952,"src":"4272:24:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5981,"name":"uint256","nodeType":"ElementaryTypeName","src":"4272:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5aa6e675","id":5984,"mutability":"mutable","name":"governance","nameLocation":"4317:10:9","nodeType":"VariableDeclaration","scope":7952,"src":"4302:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5983,"name":"address","nodeType":"ElementaryTypeName","src":"4302:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f6e80558","id":5987,"mutability":"mutable","name":"ICoverContract","nameLocation":"4347:14:9","nodeType":"VariableDeclaration","scope":7952,"src":"4333:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"},"typeName":{"id":5986,"nodeType":"UserDefinedTypeName","pathNode":{"id":5985,"name":"ICover","nameLocations":["4333:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":5701,"src":"4333:6:9"},"referencedDeclaration":5701,"src":"4333:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"}},"visibility":"public"},{"constant":false,"functionSelector":"6f60537d","id":5990,"mutability":"mutable","name":"IVaultContract","nameLocation":"4381:14:9","nodeType":"VariableDeclaration","scope":7952,"src":"4367:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5793","typeString":"contract IVault"},"typeName":{"id":5989,"nodeType":"UserDefinedTypeName","pathNode":{"id":5988,"name":"IVault","nameLocations":["4367:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":5793,"src":"4367:6:9"},"referencedDeclaration":5793,"src":"4367:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5793","typeString":"contract IVault"}},"visibility":"public"},{"constant":false,"functionSelector":"b5d90c28","id":5993,"mutability":"mutable","name":"IGovernanceContract","nameLocation":"4413:19:9","nodeType":"VariableDeclaration","scope":7952,"src":"4401:31:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$5883","typeString":"contract IGov"},"typeName":{"id":5992,"nodeType":"UserDefinedTypeName","pathNode":{"id":5991,"name":"IGov","nameLocations":["4401:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":5883,"src":"4401:4:9"},"referencedDeclaration":5883,"src":"4401:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$5883","typeString":"contract IGov"}},"visibility":"public"},{"constant":false,"functionSelector":"34808ec3","id":5996,"mutability":"mutable","name":"bqBTC","nameLocation":"4452:5:9","nodeType":"VariableDeclaration","scope":7952,"src":"4438:19:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$5819","typeString":"contract IbqBTC"},"typeName":{"id":5995,"nodeType":"UserDefinedTypeName","pathNode":{"id":5994,"name":"IbqBTC","nameLocations":["4438:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":5819,"src":"4438:6:9"},"referencedDeclaration":5819,"src":"4438:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$5819","typeString":"contract IbqBTC"}},"visibility":"public"},{"constant":false,"functionSelector":"996b8a6f","id":5998,"mutability":"mutable","name":"bqBTCAddress","nameLocation":"4478:12:9","nodeType":"VariableDeclaration","scope":7952,"src":"4463:27:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5997,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"248a75b7","id":6000,"mutability":"mutable","name":"coverContract","nameLocation":"4511:13:9","nodeType":"VariableDeclaration","scope":7952,"src":"4496:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5999,"name":"address","nodeType":"ElementaryTypeName","src":"4496:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2274346b","id":6002,"mutability":"mutable","name":"vaultContract","nameLocation":"4545:13:9","nodeType":"VariableDeclaration","scope":7952,"src":"4530:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6001,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"29ba7bb2","id":6004,"mutability":"mutable","name":"initialOwner","nameLocation":"4579:12:9","nodeType":"VariableDeclaration","scope":7952,"src":"4564:27:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6003,"name":"address","nodeType":"ElementaryTypeName","src":"4564:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"35c1d349","id":6007,"mutability":"mutable","name":"participants","nameLocation":"4614:12:9","nodeType":"VariableDeclaration","scope":7952,"src":"4597:29:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":6005,"name":"address","nodeType":"ElementaryTypeName","src":"4597:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6006,"nodeType":"ArrayTypeName","src":"4597:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"96f3a8ad","id":6011,"mutability":"mutable","name":"participation","nameLocation":"4667:13:9","nodeType":"VariableDeclaration","scope":7952,"src":"4632:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6010,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6008,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4632:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6009,"name":"uint256","nodeType":"ElementaryTypeName","src":"4651:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"6f85d9948d6ca3dd6ce6ce7d175da22b4e865827ae6fcd530ec7edac1240f928","id":6019,"name":"Deposited","nameLocation":"4693:9:9","nodeType":"EventDefinition","parameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4719:4:9","nodeType":"VariableDeclaration","scope":6019,"src":"4703:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6012,"name":"address","nodeType":"ElementaryTypeName","src":"4703:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6015,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4733:6:9","nodeType":"VariableDeclaration","scope":6019,"src":"4725:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6014,"name":"uint256","nodeType":"ElementaryTypeName","src":"4725:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6017,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"4748:4:9","nodeType":"VariableDeclaration","scope":6019,"src":"4741:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6016,"name":"string","nodeType":"ElementaryTypeName","src":"4741:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4702:51:9"},"src":"4687:67:9"},{"anonymous":false,"eventSelector":"485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d9751","id":6027,"name":"Withdraw","nameLocation":"4765:8:9","nodeType":"EventDefinition","parameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4790:4:9","nodeType":"VariableDeclaration","scope":6027,"src":"4774:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6020,"name":"address","nodeType":"ElementaryTypeName","src":"4774:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6023,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4804:6:9","nodeType":"VariableDeclaration","scope":6027,"src":"4796:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6022,"name":"uint256","nodeType":"ElementaryTypeName","src":"4796:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6025,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"4819:4:9","nodeType":"VariableDeclaration","scope":6027,"src":"4812:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6024,"name":"string","nodeType":"ElementaryTypeName","src":"4812:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4773:51:9"},"src":"4759:66:9"},{"anonymous":false,"eventSelector":"415071086c9ea63f7f39884c21a8af430af53bfd511a362dff69cabcb1b8bcc1","id":6035,"name":"ClaimPaid","nameLocation":"4836:9:9","nodeType":"EventDefinition","parameters":{"id":6034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4862:9:9","nodeType":"VariableDeclaration","scope":6035,"src":"4846:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6028,"name":"address","nodeType":"ElementaryTypeName","src":"4846:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6031,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"4880:4:9","nodeType":"VariableDeclaration","scope":6035,"src":"4873:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6030,"name":"string","nodeType":"ElementaryTypeName","src":"4873:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6033,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4894:6:9","nodeType":"VariableDeclaration","scope":6035,"src":"4886:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6032,"name":"uint256","nodeType":"ElementaryTypeName","src":"4886:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4845:56:9"},"src":"4830:72:9"},{"anonymous":false,"eventSelector":"f01906dc0ac306fa816e50166a7ed46af1f05721cb90cea30beebdd8dede3a6d","id":6041,"name":"PoolCreated","nameLocation":"4913:11:9","nodeType":"EventDefinition","parameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"4941:2:9","nodeType":"VariableDeclaration","scope":6041,"src":"4925:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6036,"name":"uint256","nodeType":"ElementaryTypeName","src":"4925:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6039,"indexed":false,"mutability":"mutable","name":"poolName","nameLocation":"4952:8:9","nodeType":"VariableDeclaration","scope":6041,"src":"4945:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6038,"name":"string","nodeType":"ElementaryTypeName","src":"4945:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4924:37:9"},"src":"4907:55:9"},{"anonymous":false,"eventSelector":"17b8644f386d1c7c7138ef98b3c8035622bbe94d7be9b26f71d2654a547c2943","id":6049,"name":"PoolUpdated","nameLocation":"4973:11:9","nodeType":"EventDefinition","parameters":{"id":6048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"5001:6:9","nodeType":"VariableDeclaration","scope":6049,"src":"4985:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6042,"name":"uint256","nodeType":"ElementaryTypeName","src":"4985:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6045,"indexed":false,"mutability":"mutable","name":"apy","nameLocation":"5017:3:9","nodeType":"VariableDeclaration","scope":6049,"src":"5009:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6044,"name":"uint256","nodeType":"ElementaryTypeName","src":"5009:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6047,"indexed":false,"mutability":"mutable","name":"_minPeriod","nameLocation":"5030:10:9","nodeType":"VariableDeclaration","scope":6049,"src":"5022:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6046,"name":"uint256","nodeType":"ElementaryTypeName","src":"5022:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4984:57:9"},"src":"4967:75:9"},{"anonymous":false,"eventSelector":"eef4955e8b18dcb6d1c19905b7b86e5fe56138ad1ce2c5e540ce4e959312f511","id":6057,"name":"ClaimAttempt","nameLocation":"5053:12:9","nodeType":"EventDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6051,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6057,"src":"5066:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6050,"name":"uint256","nodeType":"ElementaryTypeName","src":"5066:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6053,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6057,"src":"5075:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6055,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6057,"src":"5084:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6054,"name":"address","nodeType":"ElementaryTypeName","src":"5084:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5065:27:9"},"src":"5047:46:9"},{"body":{"id":6081,"nodeType":"Block","src":"5173:108:9","statements":[{"expression":{"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6067,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"5183:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6068,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"5198:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5183:28:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6070,"nodeType":"ExpressionStatement","src":"5183:28:9"},{"expression":{"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6071,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"5221:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$5819","typeString":"contract IbqBTC"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6073,"name":"_bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"5236:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6072,"name":"IbqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"5229:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IbqBTC_$5819_$","typeString":"type(contract IbqBTC)"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$5819","typeString":"contract IbqBTC"}},"src":"5221:22:9","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$5819","typeString":"contract IbqBTC"}},"id":6076,"nodeType":"ExpressionStatement","src":"5221:22:9"},{"expression":{"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6077,"name":"bqBTCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"5253:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6078,"name":"_bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"5268:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5253:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6080,"nodeType":"ExpressionStatement","src":"5253:21:9"}]},"id":6082,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6064,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"5158:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6065,"kind":"baseConstructorSpecifier","modifierName":{"id":6063,"name":"Ownable","nameLocations":["5150:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"5150:7:9"},"nodeType":"ModifierInvocation","src":"5150:22:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"_initialOwner","nameLocation":"5119:13:9","nodeType":"VariableDeclaration","scope":6082,"src":"5111:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6058,"name":"address","nodeType":"ElementaryTypeName","src":"5111:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6061,"mutability":"mutable","name":"_bqBTC","nameLocation":"5142:6:9","nodeType":"VariableDeclaration","scope":6082,"src":"5134:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6060,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5110:39:9"},"returnParameters":{"id":6066,"nodeType":"ParameterList","parameters":[],"src":"5173:0:9"},"scope":7952,"src":"5099:182:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6221,"nodeType":"Block","src":"5592:754:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6108,"name":"adt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"5623:3:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":6109,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"5630:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5639:16:9","memberName":"AssetDepositType","nodeType":"MemberAccess","referencedDeclaration":3823,"src":"5630:25:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetDepositType_$3823_$","typeString":"type(enum CoverLib.AssetDepositType)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5656:6:9","memberName":"Native","nodeType":"MemberAccess","referencedDeclaration":3821,"src":"5630:32:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"src":"5623:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6113,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"5666:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5683:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5675:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6114,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:9","typeDescriptions":{}}},"id":6117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5675:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5666:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5623:62:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e6720417373657420666f72204465706f736974","id":6120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5699:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2725478d0a8223273c0f3d239ff3817e1392b4a0ae6e5f3fd8f8710d7c55881","typeString":"literal_string \"Wrong Asset for Deposit\""},"value":"Wrong Asset for Deposit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2725478d0a8223273c0f3d239ff3817e1392b4a0ae6e5f3fd8f8710d7c55881","typeString":"literal_string \"Wrong Asset for Deposit\""}],"id":6107,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5602:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5602:132:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6122,"nodeType":"ExpressionStatement","src":"5602:132:9"},{"expression":{"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6123,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"5745:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5758:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5745:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6126,"nodeType":"ExpressionStatement","src":"5745:14:9"},{"assignments":[6131],"declarations":[{"constant":false,"id":6131,"mutability":"mutable","name":"newPool","nameLocation":"5791:7:9","nodeType":"VariableDeclaration","scope":6221,"src":"5769:29:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":6130,"nodeType":"UserDefinedTypeName","pathNode":{"id":6129,"name":"CoverLib.Pool","nameLocations":["5769:8:9","5778:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"5769:13:9"},"referencedDeclaration":3859,"src":"5769:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":6135,"initialValue":{"baseExpression":{"id":6132,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"5801:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6134,"indexExpression":{"id":6133,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"5807:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5801:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5769:45:9"},{"expression":{"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6136,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5824:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5832:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"5824:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6139,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"5837:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5824:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6141,"nodeType":"ExpressionStatement","src":"5824:19:9"},{"expression":{"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6142,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5853:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5861:8:9","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":3830,"src":"5853:16:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6145,"name":"_poolName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"5872:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5853:28:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6147,"nodeType":"ExpressionStatement","src":"5853:28:9"},{"expression":{"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6148,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5891:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5899:3:9","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"5891:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6151,"name":"_apy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"5905:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5891:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6153,"nodeType":"ExpressionStatement","src":"5891:18:9"},{"expression":{"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6154,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5919:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5927:9:9","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":3837,"src":"5919:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6157,"name":"_minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"5939:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5919:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6159,"nodeType":"ExpressionStatement","src":"5919:30:9"},{"expression":{"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6160,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5959:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5967:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"5959:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5973:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5959:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6165,"nodeType":"ExpressionStatement","src":"5959:15:9"},{"expression":{"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6166,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5984:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5992:8:9","memberName":"coverTvl","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"5984:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6003:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5984:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6171,"nodeType":"ExpressionStatement","src":"5984:20:9"},{"expression":{"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6172,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6014:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6022:9:9","memberName":"baseValue","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"6014:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6034:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6014:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6177,"nodeType":"ExpressionStatement","src":"6014:21:9"},{"expression":{"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6178,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6045:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6053:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"6045:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6064:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6045:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6183,"nodeType":"ExpressionStatement","src":"6045:23:9"},{"expression":{"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6184,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6078:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6086:8:9","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"6078:16:9","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6187,"name":"_riskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"6097:9:9","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"src":"6078:28:9","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"id":6189,"nodeType":"ExpressionStatement","src":"6078:28:9"},{"expression":{"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6190,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6116:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6124:20:9","memberName":"investmentArmPercent","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"6116:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6193,"name":"investmentarm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"6147:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6116:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6195,"nodeType":"ExpressionStatement","src":"6116:44:9"},{"expression":{"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6196,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6170:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6178:8:9","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":3853,"src":"6170:16:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6199,"name":"_leverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"6189:9:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6170:28:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6201,"nodeType":"ExpressionStatement","src":"6170:28:9"},{"expression":{"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6202,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6208:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6216:22:9","memberName":"percentageSplitBalance","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"6208:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6241:3:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6206,"name":"investmentarm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"6247:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6241:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6208:52:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6209,"nodeType":"ExpressionStatement","src":"6208:52:9"},{"expression":{"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6210,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6270:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6278:9:9","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"6270:17:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6213,"name":"adt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"6290:3:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"src":"6270:23:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"id":6215,"nodeType":"ExpressionStatement","src":"6270:23:9"},{"eventCall":{"arguments":[{"id":6217,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"6321:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6218,"name":"_poolName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"6329:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6216,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"6309:11:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6309:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6220,"nodeType":"EmitStatement","src":"6304:35:9"}]},"functionSelector":"6d8e6574","id":6222,"implemented":true,"kind":"function","modifiers":[{"id":6105,"kind":"modifierInvocation","modifierName":{"id":6104,"name":"onlyOwner","nameLocations":["5582:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5582:9:9"},"nodeType":"ModifierInvocation","src":"5582:9:9"}],"name":"createPool","nameLocation":"5296:10:9","nodeType":"FunctionDefinition","parameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"poolId","nameLocation":"5324:6:9","nodeType":"VariableDeclaration","scope":6222,"src":"5316:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6083,"name":"uint256","nodeType":"ElementaryTypeName","src":"5316:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6087,"mutability":"mutable","name":"_riskType","nameLocation":"5358:9:9","nodeType":"VariableDeclaration","scope":6222,"src":"5340:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":6086,"nodeType":"UserDefinedTypeName","pathNode":{"id":6085,"name":"CoverLib.RiskType","nameLocations":["5340:8:9","5349:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"5340:17:9"},"referencedDeclaration":3814,"src":"5340:17:9","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":6089,"mutability":"mutable","name":"_poolName","nameLocation":"5391:9:9","nodeType":"VariableDeclaration","scope":6222,"src":"5377:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6088,"name":"string","nodeType":"ElementaryTypeName","src":"5377:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6091,"mutability":"mutable","name":"_apy","nameLocation":"5418:4:9","nodeType":"VariableDeclaration","scope":6222,"src":"5410:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6090,"name":"uint256","nodeType":"ElementaryTypeName","src":"5410:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6093,"mutability":"mutable","name":"_minPeriod","nameLocation":"5440:10:9","nodeType":"VariableDeclaration","scope":6222,"src":"5432:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint256","nodeType":"ElementaryTypeName","src":"5432:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6095,"mutability":"mutable","name":"_leverage","nameLocation":"5466:9:9","nodeType":"VariableDeclaration","scope":6222,"src":"5460:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6094,"name":"uint8","nodeType":"ElementaryTypeName","src":"5460:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6097,"mutability":"mutable","name":"investmentarm","nameLocation":"5493:13:9","nodeType":"VariableDeclaration","scope":6222,"src":"5485:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6096,"name":"uint256","nodeType":"ElementaryTypeName","src":"5485:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6100,"mutability":"mutable","name":"adt","nameLocation":"5542:3:9","nodeType":"VariableDeclaration","scope":6222,"src":"5516:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":6099,"nodeType":"UserDefinedTypeName","pathNode":{"id":6098,"name":"CoverLib.AssetDepositType","nameLocations":["5516:8:9","5525:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"5516:25:9"},"referencedDeclaration":3823,"src":"5516:25:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":6102,"mutability":"mutable","name":"asset","nameLocation":"5563:5:9","nodeType":"VariableDeclaration","scope":6222,"src":"5555:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6101,"name":"address","nodeType":"ElementaryTypeName","src":"5555:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5306:268:9"},"returnParameters":{"id":6106,"nodeType":"ParameterList","parameters":[],"src":"5592:0:9"},"scope":7952,"src":"5287:1059:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6275,"nodeType":"Block","src":"6470:325:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6234,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"6488:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6236,"indexExpression":{"id":6235,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"6494:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6488:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":6237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6503:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"6488:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20646f6573206e6f74206578697374206f7220697320696e616374697665","id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6513:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2940762bf1bac80c596a56bbb2d85ac68911df141fe803aff3e93f289d5739f","typeString":"literal_string \"Pool does not exist or is inactive\""},"value":"Pool does not exist or is inactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b2940762bf1bac80c596a56bbb2d85ac68911df141fe803aff3e93f289d5739f","typeString":"literal_string \"Pool does not exist or is inactive\""}],"id":6233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6480:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6480:70:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6240,"nodeType":"ExpressionStatement","src":"6480:70:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6242,"name":"_apy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"6568:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6575:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6568:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420415059","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6578:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1","typeString":"literal_string \"Invalid APY\""},"value":"Invalid APY"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1","typeString":"literal_string \"Invalid APY\""}],"id":6241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6560:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6560:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6247,"nodeType":"ExpressionStatement","src":"6560:32:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6249,"name":"_minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"6610:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6623:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6610:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d696e696d756d20706572696f64","id":6252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6626:24:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5acc54009ab235ca6a617c23a4e0586f8c9f965177524470c1c60705c333e09","typeString":"literal_string \"Invalid minimum period\""},"value":"Invalid minimum period"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f5acc54009ab235ca6a617c23a4e0586f8c9f965177524470c1c60705c333e09","typeString":"literal_string \"Invalid minimum period\""}],"id":6248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6602:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6602:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6254,"nodeType":"ExpressionStatement","src":"6602:49:9"},{"expression":{"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6255,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"6662:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6257,"indexExpression":{"id":6256,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"6668:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6662:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":6258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6677:3:9","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"6662:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6259,"name":"_apy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"6683:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6662:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6261,"nodeType":"ExpressionStatement","src":"6662:25:9"},{"expression":{"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6262,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"6697:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6264,"indexExpression":{"id":6263,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"6703:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6697:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":6265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6712:9:9","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":3837,"src":"6697:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6266,"name":"_minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"6724:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6697:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6268,"nodeType":"ExpressionStatement","src":"6697:37:9"},{"eventCall":{"arguments":[{"id":6270,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"6762:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6271,"name":"_apy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"6771:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6272,"name":"_minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"6777:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6269,"name":"PoolUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"6750:11:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6274,"nodeType":"EmitStatement","src":"6745:43:9"}]},"functionSelector":"d86c0444","id":6276,"implemented":true,"kind":"function","modifiers":[{"id":6231,"kind":"modifierInvocation","modifierName":{"id":6230,"name":"onlyOwner","nameLocations":["6460:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6460:9:9"},"nodeType":"ModifierInvocation","src":"6460:9:9"}],"name":"updatePool","nameLocation":"6361:10:9","nodeType":"FunctionDefinition","parameters":{"id":6229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"_poolId","nameLocation":"6389:7:9","nodeType":"VariableDeclaration","scope":6276,"src":"6381:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6223,"name":"uint256","nodeType":"ElementaryTypeName","src":"6381:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6226,"mutability":"mutable","name":"_apy","nameLocation":"6414:4:9","nodeType":"VariableDeclaration","scope":6276,"src":"6406:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6225,"name":"uint256","nodeType":"ElementaryTypeName","src":"6406:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6228,"mutability":"mutable","name":"_minPeriod","nameLocation":"6436:10:9","nodeType":"VariableDeclaration","scope":6276,"src":"6428:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6227,"name":"uint256","nodeType":"ElementaryTypeName","src":"6428:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6371:81:9"},"returnParameters":{"id":6232,"nodeType":"ParameterList","parameters":[],"src":"6470:0:9"},"scope":7952,"src":"6352:443:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6292,"nodeType":"Block","src":"6919:79:9","statements":[{"expression":{"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6285,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"6929:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6287,"indexExpression":{"id":6286,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"6935:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6929:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":6288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6944:22:9","memberName":"percentageSplitBalance","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"6929:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6289,"name":"__poolPercentageSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"6970:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6929:62:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6291,"nodeType":"ExpressionStatement","src":"6929:62:9"}]},"functionSelector":"a4948d85","id":6293,"implemented":true,"kind":"function","modifiers":[{"id":6283,"kind":"modifierInvocation","modifierName":{"id":6282,"name":"onlyCover","nameLocations":["6909:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":7934,"src":"6909:9:9"},"nodeType":"ModifierInvocation","src":"6909:9:9"}],"name":"reducePercentageSplit","nameLocation":"6810:21:9","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"_poolId","nameLocation":"6849:7:9","nodeType":"VariableDeclaration","scope":6293,"src":"6841:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6277,"name":"uint256","nodeType":"ElementaryTypeName","src":"6841:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6280,"mutability":"mutable","name":"__poolPercentageSplit","nameLocation":"6874:21:9","nodeType":"VariableDeclaration","scope":6293,"src":"6866:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6279,"name":"uint256","nodeType":"ElementaryTypeName","src":"6866:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6831:70:9"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[],"src":"6919:0:9"},"scope":7952,"src":"6801:197:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6309,"nodeType":"Block","src":"7124:79:9","statements":[{"expression":{"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6302,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"7134:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6304,"indexExpression":{"id":6303,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"7140:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7134:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":6305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7149:22:9","memberName":"percentageSplitBalance","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"7134:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6306,"name":"__poolPercentageSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"7175:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7134:62:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6308,"nodeType":"ExpressionStatement","src":"7134:62:9"}]},"functionSelector":"9fd36b15","id":6310,"implemented":true,"kind":"function","modifiers":[{"id":6300,"kind":"modifierInvocation","modifierName":{"id":6299,"name":"onlyCover","nameLocations":["7114:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":7934,"src":"7114:9:9"},"nodeType":"ModifierInvocation","src":"7114:9:9"}],"name":"increasePercentageSplit","nameLocation":"7013:23:9","nodeType":"FunctionDefinition","parameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6295,"mutability":"mutable","name":"_poolId","nameLocation":"7054:7:9","nodeType":"VariableDeclaration","scope":6310,"src":"7046:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6294,"name":"uint256","nodeType":"ElementaryTypeName","src":"7046:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6297,"mutability":"mutable","name":"__poolPercentageSplit","nameLocation":"7079:21:9","nodeType":"VariableDeclaration","scope":6310,"src":"7071:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6296,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7036:70:9"},"returnParameters":{"id":6301,"nodeType":"ParameterList","parameters":[],"src":"7124:0:9"},"scope":7952,"src":"7004:199:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6332,"nodeType":"Block","src":"7267:112:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6318,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"7285:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6320,"indexExpression":{"id":6319,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"7291:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7285:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":6321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7300:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"7285:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c206973206e6f7420616374697665","id":6322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7310:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767","typeString":"literal_string \"Pool is not active\""},"value":"Pool is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767","typeString":"literal_string \"Pool is not active\""}],"id":6317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7277:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7277:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6324,"nodeType":"ExpressionStatement","src":"7277:54:9"},{"expression":{"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6325,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"7341:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6327,"indexExpression":{"id":6326,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"7347:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7341:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":6328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7356:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"7341:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7367:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7341:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6331,"nodeType":"ExpressionStatement","src":"7341:31:9"}]},"functionSelector":"9abd9b05","id":6333,"implemented":true,"kind":"function","modifiers":[{"id":6315,"kind":"modifierInvocation","modifierName":{"id":6314,"name":"onlyOwner","nameLocations":["7257:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7257:9:9"},"nodeType":"ModifierInvocation","src":"7257:9:9"}],"name":"deactivatePool","nameLocation":"7218:14:9","nodeType":"FunctionDefinition","parameters":{"id":6313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"_poolId","nameLocation":"7241:7:9","nodeType":"VariableDeclaration","scope":6333,"src":"7233:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6311,"name":"uint256","nodeType":"ElementaryTypeName","src":"7233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7232:17:9"},"returnParameters":{"id":6316,"nodeType":"ParameterList","parameters":[],"src":"7267:0:9"},"scope":7952,"src":"7209:170:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6345,"nodeType":"Block","src":"7476:38:9","statements":[{"expression":{"baseExpression":{"id":6341,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"7493:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6343,"indexExpression":{"id":6342,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"7499:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7493:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"functionReturnParameters":6340,"id":6344,"nodeType":"Return","src":"7486:21:9"}]},"functionSelector":"068bcd8d","id":6346,"implemented":true,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"7394:7:9","nodeType":"FunctionDefinition","parameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"_poolId","nameLocation":"7419:7:9","nodeType":"VariableDeclaration","scope":6346,"src":"7411:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7411:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7401:31:9"},"returnParameters":{"id":6340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6346,"src":"7454:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":6338,"nodeType":"UserDefinedTypeName","pathNode":{"id":6337,"name":"CoverLib.Pool","nameLocations":["7454:8:9","7463:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"7454:13:9"},"referencedDeclaration":3859,"src":"7454:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"src":"7453:22:9"},"scope":7952,"src":"7385:129:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6428,"nodeType":"Block","src":"7588:892:9","statements":[{"assignments":[6358],"declarations":[{"constant":false,"id":6358,"mutability":"mutable","name":"result","nameLocation":"7621:6:9","nodeType":"VariableDeclaration","scope":6428,"src":"7598:29:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool[]"},"typeName":{"baseType":{"id":6356,"nodeType":"UserDefinedTypeName","pathNode":{"id":6355,"name":"CoverLib.Pool","nameLocations":["7598:8:9","7607:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"7598:13:9"},"referencedDeclaration":3859,"src":"7598:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"id":6357,"nodeType":"ArrayTypeName","src":"7598:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"}},"visibility":"internal"}],"id":6365,"initialValue":{"arguments":[{"id":6363,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"7650:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7630:19:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct CoverLib.Pool memory[] memory)"},"typeName":{"baseType":{"id":6360,"nodeType":"UserDefinedTypeName","pathNode":{"id":6359,"name":"CoverLib.Pool","nameLocations":["7634:8:9","7643:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"7634:13:9"},"referencedDeclaration":3859,"src":"7634:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"id":6361,"nodeType":"ArrayTypeName","src":"7634:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"}}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7630:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7598:62:9"},{"body":{"id":6424,"nodeType":"Block","src":"7711:740:9","statements":[{"assignments":[6380],"declarations":[{"constant":false,"id":6380,"mutability":"mutable","name":"pool","nameLocation":"7747:4:9","nodeType":"VariableDeclaration","scope":6424,"src":"7725:26:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":6379,"nodeType":"UserDefinedTypeName","pathNode":{"id":6378,"name":"CoverLib.Pool","nameLocations":["7725:8:9","7734:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"7725:13:9"},"referencedDeclaration":3859,"src":"7725:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":6384,"initialValue":{"baseExpression":{"id":6381,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"7754:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6383,"indexExpression":{"id":6382,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"7760:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7754:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7725:37:9"},{"expression":{"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"7776:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"id":6389,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6386,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"7783:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7787:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7783:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7776:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"7828:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6393,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"7857:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7862:8:9","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":3830,"src":"7857:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":6395,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"7898:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7903:8:9","memberName":"riskType","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"7898:13:9","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},{"expression":{"id":6397,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"7934:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7939:3:9","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"7934:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6399,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"7971:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7976:9:9","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":3837,"src":"7971:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6401,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"8008:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8013:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"8008:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6403,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"8045:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8050:9:9","memberName":"baseValue","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"8045:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6405,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"8087:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8092:8:9","memberName":"coverTvl","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"8087:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6407,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"8123:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8128:3:9","memberName":"tcp","nodeType":"MemberAccess","referencedDeclaration":3845,"src":"8123:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6409,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"8159:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8164:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"8159:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6411,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"8214:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8219:22:9","memberName":"percentageSplitBalance","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"8214:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6413,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"8281:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8286:20:9","memberName":"investmentArmPercent","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"8281:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6415,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"8334:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8339:8:9","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":3853,"src":"8334:13:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":6417,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"8372:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8377:5:9","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3855,"src":"8372:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6419,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"8411:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8416:9:9","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"8411:14:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}],"expression":{"id":6390,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"7792:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7801:4:9","memberName":"Pool","nodeType":"MemberAccess","referencedDeclaration":3859,"src":"7792:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Pool_$3859_storage_ptr_$","typeString":"type(struct CoverLib.Pool storage pointer)"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7824:2:9","7847:8:9","7888:8:9","7929:3:9","7960:9:9","8003:3:9","8034:9:9","8077:8:9","8118:3:9","8149:8:9","8190:22:9","8259:20:9","8324:8:9","8365:5:9","8400:9:9"],"names":["id","poolName","riskType","apy","minPeriod","tvl","baseValue","coverTvl","tcp","isActive","percentageSplitBalance","investmentArmPercent","leverage","asset","assetType"],"nodeType":"FunctionCall","src":"7792:648:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"src":"7776:664:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":6423,"nodeType":"ExpressionStatement","src":"7776:664:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"7690:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6371,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"7695:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7690:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6425,"initializationExpression":{"assignments":[6367],"declarations":[{"constant":false,"id":6367,"mutability":"mutable","name":"i","nameLocation":"7683:1:9","nodeType":"VariableDeclaration","scope":6425,"src":"7675:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6366,"name":"uint256","nodeType":"ElementaryTypeName","src":"7675:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6369,"initialValue":{"hexValue":"31","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"7675:13:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7706:3:9","subExpression":{"id":6373,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"7706:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6375,"nodeType":"ExpressionStatement","src":"7706:3:9"},"nodeType":"ForStatement","src":"7670:781:9"},{"expression":{"id":6426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"8467:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"functionReturnParameters":6352,"id":6427,"nodeType":"Return","src":"8460:13:9"}]},"functionSelector":"d88ff1f4","id":6429,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"7529:11:9","nodeType":"FunctionDefinition","parameters":{"id":6347,"nodeType":"ParameterList","parameters":[],"src":"7540:2:9"},"returnParameters":{"id":6352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6429,"src":"7564:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool[]"},"typeName":{"baseType":{"id":6349,"nodeType":"UserDefinedTypeName","pathNode":{"id":6348,"name":"CoverLib.Pool","nameLocations":["7564:8:9","7573:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"7564:13:9"},"referencedDeclaration":3859,"src":"7564:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"id":6350,"nodeType":"ArrayTypeName","src":"7564:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"}},"visibility":"internal"}],"src":"7563:24:9"},"scope":7952,"src":"7520:960:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6474,"nodeType":"Block","src":"8598:231:9","statements":[{"body":{"id":6472,"nodeType":"Block","src":"8664:159:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":6452,"name":"poolToCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"8682:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref[] storage ref)"}},"id":6454,"indexExpression":{"id":6453,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"8695:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8682:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage","typeString":"struct CoverLib.Cover storage ref[] storage ref"}},"id":6456,"indexExpression":{"id":6455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"8704:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8682:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":6457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8707:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"8682:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6458,"name":"_cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"8713:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":6459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8720:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"8713:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8682:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6471,"nodeType":"IfStatement","src":"8678:135:9","trueBody":{"id":6470,"nodeType":"Block","src":"8724:89:9","statements":[{"expression":{"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6461,"name":"poolToCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"8742:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref[] storage ref)"}},"id":6464,"indexExpression":{"id":6462,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"8755:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8742:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage","typeString":"struct CoverLib.Cover storage ref[] storage ref"}},"id":6465,"indexExpression":{"id":6463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"8764:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8742:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6466,"name":"_cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"8769:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"src":"8742:33:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage","typeString":"struct CoverLib.Cover storage ref"}},"id":6468,"nodeType":"ExpressionStatement","src":"8742:33:9"},{"id":6469,"nodeType":"Break","src":"8793:5:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"8625:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":6444,"name":"poolToCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"8629:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref[] storage ref)"}},"id":6446,"indexExpression":{"id":6445,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"8642:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8629:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage","typeString":"struct CoverLib.Cover storage ref[] storage ref"}},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8651:6:9","memberName":"length","nodeType":"MemberAccess","src":"8629:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8625:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6473,"initializationExpression":{"assignments":[6440],"declarations":[{"constant":false,"id":6440,"mutability":"mutable","name":"i","nameLocation":"8618:1:9","nodeType":"VariableDeclaration","scope":6473,"src":"8613:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6439,"name":"uint","nodeType":"ElementaryTypeName","src":"8613:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6442,"initialValue":{"hexValue":"30","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8613:10:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8659:3:9","subExpression":{"id":6449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"8659:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6451,"nodeType":"ExpressionStatement","src":"8659:3:9"},"nodeType":"ForStatement","src":"8608:215:9"}]},"functionSelector":"a14764d0","id":6475,"implemented":true,"kind":"function","modifiers":[{"id":6437,"kind":"modifierInvocation","modifierName":{"id":6436,"name":"onlyCover","nameLocations":["8588:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":7934,"src":"8588:9:9"},"nodeType":"ModifierInvocation","src":"8588:9:9"}],"name":"updatePoolCovers","nameLocation":"8495:16:9","nodeType":"FunctionDefinition","parameters":{"id":6435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6431,"mutability":"mutable","name":"_poolId","nameLocation":"8529:7:9","nodeType":"VariableDeclaration","scope":6475,"src":"8521:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6430,"name":"uint256","nodeType":"ElementaryTypeName","src":"8521:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6434,"mutability":"mutable","name":"_cover","nameLocation":"8568:6:9","nodeType":"VariableDeclaration","scope":6475,"src":"8546:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":6433,"nodeType":"UserDefinedTypeName","pathNode":{"id":6432,"name":"CoverLib.Cover","nameLocations":["8546:8:9","8555:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"8546:14:9"},"referencedDeclaration":3790,"src":"8546:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"src":"8511:69:9"},"returnParameters":{"id":6438,"nodeType":"ParameterList","parameters":[],"src":"8598:0:9"},"scope":7952,"src":"8486:343:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6492,"nodeType":"Block","src":"8943:51:9","statements":[{"expression":{"arguments":[{"id":6489,"name":"_cover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"8980:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}],"expression":{"baseExpression":{"id":6485,"name":"poolToCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"8953:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref[] storage ref)"}},"id":6487,"indexExpression":{"id":6486,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"8966:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8953:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage","typeString":"struct CoverLib.Cover storage ref[] storage ref"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:9","memberName":"push","nodeType":"MemberAccess","src":"8953:26:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr_$_t_struct$_Cover_$3790_storage_$returns$__$attached_to$_t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr_$","typeString":"function (struct CoverLib.Cover storage ref[] storage pointer,struct CoverLib.Cover storage ref)"}},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8953:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6491,"nodeType":"ExpressionStatement","src":"8953:34:9"}]},"functionSelector":"c7aa9874","id":6493,"implemented":true,"kind":"function","modifiers":[{"id":6483,"kind":"modifierInvocation","modifierName":{"id":6482,"name":"onlyCover","nameLocations":["8933:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":7934,"src":"8933:9:9"},"nodeType":"ModifierInvocation","src":"8933:9:9"}],"name":"addPoolCover","nameLocation":"8844:12:9","nodeType":"FunctionDefinition","parameters":{"id":6481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6477,"mutability":"mutable","name":"_poolId","nameLocation":"8874:7:9","nodeType":"VariableDeclaration","scope":6493,"src":"8866:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6476,"name":"uint256","nodeType":"ElementaryTypeName","src":"8866:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6480,"mutability":"mutable","name":"_cover","nameLocation":"8913:6:9","nodeType":"VariableDeclaration","scope":6493,"src":"8891:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover"},"typeName":{"id":6479,"nodeType":"UserDefinedTypeName","pathNode":{"id":6478,"name":"CoverLib.Cover","nameLocations":["8891:8:9","8900:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"8891:14:9"},"referencedDeclaration":3790,"src":"8891:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"visibility":"internal"}],"src":"8856:69:9"},"returnParameters":{"id":6484,"nodeType":"ParameterList","parameters":[],"src":"8943:0:9"},"scope":7952,"src":"8835:159:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6506,"nodeType":"Block","src":"9100:45:9","statements":[{"expression":{"baseExpression":{"id":6502,"name":"poolToCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"9117:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct CoverLib.Cover storage ref[] storage ref)"}},"id":6504,"indexExpression":{"id":6503,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"9130:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9117:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage","typeString":"struct CoverLib.Cover storage ref[] storage ref"}},"functionReturnParameters":6501,"id":6505,"nodeType":"Return","src":"9110:28:9"}]},"functionSelector":"7eb111f0","id":6507,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolCovers","nameLocation":"9009:13:9","nodeType":"FunctionDefinition","parameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6495,"mutability":"mutable","name":"_poolId","nameLocation":"9040:7:9","nodeType":"VariableDeclaration","scope":6507,"src":"9032:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9032:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9022:31:9"},"returnParameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6507,"src":"9075:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":6498,"nodeType":"UserDefinedTypeName","pathNode":{"id":6497,"name":"CoverLib.Cover","nameLocations":["9075:8:9","9084:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"9075:14:9"},"referencedDeclaration":3790,"src":"9075:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":6499,"nodeType":"ArrayTypeName","src":"9075:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"src":"9074:25:9"},"scope":7952,"src":"9000:145:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6672,"nodeType":"Block","src":"9254:1685:9","statements":[{"assignments":[6517],"declarations":[{"constant":false,"id":6517,"mutability":"mutable","name":"resultCount","nameLocation":"9272:11:9","nodeType":"VariableDeclaration","scope":6672,"src":"9264:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6516,"name":"uint256","nodeType":"ElementaryTypeName","src":"9264:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6519,"initialValue":{"hexValue":"30","id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9264:23:9"},{"body":{"id":6547,"nodeType":"Block","src":"9338:187:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6530,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"9373:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":6532,"indexExpression":{"id":6531,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"9382:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9373:22:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":6534,"indexExpression":{"id":6533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"9396:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9373:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":6538,"indexExpression":{"expression":{"expression":{"id":6535,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"9399:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9408:11:9","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"9399:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9420:6:9","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"9399:27:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9373:54:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"id":6539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9428:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"9373:61:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9453:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9373:81:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6546,"nodeType":"IfStatement","src":"9352:163:9","trueBody":{"id":6545,"nodeType":"Block","src":"9469:46:9","statements":[{"expression":{"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9487:13:9","subExpression":{"id":6542,"name":"resultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"9487:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6544,"nodeType":"ExpressionStatement","src":"9487:13:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6524,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"9317:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6525,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"9322:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9317:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6548,"initializationExpression":{"assignments":[6521],"declarations":[{"constant":false,"id":6521,"mutability":"mutable","name":"i","nameLocation":"9310:1:9","nodeType":"VariableDeclaration","scope":6548,"src":"9302:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6520,"name":"uint256","nodeType":"ElementaryTypeName","src":"9302:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6523,"initialValue":{"hexValue":"31","id":6522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"9302:13:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9333:3:9","subExpression":{"id":6527,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"9333:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6529,"nodeType":"ExpressionStatement","src":"9333:3:9"},"nodeType":"ForStatement","src":"9297:228:9"},{"assignments":[6553],"declarations":[{"constant":false,"id":6553,"mutability":"mutable","name":"result","nameLocation":"9553:6:9","nodeType":"VariableDeclaration","scope":6672,"src":"9535:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$5953_memory_ptr_$dyn_memory_ptr","typeString":"struct InsurancePool.PoolInfo[]"},"typeName":{"baseType":{"id":6551,"nodeType":"UserDefinedTypeName","pathNode":{"id":6550,"name":"PoolInfo","nameLocations":["9535:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5953,"src":"9535:8:9"},"referencedDeclaration":5953,"src":"9535:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$5953_storage_ptr","typeString":"struct InsurancePool.PoolInfo"}},"id":6552,"nodeType":"ArrayTypeName","src":"9535:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$5953_storage_$dyn_storage_ptr","typeString":"struct InsurancePool.PoolInfo[]"}},"visibility":"internal"}],"id":6560,"initialValue":{"arguments":[{"id":6558,"name":"resultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"9577:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9562:14:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PoolInfo_$5953_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct InsurancePool.PoolInfo memory[] memory)"},"typeName":{"baseType":{"id":6555,"nodeType":"UserDefinedTypeName","pathNode":{"id":6554,"name":"PoolInfo","nameLocations":["9566:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5953,"src":"9566:8:9"},"referencedDeclaration":5953,"src":"9566:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$5953_storage_ptr","typeString":"struct InsurancePool.PoolInfo"}},"id":6556,"nodeType":"ArrayTypeName","src":"9566:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$5953_storage_$dyn_storage_ptr","typeString":"struct InsurancePool.PoolInfo[]"}}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9562:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$5953_memory_ptr_$dyn_memory_ptr","typeString":"struct InsurancePool.PoolInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9535:54:9"},{"assignments":[6562],"declarations":[{"constant":false,"id":6562,"mutability":"mutable","name":"resultIndex","nameLocation":"9608:11:9","nodeType":"VariableDeclaration","scope":6672,"src":"9600:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6561,"name":"uint256","nodeType":"ElementaryTypeName","src":"9600:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6564,"initialValue":{"hexValue":"30","id":6563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9622:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9600:23:9"},{"body":{"id":6668,"nodeType":"Block","src":"9675:1235:9","statements":[{"assignments":[6579],"declarations":[{"constant":false,"id":6579,"mutability":"mutable","name":"pool","nameLocation":"9711:4:9","nodeType":"VariableDeclaration","scope":6668,"src":"9689:26:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":6578,"nodeType":"UserDefinedTypeName","pathNode":{"id":6577,"name":"CoverLib.Pool","nameLocations":["9689:8:9","9698:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"9689:13:9"},"referencedDeclaration":3859,"src":"9689:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":6583,"initialValue":{"baseExpression":{"id":6580,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"9718:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6582,"indexExpression":{"id":6581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"9724:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9718:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9689:37:9"},{"assignments":[6586],"declarations":[{"constant":false,"id":6586,"mutability":"mutable","name":"userDeposit","nameLocation":"9756:11:9","nodeType":"VariableDeclaration","scope":6668,"src":"9740:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits"},"typeName":{"id":6585,"nodeType":"UserDefinedTypeName","pathNode":{"id":6584,"name":"Deposits","nameLocations":["9740:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5932,"src":"9740:8:9"},"referencedDeclaration":5932,"src":"9740:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits"}},"visibility":"internal"}],"id":6596,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6587,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"9770:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":6589,"indexExpression":{"id":6588,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"9779:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9770:22:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":6591,"indexExpression":{"id":6590,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"9793:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9770:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":6595,"indexExpression":{"expression":{"expression":{"id":6592,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"9813:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9822:11:9","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"9813:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9834:6:9","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"9813:27:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9770:84:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9740:114:9"},{"assignments":[6598],"declarations":[{"constant":false,"id":6598,"mutability":"mutable","name":"claimableDays","nameLocation":"9876:13:9","nodeType":"VariableDeclaration","scope":6668,"src":"9868:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6597,"name":"uint256","nodeType":"ElementaryTypeName","src":"9868:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6604,"initialValue":{"arguments":[{"id":6601,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"9948:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6602,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"9978:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6599,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"9892:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9907:23:9","memberName":"getDepositClaimableDays","nodeType":"MemberAccess","referencedDeclaration":5691,"src":"9892:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9892:101:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9868:125:9"},{"assignments":[6606],"declarations":[{"constant":false,"id":6606,"mutability":"mutable","name":"accruedPayout","nameLocation":"10015:13:9","nodeType":"VariableDeclaration","scope":6668,"src":"10007:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6605,"name":"uint256","nodeType":"ElementaryTypeName","src":"10007:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6611,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6607,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"10031:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"id":6608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10043:11:9","memberName":"dailyPayout","nodeType":"MemberAccess","referencedDeclaration":5917,"src":"10031:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6609,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"10057:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10031:39:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10007:63:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6612,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"10105:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":6614,"indexExpression":{"id":6613,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"10114:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10105:22:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":6616,"indexExpression":{"id":6615,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"10128:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10105:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":6620,"indexExpression":{"expression":{"expression":{"id":6617,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"10131:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10140:11:9","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"10131:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10152:6:9","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"10131:27:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10105:54:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"id":6621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10160:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"10105:61:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10185:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10105:81:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6667,"nodeType":"IfStatement","src":"10084:816:9","trueBody":{"id":6666,"nodeType":"Block","src":"10201:699:9","statements":[{"expression":{"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"10219:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$5953_memory_ptr_$dyn_memory_ptr","typeString":"struct InsurancePool.PoolInfo memory[] memory"}},"id":6627,"indexExpression":{"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10226:13:9","subExpression":{"id":6625,"name":"resultIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"10226:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10219:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$5953_memory_ptr","typeString":"struct InsurancePool.PoolInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6629,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10284:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10289:8:9","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":3830,"src":"10284:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":6631,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"10327:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6632,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"10363:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":6634,"indexExpression":{"id":6633,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"10372:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10363:22:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":6636,"indexExpression":{"id":6635,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"10386:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10363:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":6640,"indexExpression":{"expression":{"expression":{"id":6637,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"10414:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10423:11:9","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"10414:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10435:6:9","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"10414:27:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10363:100:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"id":6641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10464:11:9","memberName":"dailyPayout","nodeType":"MemberAccess","referencedDeclaration":5917,"src":"10363:112:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6642,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"10512:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":6644,"indexExpression":{"id":6643,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"10521:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10512:22:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":6646,"indexExpression":{"id":6645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"10535:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10512:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":6650,"indexExpression":{"expression":{"expression":{"id":6647,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"10563:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10572:11:9","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"10563:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":6649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10584:6:9","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"10563:27:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10512:100:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"id":6651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10613:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"10512:107:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6652,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10646:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10651:3:9","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"10646:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6654,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10687:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10692:9:9","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":3837,"src":"10687:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6656,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10728:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10733:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"10728:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6658,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10763:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10768:3:9","memberName":"tcp","nodeType":"MemberAccess","referencedDeclaration":3845,"src":"10763:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6660,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10803:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10808:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"10803:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6662,"name":"accruedPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"10853:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6628,"name":"PoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"10243:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolInfo_$5953_storage_ptr_$","typeString":"type(struct InsurancePool.PoolInfo storage pointer)"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10274:8:9","10319:6:9","10350:11:9","10497:13:9","10641:3:9","10676:9:9","10723:3:9","10758:3:9","10793:8:9","10838:13:9"],"names":["poolName","poolId","dailyPayout","depositAmount","apy","minPeriod","tvl","tcp","isActive","accruedPayout"],"nodeType":"FunctionCall","src":"10243:642:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$5953_memory_ptr","typeString":"struct InsurancePool.PoolInfo memory"}},"src":"10219:666:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$5953_memory_ptr","typeString":"struct InsurancePool.PoolInfo memory"}},"id":6665,"nodeType":"ExpressionStatement","src":"10219:666:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6569,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"9654:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6570,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"9659:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9654:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6669,"initializationExpression":{"assignments":[6566],"declarations":[{"constant":false,"id":6566,"mutability":"mutable","name":"i","nameLocation":"9647:1:9","nodeType":"VariableDeclaration","scope":6669,"src":"9639:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6565,"name":"uint256","nodeType":"ElementaryTypeName","src":"9639:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6568,"initialValue":{"hexValue":"31","id":6567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9651:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"9639:13:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9670:3:9","subExpression":{"id":6572,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"9670:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6574,"nodeType":"ExpressionStatement","src":"9670:3:9"},"nodeType":"ForStatement","src":"9634:1276:9"},{"expression":{"id":6670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"10926:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$5953_memory_ptr_$dyn_memory_ptr","typeString":"struct InsurancePool.PoolInfo memory[] memory"}},"functionReturnParameters":6515,"id":6671,"nodeType":"Return","src":"10919:13:9"}]},"functionSelector":"31866763","id":6673,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsByAddress","nameLocation":"9160:17:9","nodeType":"FunctionDefinition","parameters":{"id":6510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6509,"mutability":"mutable","name":"_userAddress","nameLocation":"9195:12:9","nodeType":"VariableDeclaration","scope":6673,"src":"9187:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6508,"name":"address","nodeType":"ElementaryTypeName","src":"9187:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9177:36:9"},"returnParameters":{"id":6515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6673,"src":"9235:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$5953_memory_ptr_$dyn_memory_ptr","typeString":"struct InsurancePool.PoolInfo[]"},"typeName":{"baseType":{"id":6512,"nodeType":"UserDefinedTypeName","pathNode":{"id":6511,"name":"PoolInfo","nameLocations":["9235:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5953,"src":"9235:8:9"},"referencedDeclaration":5953,"src":"9235:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$5953_storage_ptr","typeString":"struct InsurancePool.PoolInfo"}},"id":6513,"nodeType":"ArrayTypeName","src":"9235:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$5953_storage_$dyn_storage_ptr","typeString":"struct InsurancePool.PoolInfo[]"}},"visibility":"internal"}],"src":"9234:19:9"},"scope":7952,"src":"9151:1788:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6863,"nodeType":"Block","src":"11004:1607:9","statements":[{"assignments":[6684],"declarations":[{"constant":false,"id":6684,"mutability":"mutable","name":"selectedPool","nameLocation":"11036:12:9","nodeType":"VariableDeclaration","scope":6863,"src":"11014:34:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":6683,"nodeType":"UserDefinedTypeName","pathNode":{"id":6682,"name":"CoverLib.Pool","nameLocations":["11014:8:9","11023:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"11014:13:9"},"referencedDeclaration":3859,"src":"11014:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":6688,"initialValue":{"baseExpression":{"id":6685,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"11051:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6687,"indexExpression":{"id":6686,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"11057:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11051:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11014:51:9"},{"assignments":[6691],"declarations":[{"constant":false,"id":6691,"mutability":"mutable","name":"userDeposit","nameLocation":"11092:11:9","nodeType":"VariableDeclaration","scope":6863,"src":"11075:28:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits"},"typeName":{"id":6690,"nodeType":"UserDefinedTypeName","pathNode":{"id":6689,"name":"Deposits","nameLocations":["11075:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5932,"src":"11075:8:9"},"referencedDeclaration":5932,"src":"11075:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits"}},"visibility":"internal"}],"id":6702,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6692,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"11106:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":6695,"indexExpression":{"expression":{"id":6693,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11115:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11119:6:9","memberName":"sender","nodeType":"MemberAccess","src":"11115:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11106:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":6697,"indexExpression":{"id":6696,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"11127:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11106:29:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":6701,"indexExpression":{"expression":{"expression":{"id":6698,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"11149:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11158:11:9","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"11149:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11170:6:9","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"11149:27:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11106:80:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11075:111:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6704,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"11205:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11217:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"11205:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11226:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11205:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206465706f73697420666f756e6420666f7220746869732061646472657373","id":6708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11229:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_58da2d5c87749dee667e828643fdf1b2656a13f77a7007ea1881f4f567aa7703","typeString":"literal_string \"No deposit found for this address\""},"value":"No deposit found for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58da2d5c87749dee667e828643fdf1b2656a13f77a7007ea1881f4f567aa7703","typeString":"literal_string \"No deposit found for this address\""}],"id":6703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11197:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11197:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6710,"nodeType":"ExpressionStatement","src":"11197:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6712,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"11296:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11308:6:9","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5920,"src":"11296:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":6714,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"11318:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11327:6:9","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"11318:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$3863_$","typeString":"type(enum CoverLib.Status)"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11334:6:9","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":3860,"src":"11318:22:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"src":"11296:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974206973206e6f7420616374697665","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11354:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_48296a4ed98d5eb43248b4110e3a654fc331dd606ad671651b762665c62bbd71","typeString":"literal_string \"Deposit is not active\""},"value":"Deposit is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48296a4ed98d5eb43248b4110e3a654fc331dd606ad671651b762665c62bbd71","typeString":"literal_string \"Deposit is not active\""}],"id":6711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11275:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11275:112:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6720,"nodeType":"ExpressionStatement","src":"11275:112:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6722,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11418:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11424:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"11418:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":6724,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"11437:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11449:10:9","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":5926,"src":"11437:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11418:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420706572696f6420686173206e6f7420656e646564","id":6727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11473:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_407b518a5440c6945dd5b5dcce4b15951da5cd4e0775edb7adb21c0f2b995362","typeString":"literal_string \"Deposit period has not ended\""},"value":"Deposit period has not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_407b518a5440c6945dd5b5dcce4b15951da5cd4e0775edb7adb21c0f2b995362","typeString":"literal_string \"Deposit period has not ended\""}],"id":6721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11397:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11397:116:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6729,"nodeType":"ExpressionStatement","src":"11397:116:9"},{"expression":{"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6730,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"11524:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11536:6:9","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5920,"src":"11524:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":6733,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"11545:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11554:6:9","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"11545:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$3863_$","typeString":"type(enum CoverLib.Status)"}},"id":6735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11561:9:9","memberName":"Withdrawn","nodeType":"MemberAccess","referencedDeclaration":3862,"src":"11545:25:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"src":"11524:46:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"id":6737,"nodeType":"ExpressionStatement","src":"11524:46:9"},{"expression":{"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6738,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"11580:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11593:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"11580:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":6741,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"11600:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11612:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"11600:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11580:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6744,"nodeType":"ExpressionStatement","src":"11580:38:9"},{"assignments":[6746],"declarations":[{"constant":false,"id":6746,"mutability":"mutable","name":"baseValue","nameLocation":"11636:9:9","nodeType":"VariableDeclaration","scope":6863,"src":"11628:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6745,"name":"uint256","nodeType":"ElementaryTypeName","src":"11628:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6759,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6747,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"11648:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11661:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"11648:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6749,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"11681:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11694:20:9","memberName":"investmentArmPercent","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"11681:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6751,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"11717:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11730:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"11717:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11681:52:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11680:54:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11737:3:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"11680:60:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11679:62:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11648:93:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11628:113:9"},{"assignments":[6761],"declarations":[{"constant":false,"id":6761,"mutability":"mutable","name":"coverTvl","nameLocation":"11760:8:9","nodeType":"VariableDeclaration","scope":6863,"src":"11752:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6760,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6766,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6762,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"11771:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6763,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"11783:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11796:8:9","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":3853,"src":"11783:21:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11771:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11752:52:9"},{"expression":{"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6767,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"11814:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11827:8:9","memberName":"coverTvl","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"11814:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6770,"name":"coverTvl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"11838:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11814:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6772,"nodeType":"ExpressionStatement","src":"11814:32:9"},{"expression":{"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6773,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"11856:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11869:9:9","memberName":"baseValue","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"11856:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6776,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"11881:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11856:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6778,"nodeType":"ExpressionStatement","src":"11856:34:9"},{"assignments":[6784],"declarations":[{"constant":false,"id":6784,"mutability":"mutable","name":"poolCovers","nameLocation":"11924:10:9","nodeType":"VariableDeclaration","scope":6863,"src":"11900:34:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":6782,"nodeType":"UserDefinedTypeName","pathNode":{"id":6781,"name":"CoverLib.Cover","nameLocations":["11900:8:9","11909:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"11900:14:9"},"referencedDeclaration":3790,"src":"11900:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":6783,"nodeType":"ArrayTypeName","src":"11900:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":6788,"initialValue":{"arguments":[{"id":6786,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"11951:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6785,"name":"getPoolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"11937:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (struct CoverLib.Cover memory[] memory)"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11937:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11900:59:9"},{"body":{"id":6809,"nodeType":"Block","src":"12014:73:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6803,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"12059:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":6805,"indexExpression":{"id":6804,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"12070:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12059:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":6806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12073:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"12059:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6800,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"12028:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12043:15:9","memberName":"updateMaxAmount","nodeType":"MemberAccess","referencedDeclaration":5682,"src":"12028:30:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12028:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6808,"nodeType":"ExpressionStatement","src":"12028:48:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6793,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"11986:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6794,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"11990:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12001:6:9","memberName":"length","nodeType":"MemberAccess","src":"11990:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11986:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6810,"initializationExpression":{"assignments":[6790],"declarations":[{"constant":false,"id":6790,"mutability":"mutable","name":"i","nameLocation":"11979:1:9","nodeType":"VariableDeclaration","scope":6810,"src":"11974:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6789,"name":"uint","nodeType":"ElementaryTypeName","src":"11974:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6792,"initialValue":{"hexValue":"30","id":6791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11983:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11974:10:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12009:3:9","subExpression":{"id":6797,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"12009:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6799,"nodeType":"ExpressionStatement","src":"12009:3:9"},"nodeType":"ForStatement","src":"11969:118:9"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6811,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"12101:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12114:9:9","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"12101:22:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":6813,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"12127:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12136:16:9","memberName":"AssetDepositType","nodeType":"MemberAccess","referencedDeclaration":3823,"src":"12127:25:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetDepositType_$3823_$","typeString":"type(enum CoverLib.AssetDepositType)"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12153:5:9","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":3822,"src":"12127:31:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"src":"12101:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6852,"nodeType":"Block","src":"12374:152:9","statements":[{"assignments":[6837,null],"declarations":[{"constant":false,"id":6837,"mutability":"mutable","name":"success","nameLocation":"12394:7:9","nodeType":"VariableDeclaration","scope":6852,"src":"12389:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6836,"name":"bool","nodeType":"ElementaryTypeName","src":"12389:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":6846,"initialValue":{"arguments":[{"hexValue":"","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12450:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":6838,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12407:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12411:6:9","memberName":"sender","nodeType":"MemberAccess","src":"12407:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12418:4:9","memberName":"call","nodeType":"MemberAccess","src":"12407:15:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":6841,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"12430:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12442:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"12430:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12407:42:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12407:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12388:65:9"},{"expression":{"arguments":[{"id":6848,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"12475:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6174697665206173736574207472616e73666572206661696c6564","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12484:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fffe776d94f2ccd51a28b9d8a3f3d28cf446dbfa854545f140d0c269f5cfbd82","typeString":"literal_string \"Native asset transfer failed\""},"value":"Native asset transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fffe776d94f2ccd51a28b9d8a3f3d28cf446dbfa854545f140d0c269f5cfbd82","typeString":"literal_string \"Native asset transfer failed\""}],"id":6847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12467:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12467:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6851,"nodeType":"ExpressionStatement","src":"12467:48:9"}]},"id":6853,"nodeType":"IfStatement","src":"12097:429:9","trueBody":{"id":6835,"nodeType":"Block","src":"12160:208:9","statements":[{"assignments":[6818],"declarations":[{"constant":false,"id":6818,"mutability":"mutable","name":"success","nameLocation":"12179:7:9","nodeType":"VariableDeclaration","scope":6835,"src":"12174:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6817,"name":"bool","nodeType":"ElementaryTypeName","src":"12174:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6829,"initialValue":{"arguments":[{"expression":{"id":6824,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12242:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12246:6:9","memberName":"sender","nodeType":"MemberAccess","src":"12242:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6826,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"12270:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12282:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"12270:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":6820,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"12196:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12209:5:9","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3855,"src":"12196:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6819,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"12189:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12189:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12216:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":192,"src":"12189:35:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12189:113:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12174:128:9"},{"expression":{"arguments":[{"id":6831,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"12324:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230207472616e73666572206661696c6564","id":6832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12333:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff","typeString":"literal_string \"ERC20 transfer failed\""},"value":"ERC20 transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff","typeString":"literal_string \"ERC20 transfer failed\""}],"id":6830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12316:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12316:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6834,"nodeType":"ExpressionStatement","src":"12316:41:9"}]}},{"eventCall":{"arguments":[{"expression":{"id":6855,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12550:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12554:6:9","memberName":"sender","nodeType":"MemberAccess","src":"12550:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6857,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"12562:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12574:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"12562:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6859,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"12582:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12595:8:9","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":3830,"src":"12582:21:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6854,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"12541:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12541:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6862,"nodeType":"EmitStatement","src":"12536:68:9"}]},"functionSelector":"3dc66ad3","id":6864,"implemented":true,"kind":"function","modifiers":[{"id":6678,"kind":"modifierInvocation","modifierName":{"id":6677,"name":"nonReentrant","nameLocations":["10991:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"10991:12:9"},"nodeType":"ModifierInvocation","src":"10991:12:9"}],"name":"poolWithdraw","nameLocation":"10954:12:9","nodeType":"FunctionDefinition","parameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"_poolId","nameLocation":"10975:7:9","nodeType":"VariableDeclaration","scope":6864,"src":"10967:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6674,"name":"uint256","nodeType":"ElementaryTypeName","src":"10967:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10966:17:9"},"returnParameters":{"id":6679,"nodeType":"ParameterList","parameters":[],"src":"11004:0:9"},"scope":7952,"src":"10945:1666:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7014,"nodeType":"Block","src":"12763:1114:9","statements":[{"assignments":[6882],"declarations":[{"constant":false,"id":6882,"mutability":"mutable","name":"selectedPool","nameLocation":"12795:12:9","nodeType":"VariableDeclaration","scope":7014,"src":"12773:34:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":6881,"nodeType":"UserDefinedTypeName","pathNode":{"id":6880,"name":"CoverLib.Pool","nameLocations":["12773:8:9","12782:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"12773:13:9"},"referencedDeclaration":3859,"src":"12773:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":6886,"initialValue":{"baseExpression":{"id":6883,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"12810:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":6885,"indexExpression":{"id":6884,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"12816:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12810:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12773:51:9"},{"assignments":[6889],"declarations":[{"constant":false,"id":6889,"mutability":"mutable","name":"userDeposit","nameLocation":"12851:11:9","nodeType":"VariableDeclaration","scope":7014,"src":"12834:28:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits"},"typeName":{"id":6888,"nodeType":"UserDefinedTypeName","pathNode":{"id":6887,"name":"Deposits","nameLocations":["12834:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5932,"src":"12834:8:9"},"referencedDeclaration":5932,"src":"12834:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits"}},"visibility":"internal"}],"id":6897,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6890,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"12865:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":6892,"indexExpression":{"id":6891,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"12874:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12865:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":6894,"indexExpression":{"id":6893,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"12885:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12865:28:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":6896,"indexExpression":{"id":6895,"name":"pdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"12894:3:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12865:33:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12834:64:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6899,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"12917:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12929:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"12917:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12938:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12917:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206465706f73697420666f756e6420666f7220746869732061646472657373","id":6903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12941:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_58da2d5c87749dee667e828643fdf1b2656a13f77a7007ea1881f4f567aa7703","typeString":"literal_string \"No deposit found for this address\""},"value":"No deposit found for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58da2d5c87749dee667e828643fdf1b2656a13f77a7007ea1881f4f567aa7703","typeString":"literal_string \"No deposit found for this address\""}],"id":6898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12909:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12909:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6905,"nodeType":"ExpressionStatement","src":"12909:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6907,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"13008:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13020:6:9","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5920,"src":"13008:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":6909,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"13030:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13039:6:9","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"13030:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$3863_$","typeString":"type(enum CoverLib.Status)"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13046:6:9","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":3860,"src":"13030:22:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"src":"13008:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974206973206e6f7420616374697665","id":6913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13066:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_48296a4ed98d5eb43248b4110e3a654fc331dd606ad671651b762665c62bbd71","typeString":"literal_string \"Deposit is not active\""},"value":"Deposit is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48296a4ed98d5eb43248b4110e3a654fc331dd606ad671651b762665c62bbd71","typeString":"literal_string \"Deposit is not active\""}],"id":6906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12987:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12987:112:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6915,"nodeType":"ExpressionStatement","src":"12987:112:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6917,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13130:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13136:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"13130:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":6919,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"13149:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13161:10:9","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":5926,"src":"13149:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13130:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420706572696f6420686173206e6f7420656e646564","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13185:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_407b518a5440c6945dd5b5dcce4b15951da5cd4e0775edb7adb21c0f2b995362","typeString":"literal_string \"Deposit period has not ended\""},"value":"Deposit period has not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_407b518a5440c6945dd5b5dcce4b15951da5cd4e0775edb7adb21c0f2b995362","typeString":"literal_string \"Deposit period has not ended\""}],"id":6916,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13109:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13109:116:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6924,"nodeType":"ExpressionStatement","src":"13109:116:9"},{"expression":{"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6925,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"13236:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13248:6:9","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5920,"src":"13236:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":6928,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"13257:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13266:6:9","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"13257:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$3863_$","typeString":"type(enum CoverLib.Status)"}},"id":6930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13273:3:9","memberName":"Due","nodeType":"MemberAccess","referencedDeclaration":3861,"src":"13257:19:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"src":"13236:40:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"id":6932,"nodeType":"ExpressionStatement","src":"13236:40:9"},{"expression":{"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6933,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"13286:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13299:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"13286:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":6936,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"13306:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":6937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13318:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"13306:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13286:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6939,"nodeType":"ExpressionStatement","src":"13286:38:9"},{"assignments":[6941],"declarations":[{"constant":false,"id":6941,"mutability":"mutable","name":"baseValue","nameLocation":"13342:9:9","nodeType":"VariableDeclaration","scope":7014,"src":"13334:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6940,"name":"uint256","nodeType":"ElementaryTypeName","src":"13334:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6954,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6942,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"13354:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13367:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"13354:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6944,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"13387:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13400:20:9","memberName":"investmentArmPercent","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"13387:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6946,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"13423:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13436:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"13423:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13387:52:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13386:54:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13443:3:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"13386:60:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13385:62:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13354:93:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13334:113:9"},{"assignments":[6956],"declarations":[{"constant":false,"id":6956,"mutability":"mutable","name":"coverTvl","nameLocation":"13466:8:9","nodeType":"VariableDeclaration","scope":7014,"src":"13458:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6955,"name":"uint256","nodeType":"ElementaryTypeName","src":"13458:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6961,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6957,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"13477:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6958,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"13489:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13502:8:9","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":3853,"src":"13489:21:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13477:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13458:52:9"},{"expression":{"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6962,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"13520:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13533:8:9","memberName":"coverTvl","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"13520:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6965,"name":"coverTvl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"13544:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13520:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6967,"nodeType":"ExpressionStatement","src":"13520:32:9"},{"expression":{"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6968,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"13562:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":6970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13575:9:9","memberName":"baseValue","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"13562:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6971,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"13587:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13562:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6973,"nodeType":"ExpressionStatement","src":"13562:34:9"},{"assignments":[6979],"declarations":[{"constant":false,"id":6979,"mutability":"mutable","name":"poolCovers","nameLocation":"13630:10:9","nodeType":"VariableDeclaration","scope":7014,"src":"13606:34:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":6977,"nodeType":"UserDefinedTypeName","pathNode":{"id":6976,"name":"CoverLib.Cover","nameLocations":["13606:8:9","13615:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"13606:14:9"},"referencedDeclaration":3790,"src":"13606:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":6978,"nodeType":"ArrayTypeName","src":"13606:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":6983,"initialValue":{"arguments":[{"id":6981,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"13657:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6980,"name":"getPoolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"13643:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (struct CoverLib.Cover memory[] memory)"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13643:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13606:59:9"},{"body":{"id":7004,"nodeType":"Block","src":"13720:73:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6998,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"13765:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":7000,"indexExpression":{"id":6999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"13776:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13765:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":7001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13779:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"13765:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6995,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"13734:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13749:15:9","memberName":"updateMaxAmount","nodeType":"MemberAccess","referencedDeclaration":5682,"src":"13734:30:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13734:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7003,"nodeType":"ExpressionStatement","src":"13734:48:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"13692:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6989,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"13696:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13707:6:9","memberName":"length","nodeType":"MemberAccess","src":"13696:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13692:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7005,"initializationExpression":{"assignments":[6985],"declarations":[{"constant":false,"id":6985,"mutability":"mutable","name":"i","nameLocation":"13685:1:9","nodeType":"VariableDeclaration","scope":7005,"src":"13680:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6984,"name":"uint","nodeType":"ElementaryTypeName","src":"13680:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6987,"initialValue":{"hexValue":"30","id":6986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13689:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13680:10:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13715:3:9","subExpression":{"id":6992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"13715:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6994,"nodeType":"ExpressionStatement","src":"13715:3:9"},"nodeType":"ForStatement","src":"13675:118:9"},{"eventCall":{"arguments":[{"id":7007,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"13817:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7008,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"13828:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits storage pointer"}},"id":7009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13840:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"13828:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7010,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"13848:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13861:8:9","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":3830,"src":"13848:21:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":7006,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"13808:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13808:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7013,"nodeType":"EmitStatement","src":"13803:67:9"}]},"functionSelector":"83bc6357","id":7015,"implemented":true,"kind":"function","modifiers":[{"id":6874,"kind":"modifierInvocation","modifierName":{"id":6873,"name":"nonReentrant","nameLocations":["12740:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"12740:12:9"},"nodeType":"ModifierInvocation","src":"12740:12:9"},{"id":6876,"kind":"modifierInvocation","modifierName":{"id":6875,"name":"onlyVault","nameLocations":["12753:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":7951,"src":"12753:9:9"},"nodeType":"ModifierInvocation","src":"12753:9:9"}],"name":"withdrawUpdate","nameLocation":"12626:14:9","nodeType":"FunctionDefinition","parameters":{"id":6872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6866,"mutability":"mutable","name":"depositor","nameLocation":"12658:9:9","nodeType":"VariableDeclaration","scope":7015,"src":"12650:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6865,"name":"address","nodeType":"ElementaryTypeName","src":"12650:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6868,"mutability":"mutable","name":"_poolId","nameLocation":"12685:7:9","nodeType":"VariableDeclaration","scope":7015,"src":"12677:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6867,"name":"uint256","nodeType":"ElementaryTypeName","src":"12677:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6871,"mutability":"mutable","name":"pdt","nameLocation":"12723:3:9","nodeType":"VariableDeclaration","scope":7015,"src":"12702:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"},"typeName":{"id":6870,"nodeType":"UserDefinedTypeName","pathNode":{"id":6869,"name":"CoverLib.DepositType","nameLocations":["12702:8:9","12711:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"12702:20:9"},"referencedDeclaration":3826,"src":"12702:20:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"visibility":"internal"}],"src":"12640:92:9"},"returnParameters":{"id":6877,"nodeType":"ParameterList","parameters":[],"src":"12763:0:9"},"scope":7952,"src":"12617:1260:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7110,"nodeType":"Block","src":"13944:858:9","statements":[{"assignments":[7026],"declarations":[{"constant":false,"id":7026,"mutability":"mutable","name":"userVaultDeposit","nameLocation":"13981:16:9","nodeType":"VariableDeclaration","scope":7110,"src":"13954:43:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$5774_memory_ptr","typeString":"struct IVault.VaultDeposit"},"typeName":{"id":7025,"nodeType":"UserDefinedTypeName","pathNode":{"id":7024,"name":"IVault.VaultDeposit","nameLocations":["13954:6:9","13961:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":5774,"src":"13954:19:9"},"referencedDeclaration":5774,"src":"13954:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$5774_storage_ptr","typeString":"struct IVault.VaultDeposit"}},"visibility":"internal"}],"id":7033,"initialValue":{"arguments":[{"id":7029,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"14048:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7030,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14058:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14062:6:9","memberName":"sender","nodeType":"MemberAccess","src":"14058:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7027,"name":"IVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"14000:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5793","typeString":"contract IVault"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14028:19:9","memberName":"getUserVaultDeposit","nodeType":"MemberAccess","referencedDeclaration":5792,"src":"14000:47:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_struct$_VaultDeposit_$5774_memory_ptr_$","typeString":"function (uint256,address) view external returns (struct IVault.VaultDeposit memory)"}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14000:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$5774_memory_ptr","typeString":"struct IVault.VaultDeposit memory"}},"nodeType":"VariableDeclarationStatement","src":"13954:115:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7035,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"14087:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$5774_memory_ptr","typeString":"struct IVault.VaultDeposit memory"}},"id":7036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14104:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5758,"src":"14087:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14113:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14087:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20616374697665207769746864726177616c20666f722075736572","id":7039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14116:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a2d11a456ba91e4c4e8314580c8accd4f391e83095084b4f5db69e0bee713d6","typeString":"literal_string \"No active withdrawal for user\""},"value":"No active withdrawal for user"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a2d11a456ba91e4c4e8314580c8accd4f391e83095084b4f5db69e0bee713d6","typeString":"literal_string \"No active withdrawal for user\""}],"id":7034,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14079:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14079:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7041,"nodeType":"ExpressionStatement","src":"14079:69:9"},{"assignments":[7046],"declarations":[{"constant":false,"id":7046,"mutability":"mutable","name":"vault","nameLocation":"14178:5:9","nodeType":"VariableDeclaration","scope":7110,"src":"14158:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$5754_memory_ptr","typeString":"struct IVault.Vault"},"typeName":{"id":7045,"nodeType":"UserDefinedTypeName","pathNode":{"id":7044,"name":"IVault.Vault","nameLocations":["14158:6:9","14165:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":5754,"src":"14158:12:9"},"referencedDeclaration":5754,"src":"14158:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$5754_storage_ptr","typeString":"struct IVault.Vault"}},"visibility":"internal"}],"id":7051,"initialValue":{"arguments":[{"id":7049,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"14210:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7047,"name":"IVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"14186:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5793","typeString":"contract IVault"}},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14201:8:9","memberName":"getVault","nodeType":"MemberAccess","referencedDeclaration":5782,"src":"14186:23:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$5754_memory_ptr_$","typeString":"function (uint256) view external returns (struct IVault.Vault memory)"}},"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14186:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$5754_memory_ptr","typeString":"struct IVault.Vault memory"}},"nodeType":"VariableDeclarationStatement","src":"14158:61:9"},{"assignments":[7056],"declarations":[{"constant":false,"id":7056,"mutability":"mutable","name":"adt","nameLocation":"14255:3:9","nodeType":"VariableDeclaration","scope":7110,"src":"14229:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":7055,"nodeType":"UserDefinedTypeName","pathNode":{"id":7054,"name":"CoverLib.AssetDepositType","nameLocations":["14229:8:9","14238:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"14229:25:9"},"referencedDeclaration":3823,"src":"14229:25:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"}],"id":7059,"initialValue":{"expression":{"id":7057,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"14261:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$5754_memory_ptr","typeString":"struct IVault.Vault memory"}},"id":7058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14267:9:9","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5751,"src":"14261:15:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"VariableDeclarationStatement","src":"14229:47:9"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7060,"name":"adt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"14290:3:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":7061,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"14297:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14306:16:9","memberName":"AssetDepositType","nodeType":"MemberAccess","referencedDeclaration":3823,"src":"14297:25:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetDepositType_$3823_$","typeString":"type(enum CoverLib.AssetDepositType)"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14323:5:9","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":3822,"src":"14297:31:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"src":"14290:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7100,"nodeType":"Block","src":"14542:187:9","statements":[{"assignments":[7085,null],"declarations":[{"constant":false,"id":7085,"mutability":"mutable","name":"success","nameLocation":"14562:7:9","nodeType":"VariableDeclaration","scope":7100,"src":"14557:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7084,"name":"bool","nodeType":"ElementaryTypeName","src":"14557:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7094,"initialValue":{"arguments":[{"hexValue":"","id":7092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14640:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":7086,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14575:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:9","memberName":"sender","nodeType":"MemberAccess","src":"14575:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14586:4:9","memberName":"call","nodeType":"MemberAccess","src":"14575:15:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7089,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"14598:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$5774_memory_ptr","typeString":"struct IVault.VaultDeposit memory"}},"id":7090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14615:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5758,"src":"14598:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"14575:47:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14575:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14556:100:9"},{"expression":{"arguments":[{"id":7096,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"14678:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6174697665206173736574207472616e73666572206661696c6564","id":7097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14687:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fffe776d94f2ccd51a28b9d8a3f3d28cf446dbfa854545f140d0c269f5cfbd82","typeString":"literal_string \"Native asset transfer failed\""},"value":"Native asset transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fffe776d94f2ccd51a28b9d8a3f3d28cf446dbfa854545f140d0c269f5cfbd82","typeString":"literal_string \"Native asset transfer failed\""}],"id":7095,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14670:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14670:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7099,"nodeType":"ExpressionStatement","src":"14670:48:9"}]},"id":7101,"nodeType":"IfStatement","src":"14286:443:9","trueBody":{"id":7083,"nodeType":"Block","src":"14330:206:9","statements":[{"assignments":[7066],"declarations":[{"constant":false,"id":7066,"mutability":"mutable","name":"success","nameLocation":"14349:7:9","nodeType":"VariableDeclaration","scope":7083,"src":"14344:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7065,"name":"bool","nodeType":"ElementaryTypeName","src":"14344:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7077,"initialValue":{"arguments":[{"expression":{"id":7072,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14405:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14409:6:9","memberName":"sender","nodeType":"MemberAccess","src":"14405:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7074,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"14433:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$5774_memory_ptr","typeString":"struct IVault.VaultDeposit memory"}},"id":7075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14450:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5758,"src":"14433:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7068,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"14366:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$5754_memory_ptr","typeString":"struct IVault.Vault memory"}},"id":7069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14372:5:9","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":5753,"src":"14366:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7067,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"14359:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14359:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14379:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":192,"src":"14359:28:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14359:111:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"14344:126:9"},{"expression":{"arguments":[{"id":7079,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"14492:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230207472616e73666572206661696c6564","id":7080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14501:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff","typeString":"literal_string \"ERC20 transfer failed\""},"value":"ERC20 transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff","typeString":"literal_string \"ERC20 transfer failed\""}],"id":7078,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14484:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7082,"nodeType":"ExpressionStatement","src":"14484:41:9"}]}},{"expression":{"arguments":[{"id":7105,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"14774:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14784:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14788:6:9","memberName":"sender","nodeType":"MemberAccess","src":"14784:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7102,"name":"IVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"14739:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5793","typeString":"contract IVault"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14754:19:9","memberName":"getUserVaultDeposit","nodeType":"MemberAccess","referencedDeclaration":5792,"src":"14739:34:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_struct$_VaultDeposit_$5774_memory_ptr_$","typeString":"function (uint256,address) view external returns (struct IVault.VaultDeposit memory)"}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14739:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$5774_memory_ptr","typeString":"struct IVault.VaultDeposit memory"}},"id":7109,"nodeType":"ExpressionStatement","src":"14739:56:9"}]},"functionSelector":"fb839dda","id":7111,"implemented":true,"kind":"function","modifiers":[{"id":7020,"kind":"modifierInvocation","modifierName":{"id":7019,"name":"nonReentrant","nameLocations":["13931:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"13931:12:9"},"nodeType":"ModifierInvocation","src":"13931:12:9"}],"name":"vaultWithdraw","nameLocation":"13892:13:9","nodeType":"FunctionDefinition","parameters":{"id":7018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7017,"mutability":"mutable","name":"_vaultId","nameLocation":"13914:8:9","nodeType":"VariableDeclaration","scope":7111,"src":"13906:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7016,"name":"uint256","nodeType":"ElementaryTypeName","src":"13906:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13905:18:9"},"returnParameters":{"id":7021,"nodeType":"ParameterList","parameters":[],"src":"13944:0:9"},"scope":7952,"src":"13883:919:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7457,"nodeType":"Block","src":"14938:3315:9","statements":[{"assignments":[7127],"declarations":[{"constant":false,"id":7127,"mutability":"mutable","name":"selectedPool","nameLocation":"14970:12:9","nodeType":"VariableDeclaration","scope":7457,"src":"14948:34:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":7126,"nodeType":"UserDefinedTypeName","pathNode":{"id":7125,"name":"CoverLib.Pool","nameLocations":["14948:8:9","14957:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"14948:13:9"},"referencedDeclaration":3859,"src":"14948:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":7132,"initialValue":{"baseExpression":{"id":7128,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"14985:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":7131,"indexExpression":{"expression":{"id":7129,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"14991:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15004:6:9","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":3753,"src":"14991:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14985:26:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14948:63:9"},{"expression":{"arguments":[{"expression":{"id":7134,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"15030:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15043:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"15030:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20697320696e616374697665206f7220646f6573206e6f74206578697374","id":7136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15053:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3bdbe02ca2c319551cf3c55fb82f04752a3d92a6c0da8425b86f1cad70392d3","typeString":"literal_string \"Pool is inactive or does not exist\""},"value":"Pool is inactive or does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3bdbe02ca2c319551cf3c55fb82f04752a3d92a6c0da8425b86f1cad70392d3","typeString":"literal_string \"Pool is inactive or does not exist\""}],"id":7133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15022:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15022:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7138,"nodeType":"ExpressionStatement","src":"15022:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7140,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"15121:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15134:9:9","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"15121:22:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7142,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"15147:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15160:3:9","memberName":"adt","nodeType":"MemberAccess","referencedDeclaration":3763,"src":"15147:16:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"src":"15121:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20646f6573206e6f74206163636570742074686973206465706f7369742074797065","id":7145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15177:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6bf4a2c12578cc6bfbdb7b81697b5b10f97298a8f87195107d238f015a7b6bef","typeString":"literal_string \"Pool does not accept this deposit type\""},"value":"Pool does not accept this deposit type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6bf4a2c12578cc6bfbdb7b81697b5b10f97298a8f87195107d238f015a7b6bef","typeString":"literal_string \"Pool does not accept this deposit type\""}],"id":7139,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15100:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15100:127:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7147,"nodeType":"ExpressionStatement","src":"15100:127:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7149,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"15258:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15271:6:9","memberName":"period","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"15258:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7151,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"15281:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15294:9:9","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":3837,"src":"15281:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15258:45:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506572696f6420746f6f2073686f7274","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15317:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_21de13501f6c9101077616c240a2e1030bb87907f13a0dee34093ff4454ce498","typeString":"literal_string \"Period too short\""},"value":"Period too short"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21de13501f6c9101077616c240a2e1030bb87907f13a0dee34093ff4454ce498","typeString":"literal_string \"Period too short\""}],"id":7148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15237:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15237:108:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7156,"nodeType":"ExpressionStatement","src":"15237:108:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7158,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"15376:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15389:5:9","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3855,"src":"15376:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7160,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"15398:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15411:5:9","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3765,"src":"15398:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15376:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20646f6573206e6f74206163636570742074686973206173736574","id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15430:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7048929c06a2228d5230585f11fdf18bf39d8f92f838f3a09898b19221671c54","typeString":"literal_string \"Pool does not accept this asset\""},"value":"Pool does not accept this asset"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7048929c06a2228d5230585f11fdf18bf39d8f92f838f3a09898b19221671c54","typeString":"literal_string \"Pool does not accept this asset\""}],"id":7157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15355:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15355:118:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7165,"nodeType":"ExpressionStatement","src":"15355:118:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":7167,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"15504:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":7170,"indexExpression":{"expression":{"id":7168,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"15513:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15526:9:9","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"15513:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15504:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":7173,"indexExpression":{"expression":{"id":7171,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"15537:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15550:6:9","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":3753,"src":"15537:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15504:53:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":7176,"indexExpression":{"expression":{"id":7174,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"15575:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15588:3:9","memberName":"pdt","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"15575:16:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15504:101:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"id":7177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15606:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5913,"src":"15504:108:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15616:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15504:113:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365722068617320616c7265616479206465706f736974656420696e746f207468697320706f6f6c","id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15631:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_346264bd86700370944e67c832547fe302e13eab8a0f3e5a838a19c6481e067c","typeString":"literal_string \"User has already deposited into this pool\""},"value":"User has already deposited into this pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_346264bd86700370944e67c832547fe302e13eab8a0f3e5a838a19c6481e067c","typeString":"literal_string \"User has already deposited into this pool\""}],"id":7166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15483:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15483:201:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7182,"nodeType":"ExpressionStatement","src":"15483:201:9"},{"assignments":[7184],"declarations":[{"constant":false,"id":7184,"mutability":"mutable","name":"price","nameLocation":"15703:5:9","nodeType":"VariableDeclaration","scope":7457,"src":"15695:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7183,"name":"uint256","nodeType":"ElementaryTypeName","src":"15695:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7185,"nodeType":"VariableDeclarationStatement","src":"15695:13:9"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7186,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"15723:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15736:9:9","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"15723:22:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":7188,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"15749:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15758:16:9","memberName":"AssetDepositType","nodeType":"MemberAccess","referencedDeclaration":3823,"src":"15749:25:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetDepositType_$3823_$","typeString":"type(enum CoverLib.AssetDepositType)"}},"id":7190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15775:5:9","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":3822,"src":"15749:31:9","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"src":"15723:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7248,"nodeType":"Block","src":"16147:147:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7229,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16169:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16173:5:9","memberName":"value","nodeType":"MemberAccess","src":"16169:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16181:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16169:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f7369742063616e6e6f74206265207a65726f","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16184:24:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fa56e6d851c20a6032b89a91e69ca21eef4e69d4e4bad687ca29256d1abd984","typeString":"literal_string \"Deposit cannot be zero\""},"value":"Deposit cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fa56e6d851c20a6032b89a91e69ca21eef4e69d4e4bad687ca29256d1abd984","typeString":"literal_string \"Deposit cannot be zero\""}],"id":7228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16161:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16161:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7235,"nodeType":"ExpressionStatement","src":"16161:48:9"},{"expression":{"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7236,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"16223:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16236:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"16223:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":7239,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16243:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16247:5:9","memberName":"value","nodeType":"MemberAccess","src":"16243:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16223:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7242,"nodeType":"ExpressionStatement","src":"16223:29:9"},{"expression":{"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7243,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"16266:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7244,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16274:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16278:5:9","memberName":"value","nodeType":"MemberAccess","src":"16274:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16266:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7247,"nodeType":"ExpressionStatement","src":"16266:17:9"}]},"id":7249,"nodeType":"IfStatement","src":"15719:575:9","trueBody":{"id":7227,"nodeType":"Block","src":"15782:359:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7193,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"15804:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15817:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"15804:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15826:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15804:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":7197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15829:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":7192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15796:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15796:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7199,"nodeType":"ExpressionStatement","src":"15796:65:9"},{"expression":{"arguments":[{"expression":{"id":7205,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"15932:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15945:9:9","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"15932:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7209,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15980:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_InsurancePool_$7952","typeString":"contract InsurancePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsurancePool_$7952","typeString":"contract InsurancePool"}],"id":7208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15972:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7207,"name":"address","nodeType":"ElementaryTypeName","src":"15972:7:9","typeDescriptions":{}}},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15972:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7211,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"16003:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16016:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"16003:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7201,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"15882:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15895:5:9","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3765,"src":"15882:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7200,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"15875:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15875:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15902:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":224,"src":"15875:39:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15875:161:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7214,"nodeType":"ExpressionStatement","src":"15875:161:9"},{"expression":{"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7215,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"16050:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16063:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"16050:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":7218,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"16070:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16083:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"16070:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16050:39:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7221,"nodeType":"ExpressionStatement","src":"16050:39:9"},{"expression":{"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7222,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"16103:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7223,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"16111:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16124:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"16111:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16103:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7226,"nodeType":"ExpressionStatement","src":"16103:27:9"}]}},{"assignments":[7251],"declarations":[{"constant":false,"id":7251,"mutability":"mutable","name":"baseValue","nameLocation":"16312:9:9","nodeType":"VariableDeclaration","scope":7457,"src":"16304:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7250,"name":"uint256","nodeType":"ElementaryTypeName","src":"16304:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7264,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7252,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"16324:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16337:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"16324:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7254,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"16357:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16370:20:9","memberName":"investmentArmPercent","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"16357:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7256,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"16393:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16406:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"16393:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16357:52:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16356:54:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16413:3:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"16356:60:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16355:62:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16324:93:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16304:113:9"},{"assignments":[7266],"declarations":[{"constant":false,"id":7266,"mutability":"mutable","name":"coverTvl","nameLocation":"16436:8:9","nodeType":"VariableDeclaration","scope":7457,"src":"16428:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7265,"name":"uint256","nodeType":"ElementaryTypeName","src":"16428:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7271,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7267,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"16447:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7268,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"16459:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16472:8:9","memberName":"leverage","nodeType":"MemberAccess","referencedDeclaration":3853,"src":"16459:21:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16447:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16428:52:9"},{"expression":{"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7272,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"16491:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16504:8:9","memberName":"coverTvl","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"16491:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7275,"name":"coverTvl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7266,"src":"16515:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16491:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7277,"nodeType":"ExpressionStatement","src":"16491:32:9"},{"expression":{"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7278,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"16533:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16546:9:9","memberName":"baseValue","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"16533:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7281,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"16558:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16533:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7283,"nodeType":"ExpressionStatement","src":"16533:34:9"},{"assignments":[7285],"declarations":[{"constant":false,"id":7285,"mutability":"mutable","name":"dailyPayout","nameLocation":"16586:11:9","nodeType":"VariableDeclaration","scope":7457,"src":"16578:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7284,"name":"uint256","nodeType":"ElementaryTypeName","src":"16578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7295,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7286,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"16601:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7287,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"16609:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16622:3:9","memberName":"apy","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"16609:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16601:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16600:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16629:3:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"16600:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"333635","id":7293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16635:3:9","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"src":"16600:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16578:60:9"},{"assignments":[7298],"declarations":[{"constant":false,"id":7298,"mutability":"mutable","name":"userDeposit","nameLocation":"16664:11:9","nodeType":"VariableDeclaration","scope":7457,"src":"16648:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits"},"typeName":{"id":7297,"nodeType":"UserDefinedTypeName","pathNode":{"id":7296,"name":"Deposits","nameLocations":["16648:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5932,"src":"16648:8:9"},"referencedDeclaration":5932,"src":"16648:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits"}},"visibility":"internal"}],"id":7325,"initialValue":{"arguments":[{"expression":{"id":7300,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"16705:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16718:9:9","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"16705:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7302,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"16749:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7303,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"16776:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16789:6:9","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":3753,"src":"16776:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7305,"name":"dailyPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"16822:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":7306,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"16855:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16864:6:9","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"16855:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$3863_$","typeString":"type(enum CoverLib.Status)"}},"id":7308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16871:6:9","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":3860,"src":"16855:22:9","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},{"expression":{"id":7309,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"16901:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16914:6:9","memberName":"period","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"16901:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7311,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16945:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16951:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"16945:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7313,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16986:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16992:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"16986:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7315,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"17005:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17018:6:9","memberName":"period","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"17005:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17027:6:9","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"17005:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17004:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16986:48:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17063:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":7322,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"17083:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17096:3:9","memberName":"pdt","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"17083:16:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}],"id":7299,"name":"Deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"16678:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Deposits_$5932_storage_ptr_$","typeString":"type(struct InsurancePool.Deposits storage pointer)"}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["16701:2:9","16741:6:9","16768:6:9","16809:11:9","16847:6:9","16891:8:9","16934:9:9","16974:10:9","17048:13:9","17078:3:9"],"names":["lp","amount","poolId","dailyPayout","status","daysLeft","startDate","expiryDate","accruedPayout","pdt"],"nodeType":"FunctionCall","src":"16678:432:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"nodeType":"VariableDeclarationStatement","src":"16648:462:9"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7326,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"17125:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17138:3:9","memberName":"pdt","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"17125:16:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":7328,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"17145:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17154:11:9","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"17145:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17166:6:9","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"17145:27:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"src":"17125:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7361,"nodeType":"Block","src":"17331:150:9","statements":[{"expression":{"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":7347,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"17345:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":7355,"indexExpression":{"expression":{"id":7348,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"17354:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17367:9:9","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"17354:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17345:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":7356,"indexExpression":{"expression":{"id":7350,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"17378:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17391:6:9","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":3753,"src":"17378:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17345:53:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":7357,"indexExpression":{"expression":{"expression":{"id":7352,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"17416:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17425:11:9","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"17416:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17437:5:9","memberName":"Vault","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"17416:26:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17345:111:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7358,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"17459:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"src":"17345:125:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"id":7360,"nodeType":"ExpressionStatement","src":"17345:125:9"}]},"id":7362,"nodeType":"IfStatement","src":"17121:360:9","trueBody":{"id":7346,"nodeType":"Block","src":"17174:151:9","statements":[{"expression":{"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":7332,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"17188:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":7340,"indexExpression":{"expression":{"id":7333,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"17197:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17210:9:9","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"17197:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17188:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":7341,"indexExpression":{"expression":{"id":7335,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"17221:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17234:6:9","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":3753,"src":"17221:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17188:53:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":7342,"indexExpression":{"expression":{"expression":{"id":7337,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"17259:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17268:11:9","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"17259:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":7339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17280:6:9","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"17259:27:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17188:112:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7343,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"17303:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"src":"17188:126:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"id":7345,"nodeType":"ExpressionStatement","src":"17188:126:9"}]}},{"assignments":[7368],"declarations":[{"constant":false,"id":7368,"mutability":"mutable","name":"poolCovers","nameLocation":"17515:10:9","nodeType":"VariableDeclaration","scope":7457,"src":"17491:34:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":7366,"nodeType":"UserDefinedTypeName","pathNode":{"id":7365,"name":"CoverLib.Cover","nameLocations":["17491:8:9","17500:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"17491:14:9"},"referencedDeclaration":3790,"src":"17491:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":7367,"nodeType":"ArrayTypeName","src":"17491:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":7373,"initialValue":{"arguments":[{"expression":{"id":7370,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"17542:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17555:6:9","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":3753,"src":"17542:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7369,"name":"getPoolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"17528:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (struct CoverLib.Cover memory[] memory)"}},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17528:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17491:71:9"},{"body":{"id":7394,"nodeType":"Block","src":"17617:73:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7388,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"17662:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":7390,"indexExpression":{"id":7389,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"17673:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17662:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":7391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17676:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"17662:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7385,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"17631:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17646:15:9","memberName":"updateMaxAmount","nodeType":"MemberAccess","referencedDeclaration":5682,"src":"17631:30:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17631:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7393,"nodeType":"ExpressionStatement","src":"17631:48:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7378,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"17589:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7379,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"17593:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17604:6:9","memberName":"length","nodeType":"MemberAccess","src":"17593:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17589:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7395,"initializationExpression":{"assignments":[7375],"declarations":[{"constant":false,"id":7375,"mutability":"mutable","name":"i","nameLocation":"17582:1:9","nodeType":"VariableDeclaration","scope":7395,"src":"17577:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7374,"name":"uint","nodeType":"ElementaryTypeName","src":"17577:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7377,"initialValue":{"hexValue":"30","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17586:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17577:10:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17612:3:9","subExpression":{"id":7382,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"17612:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7384,"nodeType":"ExpressionStatement","src":"17612:3:9"},"nodeType":"ForStatement","src":"17572:118:9"},{"assignments":[7397],"declarations":[{"constant":false,"id":7397,"mutability":"mutable","name":"userExists","nameLocation":"17705:10:9","nodeType":"VariableDeclaration","scope":7457,"src":"17700:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7396,"name":"bool","nodeType":"ElementaryTypeName","src":"17700:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7399,"initialValue":{"hexValue":"66616c7365","id":7398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17718:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"17700:23:9"},{"body":{"id":7424,"nodeType":"Block","src":"17780:144:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7411,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"17798:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7413,"indexExpression":{"id":7412,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"17811:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17798:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7414,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"17817:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17830:9:9","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"17817:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17798:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7423,"nodeType":"IfStatement","src":"17794:120:9","trueBody":{"id":7422,"nodeType":"Block","src":"17841:73:9","statements":[{"expression":{"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7417,"name":"userExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"17859:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17872:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"17859:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7420,"nodeType":"ExpressionStatement","src":"17859:17:9"},{"id":7421,"nodeType":"Break","src":"17894:5:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"17750:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7405,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"17754:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17767:6:9","memberName":"length","nodeType":"MemberAccess","src":"17754:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17750:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7425,"initializationExpression":{"assignments":[7401],"declarations":[{"constant":false,"id":7401,"mutability":"mutable","name":"i","nameLocation":"17743:1:9","nodeType":"VariableDeclaration","scope":7425,"src":"17738:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7400,"name":"uint","nodeType":"ElementaryTypeName","src":"17738:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7403,"initialValue":{"hexValue":"30","id":7402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17747:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17738:10:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:3:9","subExpression":{"id":7408,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"17775:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7410,"nodeType":"ExpressionStatement","src":"17775:3:9"},"nodeType":"ForStatement","src":"17733:191:9"},{"condition":{"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17938:11:9","subExpression":{"id":7426,"name":"userExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"17939:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7436,"nodeType":"IfStatement","src":"17934:83:9","trueBody":{"id":7435,"nodeType":"Block","src":"17951:66:9","statements":[{"expression":{"arguments":[{"expression":{"id":7431,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"17983:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17996:9:9","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"17983:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7428,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"17965:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17978:4:9","memberName":"push","nodeType":"MemberAccess","src":"17965:17:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17965:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7434,"nodeType":"ExpressionStatement","src":"17965:41:9"}]}},{"expression":{"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7437,"name":"participation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"18027:13:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7440,"indexExpression":{"expression":{"id":7438,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"18041:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18054:9:9","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"18041:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18027:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18068:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18027:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7443,"nodeType":"ExpressionStatement","src":"18027:42:9"},{"eventCall":{"arguments":[{"expression":{"id":7445,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"18108:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18121:9:9","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"18108:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7447,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"18144:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"id":7448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18157:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"18144:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7449,"name":"selectedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"18177:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18190:8:9","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":3830,"src":"18177:21:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":7444,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"18085:9:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18085:123:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7452,"nodeType":"EmitStatement","src":"18080:128:9"},{"expression":{"components":[{"id":7453,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"18227:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7454,"name":"dailyPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"18234:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18226:20:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":7122,"id":7456,"nodeType":"Return","src":"18219:27:9"}]},"functionSelector":"2607b539","id":7458,"implemented":true,"kind":"function","modifiers":[{"id":7117,"kind":"modifierInvocation","modifierName":{"id":7116,"name":"nonReentrant","nameLocations":["14898:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"14898:12:9"},"nodeType":"ModifierInvocation","src":"14898:12:9"}],"name":"deposit","nameLocation":"14817:7:9","nodeType":"FunctionDefinition","parameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7114,"mutability":"mutable","name":"depositParam","nameLocation":"14864:12:9","nodeType":"VariableDeclaration","scope":7458,"src":"14834:42:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams"},"typeName":{"id":7113,"nodeType":"UserDefinedTypeName","pathNode":{"id":7112,"name":"CoverLib.DepositParams","nameLocations":["14834:8:9","14843:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":3766,"src":"14834:22:9"},"referencedDeclaration":3766,"src":"14834:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_storage_ptr","typeString":"struct CoverLib.DepositParams"}},"visibility":"internal"}],"src":"14824:58:9"},"returnParameters":{"id":7122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7458,"src":"14920:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7118,"name":"uint256","nodeType":"ElementaryTypeName","src":"14920:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7458,"src":"14929:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7120,"name":"uint256","nodeType":"ElementaryTypeName","src":"14929:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14919:18:9"},"scope":7952,"src":"14808:3445:9","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":7610,"nodeType":"Block","src":"18328:1342:9","statements":[{"assignments":[7469],"declarations":[{"constant":false,"id":7469,"mutability":"mutable","name":"proposal","nameLocation":"18359:8:9","nodeType":"VariableDeclaration","scope":7610,"src":"18338:29:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$5856_memory_ptr","typeString":"struct IGov.Proposal"},"typeName":{"id":7468,"nodeType":"UserDefinedTypeName","pathNode":{"id":7467,"name":"IGov.Proposal","nameLocations":["18338:4:9","18343:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5856,"src":"18338:13:9"},"referencedDeclaration":5856,"src":"18338:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$5856_storage_ptr","typeString":"struct IGov.Proposal"}},"visibility":"internal"}],"id":7474,"initialValue":{"arguments":[{"id":7472,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"18422:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7470,"name":"IGovernanceContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"18370:19:9","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$5883","typeString":"contract IGov"}},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18390:18:9","memberName":"getProposalDetails","nodeType":"MemberAccess","referencedDeclaration":5870,"src":"18370:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$_t_struct$_Proposal_$5856_memory_ptr_$","typeString":"function (uint256) external returns (struct IGov.Proposal memory)"}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18370:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$5856_memory_ptr","typeString":"struct IGov.Proposal memory"}},"nodeType":"VariableDeclarationStatement","src":"18338:105:9"},{"assignments":[7479],"declarations":[{"constant":false,"id":7479,"mutability":"mutable","name":"proposalParam","nameLocation":"18480:13:9","nodeType":"VariableDeclaration","scope":7610,"src":"18453:40:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams"},"typeName":{"id":7478,"nodeType":"UserDefinedTypeName","pathNode":{"id":7477,"name":"IGov.ProposalParams","nameLocations":["18453:4:9","18458:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":5835,"src":"18453:19:9"},"referencedDeclaration":5835,"src":"18453:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_storage_ptr","typeString":"struct IGov.ProposalParams"}},"visibility":"internal"}],"id":7482,"initialValue":{"expression":{"id":7480,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"18496:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$5856_memory_ptr","typeString":"struct IGov.Proposal memory"}},"id":7481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18505:13:9","memberName":"proposalParam","nodeType":"MemberAccess","referencedDeclaration":5855,"src":"18496:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"nodeType":"VariableDeclarationStatement","src":"18453:65:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalStaus_$5862","typeString":"enum IGov.ProposalStaus"},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7484,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"18549:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$5856_memory_ptr","typeString":"struct IGov.Proposal memory"}},"id":7485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18558:6:9","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5850,"src":"18549:15:9","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalStaus_$5862","typeString":"enum IGov.ProposalStaus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":7486,"name":"IGov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"18568:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGov_$5883_$","typeString":"type(contract IGov)"}},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18573:13:9","memberName":"ProposalStaus","nodeType":"MemberAccess","referencedDeclaration":5862,"src":"18568:18:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalStaus_$5862_$","typeString":"type(enum IGov.ProposalStaus)"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18587:8:9","memberName":"Approved","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"18568:27:9","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalStaus_$5862","typeString":"enum IGov.ProposalStaus"}},"src":"18549:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":7490,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"18599:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$5856_memory_ptr","typeString":"struct IGov.Proposal memory"}},"id":7491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18608:8:9","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":5852,"src":"18599:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18549:67:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c206e6f7420617070726f766564","id":7493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18630:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f177eda02be1742eefba0406153f330748d4145cbb1de623a041aa2ef2fae791","typeString":"literal_string \"Proposal not approved\""},"value":"Proposal not approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f177eda02be1742eefba0406153f330748d4145cbb1de623a041aa2ef2fae791","typeString":"literal_string \"Proposal not approved\""}],"id":7483,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18528:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18528:135:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7495,"nodeType":"ExpressionStatement","src":"18528:135:9"},{"assignments":[7500],"declarations":[{"constant":false,"id":7500,"mutability":"mutable","name":"pool","nameLocation":"18695:4:9","nodeType":"VariableDeclaration","scope":7610,"src":"18673:26:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":7499,"nodeType":"UserDefinedTypeName","pathNode":{"id":7498,"name":"CoverLib.Pool","nameLocations":["18673:8:9","18682:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"18673:13:9"},"referencedDeclaration":3859,"src":"18673:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":7505,"initialValue":{"baseExpression":{"id":7501,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"18702:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":7504,"indexExpression":{"expression":{"id":7502,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"18708:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18722:6:9","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":5832,"src":"18708:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18702:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18673:56:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7507,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18747:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18751:6:9","memberName":"sender","nodeType":"MemberAccess","src":"18747:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7509,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"18761:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18775:4:9","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":5821,"src":"18761:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18747:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612076616c69642070726f706f73616c","id":7512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18781:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_209c70671bd902cdf2bc9a9744a79fac0cb112816b37468741249b8a2648d1b5","typeString":"literal_string \"Not a valid proposal\""},"value":"Not a valid proposal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_209c70671bd902cdf2bc9a9744a79fac0cb112816b37468741249b8a2648d1b5","typeString":"literal_string \"Not a valid proposal\""}],"id":7506,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18739:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18739:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7514,"nodeType":"ExpressionStatement","src":"18739:65:9"},{"expression":{"arguments":[{"expression":{"id":7516,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"18822:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18827:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"18822:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c206973206e6f7420616374697665","id":7518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18837:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767","typeString":"literal_string \"Pool is not active\""},"value":"Pool is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767","typeString":"literal_string \"Pool is not active\""}],"id":7515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18814:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18814:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7520,"nodeType":"ExpressionStatement","src":"18814:44:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7522,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"18889:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18894:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"18889:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7524,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"18901:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18915:11:9","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":5834,"src":"18901:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18889:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682066756e647320696e2074686520706f6f6c","id":7527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18940:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_efba8b617baaf06ff0aa6bcdef7f669e29141363d290aaeed034d62f040868cf","typeString":"literal_string \"Not enough funds in the pool\""},"value":"Not enough funds in the pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efba8b617baaf06ff0aa6bcdef7f669e29141363d290aaeed034d62f040868cf","typeString":"literal_string \"Not enough funds in the pool\""}],"id":7521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18868:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18868:112:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7529,"nodeType":"ExpressionStatement","src":"18868:112:9"},{"expression":{"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7530,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"18991:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18996:3:9","memberName":"tcp","nodeType":"MemberAccess","referencedDeclaration":3845,"src":"18991:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":7533,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"19003:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19017:11:9","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":5834,"src":"19003:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18991:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7536,"nodeType":"ExpressionStatement","src":"18991:37:9"},{"expression":{"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7537,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"19038:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19043:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"19038:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":7540,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"19050:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19064:11:9","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":5834,"src":"19050:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19038:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7543,"nodeType":"ExpressionStatement","src":"19038:37:9"},{"assignments":[7549],"declarations":[{"constant":false,"id":7549,"mutability":"mutable","name":"poolCovers","nameLocation":"19109:10:9","nodeType":"VariableDeclaration","scope":7610,"src":"19085:34:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover[]"},"typeName":{"baseType":{"id":7547,"nodeType":"UserDefinedTypeName","pathNode":{"id":7546,"name":"CoverLib.Cover","nameLocations":["19085:8:9","19094:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"19085:14:9"},"referencedDeclaration":3790,"src":"19085:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_storage_ptr","typeString":"struct CoverLib.Cover"}},"id":7548,"nodeType":"ArrayTypeName","src":"19085:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Cover[]"}},"visibility":"internal"}],"id":7554,"initialValue":{"arguments":[{"expression":{"id":7551,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"19149:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19163:6:9","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":5832,"src":"19149:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7550,"name":"getPoolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"19122:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) view returns (struct CoverLib.Cover memory[] memory)"}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19122:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"19085:94:9"},{"body":{"id":7575,"nodeType":"Block","src":"19234:73:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7569,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"19279:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":7571,"indexExpression":{"id":7570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"19290:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19279:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Cover_$3790_memory_ptr","typeString":"struct CoverLib.Cover memory"}},"id":7572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19293:2:9","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"19279:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7566,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"19248:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"}},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19263:15:9","memberName":"updateMaxAmount","nodeType":"MemberAccess","referencedDeclaration":5682,"src":"19248:30:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19248:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7574,"nodeType":"ExpressionStatement","src":"19248:48:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"19206:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7560,"name":"poolCovers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"19210:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Cover_$3790_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Cover memory[] memory"}},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19221:6:9","memberName":"length","nodeType":"MemberAccess","src":"19210:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19206:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7576,"initializationExpression":{"assignments":[7556],"declarations":[{"constant":false,"id":7556,"mutability":"mutable","name":"i","nameLocation":"19199:1:9","nodeType":"VariableDeclaration","scope":7576,"src":"19194:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7555,"name":"uint","nodeType":"ElementaryTypeName","src":"19194:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7558,"initialValue":{"hexValue":"30","id":7557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19203:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19194:10:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19229:3:9","subExpression":{"id":7563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"19229:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7565,"nodeType":"ExpressionStatement","src":"19229:3:9"},"nodeType":"ForStatement","src":"19189:118:9"},{"expression":{"arguments":[{"id":7580,"name":"_proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"19367:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7577,"name":"IGovernanceContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"19317:19:9","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$5883","typeString":"contract IGov"}},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19337:29:9","memberName":"updateProposalStatusToClaimed","nodeType":"MemberAccess","referencedDeclaration":5875,"src":"19317:49:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19317:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7582,"nodeType":"ExpressionStatement","src":"19317:62:9"},{"eventCall":{"arguments":[{"expression":{"id":7584,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"19421:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19435:6:9","memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":5832,"src":"19421:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7586,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"19455:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19469:11:9","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":5834,"src":"19455:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7588,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"19494:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19508:4:9","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":5821,"src":"19494:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7583,"name":"ClaimAttempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"19395:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19395:127:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7591,"nodeType":"EmitStatement","src":"19390:132:9"},{"expression":{"arguments":[{"expression":{"id":7595,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19546:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19550:6:9","memberName":"sender","nodeType":"MemberAccess","src":"19546:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7597,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"19558:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19572:11:9","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":5834,"src":"19558:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7592,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"19533:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$5819","typeString":"contract IbqBTC"}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19539:6:9","memberName":"bqMint","nodeType":"MemberAccess","referencedDeclaration":5800,"src":"19533:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19533:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7600,"nodeType":"ExpressionStatement","src":"19533:51:9"},{"eventCall":{"arguments":[{"expression":{"id":7602,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19610:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19614:6:9","memberName":"sender","nodeType":"MemberAccess","src":"19610:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7604,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"19622:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19627:8:9","memberName":"poolName","nodeType":"MemberAccess","referencedDeclaration":3830,"src":"19622:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":7606,"name":"proposalParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"19637:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$5835_memory_ptr","typeString":"struct IGov.ProposalParams memory"}},"id":7607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19651:11:9","memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":5834,"src":"19637:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7601,"name":"ClaimPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"19600:9:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,string memory,uint256)"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19600:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7609,"nodeType":"EmitStatement","src":"19595:68:9"}]},"functionSelector":"e35f8129","id":7611,"implemented":true,"kind":"function","modifiers":[{"id":7463,"kind":"modifierInvocation","modifierName":{"id":7462,"name":"nonReentrant","nameLocations":["18315:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"18315:12:9"},"nodeType":"ModifierInvocation","src":"18315:12:9"}],"name":"claimProposalFunds","nameLocation":"18268:18:9","nodeType":"FunctionDefinition","parameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7460,"mutability":"mutable","name":"_proposalId","nameLocation":"18295:11:9","nodeType":"VariableDeclaration","scope":7611,"src":"18287:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7459,"name":"uint256","nodeType":"ElementaryTypeName","src":"18287:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18286:21:9"},"returnParameters":{"id":7464,"nodeType":"ParameterList","parameters":[],"src":"18328:0:9"},"scope":7952,"src":"18259:1411:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7731,"nodeType":"Block","src":"19792:977:9","statements":[{"assignments":[7623],"declarations":[{"constant":false,"id":7623,"mutability":"mutable","name":"userDeposit","nameLocation":"19818:11:9","nodeType":"VariableDeclaration","scope":7731,"src":"19802:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits"},"typeName":{"id":7622,"nodeType":"UserDefinedTypeName","pathNode":{"id":7621,"name":"Deposits","nameLocations":["19802:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5932,"src":"19802:8:9"},"referencedDeclaration":5932,"src":"19802:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits"}},"visibility":"internal"}],"id":7633,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":7624,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"19832:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)))"}},"id":7626,"indexExpression":{"id":7625,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"19841:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19832:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref))"}},"id":7628,"indexExpression":{"id":7627,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"19848:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19832:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$5932_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct InsurancePool.Deposits storage ref)"}},"id":7632,"indexExpression":{"expression":{"expression":{"id":7629,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"19870:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19879:11:9","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"19870:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19891:6:9","memberName":"Normal","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"19870:27:9","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19832:75:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage","typeString":"struct InsurancePool.Deposits storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19802:105:9"},{"assignments":[7635],"declarations":[{"constant":false,"id":7635,"mutability":"mutable","name":"claimTime","nameLocation":"19925:9:9","nodeType":"VariableDeclaration","scope":7731,"src":"19917:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7634,"name":"uint256","nodeType":"ElementaryTypeName","src":"19917:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7641,"initialValue":{"arguments":[{"id":7638,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"19969:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7639,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"19976:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7636,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"19937:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19952:16:9","memberName":"getLastClaimTime","nodeType":"MemberAccess","referencedDeclaration":5700,"src":"19937:31:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19937:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19917:67:9"},{"assignments":[7643],"declarations":[{"constant":false,"id":7643,"mutability":"mutable","name":"lastClaimTime","nameLocation":"19999:13:9","nodeType":"VariableDeclaration","scope":7731,"src":"19994:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7642,"name":"uint","nodeType":"ElementaryTypeName","src":"19994:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7644,"nodeType":"VariableDeclarationStatement","src":"19994:18:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7645,"name":"claimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"20026:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20039:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20026:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7658,"nodeType":"Block","src":"20110:50:9","statements":[{"expression":{"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7654,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"20124:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7655,"name":"claimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"20140:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20124:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7657,"nodeType":"ExpressionStatement","src":"20124:25:9"}]},"id":7659,"nodeType":"IfStatement","src":"20022:138:9","trueBody":{"id":7653,"nodeType":"Block","src":"20042:62:9","statements":[{"expression":{"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7648,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"20056:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7649,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20072:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"id":7650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20084:9:9","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":5924,"src":"20072:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20056:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7652,"nodeType":"ExpressionStatement","src":"20056:37:9"}]}},{"assignments":[7661],"declarations":[{"constant":false,"id":7661,"mutability":"mutable","name":"currentTime","nameLocation":"20177:11:9","nodeType":"VariableDeclaration","scope":7731,"src":"20169:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7660,"name":"uint256","nodeType":"ElementaryTypeName","src":"20169:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7664,"initialValue":{"expression":{"id":7662,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20191:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20197:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"20191:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20169:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7665,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"20220:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7666,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20234:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"id":7667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20246:10:9","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":5926,"src":"20234:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20220:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7675,"nodeType":"IfStatement","src":"20216:103:9","trueBody":{"id":7674,"nodeType":"Block","src":"20258:61:9","statements":[{"expression":{"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7669,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"20272:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7670,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20286:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"id":7671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20298:10:9","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":5926,"src":"20286:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20272:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7673,"nodeType":"ExpressionStatement","src":"20272:36:9"}]}},{"assignments":[7677],"declarations":[{"constant":false,"id":7677,"mutability":"mutable","name":"claimableDays","nameLocation":"20336:13:9","nodeType":"VariableDeclaration","scope":7731,"src":"20328:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7676,"name":"uint256","nodeType":"ElementaryTypeName","src":"20328:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7684,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7678,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"20353:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7679,"name":"lastClaimTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"20367:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20353:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20352:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":7682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20384:9:9","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"src":"20352:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20328:65:9"},{"expression":{"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7685,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20403:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"id":7687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20415:13:9","memberName":"accruedPayout","nodeType":"MemberAccess","referencedDeclaration":5928,"src":"20403:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7688,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20431:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"id":7689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20443:11:9","memberName":"dailyPayout","nodeType":"MemberAccess","referencedDeclaration":5917,"src":"20431:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7690,"name":"claimableDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"20457:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20431:39:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20403:67:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7693,"nodeType":"ExpressionStatement","src":"20403:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7694,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20484:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"id":7695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20496:10:9","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":5926,"src":"20484:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7696,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20510:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20516:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"20510:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20484:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7727,"nodeType":"Block","src":"20582:153:9","statements":[{"assignments":[7707],"declarations":[{"constant":false,"id":7707,"mutability":"mutable","name":"timeLeft","nameLocation":"20604:8:9","nodeType":"VariableDeclaration","scope":7727,"src":"20596:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7706,"name":"uint256","nodeType":"ElementaryTypeName","src":"20596:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7713,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7708,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20615:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"id":7709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20627:10:9","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":5926,"src":"20615:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7710,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20640:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20646:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"20640:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20615:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20596:59:9"},{"expression":{"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7714,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20669:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"id":7716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20681:8:9","memberName":"daysLeft","nodeType":"MemberAccess","referencedDeclaration":5922,"src":"20669:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7717,"name":"timeLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"20693:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20704:6:9","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"20693:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20713:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20693:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20692:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":7723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20718:6:9","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"20692:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20669:55:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7726,"nodeType":"ExpressionStatement","src":"20669:55:9"}]},"id":7728,"nodeType":"IfStatement","src":"20480:255:9","trueBody":{"id":7705,"nodeType":"Block","src":"20527:49:9","statements":[{"expression":{"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7699,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20541:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"id":7701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20553:8:9","memberName":"daysLeft","nodeType":"MemberAccess","referencedDeclaration":5922,"src":"20541:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20564:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20541:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7704,"nodeType":"ExpressionStatement","src":"20541:24:9"}]}},{"expression":{"id":7729,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20751:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits memory"}},"functionReturnParameters":7620,"id":7730,"nodeType":"Return","src":"20744:18:9"}]},"functionSelector":"4e055244","id":7732,"implemented":true,"kind":"function","modifiers":[],"name":"getUserDeposit","nameLocation":"19685:14:9","nodeType":"FunctionDefinition","parameters":{"id":7616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7613,"mutability":"mutable","name":"_poolId","nameLocation":"19717:7:9","nodeType":"VariableDeclaration","scope":7732,"src":"19709:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7612,"name":"uint256","nodeType":"ElementaryTypeName","src":"19709:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7615,"mutability":"mutable","name":"_user","nameLocation":"19742:5:9","nodeType":"VariableDeclaration","scope":7732,"src":"19734:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7614,"name":"address","nodeType":"ElementaryTypeName","src":"19734:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19699:54:9"},"returnParameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7732,"src":"19775:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_memory_ptr","typeString":"struct InsurancePool.Deposits"},"typeName":{"id":7618,"nodeType":"UserDefinedTypeName","pathNode":{"id":7617,"name":"Deposits","nameLocations":["19775:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":5932,"src":"19775:8:9"},"referencedDeclaration":5932,"src":"19775:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$5932_storage_ptr","typeString":"struct InsurancePool.Deposits"}},"visibility":"internal"}],"src":"19774:17:9"},"scope":7952,"src":"19676:1093:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7744,"nodeType":"Block","src":"20842:42:9","statements":[{"expression":{"expression":{"baseExpression":{"id":7739,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"20859:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":7741,"indexExpression":{"id":7740,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"20865:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20859:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"id":7742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20874:3:9","memberName":"tvl","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"20859:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7738,"id":7743,"nodeType":"Return","src":"20852:25:9"}]},"functionSelector":"8f244630","id":7745,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolTVL","nameLocation":"20784:10:9","nodeType":"FunctionDefinition","parameters":{"id":7735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7734,"mutability":"mutable","name":"_poolId","nameLocation":"20803:7:9","nodeType":"VariableDeclaration","scope":7745,"src":"20795:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7733,"name":"uint256","nodeType":"ElementaryTypeName","src":"20795:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20794:17:9"},"returnParameters":{"id":7738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7745,"src":"20833:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7736,"name":"uint256","nodeType":"ElementaryTypeName","src":"20833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20832:9:9"},"scope":7952,"src":"20775:109:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7764,"nodeType":"Block","src":"20953:89:9","statements":[{"assignments":[7756],"declarations":[{"constant":false,"id":7756,"mutability":"mutable","name":"pool","nameLocation":"20985:4:9","nodeType":"VariableDeclaration","scope":7764,"src":"20963:26:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":7755,"nodeType":"UserDefinedTypeName","pathNode":{"id":7754,"name":"CoverLib.Pool","nameLocations":["20963:8:9","20972:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"20963:13:9"},"referencedDeclaration":3859,"src":"20963:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":7760,"initialValue":{"baseExpression":{"id":7757,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"20992:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$3859_storage_$","typeString":"mapping(uint256 => struct CoverLib.Pool storage ref)"}},"id":7759,"indexExpression":{"id":7758,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"20998:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20992:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage","typeString":"struct CoverLib.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20963:42:9"},{"expression":{"expression":{"id":7761,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"21022:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool storage pointer"}},"id":7762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21027:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3847,"src":"21022:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7751,"id":7763,"nodeType":"Return","src":"21015:20:9"}]},"functionSelector":"25f11e8d","id":7765,"implemented":true,"kind":"function","modifiers":[],"name":"poolActive","nameLocation":"20899:10:9","nodeType":"FunctionDefinition","parameters":{"id":7748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7747,"mutability":"mutable","name":"poolId","nameLocation":"20918:6:9","nodeType":"VariableDeclaration","scope":7765,"src":"20910:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7746,"name":"uint256","nodeType":"ElementaryTypeName","src":"20910:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20909:16:9"},"returnParameters":{"id":7751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7765,"src":"20947:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7749,"name":"bool","nodeType":"ElementaryTypeName","src":"20947:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20946:6:9"},"scope":7952,"src":"20890:152:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7773,"nodeType":"Block","src":"21117:36:9","statements":[{"expression":{"id":7771,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"21134:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":7770,"id":7772,"nodeType":"Return","src":"21127:19:9"}]},"functionSelector":"195ec9ee","id":7774,"implemented":true,"kind":"function","modifiers":[],"name":"getAllParticipants","nameLocation":"21057:18:9","nodeType":"FunctionDefinition","parameters":{"id":7766,"nodeType":"ParameterList","parameters":[],"src":"21075:2:9"},"returnParameters":{"id":7770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7774,"src":"21099:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7767,"name":"address","nodeType":"ElementaryTypeName","src":"21099:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7768,"nodeType":"ArrayTypeName","src":"21099:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"21098:18:9"},"scope":7952,"src":"21048:105:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7785,"nodeType":"Block","src":"21233:43:9","statements":[{"expression":{"baseExpression":{"id":7781,"name":"participation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"21250:13:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7783,"indexExpression":{"id":7782,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"21264:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21250:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7780,"id":7784,"nodeType":"Return","src":"21243:26:9"}]},"functionSelector":"46f84795","id":7786,"implemented":true,"kind":"function","modifiers":[],"name":"getUserParticipation","nameLocation":"21168:20:9","nodeType":"FunctionDefinition","parameters":{"id":7777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7776,"mutability":"mutable","name":"user","nameLocation":"21197:4:9","nodeType":"VariableDeclaration","scope":7786,"src":"21189:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7775,"name":"address","nodeType":"ElementaryTypeName","src":"21189:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21188:14:9"},"returnParameters":{"id":7780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7786,"src":"21224:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7778,"name":"uint256","nodeType":"ElementaryTypeName","src":"21224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21223:9:9"},"scope":7952,"src":"21159:117:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7823,"nodeType":"Block","src":"21345:240:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7794,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"21363:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21385:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21377:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7795,"name":"address","nodeType":"ElementaryTypeName","src":"21377:7:9","typeDescriptions":{}}},"id":7798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21377:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21363:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e616e636520616c726561647920736574","id":7800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21389:24:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_256d4bbc7883dafee56b1b5b430f2928ee11abc3dac304a43bb764d90df40708","typeString":"literal_string \"Governance already set\""},"value":"Governance already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_256d4bbc7883dafee56b1b5b430f2928ee11abc3dac304a43bb764d90df40708","typeString":"literal_string \"Governance already set\""}],"id":7793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21355:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21355:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7802,"nodeType":"ExpressionStatement","src":"21355:59:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7804,"name":"_governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"21432:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21455:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21447:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7805,"name":"address","nodeType":"ElementaryTypeName","src":"21447:7:9","typeDescriptions":{}}},"id":7808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21447:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21432:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e616e636520616464726573732063616e6e6f74206265207a65726f","id":7810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21459:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3aa1986b808de47282cda149f786d426662cb8137be11b0930bd660fe9ff4a19","typeString":"literal_string \"Governance address cannot be zero\""},"value":"Governance address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3aa1986b808de47282cda149f786d426662cb8137be11b0930bd660fe9ff4a19","typeString":"literal_string \"Governance address cannot be zero\""}],"id":7803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21424:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21424:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7812,"nodeType":"ExpressionStatement","src":"21424:71:9"},{"expression":{"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7813,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"21505:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7814,"name":"_governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"21518:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21505:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7816,"nodeType":"ExpressionStatement","src":"21505:24:9"},{"expression":{"id":7821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7817,"name":"IGovernanceContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"21539:19:9","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$5883","typeString":"contract IGov"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7819,"name":"_governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"21566:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7818,"name":"IGov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"21561:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGov_$5883_$","typeString":"type(contract IGov)"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21561:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$5883","typeString":"contract IGov"}},"src":"21539:39:9","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$5883","typeString":"contract IGov"}},"id":7822,"nodeType":"ExpressionStatement","src":"21539:39:9"}]},"functionSelector":"ab033ea9","id":7824,"implemented":true,"kind":"function","modifiers":[{"id":7791,"kind":"modifierInvocation","modifierName":{"id":7790,"name":"onlyOwner","nameLocations":["21335:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"21335:9:9"},"nodeType":"ModifierInvocation","src":"21335:9:9"}],"name":"setGovernance","nameLocation":"21291:13:9","nodeType":"FunctionDefinition","parameters":{"id":7789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7788,"mutability":"mutable","name":"_governance","nameLocation":"21313:11:9","nodeType":"VariableDeclaration","scope":7824,"src":"21305:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7787,"name":"address","nodeType":"ElementaryTypeName","src":"21305:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21304:21:9"},"returnParameters":{"id":7792,"nodeType":"ParameterList","parameters":[],"src":"21345:0:9"},"scope":7952,"src":"21282:303:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7861,"nodeType":"Block","src":"21652:242:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7832,"name":"coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"21670:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21695:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21687:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7833,"name":"address","nodeType":"ElementaryTypeName","src":"21687:7:9","typeDescriptions":{}}},"id":7836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21687:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21670:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f76657220616c726561647920736574","id":7838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21699:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf06969982625d13a5dac592e3869aa65eee244234efcd23ed5819f8fa87ed21","typeString":"literal_string \"Cover already set\""},"value":"Cover already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf06969982625d13a5dac592e3869aa65eee244234efcd23ed5819f8fa87ed21","typeString":"literal_string \"Cover already set\""}],"id":7831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21662:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21662:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7840,"nodeType":"ExpressionStatement","src":"21662:57:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7842,"name":"_coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"21737:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21763:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21755:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7843,"name":"address","nodeType":"ElementaryTypeName","src":"21755:7:9","typeDescriptions":{}}},"id":7846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21755:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21737:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f76657220616464726573732063616e6e6f74206265207a65726f","id":7848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21767:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d56cc69f27f22cbf2480d52112cfa7186be3676c47e4ce574a575630c6a87b70","typeString":"literal_string \"Cover address cannot be zero\""},"value":"Cover address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d56cc69f27f22cbf2480d52112cfa7186be3676c47e4ce574a575630c6a87b70","typeString":"literal_string \"Cover address cannot be zero\""}],"id":7841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21729:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21729:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7850,"nodeType":"ExpressionStatement","src":"21729:69:9"},{"expression":{"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7851,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"21808:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7853,"name":"_coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"21832:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7852,"name":"ICover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"21825:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICover_$5701_$","typeString":"type(contract ICover)"}},"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21825:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"}},"src":"21808:39:9","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$5701","typeString":"contract ICover"}},"id":7856,"nodeType":"ExpressionStatement","src":"21808:39:9"},{"expression":{"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7857,"name":"coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"21857:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7858,"name":"_coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"21873:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21857:30:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7860,"nodeType":"ExpressionStatement","src":"21857:30:9"}]},"functionSelector":"7c366cc6","id":7862,"implemented":true,"kind":"function","modifiers":[{"id":7829,"kind":"modifierInvocation","modifierName":{"id":7828,"name":"onlyOwner","nameLocations":["21642:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"21642:9:9"},"nodeType":"ModifierInvocation","src":"21642:9:9"}],"name":"setCover","nameLocation":"21600:8:9","nodeType":"FunctionDefinition","parameters":{"id":7827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7826,"mutability":"mutable","name":"_coverContract","nameLocation":"21617:14:9","nodeType":"VariableDeclaration","scope":7862,"src":"21609:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7825,"name":"address","nodeType":"ElementaryTypeName","src":"21609:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21608:24:9"},"returnParameters":{"id":7830,"nodeType":"ParameterList","parameters":[],"src":"21652:0:9"},"scope":7952,"src":"21591:303:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7899,"nodeType":"Block","src":"21961:242:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7870,"name":"vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"21979:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22004:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21996:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7871,"name":"address","nodeType":"ElementaryTypeName","src":"21996:7:9","typeDescriptions":{}}},"id":7874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21996:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21979:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c7420616c726561647920736574","id":7876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22008:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e38982e17d63c9cd56d683e451db7cf94d5da609636149268849933c3fcb1d61","typeString":"literal_string \"Vault already set\""},"value":"Vault already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e38982e17d63c9cd56d683e451db7cf94d5da609636149268849933c3fcb1d61","typeString":"literal_string \"Vault already set\""}],"id":7869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21971:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21971:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7878,"nodeType":"ExpressionStatement","src":"21971:57:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7880,"name":"_vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"22046:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22072:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22064:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7881,"name":"address","nodeType":"ElementaryTypeName","src":"22064:7:9","typeDescriptions":{}}},"id":7884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22064:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22046:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c7420616464726573732063616e6e6f74206265207a65726f","id":7886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22076:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4c6e46ca7903998c69e6bde104e79846c229e93f765588cbede69d118c18e30","typeString":"literal_string \"Vault address cannot be zero\""},"value":"Vault address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4c6e46ca7903998c69e6bde104e79846c229e93f765588cbede69d118c18e30","typeString":"literal_string \"Vault address cannot be zero\""}],"id":7879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"22038:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22038:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7888,"nodeType":"ExpressionStatement","src":"22038:69:9"},{"expression":{"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7889,"name":"IVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"22117:14:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5793","typeString":"contract IVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7891,"name":"_vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"22141:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7890,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"22134:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$5793_$","typeString":"type(contract IVault)"}},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22134:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5793","typeString":"contract IVault"}},"src":"22117:39:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$5793","typeString":"contract IVault"}},"id":7894,"nodeType":"ExpressionStatement","src":"22117:39:9"},{"expression":{"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7895,"name":"coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"22166:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7896,"name":"_vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"22182:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22166:30:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7898,"nodeType":"ExpressionStatement","src":"22166:30:9"}]},"functionSelector":"6817031b","id":7900,"implemented":true,"kind":"function","modifiers":[{"id":7867,"kind":"modifierInvocation","modifierName":{"id":7866,"name":"onlyOwner","nameLocations":["21951:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"21951:9:9"},"nodeType":"ModifierInvocation","src":"21951:9:9"}],"name":"setVault","nameLocation":"21909:8:9","nodeType":"FunctionDefinition","parameters":{"id":7865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7864,"mutability":"mutable","name":"_vaultContract","nameLocation":"21926:14:9","nodeType":"VariableDeclaration","scope":7900,"src":"21918:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7863,"name":"address","nodeType":"ElementaryTypeName","src":"21918:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21917:24:9"},"returnParameters":{"id":7868,"nodeType":"ParameterList","parameters":[],"src":"21961:0:9"},"scope":7952,"src":"21900:303:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7916,"nodeType":"Block","src":"22235:166:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7903,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22266:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22270:6:9","memberName":"sender","nodeType":"MemberAccess","src":"22266:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7905,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"22280:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22266:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22294:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22298:6:9","memberName":"sender","nodeType":"MemberAccess","src":"22294:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7909,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"22308:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22294:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22266:54:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f742074686520676f7665726e616e636520636f6e7472616374","id":7912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22334:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7258deee4e3e974e8adb937bcf0525c89cfdc8dffe55df968eaf3010e43c2203","typeString":"literal_string \"Caller is not the governance contract\""},"value":"Caller is not the governance contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7258deee4e3e974e8adb937bcf0525c89cfdc8dffe55df968eaf3010e43c2203","typeString":"literal_string \"Caller is not the governance contract\""}],"id":7902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"22245:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22245:138:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7914,"nodeType":"ExpressionStatement","src":"22245:138:9"},{"id":7915,"nodeType":"PlaceholderStatement","src":"22393:1:9"}]},"id":7917,"name":"onlyGovernance","nameLocation":"22218:14:9","nodeType":"ModifierDefinition","parameters":{"id":7901,"nodeType":"ParameterList","parameters":[],"src":"22232:2:9"},"src":"22209:192:9","virtual":false,"visibility":"internal"},{"body":{"id":7933,"nodeType":"Block","src":"22428:164:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22459:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22463:6:9","memberName":"sender","nodeType":"MemberAccess","src":"22459:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7922,"name":"coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"22473:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22459:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7924,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22490:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22494:6:9","memberName":"sender","nodeType":"MemberAccess","src":"22490:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7926,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"22504:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22490:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22459:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f742074686520636f76657220636f6e7472616374","id":7929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22530:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4105b43f484ce35ef93573a79e584e52503f039987e7bd0078d5289b73bfbe65","typeString":"literal_string \"Caller is not the cover contract\""},"value":"Caller is not the cover contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4105b43f484ce35ef93573a79e584e52503f039987e7bd0078d5289b73bfbe65","typeString":"literal_string \"Caller is not the cover contract\""}],"id":7919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"22438:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22438:136:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7931,"nodeType":"ExpressionStatement","src":"22438:136:9"},{"id":7932,"nodeType":"PlaceholderStatement","src":"22584:1:9"}]},"id":7934,"name":"onlyCover","nameLocation":"22416:9:9","nodeType":"ModifierDefinition","parameters":{"id":7918,"nodeType":"ParameterList","parameters":[],"src":"22425:2:9"},"src":"22407:185:9","virtual":false,"visibility":"internal"},{"body":{"id":7950,"nodeType":"Block","src":"22619:164:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7937,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22650:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22654:6:9","memberName":"sender","nodeType":"MemberAccess","src":"22650:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7939,"name":"vaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"22664:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22650:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22681:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22685:6:9","memberName":"sender","nodeType":"MemberAccess","src":"22681:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7943,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"22695:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22681:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22650:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420746865207661756c7420636f6e7472616374","id":7946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22721:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe939ee76b103de45e0c8c4da2b2ea630a7678d905f1fa29f2723abfbf838b6c","typeString":"literal_string \"Caller is not the vault contract\""},"value":"Caller is not the vault contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fe939ee76b103de45e0c8c4da2b2ea630a7678d905f1fa29f2723abfbf838b6c","typeString":"literal_string \"Caller is not the vault contract\""}],"id":7936,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"22629:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22629:136:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7948,"nodeType":"ExpressionStatement","src":"22629:136:9"},{"id":7949,"nodeType":"PlaceholderStatement","src":"22775:1:9"}]},"id":7951,"name":"onlyVault","nameLocation":"22607:9:9","nodeType":"ModifierDefinition","parameters":{"id":7935,"nodeType":"ParameterList","parameters":[],"src":"22616:2:9"},"src":"22598:185:9","virtual":false,"visibility":"internal"}],"scope":7953,"src":"2917:19868:9","usedErrors":[13,18,321],"usedEvents":[24,6019,6027,6035,6041,6049,6057]}],"src":"32:22754:9"},"id":9},"contracts/Vaults.sol":{"ast":{"absolutePath":"contracts/Vaults.sol","exportedSymbols":{"Context":[255],"CoverLib":[3864],"ICover":[7982],"IERC20":[225],"IGov":[8103],"IPool":[8046],"IbqBTC":[8008],"Ownable":[147],"ReentrancyGuard":[376],"Vaults":[9094]},"id":9095,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7954,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7955,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9095,"sourceUnit":226,"src":"60:56:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9095,"sourceUnit":377,"src":"118:59:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7957,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9095,"sourceUnit":148,"src":"179:52:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CoverLib.sol","file":"./CoverLib.sol","id":7958,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9095,"sourceUnit":3865,"src":"233:24:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ICover","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7982,"linearizedBaseContracts":[7982],"name":"ICover","nameLocation":"271:6:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"106b5da1","id":7963,"implemented":false,"kind":"function","modifiers":[],"name":"updateMaxAmount","nameLocation":"294:15:10","nodeType":"FunctionDefinition","parameters":{"id":7961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7960,"mutability":"mutable","name":"_coverId","nameLocation":"318:8:10","nodeType":"VariableDeclaration","scope":7963,"src":"310:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7959,"name":"uint256","nodeType":"ElementaryTypeName","src":"310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"309:18:10"},"returnParameters":{"id":7962,"nodeType":"ParameterList","parameters":[],"src":"336:0:10"},"scope":7982,"src":"285:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"73cce3ee","id":7972,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositClaimableDays","nameLocation":"352:23:10","nodeType":"FunctionDefinition","parameters":{"id":7968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7965,"mutability":"mutable","name":"user","nameLocation":"394:4:10","nodeType":"VariableDeclaration","scope":7972,"src":"386:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7964,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7967,"mutability":"mutable","name":"_poolId","nameLocation":"417:7:10","nodeType":"VariableDeclaration","scope":7972,"src":"409:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7966,"name":"uint256","nodeType":"ElementaryTypeName","src":"409:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"375:56:10"},"returnParameters":{"id":7971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7972,"src":"455:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7969,"name":"uint256","nodeType":"ElementaryTypeName","src":"455:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"454:9:10"},"scope":7982,"src":"343:121:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"10525814","id":7981,"implemented":false,"kind":"function","modifiers":[],"name":"getLastClaimTime","nameLocation":"479:16:10","nodeType":"FunctionDefinition","parameters":{"id":7977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7974,"mutability":"mutable","name":"user","nameLocation":"514:4:10","nodeType":"VariableDeclaration","scope":7981,"src":"506:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7973,"name":"address","nodeType":"ElementaryTypeName","src":"506:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7976,"mutability":"mutable","name":"_poolId","nameLocation":"537:7:10","nodeType":"VariableDeclaration","scope":7981,"src":"529:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7975,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"495:56:10"},"returnParameters":{"id":7980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7981,"src":"575:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7978,"name":"uint256","nodeType":"ElementaryTypeName","src":"575:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"574:9:10"},"scope":7982,"src":"470:114:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9095,"src":"261:326:10","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IbqBTC","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8008,"linearizedBaseContracts":[8008],"name":"IbqBTC","nameLocation":"601:6:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e2094eda","id":7989,"implemented":false,"kind":"function","modifiers":[],"name":"bqMint","nameLocation":"624:6:10","nodeType":"FunctionDefinition","parameters":{"id":7987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7984,"mutability":"mutable","name":"account","nameLocation":"639:7:10","nodeType":"VariableDeclaration","scope":7989,"src":"631:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7983,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7986,"mutability":"mutable","name":"amount","nameLocation":"656:6:10","nodeType":"VariableDeclaration","scope":7989,"src":"648:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7985,"name":"uint256","nodeType":"ElementaryTypeName","src":"648:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"630:33:10"},"returnParameters":{"id":7988,"nodeType":"ParameterList","parameters":[],"src":"672:0:10"},"scope":8008,"src":"615:58:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9dc29fac","id":7996,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"688:4:10","nodeType":"FunctionDefinition","parameters":{"id":7994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7991,"mutability":"mutable","name":"account","nameLocation":"701:7:10","nodeType":"VariableDeclaration","scope":7996,"src":"693:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7990,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7993,"mutability":"mutable","name":"amount","nameLocation":"718:6:10","nodeType":"VariableDeclaration","scope":7996,"src":"710:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7992,"name":"uint256","nodeType":"ElementaryTypeName","src":"710:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"692:33:10"},"returnParameters":{"id":7995,"nodeType":"ParameterList","parameters":[],"src":"734:0:10"},"scope":8008,"src":"679:56:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":8007,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"750:12:10","nodeType":"FunctionDefinition","parameters":{"id":8003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7998,"mutability":"mutable","name":"from","nameLocation":"781:4:10","nodeType":"VariableDeclaration","scope":8007,"src":"773:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7997,"name":"address","nodeType":"ElementaryTypeName","src":"773:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8000,"mutability":"mutable","name":"to","nameLocation":"804:2:10","nodeType":"VariableDeclaration","scope":8007,"src":"796:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7999,"name":"address","nodeType":"ElementaryTypeName","src":"796:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8002,"mutability":"mutable","name":"amount","nameLocation":"825:6:10","nodeType":"VariableDeclaration","scope":8007,"src":"817:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8001,"name":"uint256","nodeType":"ElementaryTypeName","src":"817:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"762:76:10"},"returnParameters":{"id":8006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8007,"src":"857:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8004,"name":"bool","nodeType":"ElementaryTypeName","src":"857:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"856:6:10"},"scope":8008,"src":"741:122:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9095,"src":"591:275:10","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8046,"linearizedBaseContracts":[8046],"name":"IPool","nameLocation":"880:5:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2607b539","id":8018,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"902:7:10","nodeType":"FunctionDefinition","parameters":{"id":8012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8011,"mutability":"mutable","name":"depositParam","nameLocation":"950:12:10","nodeType":"VariableDeclaration","scope":8018,"src":"920:42:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams"},"typeName":{"id":8010,"nodeType":"UserDefinedTypeName","pathNode":{"id":8009,"name":"CoverLib.DepositParams","nameLocations":["920:8:10","929:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3766,"src":"920:22:10"},"referencedDeclaration":3766,"src":"920:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_storage_ptr","typeString":"struct CoverLib.DepositParams"}},"visibility":"internal"}],"src":"909:60:10"},"returnParameters":{"id":8017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8018,"src":"996:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8013,"name":"uint256","nodeType":"ElementaryTypeName","src":"996:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8018,"src":"1005:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"995:18:10"},"scope":8046,"src":"893:121:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"83bc6357","id":8028,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawUpdate","nameLocation":"1031:14:10","nodeType":"FunctionDefinition","parameters":{"id":8026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8020,"mutability":"mutable","name":"depositor","nameLocation":"1064:9:10","nodeType":"VariableDeclaration","scope":8028,"src":"1056:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8019,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8022,"mutability":"mutable","name":"_poolId","nameLocation":"1092:7:10","nodeType":"VariableDeclaration","scope":8028,"src":"1084:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1084:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8025,"mutability":"mutable","name":"pdt","nameLocation":"1131:3:10","nodeType":"VariableDeclaration","scope":8028,"src":"1110:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"},"typeName":{"id":8024,"nodeType":"UserDefinedTypeName","pathNode":{"id":8023,"name":"CoverLib.DepositType","nameLocations":["1110:8:10","1119:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"1110:20:10"},"referencedDeclaration":3826,"src":"1110:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"visibility":"internal"}],"src":"1045:96:10"},"returnParameters":{"id":8027,"nodeType":"ParameterList","parameters":[],"src":"1150:0:10"},"scope":8046,"src":"1022:129:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"502f4d3c","id":8037,"implemented":false,"kind":"function","modifiers":[],"name":"updateVaultWithdrawToDue","nameLocation":"1166:24:10","nodeType":"FunctionDefinition","parameters":{"id":8035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8030,"mutability":"mutable","name":"user","nameLocation":"1209:4:10","nodeType":"VariableDeclaration","scope":8037,"src":"1201:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8029,"name":"address","nodeType":"ElementaryTypeName","src":"1201:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8032,"mutability":"mutable","name":"vaultId","nameLocation":"1232:7:10","nodeType":"VariableDeclaration","scope":8037,"src":"1224:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8034,"mutability":"mutable","name":"amount","nameLocation":"1258:6:10","nodeType":"VariableDeclaration","scope":8037,"src":"1250:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1190:81:10"},"returnParameters":{"id":8036,"nodeType":"ParameterList","parameters":[],"src":"1280:0:10"},"scope":8046,"src":"1157:124:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"068bcd8d","id":8045,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"1298:7:10","nodeType":"FunctionDefinition","parameters":{"id":8040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8039,"mutability":"mutable","name":"_poolId","nameLocation":"1324:7:10","nodeType":"VariableDeclaration","scope":8045,"src":"1316:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1305:33:10"},"returnParameters":{"id":8044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8045,"src":"1362:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":8042,"nodeType":"UserDefinedTypeName","pathNode":{"id":8041,"name":"CoverLib.Pool","nameLocations":["1362:8:10","1371:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"1362:13:10"},"referencedDeclaration":3859,"src":"1362:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"src":"1361:22:10"},"scope":8046,"src":"1289:95:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9095,"src":"870:517:10","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IGov","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8103,"linearizedBaseContracts":[8103],"name":"IGov","nameLocation":"1401:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IGov.ProposalParams","id":8062,"members":[{"constant":false,"id":8048,"mutability":"mutable","name":"user","nameLocation":"1454:4:10","nodeType":"VariableDeclaration","scope":8062,"src":"1446:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8047,"name":"address","nodeType":"ElementaryTypeName","src":"1446:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8051,"mutability":"mutable","name":"riskType","nameLocation":"1487:8:10","nodeType":"VariableDeclaration","scope":8062,"src":"1469:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"},"typeName":{"id":8050,"nodeType":"UserDefinedTypeName","pathNode":{"id":8049,"name":"CoverLib.RiskType","nameLocations":["1469:8:10","1478:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3814,"src":"1469:17:10"},"referencedDeclaration":3814,"src":"1469:17:10","typeDescriptions":{"typeIdentifier":"t_enum$_RiskType_$3814","typeString":"enum CoverLib.RiskType"}},"visibility":"internal"},{"constant":false,"id":8053,"mutability":"mutable","name":"coverId","nameLocation":"1514:7:10","nodeType":"VariableDeclaration","scope":8062,"src":"1506:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8055,"mutability":"mutable","name":"txHash","nameLocation":"1539:6:10","nodeType":"VariableDeclaration","scope":8062,"src":"1532:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8054,"name":"string","nodeType":"ElementaryTypeName","src":"1532:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8057,"mutability":"mutable","name":"description","nameLocation":"1563:11:10","nodeType":"VariableDeclaration","scope":8062,"src":"1556:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8056,"name":"string","nodeType":"ElementaryTypeName","src":"1556:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8059,"mutability":"mutable","name":"poolId","nameLocation":"1593:6:10","nodeType":"VariableDeclaration","scope":8062,"src":"1585:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8061,"mutability":"mutable","name":"claimAmount","nameLocation":"1618:11:10","nodeType":"VariableDeclaration","scope":8062,"src":"1610:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ProposalParams","nameLocation":"1420:14:10","nodeType":"StructDefinition","scope":8103,"src":"1413:224:10","visibility":"public"},{"canonicalName":"IGov.Proposal","id":8083,"members":[{"constant":false,"id":8064,"mutability":"mutable","name":"id","nameLocation":"1680:2:10","nodeType":"VariableDeclaration","scope":8083,"src":"1672:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1672:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8066,"mutability":"mutable","name":"votesFor","nameLocation":"1701:8:10","nodeType":"VariableDeclaration","scope":8083,"src":"1693:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1693:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8068,"mutability":"mutable","name":"votesAgainst","nameLocation":"1728:12:10","nodeType":"VariableDeclaration","scope":8083,"src":"1720:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8070,"mutability":"mutable","name":"createdAt","nameLocation":"1759:9:10","nodeType":"VariableDeclaration","scope":8083,"src":"1751:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8072,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:10","nodeType":"VariableDeclaration","scope":8083,"src":"1779:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8074,"mutability":"mutable","name":"timeleft","nameLocation":"1814:8:10","nodeType":"VariableDeclaration","scope":8083,"src":"1806:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1806:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8077,"mutability":"mutable","name":"status","nameLocation":"1847:6:10","nodeType":"VariableDeclaration","scope":8083,"src":"1833:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalStaus_$8089","typeString":"enum IGov.ProposalStaus"},"typeName":{"id":8076,"nodeType":"UserDefinedTypeName","pathNode":{"id":8075,"name":"ProposalStaus","nameLocations":["1833:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":8089,"src":"1833:13:10"},"referencedDeclaration":8089,"src":"1833:13:10","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalStaus_$8089","typeString":"enum IGov.ProposalStaus"}},"visibility":"internal"},{"constant":false,"id":8079,"mutability":"mutable","name":"executed","nameLocation":"1869:8:10","nodeType":"VariableDeclaration","scope":8083,"src":"1864:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8078,"name":"bool","nodeType":"ElementaryTypeName","src":"1864:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8082,"mutability":"mutable","name":"proposalParam","nameLocation":"1903:13:10","nodeType":"VariableDeclaration","scope":8083,"src":"1888:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$8062_storage_ptr","typeString":"struct IGov.ProposalParams"},"typeName":{"id":8081,"nodeType":"UserDefinedTypeName","pathNode":{"id":8080,"name":"ProposalParams","nameLocations":["1888:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":8062,"src":"1888:14:10"},"referencedDeclaration":8062,"src":"1888:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalParams_$8062_storage_ptr","typeString":"struct IGov.ProposalParams"}},"visibility":"internal"}],"name":"Proposal","nameLocation":"1652:8:10","nodeType":"StructDefinition","scope":8103,"src":"1645:279:10","visibility":"public"},{"canonicalName":"IGov.ProposalStaus","id":8089,"members":[{"id":8084,"name":"Submitted","nameLocation":"1962:9:10","nodeType":"EnumValue","src":"1962:9:10"},{"id":8085,"name":"Pending","nameLocation":"1982:7:10","nodeType":"EnumValue","src":"1982:7:10"},{"id":8086,"name":"Approved","nameLocation":"2000:8:10","nodeType":"EnumValue","src":"2000:8:10"},{"id":8087,"name":"Claimed","nameLocation":"2019:7:10","nodeType":"EnumValue","src":"2019:7:10"},{"id":8088,"name":"Rejected","nameLocation":"2037:8:10","nodeType":"EnumValue","src":"2037:8:10"}],"name":"ProposalStaus","nameLocation":"1937:13:10","nodeType":"EnumDefinition","src":"1932:120:10"},{"functionSelector":"3b4d01a7","id":8097,"implemented":false,"kind":"function","modifiers":[],"name":"getProposalDetails","nameLocation":"2069:18:10","nodeType":"FunctionDefinition","parameters":{"id":8092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8091,"mutability":"mutable","name":"_proposalId","nameLocation":"2106:11:10","nodeType":"VariableDeclaration","scope":8097,"src":"2098:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8090,"name":"uint256","nodeType":"ElementaryTypeName","src":"2098:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2087:37:10"},"returnParameters":{"id":8096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8097,"src":"2143:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8083_memory_ptr","typeString":"struct IGov.Proposal"},"typeName":{"id":8094,"nodeType":"UserDefinedTypeName","pathNode":{"id":8093,"name":"Proposal","nameLocations":["2143:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":8083,"src":"2143:8:10"},"referencedDeclaration":8083,"src":"2143:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8083_storage_ptr","typeString":"struct IGov.Proposal"}},"visibility":"internal"}],"src":"2142:17:10"},"scope":8103,"src":"2060:100:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1b4bf9d","id":8102,"implemented":false,"kind":"function","modifiers":[],"name":"updateProposalStatusToClaimed","nameLocation":"2175:29:10","nodeType":"FunctionDefinition","parameters":{"id":8100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8099,"mutability":"mutable","name":"proposalId","nameLocation":"2213:10:10","nodeType":"VariableDeclaration","scope":8102,"src":"2205:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2205:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2204:20:10"},"returnParameters":{"id":8101,"nodeType":"ParameterList","parameters":[],"src":"2233:0:10"},"scope":8103,"src":"2166:68:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9095,"src":"1391:846:10","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":8104,"name":"ReentrancyGuard","nameLocations":["2260:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":376,"src":"2260:15:10"},"id":8105,"nodeType":"InheritanceSpecifier","src":"2260:15:10"},{"baseName":{"id":8106,"name":"Ownable","nameLocations":["2277:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2277:7:10"},"id":8107,"nodeType":"InheritanceSpecifier","src":"2277:7:10"}],"canonicalName":"Vaults","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9094,"linearizedBaseContracts":[9094,147,255,376],"name":"Vaults","nameLocation":"2250:6:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8109,"libraryName":{"id":8108,"name":"CoverLib","nameLocations":["2298:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3864,"src":"2298:8:10"},"nodeType":"UsingForDirective","src":"2292:21:10"},{"canonicalName":"Vaults.Vault","id":8129,"members":[{"constant":false,"id":8111,"mutability":"mutable","name":"id","nameLocation":"2353:2:10","nodeType":"VariableDeclaration","scope":8129,"src":"2345:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8113,"mutability":"mutable","name":"vaultName","nameLocation":"2373:9:10","nodeType":"VariableDeclaration","scope":8129,"src":"2366:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8112,"name":"string","nodeType":"ElementaryTypeName","src":"2366:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8117,"mutability":"mutable","name":"pools","nameLocation":"2409:5:10","nodeType":"VariableDeclaration","scope":8129,"src":"2393:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"},"typeName":{"baseType":{"id":8115,"nodeType":"UserDefinedTypeName","pathNode":{"id":8114,"name":"CoverLib.Pool","nameLocations":["2393:8:10","2402:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"2393:13:10"},"referencedDeclaration":3859,"src":"2393:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"id":8116,"nodeType":"ArrayTypeName","src":"2393:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"}},"visibility":"internal"},{"constant":false,"id":8119,"mutability":"mutable","name":"minInv","nameLocation":"2433:6:10","nodeType":"VariableDeclaration","scope":8129,"src":"2425:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2425:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8121,"mutability":"mutable","name":"maxInv","nameLocation":"2458:6:10","nodeType":"VariableDeclaration","scope":8129,"src":"2450:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2450:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8123,"mutability":"mutable","name":"minPeriod","nameLocation":"2483:9:10","nodeType":"VariableDeclaration","scope":8129,"src":"2475:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8126,"mutability":"mutable","name":"assetType","nameLocation":"2529:9:10","nodeType":"VariableDeclaration","scope":8129,"src":"2503:35:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":8125,"nodeType":"UserDefinedTypeName","pathNode":{"id":8124,"name":"CoverLib.AssetDepositType","nameLocations":["2503:8:10","2512:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"2503:25:10"},"referencedDeclaration":3823,"src":"2503:25:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":8128,"mutability":"mutable","name":"asset","nameLocation":"2557:5:10","nodeType":"VariableDeclaration","scope":8129,"src":"2549:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8127,"name":"address","nodeType":"ElementaryTypeName","src":"2549:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Vault","nameLocation":"2328:5:10","nodeType":"StructDefinition","scope":9094,"src":"2321:249:10","visibility":"public"},{"canonicalName":"Vaults.Deposits","id":8149,"members":[{"constant":false,"id":8131,"mutability":"mutable","name":"lp","nameLocation":"2613:2:10","nodeType":"VariableDeclaration","scope":8149,"src":"2605:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8130,"name":"address","nodeType":"ElementaryTypeName","src":"2605:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8133,"mutability":"mutable","name":"amount","nameLocation":"2634:6:10","nodeType":"VariableDeclaration","scope":8149,"src":"2626:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8132,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8135,"mutability":"mutable","name":"poolId","nameLocation":"2659:6:10","nodeType":"VariableDeclaration","scope":8149,"src":"2651:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2651:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8137,"mutability":"mutable","name":"dailyPayout","nameLocation":"2684:11:10","nodeType":"VariableDeclaration","scope":8149,"src":"2676:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2676:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8140,"mutability":"mutable","name":"status","nameLocation":"2722:6:10","nodeType":"VariableDeclaration","scope":8149,"src":"2706:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"},"typeName":{"id":8139,"nodeType":"UserDefinedTypeName","pathNode":{"id":8138,"name":"CoverLib.Status","nameLocations":["2706:8:10","2715:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3863,"src":"2706:15:10"},"referencedDeclaration":3863,"src":"2706:15:10","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"visibility":"internal"},{"constant":false,"id":8142,"mutability":"mutable","name":"daysLeft","nameLocation":"2747:8:10","nodeType":"VariableDeclaration","scope":8149,"src":"2739:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8144,"mutability":"mutable","name":"startDate","nameLocation":"2774:9:10","nodeType":"VariableDeclaration","scope":8149,"src":"2766:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2766:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8146,"mutability":"mutable","name":"expiryDate","nameLocation":"2802:10:10","nodeType":"VariableDeclaration","scope":8149,"src":"2794:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2794:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8148,"mutability":"mutable","name":"accruedPayout","nameLocation":"2831:13:10","nodeType":"VariableDeclaration","scope":8149,"src":"2823:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2823:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Deposits","nameLocation":"2585:8:10","nodeType":"StructDefinition","scope":9094,"src":"2578:274:10","visibility":"public"},{"canonicalName":"Vaults.VaultDeposit","id":8169,"members":[{"constant":false,"id":8151,"mutability":"mutable","name":"lp","nameLocation":"2899:2:10","nodeType":"VariableDeclaration","scope":8169,"src":"2891:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8150,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8153,"mutability":"mutable","name":"amount","nameLocation":"2920:6:10","nodeType":"VariableDeclaration","scope":8169,"src":"2912:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2912:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8155,"mutability":"mutable","name":"vaultId","nameLocation":"2945:7:10","nodeType":"VariableDeclaration","scope":8169,"src":"2937:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2937:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8157,"mutability":"mutable","name":"dailyPayout","nameLocation":"2971:11:10","nodeType":"VariableDeclaration","scope":8169,"src":"2963:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2963:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8160,"mutability":"mutable","name":"status","nameLocation":"3009:6:10","nodeType":"VariableDeclaration","scope":8169,"src":"2993:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"},"typeName":{"id":8159,"nodeType":"UserDefinedTypeName","pathNode":{"id":8158,"name":"CoverLib.Status","nameLocations":["2993:8:10","3002:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3863,"src":"2993:15:10"},"referencedDeclaration":3863,"src":"2993:15:10","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"visibility":"internal"},{"constant":false,"id":8162,"mutability":"mutable","name":"daysLeft","nameLocation":"3034:8:10","nodeType":"VariableDeclaration","scope":8169,"src":"3026:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8161,"name":"uint256","nodeType":"ElementaryTypeName","src":"3026:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8164,"mutability":"mutable","name":"startDate","nameLocation":"3061:9:10","nodeType":"VariableDeclaration","scope":8169,"src":"3053:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8166,"mutability":"mutable","name":"expiryDate","nameLocation":"3089:10:10","nodeType":"VariableDeclaration","scope":8169,"src":"3081:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3081:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8168,"mutability":"mutable","name":"accruedPayout","nameLocation":"3118:13:10","nodeType":"VariableDeclaration","scope":8169,"src":"3110:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8167,"name":"uint256","nodeType":"ElementaryTypeName","src":"3110:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VaultDeposit","nameLocation":"2867:12:10","nodeType":"StructDefinition","scope":9094,"src":"2860:279:10","visibility":"public"},{"canonicalName":"Vaults.PoolInfo","id":8190,"members":[{"constant":false,"id":8171,"mutability":"mutable","name":"poolName","nameLocation":"3181:8:10","nodeType":"VariableDeclaration","scope":8190,"src":"3174:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8170,"name":"string","nodeType":"ElementaryTypeName","src":"3174:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8173,"mutability":"mutable","name":"poolId","nameLocation":"3208:6:10","nodeType":"VariableDeclaration","scope":8190,"src":"3200:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8172,"name":"uint256","nodeType":"ElementaryTypeName","src":"3200:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8175,"mutability":"mutable","name":"dailyPayout","nameLocation":"3233:11:10","nodeType":"VariableDeclaration","scope":8190,"src":"3225:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3225:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8177,"mutability":"mutable","name":"depositAmount","nameLocation":"3263:13:10","nodeType":"VariableDeclaration","scope":8190,"src":"3255:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8176,"name":"uint256","nodeType":"ElementaryTypeName","src":"3255:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8179,"mutability":"mutable","name":"apy","nameLocation":"3295:3:10","nodeType":"VariableDeclaration","scope":8190,"src":"3287:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8178,"name":"uint256","nodeType":"ElementaryTypeName","src":"3287:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8181,"mutability":"mutable","name":"minPeriod","nameLocation":"3317:9:10","nodeType":"VariableDeclaration","scope":8190,"src":"3309:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8180,"name":"uint256","nodeType":"ElementaryTypeName","src":"3309:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8183,"mutability":"mutable","name":"tvl","nameLocation":"3345:3:10","nodeType":"VariableDeclaration","scope":8190,"src":"3337:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3337:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8185,"mutability":"mutable","name":"tcp","nameLocation":"3367:3:10","nodeType":"VariableDeclaration","scope":8190,"src":"3359:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3359:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8187,"mutability":"mutable","name":"isActive","nameLocation":"3415:8:10","nodeType":"VariableDeclaration","scope":8190,"src":"3410:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8186,"name":"bool","nodeType":"ElementaryTypeName","src":"3410:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8189,"mutability":"mutable","name":"accruedPayout","nameLocation":"3481:13:10","nodeType":"VariableDeclaration","scope":8190,"src":"3473:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3473:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"3154:8:10","nodeType":"StructDefinition","scope":9094,"src":"3147:355:10","visibility":"public"},{"constant":false,"id":8196,"mutability":"mutable","name":"vaultPercentageSplits","nameLocation":"3558:21:10","nodeType":"VariableDeclaration","scope":9094,"src":"3510:69:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"typeName":{"id":8195,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3510:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8194,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3537:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3529:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8193,"name":"uint256","nodeType":"ElementaryTypeName","src":"3548:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":8201,"mutability":"mutable","name":"vaults","nameLocation":"3664:6:10","nodeType":"VariableDeclaration","scope":9094,"src":"3638:32:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vault_$8129_storage_$","typeString":"mapping(uint256 => struct Vaults.Vault)"},"typeName":{"id":8200,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3638:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vault_$8129_storage_$","typeString":"mapping(uint256 => struct Vaults.Vault)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8199,"nodeType":"UserDefinedTypeName","pathNode":{"id":8198,"name":"Vault","nameLocations":["3657:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8129,"src":"3657:5:10"},"referencedDeclaration":8129,"src":"3657:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"}}},"visibility":"internal"},{"constant":false,"id":8211,"mutability":"mutable","name":"deposits","nameLocation":"3759:8:10","nodeType":"VariableDeclaration","scope":9094,"src":"3677:90:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$8149_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct Vaults.Deposits)))"},"typeName":{"id":8210,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8202,"name":"address","nodeType":"ElementaryTypeName","src":"3685:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3677:81:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$8149_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct Vaults.Deposits)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8209,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3696:61:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$8149_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct Vaults.Deposits))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8208,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8205,"nodeType":"UserDefinedTypeName","pathNode":{"id":8204,"name":"CoverLib.DepositType","nameLocations":["3723:8:10","3732:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"3723:20:10"},"referencedDeclaration":3826,"src":"3723:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"nodeType":"Mapping","src":"3715:41:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$8149_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct Vaults.Deposits)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8207,"nodeType":"UserDefinedTypeName","pathNode":{"id":8206,"name":"Deposits","nameLocations":["3747:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":8149,"src":"3747:8:10"},"referencedDeclaration":8149,"src":"3747:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$8149_storage_ptr","typeString":"struct Vaults.Deposits"}}}}},"visibility":"internal"},{"constant":false,"id":8218,"mutability":"mutable","name":"userVaultDeposits","nameLocation":"3827:17:10","nodeType":"VariableDeclaration","scope":9094,"src":"3774:70:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Vaults.VaultDeposit))"},"typeName":{"id":8217,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8212,"name":"address","nodeType":"ElementaryTypeName","src":"3782:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3774:52:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Vaults.VaultDeposit))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8216,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3801:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3793:32:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$","typeString":"mapping(uint256 => struct Vaults.VaultDeposit)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8215,"nodeType":"UserDefinedTypeName","pathNode":{"id":8214,"name":"VaultDeposit","nameLocations":["3812:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":8169,"src":"3812:12:10"},"referencedDeclaration":8169,"src":"3812:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage_ptr","typeString":"struct Vaults.VaultDeposit"}}}},"visibility":"internal"},{"constant":false,"functionSelector":"a7c6a100","id":8220,"mutability":"mutable","name":"vaultCount","nameLocation":"3866:10:10","nodeType":"VariableDeclaration","scope":9094,"src":"3851:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8219,"name":"uint256","nodeType":"ElementaryTypeName","src":"3851:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5aa6e675","id":8222,"mutability":"mutable","name":"governance","nameLocation":"3898:10:10","nodeType":"VariableDeclaration","scope":9094,"src":"3883:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8221,"name":"address","nodeType":"ElementaryTypeName","src":"3883:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f6e80558","id":8225,"mutability":"mutable","name":"ICoverContract","nameLocation":"3929:14:10","nodeType":"VariableDeclaration","scope":9094,"src":"3915:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$7982","typeString":"contract ICover"},"typeName":{"id":8224,"nodeType":"UserDefinedTypeName","pathNode":{"id":8223,"name":"ICover","nameLocations":["3915:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":7982,"src":"3915:6:10"},"referencedDeclaration":7982,"src":"3915:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$7982","typeString":"contract ICover"}},"visibility":"public"},{"constant":false,"functionSelector":"b30703cd","id":8228,"mutability":"mutable","name":"IPoolContract","nameLocation":"3963:13:10","nodeType":"VariableDeclaration","scope":9094,"src":"3950:26:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$8046","typeString":"contract IPool"},"typeName":{"id":8227,"nodeType":"UserDefinedTypeName","pathNode":{"id":8226,"name":"IPool","nameLocations":["3950:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8046,"src":"3950:5:10"},"referencedDeclaration":8046,"src":"3950:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$8046","typeString":"contract IPool"}},"visibility":"public"},{"constant":false,"functionSelector":"b5d90c28","id":8231,"mutability":"mutable","name":"IGovernanceContract","nameLocation":"3995:19:10","nodeType":"VariableDeclaration","scope":9094,"src":"3983:31:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$8103","typeString":"contract IGov"},"typeName":{"id":8230,"nodeType":"UserDefinedTypeName","pathNode":{"id":8229,"name":"IGov","nameLocations":["3983:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":8103,"src":"3983:4:10"},"referencedDeclaration":8103,"src":"3983:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$8103","typeString":"contract IGov"}},"visibility":"public"},{"constant":false,"functionSelector":"34808ec3","id":8234,"mutability":"mutable","name":"bqBTC","nameLocation":"4035:5:10","nodeType":"VariableDeclaration","scope":9094,"src":"4021:19:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$8008","typeString":"contract IbqBTC"},"typeName":{"id":8233,"nodeType":"UserDefinedTypeName","pathNode":{"id":8232,"name":"IbqBTC","nameLocations":["4021:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":8008,"src":"4021:6:10"},"referencedDeclaration":8008,"src":"4021:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$8008","typeString":"contract IbqBTC"}},"visibility":"public"},{"constant":false,"functionSelector":"88d52ef7","id":8236,"mutability":"mutable","name":"poolContract","nameLocation":"4062:12:10","nodeType":"VariableDeclaration","scope":9094,"src":"4047:27:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8235,"name":"address","nodeType":"ElementaryTypeName","src":"4047:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"996b8a6f","id":8238,"mutability":"mutable","name":"bqBTCAddress","nameLocation":"4096:12:10","nodeType":"VariableDeclaration","scope":9094,"src":"4081:27:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8237,"name":"address","nodeType":"ElementaryTypeName","src":"4081:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"248a75b7","id":8240,"mutability":"mutable","name":"coverContract","nameLocation":"4130:13:10","nodeType":"VariableDeclaration","scope":9094,"src":"4115:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8239,"name":"address","nodeType":"ElementaryTypeName","src":"4115:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"29ba7bb2","id":8242,"mutability":"mutable","name":"initialOwner","nameLocation":"4165:12:10","nodeType":"VariableDeclaration","scope":9094,"src":"4150:27:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8241,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"35c1d349","id":8245,"mutability":"mutable","name":"participants","nameLocation":"4201:12:10","nodeType":"VariableDeclaration","scope":9094,"src":"4184:29:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":8243,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8244,"nodeType":"ArrayTypeName","src":"4184:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"96f3a8ad","id":8249,"mutability":"mutable","name":"participation","nameLocation":"4255:13:10","nodeType":"VariableDeclaration","scope":9094,"src":"4220:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8248,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8246,"name":"address","nodeType":"ElementaryTypeName","src":"4228:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4220:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8247,"name":"uint256","nodeType":"ElementaryTypeName","src":"4239:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"6f85d9948d6ca3dd6ce6ce7d175da22b4e865827ae6fcd530ec7edac1240f928","id":8257,"name":"Deposited","nameLocation":"4283:9:10","nodeType":"EventDefinition","parameters":{"id":8256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8251,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4309:4:10","nodeType":"VariableDeclaration","scope":8257,"src":"4293:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8250,"name":"address","nodeType":"ElementaryTypeName","src":"4293:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8253,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4323:6:10","nodeType":"VariableDeclaration","scope":8257,"src":"4315:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8252,"name":"uint256","nodeType":"ElementaryTypeName","src":"4315:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8255,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"4338:4:10","nodeType":"VariableDeclaration","scope":8257,"src":"4331:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8254,"name":"string","nodeType":"ElementaryTypeName","src":"4331:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4292:51:10"},"src":"4277:67:10"},{"anonymous":false,"eventSelector":"485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d9751","id":8265,"name":"Withdraw","nameLocation":"4356:8:10","nodeType":"EventDefinition","parameters":{"id":8264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8259,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4381:4:10","nodeType":"VariableDeclaration","scope":8265,"src":"4365:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8258,"name":"address","nodeType":"ElementaryTypeName","src":"4365:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8261,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4395:6:10","nodeType":"VariableDeclaration","scope":8265,"src":"4387:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8260,"name":"uint256","nodeType":"ElementaryTypeName","src":"4387:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8263,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"4410:4:10","nodeType":"VariableDeclaration","scope":8265,"src":"4403:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8262,"name":"string","nodeType":"ElementaryTypeName","src":"4403:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4364:51:10"},"src":"4350:66:10"},{"anonymous":false,"eventSelector":"415071086c9ea63f7f39884c21a8af430af53bfd511a362dff69cabcb1b8bcc1","id":8273,"name":"ClaimPaid","nameLocation":"4428:9:10","nodeType":"EventDefinition","parameters":{"id":8272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8267,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4454:9:10","nodeType":"VariableDeclaration","scope":8273,"src":"4438:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8266,"name":"address","nodeType":"ElementaryTypeName","src":"4438:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8269,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"4472:4:10","nodeType":"VariableDeclaration","scope":8273,"src":"4465:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8268,"name":"string","nodeType":"ElementaryTypeName","src":"4465:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8271,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4486:6:10","nodeType":"VariableDeclaration","scope":8273,"src":"4478:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8270,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4437:56:10"},"src":"4422:72:10"},{"anonymous":false,"eventSelector":"f01906dc0ac306fa816e50166a7ed46af1f05721cb90cea30beebdd8dede3a6d","id":8279,"name":"PoolCreated","nameLocation":"4506:11:10","nodeType":"EventDefinition","parameters":{"id":8278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8275,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"4534:2:10","nodeType":"VariableDeclaration","scope":8279,"src":"4518:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4518:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8277,"indexed":false,"mutability":"mutable","name":"poolName","nameLocation":"4545:8:10","nodeType":"VariableDeclaration","scope":8279,"src":"4538:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8276,"name":"string","nodeType":"ElementaryTypeName","src":"4538:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4517:37:10"},"src":"4500:55:10"},{"anonymous":false,"eventSelector":"17b8644f386d1c7c7138ef98b3c8035622bbe94d7be9b26f71d2654a547c2943","id":8287,"name":"PoolUpdated","nameLocation":"4567:11:10","nodeType":"EventDefinition","parameters":{"id":8286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8281,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"4595:6:10","nodeType":"VariableDeclaration","scope":8287,"src":"4579:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8280,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8283,"indexed":false,"mutability":"mutable","name":"apy","nameLocation":"4611:3:10","nodeType":"VariableDeclaration","scope":8287,"src":"4603:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4603:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8285,"indexed":false,"mutability":"mutable","name":"_minPeriod","nameLocation":"4624:10:10","nodeType":"VariableDeclaration","scope":8287,"src":"4616:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8284,"name":"uint256","nodeType":"ElementaryTypeName","src":"4616:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:57:10"},"src":"4561:75:10"},{"anonymous":false,"eventSelector":"eef4955e8b18dcb6d1c19905b7b86e5fe56138ad1ce2c5e540ce4e959312f511","id":8295,"name":"ClaimAttempt","nameLocation":"4648:12:10","nodeType":"EventDefinition","parameters":{"id":8294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8289,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8295,"src":"4661:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8288,"name":"uint256","nodeType":"ElementaryTypeName","src":"4661:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8291,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8295,"src":"4670:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8290,"name":"uint256","nodeType":"ElementaryTypeName","src":"4670:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8293,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8295,"src":"4679:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8292,"name":"address","nodeType":"ElementaryTypeName","src":"4679:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4660:27:10"},"src":"4642:46:10"},{"body":{"id":8319,"nodeType":"Block","src":"4770:112:10","statements":[{"expression":{"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8305,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"4781:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8306,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"4796:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4781:28:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8308,"nodeType":"ExpressionStatement","src":"4781:28:10"},{"expression":{"id":8313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8309,"name":"bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8234,"src":"4820:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$8008","typeString":"contract IbqBTC"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8311,"name":"_bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"4835:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8310,"name":"IbqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"4828:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IbqBTC_$8008_$","typeString":"type(contract IbqBTC)"}},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4828:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$8008","typeString":"contract IbqBTC"}},"src":"4820:22:10","typeDescriptions":{"typeIdentifier":"t_contract$_IbqBTC_$8008","typeString":"contract IbqBTC"}},"id":8314,"nodeType":"ExpressionStatement","src":"4820:22:10"},{"expression":{"id":8317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8315,"name":"bqBTCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"4853:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8316,"name":"_bqBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"4868:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4853:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8318,"nodeType":"ExpressionStatement","src":"4853:21:10"}]},"id":8320,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8302,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"4755:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8303,"kind":"baseConstructorSpecifier","modifierName":{"id":8301,"name":"Ownable","nameLocations":["4747:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"4747:7:10"},"nodeType":"ModifierInvocation","src":"4747:22:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8297,"mutability":"mutable","name":"_initialOwner","nameLocation":"4716:13:10","nodeType":"VariableDeclaration","scope":8320,"src":"4708:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8296,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8299,"mutability":"mutable","name":"_bqBTC","nameLocation":"4739:6:10","nodeType":"VariableDeclaration","scope":8320,"src":"4731:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8298,"name":"address","nodeType":"ElementaryTypeName","src":"4731:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4707:39:10"},"returnParameters":{"id":8304,"nodeType":"ParameterList","parameters":[],"src":"4770:0:10"},"scope":9094,"src":"4696:186:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8447,"nodeType":"Block","src":"5198:1061:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8345,"name":"_poolIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"5231:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5240:6:10","memberName":"length","nodeType":"MemberAccess","src":"5231:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8347,"name":"poolPercentageSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"5250:19:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5270:6:10","memberName":"length","nodeType":"MemberAccess","src":"5250:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5231:45:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d69736d61746368656420706f6f6c2049447320616e642070657263656e7461676573","id":8350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5291:37:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c600de0a781faae98ead2c18a77649c3e8ea0dd5fc4939a5f4be6f78bcaff61","typeString":"literal_string \"Mismatched pool IDs and percentages\""},"value":"Mismatched pool IDs and percentages"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c600de0a781faae98ead2c18a77649c3e8ea0dd5fc4939a5f4be6f78bcaff61","typeString":"literal_string \"Mismatched pool IDs and percentages\""}],"id":8344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5209:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5209:130:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8352,"nodeType":"ExpressionStatement","src":"5209:130:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"id":8358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8354,"name":"adt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"5372:3:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":8355,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"5379:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5388:16:10","memberName":"AssetDepositType","nodeType":"MemberAccess","referencedDeclaration":3823,"src":"5379:25:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetDepositType_$3823_$","typeString":"type(enum CoverLib.AssetDepositType)"}},"id":8357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5405:6:10","memberName":"Native","nodeType":"MemberAccess","referencedDeclaration":3821,"src":"5379:32:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"src":"5372:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8359,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"5415:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5432:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5424:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8360,"name":"address","nodeType":"ElementaryTypeName","src":"5424:7:10","typeDescriptions":{}}},"id":8363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5424:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5415:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5372:62:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617373657420666f72206465706f7369742074797065","id":8366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5449:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_781dc584f5bac8bcdcf06a44e523904fc22e6107062cc38f66c2b813bf1be631","typeString":"literal_string \"Invalid asset for deposit type\""},"value":"Invalid asset for deposit type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_781dc584f5bac8bcdcf06a44e523904fc22e6107062cc38f66c2b813bf1be631","typeString":"literal_string \"Invalid asset for deposit type\""}],"id":8353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5350:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:142:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8368,"nodeType":"ExpressionStatement","src":"5350:142:10"},{"expression":{"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8369,"name":"vaultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"5505:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":8370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5519:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5505:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8372,"nodeType":"ExpressionStatement","src":"5505:15:10"},{"assignments":[8375],"declarations":[{"constant":false,"id":8375,"mutability":"mutable","name":"vault","nameLocation":"5545:5:10","nodeType":"VariableDeclaration","scope":8447,"src":"5531:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"},"typeName":{"id":8374,"nodeType":"UserDefinedTypeName","pathNode":{"id":8373,"name":"Vault","nameLocations":["5531:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8129,"src":"5531:5:10"},"referencedDeclaration":8129,"src":"5531:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"}},"visibility":"internal"}],"id":8379,"initialValue":{"baseExpression":{"id":8376,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"5553:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vault_$8129_storage_$","typeString":"mapping(uint256 => struct Vaults.Vault storage ref)"}},"id":8378,"indexExpression":{"id":8377,"name":"vaultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"5560:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5553:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage","typeString":"struct Vaults.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5531:40:10"},{"expression":{"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8380,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"5582:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"}},"id":8382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5588:2:10","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8111,"src":"5582:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8383,"name":"vaultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"5593:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5582:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8385,"nodeType":"ExpressionStatement","src":"5582:21:10"},{"expression":{"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8386,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"5614:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"}},"id":8388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5620:9:10","memberName":"vaultName","nodeType":"MemberAccess","referencedDeclaration":8113,"src":"5614:15:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8389,"name":"_vaultName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8322,"src":"5632:10:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5614:28:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8391,"nodeType":"ExpressionStatement","src":"5614:28:10"},{"expression":{"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8392,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"5653:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"}},"id":8394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5659:6:10","memberName":"minInv","nodeType":"MemberAccess","referencedDeclaration":8119,"src":"5653:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8395,"name":"_minInv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8330,"src":"5668:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5653:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8397,"nodeType":"ExpressionStatement","src":"5653:22:10"},{"expression":{"id":8402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8398,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"5686:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"}},"id":8400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5692:6:10","memberName":"maxInv","nodeType":"MemberAccess","referencedDeclaration":8121,"src":"5686:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8401,"name":"_maxInv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8332,"src":"5701:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5686:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8403,"nodeType":"ExpressionStatement","src":"5686:22:10"},{"expression":{"id":8408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8404,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"5719:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"}},"id":8406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5725:9:10","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":8126,"src":"5719:15:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8407,"name":"adt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"5737:3:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"src":"5719:21:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"id":8409,"nodeType":"ExpressionStatement","src":"5719:21:10"},{"expression":{"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8410,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"5751:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"}},"id":8412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5757:5:10","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":8128,"src":"5751:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8413,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"5765:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5751:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8415,"nodeType":"ExpressionStatement","src":"5751:19:10"},{"assignments":[8417,8419],"declarations":[{"constant":false,"id":8417,"mutability":"mutable","name":"percentageSplit","nameLocation":"5792:15:10","nodeType":"VariableDeclaration","scope":8447,"src":"5784:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8416,"name":"uint256","nodeType":"ElementaryTypeName","src":"5784:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8419,"mutability":"mutable","name":"minPeriod","nameLocation":"5817:9:10","nodeType":"VariableDeclaration","scope":8447,"src":"5809:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8418,"name":"uint256","nodeType":"ElementaryTypeName","src":"5809:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8426,"initialValue":{"arguments":[{"id":8421,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"5864:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"}},{"id":8422,"name":"_poolIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"5884:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8423,"name":"poolPercentageSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"5907:19:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8424,"name":"adt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"5941:3:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}],"id":8420,"name":"validateAndSetPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"5830:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Vault_$8129_storage_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_enum$_AssetDepositType_$3823_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct Vaults.Vault storage pointer,uint256[] memory,uint256[] memory,enum CoverLib.AssetDepositType) returns (uint256,uint256)"}},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5830:125:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5783:172:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8428,"name":"_minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"5990:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8429,"name":"minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"6004:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5990:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e696d756e20706572696f64206d7573742062652067726561746572207468616e206f7220657175616c20746f20746865206d696e696d756d20706572696f64206f6620616c6c20706f6f6c732077697468696e20746865207661756c74","id":8431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6028:98:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f265f71e9334d5a5e75215e2ab207ad4af396b6cd29535589985c37863568bc","typeString":"literal_string \"Minimun period must be greater than or equal to the minimum period of all pools within the vault\""},"value":"Minimun period must be greater than or equal to the minimum period of all pools within the vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f265f71e9334d5a5e75215e2ab207ad4af396b6cd29535589985c37863568bc","typeString":"literal_string \"Minimun period must be greater than or equal to the minimum period of all pools within the vault\""}],"id":8427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5968:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5968:169:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8433,"nodeType":"ExpressionStatement","src":"5968:169:10"},{"expression":{"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8434,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"6148:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"}},"id":8436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6154:9:10","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":8123,"src":"6148:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8437,"name":"_minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"6166:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6148:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8439,"nodeType":"ExpressionStatement","src":"6148:28:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8441,"name":"percentageSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8417,"src":"6197:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"313030","id":8442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6216:3:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6197:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2073706c6974206d75737420657175616c2031303025","id":8444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6221:29:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cacef6e1d91f14fb35bf20e9eead11a6b6219471394913a309d0ed2437b0c9e1","typeString":"literal_string \"Total split must equal 100%\""},"value":"Total split must equal 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cacef6e1d91f14fb35bf20e9eead11a6b6219471394913a309d0ed2437b0c9e1","typeString":"literal_string \"Total split must equal 100%\""}],"id":8440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6189:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6189:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8446,"nodeType":"ExpressionStatement","src":"6189:62:10"}]},"functionSelector":"f339624b","id":8448,"implemented":true,"kind":"function","modifiers":[{"id":8342,"kind":"modifierInvocation","modifierName":{"id":8341,"name":"onlyOwner","nameLocations":["5188:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5188:9:10"},"nodeType":"ModifierInvocation","src":"5188:9:10"}],"name":"createVault","nameLocation":"4899:11:10","nodeType":"FunctionDefinition","parameters":{"id":8340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8322,"mutability":"mutable","name":"_vaultName","nameLocation":"4935:10:10","nodeType":"VariableDeclaration","scope":8448,"src":"4921:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8321,"name":"string","nodeType":"ElementaryTypeName","src":"4921:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8325,"mutability":"mutable","name":"_poolIds","nameLocation":"4973:8:10","nodeType":"VariableDeclaration","scope":8448,"src":"4956:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8323,"name":"uint256","nodeType":"ElementaryTypeName","src":"4956:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8324,"nodeType":"ArrayTypeName","src":"4956:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8328,"mutability":"mutable","name":"poolPercentageSplit","nameLocation":"5009:19:10","nodeType":"VariableDeclaration","scope":8448,"src":"4992:36:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8326,"name":"uint256","nodeType":"ElementaryTypeName","src":"4992:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8327,"nodeType":"ArrayTypeName","src":"4992:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8330,"mutability":"mutable","name":"_minInv","nameLocation":"5047:7:10","nodeType":"VariableDeclaration","scope":8448,"src":"5039:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8332,"mutability":"mutable","name":"_maxInv","nameLocation":"5073:7:10","nodeType":"VariableDeclaration","scope":8448,"src":"5065:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8331,"name":"uint256","nodeType":"ElementaryTypeName","src":"5065:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8334,"mutability":"mutable","name":"_minPeriod","nameLocation":"5099:10:10","nodeType":"VariableDeclaration","scope":8448,"src":"5091:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8333,"name":"uint256","nodeType":"ElementaryTypeName","src":"5091:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8337,"mutability":"mutable","name":"adt","nameLocation":"5146:3:10","nodeType":"VariableDeclaration","scope":8448,"src":"5120:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":8336,"nodeType":"UserDefinedTypeName","pathNode":{"id":8335,"name":"CoverLib.AssetDepositType","nameLocations":["5120:8:10","5129:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"5120:25:10"},"referencedDeclaration":3823,"src":"5120:25:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"},{"constant":false,"id":8339,"mutability":"mutable","name":"asset","nameLocation":"5168:5:10","nodeType":"VariableDeclaration","scope":8448,"src":"5160:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8338,"name":"address","nodeType":"ElementaryTypeName","src":"5160:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:270:10"},"returnParameters":{"id":8343,"nodeType":"ParameterList","parameters":[],"src":"5198:0:10"},"scope":9094,"src":"4890:1369:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8549,"nodeType":"Block","src":"6335:972:10","statements":[{"assignments":[8457],"declarations":[{"constant":false,"id":8457,"mutability":"mutable","name":"userVaultDeposit","nameLocation":"6367:16:10","nodeType":"VariableDeclaration","scope":8549,"src":"6346:37:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage_ptr","typeString":"struct Vaults.VaultDeposit"},"typeName":{"id":8456,"nodeType":"UserDefinedTypeName","pathNode":{"id":8455,"name":"VaultDeposit","nameLocations":["6346:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":8169,"src":"6346:12:10"},"referencedDeclaration":8169,"src":"6346:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage_ptr","typeString":"struct Vaults.VaultDeposit"}},"visibility":"internal"}],"id":8464,"initialValue":{"baseExpression":{"baseExpression":{"id":8458,"name":"userVaultDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"6386:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Vaults.VaultDeposit storage ref))"}},"id":8461,"indexExpression":{"expression":{"id":8459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6404:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6408:6:10","memberName":"sender","nodeType":"MemberAccess","src":"6404:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6386:29:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$","typeString":"mapping(uint256 => struct Vaults.VaultDeposit storage ref)"}},"id":8463,"indexExpression":{"id":8462,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8450,"src":"6430:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6386:63:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage","typeString":"struct Vaults.VaultDeposit storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6346:103:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8466,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"6482:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage_ptr","typeString":"struct Vaults.VaultDeposit storage pointer"}},"id":8467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6499:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8153,"src":"6482:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6508:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6482:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206465706f73697420666f756e6420666f7220746869732061646472657373","id":8470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6524:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_58da2d5c87749dee667e828643fdf1b2656a13f77a7007ea1881f4f567aa7703","typeString":"literal_string \"No deposit found for this address\""},"value":"No deposit found for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58da2d5c87749dee667e828643fdf1b2656a13f77a7007ea1881f4f567aa7703","typeString":"literal_string \"No deposit found for this address\""}],"id":8465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6460:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6460:110:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8472,"nodeType":"ExpressionStatement","src":"6460:110:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"},"id":8479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8474,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"6603:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage_ptr","typeString":"struct Vaults.VaultDeposit storage pointer"}},"id":8475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6620:6:10","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":8160,"src":"6603:23:10","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":8476,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"6630:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6639:6:10","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"6630:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$3863_$","typeString":"type(enum CoverLib.Status)"}},"id":8478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6646:6:10","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":3860,"src":"6630:22:10","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"src":"6603:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974206973206e6f7420616374697665","id":8480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6667:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_48296a4ed98d5eb43248b4110e3a654fc331dd606ad671651b762665c62bbd71","typeString":"literal_string \"Deposit is not active\""},"value":"Deposit is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48296a4ed98d5eb43248b4110e3a654fc331dd606ad671651b762665c62bbd71","typeString":"literal_string \"Deposit is not active\""}],"id":8473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6581:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6581:120:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8482,"nodeType":"ExpressionStatement","src":"6581:120:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8484,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6734:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6740:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"6734:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8486,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"6753:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage_ptr","typeString":"struct Vaults.VaultDeposit storage pointer"}},"id":8487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6770:10:10","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":8166,"src":"6753:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6734:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420706572696f6420686173206e6f7420656e646564","id":8489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6795:30:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_407b518a5440c6945dd5b5dcce4b15951da5cd4e0775edb7adb21c0f2b995362","typeString":"literal_string \"Deposit period has not ended\""},"value":"Deposit period has not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_407b518a5440c6945dd5b5dcce4b15951da5cd4e0775edb7adb21c0f2b995362","typeString":"literal_string \"Deposit period has not ended\""}],"id":8483,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6712:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6712:124:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8491,"nodeType":"ExpressionStatement","src":"6712:124:10"},{"assignments":[8494],"declarations":[{"constant":false,"id":8494,"mutability":"mutable","name":"vault","nameLocation":"6860:5:10","nodeType":"VariableDeclaration","scope":8549,"src":"6847:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault"},"typeName":{"id":8493,"nodeType":"UserDefinedTypeName","pathNode":{"id":8492,"name":"Vault","nameLocations":["6847:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8129,"src":"6847:5:10"},"referencedDeclaration":8129,"src":"6847:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"}},"visibility":"internal"}],"id":8498,"initialValue":{"baseExpression":{"id":8495,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"6868:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vault_$8129_storage_$","typeString":"mapping(uint256 => struct Vaults.Vault storage ref)"}},"id":8497,"indexExpression":{"id":8496,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8450,"src":"6875:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6868:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage","typeString":"struct Vaults.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6847:37:10"},{"body":{"id":8530,"nodeType":"Block","src":"6944:218:10","statements":[{"assignments":[8512],"declarations":[{"constant":false,"id":8512,"mutability":"mutable","name":"poolId","nameLocation":"6967:6:10","nodeType":"VariableDeclaration","scope":8530,"src":"6959:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8511,"name":"uint256","nodeType":"ElementaryTypeName","src":"6959:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8518,"initialValue":{"expression":{"baseExpression":{"expression":{"id":8513,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"6976:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6982:5:10","memberName":"pools","nodeType":"MemberAccess","referencedDeclaration":8117,"src":"6976:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"id":8516,"indexExpression":{"id":8515,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"6988:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6976:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":8517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6991:2:10","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"6976:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6959:34:10"},{"expression":{"arguments":[{"expression":{"id":8522,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7055:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7059:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7055:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8524,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"7084:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":8525,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"7109:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7118:11:10","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"7109:20:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":8527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7130:5:10","memberName":"Vault","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"7109:26:10","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}],"expression":{"id":8519,"name":"IPoolContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8228,"src":"7008:13:10","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$8046","typeString":"contract IPool"}},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7022:14:10","memberName":"withdrawUpdate","nodeType":"MemberAccess","referencedDeclaration":8028,"src":"7008:28:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_enum$_DepositType_$3826_$returns$__$","typeString":"function (address,uint256,enum CoverLib.DepositType) external"}},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7008:142:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8529,"nodeType":"ExpressionStatement","src":"7008:142:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"6915:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":8504,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"6919:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6925:5:10","memberName":"pools","nodeType":"MemberAccess","referencedDeclaration":8117,"src":"6919:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6931:6:10","memberName":"length","nodeType":"MemberAccess","src":"6919:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6915:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8531,"initializationExpression":{"assignments":[8500],"declarations":[{"constant":false,"id":8500,"mutability":"mutable","name":"i","nameLocation":"6908:1:10","nodeType":"VariableDeclaration","scope":8531,"src":"6900:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8499,"name":"uint256","nodeType":"ElementaryTypeName","src":"6900:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8502,"initialValue":{"hexValue":"30","id":8501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6912:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6900:13:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6939:3:10","subExpression":{"id":8508,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"6939:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8510,"nodeType":"ExpressionStatement","src":"6939:3:10"},"nodeType":"ForStatement","src":"6895:267:10"},{"expression":{"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8532,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"7174:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage_ptr","typeString":"struct Vaults.VaultDeposit storage pointer"}},"id":8534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7191:6:10","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":8160,"src":"7174:23:10","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":8535,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"7200:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7209:6:10","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"7200:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$3863_$","typeString":"type(enum CoverLib.Status)"}},"id":8537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7216:3:10","memberName":"Due","nodeType":"MemberAccess","referencedDeclaration":3861,"src":"7200:19:10","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"src":"7174:45:10","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},"id":8539,"nodeType":"ExpressionStatement","src":"7174:45:10"},{"eventCall":{"arguments":[{"expression":{"id":8541,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7246:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7250:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7246:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8543,"name":"userVaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"7258:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage_ptr","typeString":"struct Vaults.VaultDeposit storage pointer"}},"id":8544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7275:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8153,"src":"7258:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8545,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"7283:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7289:9:10","memberName":"vaultName","nodeType":"MemberAccess","referencedDeclaration":8113,"src":"7283:15:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8540,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8265,"src":"7237:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":8547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7237:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8548,"nodeType":"EmitStatement","src":"7232:67:10"}]},"functionSelector":"d0006265","id":8550,"implemented":true,"kind":"function","modifiers":[{"id":8453,"kind":"modifierInvocation","modifierName":{"id":8452,"name":"nonReentrant","nameLocations":["6322:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"6322:12:10"},"nodeType":"ModifierInvocation","src":"6322:12:10"}],"name":"initialVaultWithdraw","nameLocation":"6276:20:10","nodeType":"FunctionDefinition","parameters":{"id":8451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8450,"mutability":"mutable","name":"_vaultId","nameLocation":"6305:8:10","nodeType":"VariableDeclaration","scope":8550,"src":"6297:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8449,"name":"uint256","nodeType":"ElementaryTypeName","src":"6297:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6296:18:10"},"returnParameters":{"id":8454,"nodeType":"ParameterList","parameters":[],"src":"6335:0:10"},"scope":9094,"src":"6267:1040:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8689,"nodeType":"Block","src":"7451:1571:10","statements":[{"assignments":[8563],"declarations":[{"constant":false,"id":8563,"mutability":"mutable","name":"vault","nameLocation":"7475:5:10","nodeType":"VariableDeclaration","scope":8689,"src":"7462:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault"},"typeName":{"id":8562,"nodeType":"UserDefinedTypeName","pathNode":{"id":8561,"name":"Vault","nameLocations":["7462:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8129,"src":"7462:5:10"},"referencedDeclaration":8129,"src":"7462:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"}},"visibility":"internal"}],"id":8567,"initialValue":{"baseExpression":{"id":8564,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"7483:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vault_$8129_storage_$","typeString":"mapping(uint256 => struct Vaults.Vault storage ref)"}},"id":8566,"indexExpression":{"id":8565,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8552,"src":"7490:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7483:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage","typeString":"struct Vaults.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7462:37:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8569,"name":"_period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"7532:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8570,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"7543:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7549:9:10","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":8123,"src":"7543:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506572696f642063616e6e6f74206265206c657373207468616e20746865207661756c74206d696e20706572696f64","id":8573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7573:49:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_98e05089bdf43555003df8aead72254a46df1925a7b0f0770d45e6405d668c4a","typeString":"literal_string \"Period cannot be less than the vault min period\""},"value":"Period cannot be less than the vault min period"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98e05089bdf43555003df8aead72254a46df1925a7b0f0770d45e6405d668c4a","typeString":"literal_string \"Period cannot be less than the vault min period\""}],"id":8568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7510:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7510:123:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8575,"nodeType":"ExpressionStatement","src":"7510:123:10"},{"assignments":[8577],"declarations":[{"constant":false,"id":8577,"mutability":"mutable","name":"totalDailyPayout","nameLocation":"7652:16:10","nodeType":"VariableDeclaration","scope":8689,"src":"7644:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8576,"name":"uint256","nodeType":"ElementaryTypeName","src":"7644:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8579,"initialValue":{"hexValue":"30","id":8578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7671:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7644:28:10"},{"assignments":[8581],"declarations":[{"constant":false,"id":8581,"mutability":"mutable","name":"totalAmount","nameLocation":"7691:11:10","nodeType":"VariableDeclaration","scope":8689,"src":"7683:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8580,"name":"uint256","nodeType":"ElementaryTypeName","src":"7683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8583,"initialValue":{"hexValue":"30","id":8582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7705:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7683:23:10"},{"body":{"id":8645,"nodeType":"Block","src":"7766:699:10","statements":[{"assignments":[8597],"declarations":[{"constant":false,"id":8597,"mutability":"mutable","name":"poolId","nameLocation":"7789:6:10","nodeType":"VariableDeclaration","scope":8645,"src":"7781:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8596,"name":"uint256","nodeType":"ElementaryTypeName","src":"7781:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8603,"initialValue":{"expression":{"baseExpression":{"expression":{"id":8598,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"7798:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7804:5:10","memberName":"pools","nodeType":"MemberAccess","referencedDeclaration":8117,"src":"7798:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"id":8601,"indexExpression":{"id":8600,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"7810:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7798:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":8602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7813:2:10","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"7798:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7781:34:10"},{"assignments":[8608],"declarations":[{"constant":false,"id":8608,"mutability":"mutable","name":"depositParam","nameLocation":"7860:12:10","nodeType":"VariableDeclaration","scope":8645,"src":"7830:42:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams"},"typeName":{"id":8607,"nodeType":"UserDefinedTypeName","pathNode":{"id":8606,"name":"CoverLib.DepositParams","nameLocations":["7830:8:10","7839:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3766,"src":"7830:22:10"},"referencedDeclaration":3766,"src":"7830:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_storage_ptr","typeString":"struct CoverLib.DepositParams"}},"visibility":"internal"}],"id":8624,"initialValue":{"arguments":[{"expression":{"id":8611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7950:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7954:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7950:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8613,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"7991:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8614,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"8028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8615,"name":"_period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"8066:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":8616,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"8101:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8110:11:10","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"8101:20:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":8618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8122:5:10","memberName":"Vault","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"8101:26:10","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},{"expression":{"id":8619,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"8155:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8161:9:10","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":8126,"src":"8155:15:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},{"expression":{"id":8621,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"8200:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8206:5:10","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":8128,"src":"8200:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"},{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8609,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"7875:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":8610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:10","memberName":"DepositParams","nodeType":"MemberAccess","referencedDeclaration":3766,"src":"7875:40:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DepositParams_$3766_storage_ptr_$","typeString":"type(struct CoverLib.DepositParams storage pointer)"}},"id":8623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7939:9:10","7983:6:10","8020:6:10","8058:6:10","8096:3:10","8150:3:10","8193:5:10"],"names":["depositor","poolId","amount","period","pdt","adt","asset"],"nodeType":"FunctionCall","src":"7875:356:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}},"nodeType":"VariableDeclarationStatement","src":"7830:401:10"},{"assignments":[8626,8628],"declarations":[{"constant":false,"id":8626,"mutability":"mutable","name":"amount","nameLocation":"8255:6:10","nodeType":"VariableDeclaration","scope":8645,"src":"8247:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8625,"name":"uint256","nodeType":"ElementaryTypeName","src":"8247:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8628,"mutability":"mutable","name":"dailyPayout","nameLocation":"8271:11:10","nodeType":"VariableDeclaration","scope":8645,"src":"8263:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8627,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8636,"initialValue":{"arguments":[{"id":8634,"name":"depositParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8608,"src":"8358:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DepositParams_$3766_memory_ptr","typeString":"struct CoverLib.DepositParams memory"}],"expression":{"id":8629,"name":"IPoolContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8228,"src":"8286:13:10","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$8046","typeString":"contract IPool"}},"id":8630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8300:7:10","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":8018,"src":"8286:21:10","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_DepositParams_$3766_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct CoverLib.DepositParams memory) payable external returns (uint256,uint256)"}},"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":8631,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8333:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8337:5:10","memberName":"value","nodeType":"MemberAccess","src":"8333:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8286:71:10","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_DepositParams_$3766_memory_ptr_$returns$_t_uint256_$_t_uint256_$value","typeString":"function (struct CoverLib.DepositParams memory) payable external returns (uint256,uint256)"}},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8286:85:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8246:125:10"},{"expression":{"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8637,"name":"totalDailyPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8577,"src":"8386:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8638,"name":"dailyPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8628,"src":"8406:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8386:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8640,"nodeType":"ExpressionStatement","src":"8386:31:10"},{"expression":{"id":8643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8641,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"8432:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8642,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8626,"src":"8447:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8432:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8644,"nodeType":"ExpressionStatement","src":"8432:21:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"7737:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":8589,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"7741:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7747:5:10","memberName":"pools","nodeType":"MemberAccess","referencedDeclaration":8117,"src":"7741:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"id":8591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7753:6:10","memberName":"length","nodeType":"MemberAccess","src":"7741:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7737:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8646,"initializationExpression":{"assignments":[8585],"declarations":[{"constant":false,"id":8585,"mutability":"mutable","name":"i","nameLocation":"7730:1:10","nodeType":"VariableDeclaration","scope":8646,"src":"7722:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8584,"name":"uint256","nodeType":"ElementaryTypeName","src":"7722:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8587,"initialValue":{"hexValue":"30","id":8586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7734:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7722:13:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7761:3:10","subExpression":{"id":8593,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"7761:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8595,"nodeType":"ExpressionStatement","src":"7761:3:10"},"nodeType":"ForStatement","src":"7717:748:10"},{"assignments":[8649],"declarations":[{"constant":false,"id":8649,"mutability":"mutable","name":"userDeposit","nameLocation":"8497:11:10","nodeType":"VariableDeclaration","scope":8689,"src":"8477:31:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_memory_ptr","typeString":"struct Vaults.VaultDeposit"},"typeName":{"id":8648,"nodeType":"UserDefinedTypeName","pathNode":{"id":8647,"name":"VaultDeposit","nameLocations":["8477:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":8169,"src":"8477:12:10"},"referencedDeclaration":8169,"src":"8477:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage_ptr","typeString":"struct Vaults.VaultDeposit"}},"visibility":"internal"}],"id":8671,"initialValue":{"arguments":[{"expression":{"id":8651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8543:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8547:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8543:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8653,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"8576:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8654,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8552,"src":"8611:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8655,"name":"totalDailyPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8577,"src":"8647:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":8656,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"8686:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8695:6:10","memberName":"Status","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"8686:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$3863_$","typeString":"type(enum CoverLib.Status)"}},"id":8658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8702:6:10","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":3860,"src":"8686:22:10","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"}},{"id":8659,"name":"_period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"8733:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8660,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8766:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8772:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"8766:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8662,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8808:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8814:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"8808:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8664,"name":"_period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"8827:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":8665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:6:10","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"8827:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8826:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8808:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":8669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8874:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$3863","typeString":"enum CoverLib.Status"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8650,"name":"VaultDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8169,"src":"8511:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VaultDeposit_$8169_storage_ptr_$","typeString":"type(struct Vaults.VaultDeposit storage pointer)"}},"id":8670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8539:2:10","8568:6:10","8602:7:10","8634:11:10","8678:6:10","8723:8:10","8755:9:10","8796:10:10","8859:13:10"],"names":["lp","amount","vaultId","dailyPayout","status","daysLeft","startDate","expiryDate","accruedPayout"],"nodeType":"FunctionCall","src":"8511:376:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_memory_ptr","typeString":"struct Vaults.VaultDeposit memory"}},"nodeType":"VariableDeclarationStatement","src":"8477:410:10"},{"expression":{"id":8679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8672,"name":"userVaultDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"8898:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Vaults.VaultDeposit storage ref))"}},"id":8676,"indexExpression":{"expression":{"id":8673,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8916:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8920:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8916:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8898:29:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$","typeString":"mapping(uint256 => struct Vaults.VaultDeposit storage ref)"}},"id":8677,"indexExpression":{"id":8675,"name":"_vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8552,"src":"8928:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8898:39:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage","typeString":"struct Vaults.VaultDeposit storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8678,"name":"userDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"8940:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_memory_ptr","typeString":"struct Vaults.VaultDeposit memory"}},"src":"8898:53:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage","typeString":"struct Vaults.VaultDeposit storage ref"}},"id":8680,"nodeType":"ExpressionStatement","src":"8898:53:10"},{"eventCall":{"arguments":[{"expression":{"id":8682,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8977:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8981:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8977:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8684,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"8989:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8685,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"8998:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9004:9:10","memberName":"vaultName","nodeType":"MemberAccess","referencedDeclaration":8113,"src":"8998:15:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8681,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"8967:9:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":8687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8967:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8688,"nodeType":"EmitStatement","src":"8962:52:10"}]},"functionSelector":"626cc0a9","id":8690,"implemented":true,"kind":"function","modifiers":[{"id":8559,"kind":"modifierInvocation","modifierName":{"id":8558,"name":"nonReentrant","nameLocations":["7438:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"7438:12:10"},"nodeType":"ModifierInvocation","src":"7438:12:10"}],"name":"vaultDeposit","nameLocation":"7324:12:10","nodeType":"FunctionDefinition","parameters":{"id":8557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8552,"mutability":"mutable","name":"_vaultId","nameLocation":"7355:8:10","nodeType":"VariableDeclaration","scope":8690,"src":"7347:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8551,"name":"uint256","nodeType":"ElementaryTypeName","src":"7347:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8554,"mutability":"mutable","name":"_amount","nameLocation":"7382:7:10","nodeType":"VariableDeclaration","scope":8690,"src":"7374:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8553,"name":"uint256","nodeType":"ElementaryTypeName","src":"7374:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8556,"mutability":"mutable","name":"_period","nameLocation":"7408:7:10","nodeType":"VariableDeclaration","scope":8690,"src":"7400:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8555,"name":"uint256","nodeType":"ElementaryTypeName","src":"7400:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7336:86:10"},"returnParameters":{"id":8560,"nodeType":"ParameterList","parameters":[],"src":"7451:0:10"},"scope":9094,"src":"7315:1707:10","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":8784,"nodeType":"Block","src":"9281:575:10","statements":[{"expression":{"id":8711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8709,"name":"minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"9292:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"333635","id":8710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9304:3:10","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"src":"9292:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8712,"nodeType":"ExpressionStatement","src":"9292:15:10"},{"body":{"id":8782,"nodeType":"Block","src":"9364:485:10","statements":[{"assignments":[8728],"declarations":[{"constant":false,"id":8728,"mutability":"mutable","name":"pool","nameLocation":"9400:4:10","nodeType":"VariableDeclaration","scope":8782,"src":"9379:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool"},"typeName":{"id":8727,"nodeType":"UserDefinedTypeName","pathNode":{"id":8726,"name":"CoverLib.Pool","nameLocations":["9379:8:10","9388:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"9379:13:10"},"referencedDeclaration":3859,"src":"9379:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"visibility":"internal"}],"id":8735,"initialValue":{"arguments":[{"baseExpression":{"id":8731,"name":"_poolIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"9429:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8733,"indexExpression":{"id":8732,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"9438:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9429:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8729,"name":"IPoolContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8228,"src":"9407:13:10","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$8046","typeString":"contract IPool"}},"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9421:7:10","memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":8045,"src":"9407:21:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Pool_$3859_memory_ptr_$","typeString":"function (uint256) view external returns (struct CoverLib.Pool memory)"}},"id":8734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9407:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"nodeType":"VariableDeclarationStatement","src":"9379:62:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"id":8740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8737,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8728,"src":"9464:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":8738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9469:9:10","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"9464:14:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8739,"name":"adt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"9482:3:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"src":"9464:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f6d70617469626c65206173736574207479706520696e20706f6f6c","id":8741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9487:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa1d37c98bd7f64bf72a9a00baeda42b5968d27d522961ef6a2339b2805def60","typeString":"literal_string \"Incompatible asset type in pool\""},"value":"Incompatible asset type in pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa1d37c98bd7f64bf72a9a00baeda42b5968d27d522961ef6a2339b2805def60","typeString":"literal_string \"Incompatible asset type in pool\""}],"id":8736,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9456:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8743,"nodeType":"ExpressionStatement","src":"9456:65:10"},{"expression":{"id":8748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8744,"name":"percentageSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"9536:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":8745,"name":"poolPercentageSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"9555:19:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8747,"indexExpression":{"id":8746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"9575:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9555:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9536:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8749,"nodeType":"ExpressionStatement","src":"9536:41:10"},{"expression":{"id":8761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8750,"name":"vaultPercentageSplits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"9592:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":8756,"indexExpression":{"expression":{"id":8751,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8693,"src":"9614:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"}},"id":8752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9620:2:10","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8111,"src":"9614:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9592:31:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8757,"indexExpression":{"baseExpression":{"id":8753,"name":"_poolIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"9624:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8755,"indexExpression":{"id":8754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"9633:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9624:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9592:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8758,"name":"poolPercentageSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"9639:19:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8760,"indexExpression":{"id":8759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"9677:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9639:54:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9592:101:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8762,"nodeType":"ExpressionStatement","src":"9592:101:10"},{"expression":{"arguments":[{"id":8768,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8728,"src":"9725:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}],"expression":{"expression":{"id":8763,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8693,"src":"9708:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault storage pointer"}},"id":8766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9714:5:10","memberName":"pools","nodeType":"MemberAccess","referencedDeclaration":8117,"src":"9708:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_storage_$dyn_storage","typeString":"struct CoverLib.Pool storage ref[] storage ref"}},"id":8767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9720:4:10","memberName":"push","nodeType":"MemberAccess","src":"9708:16:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Pool_$3859_storage_$dyn_storage_ptr_$_t_struct$_Pool_$3859_storage_$returns$__$attached_to$_t_array$_t_struct$_Pool_$3859_storage_$dyn_storage_ptr_$","typeString":"function (struct CoverLib.Pool storage ref[] storage pointer,struct CoverLib.Pool storage ref)"}},"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9708:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8770,"nodeType":"ExpressionStatement","src":"9708:22:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8771,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8728,"src":"9749:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":8772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9754:9:10","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":3837,"src":"9749:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8773,"name":"minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"9766:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9749:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8781,"nodeType":"IfStatement","src":"9745:93:10","trueBody":{"id":8780,"nodeType":"Block","src":"9777:61:10","statements":[{"expression":{"id":8778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8775,"name":"minPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"9796:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8776,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8728,"src":"9808:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":8777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9813:9:10","memberName":"minPeriod","nodeType":"MemberAccess","referencedDeclaration":3837,"src":"9808:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9796:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8779,"nodeType":"ExpressionStatement","src":"9796:26:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"9338:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8718,"name":"_poolIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"9342:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9351:6:10","memberName":"length","nodeType":"MemberAccess","src":"9342:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9338:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8783,"initializationExpression":{"assignments":[8714],"declarations":[{"constant":false,"id":8714,"mutability":"mutable","name":"i","nameLocation":"9331:1:10","nodeType":"VariableDeclaration","scope":8783,"src":"9323:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8713,"name":"uint256","nodeType":"ElementaryTypeName","src":"9323:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8716,"initialValue":{"hexValue":"30","id":8715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9335:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9323:13:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9359:3:10","subExpression":{"id":8721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"9359:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8723,"nodeType":"ExpressionStatement","src":"9359:3:10"},"nodeType":"ForStatement","src":"9318:531:10"}]},"id":8785,"implemented":true,"kind":"function","modifiers":[],"name":"validateAndSetPools","nameLocation":"9039:19:10","nodeType":"FunctionDefinition","parameters":{"id":8703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8693,"mutability":"mutable","name":"vault","nameLocation":"9083:5:10","nodeType":"VariableDeclaration","scope":8785,"src":"9069:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"},"typeName":{"id":8692,"nodeType":"UserDefinedTypeName","pathNode":{"id":8691,"name":"Vault","nameLocations":["9069:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8129,"src":"9069:5:10"},"referencedDeclaration":8129,"src":"9069:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"}},"visibility":"internal"},{"constant":false,"id":8696,"mutability":"mutable","name":"_poolIds","nameLocation":"9116:8:10","nodeType":"VariableDeclaration","scope":8785,"src":"9099:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8694,"name":"uint256","nodeType":"ElementaryTypeName","src":"9099:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8695,"nodeType":"ArrayTypeName","src":"9099:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8699,"mutability":"mutable","name":"poolPercentageSplit","nameLocation":"9152:19:10","nodeType":"VariableDeclaration","scope":8785,"src":"9135:36:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8697,"name":"uint256","nodeType":"ElementaryTypeName","src":"9135:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8698,"nodeType":"ArrayTypeName","src":"9135:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8702,"mutability":"mutable","name":"adt","nameLocation":"9208:3:10","nodeType":"VariableDeclaration","scope":8785,"src":"9182:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"},"typeName":{"id":8701,"nodeType":"UserDefinedTypeName","pathNode":{"id":8700,"name":"CoverLib.AssetDepositType","nameLocations":["9182:8:10","9191:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":3823,"src":"9182:25:10"},"referencedDeclaration":3823,"src":"9182:25:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetDepositType_$3823","typeString":"enum CoverLib.AssetDepositType"}},"visibility":"internal"}],"src":"9058:160:10"},"returnParameters":{"id":8708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8705,"mutability":"mutable","name":"percentageSplit","nameLocation":"9245:15:10","nodeType":"VariableDeclaration","scope":8785,"src":"9237:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8704,"name":"uint256","nodeType":"ElementaryTypeName","src":"9237:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8707,"mutability":"mutable","name":"minPeriod","nameLocation":"9270:9:10","nodeType":"VariableDeclaration","scope":8785,"src":"9262:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8706,"name":"uint256","nodeType":"ElementaryTypeName","src":"9262:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9236:44:10"},"scope":9094,"src":"9030:826:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8797,"nodeType":"Block","src":"9934:41:10","statements":[{"expression":{"baseExpression":{"id":8793,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"9952:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vault_$8129_storage_$","typeString":"mapping(uint256 => struct Vaults.Vault storage ref)"}},"id":8795,"indexExpression":{"id":8794,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8787,"src":"9959:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9952:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage","typeString":"struct Vaults.Vault storage ref"}},"functionReturnParameters":8792,"id":8796,"nodeType":"Return","src":"9945:22:10"}]},"functionSelector":"9403b634","id":8798,"implemented":true,"kind":"function","modifiers":[],"name":"getVault","nameLocation":"9873:8:10","nodeType":"FunctionDefinition","parameters":{"id":8788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8787,"mutability":"mutable","name":"vaultId","nameLocation":"9890:7:10","nodeType":"VariableDeclaration","scope":8798,"src":"9882:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8786,"name":"uint256","nodeType":"ElementaryTypeName","src":"9882:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9881:17:10"},"returnParameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8798,"src":"9920:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault"},"typeName":{"id":8790,"nodeType":"UserDefinedTypeName","pathNode":{"id":8789,"name":"Vault","nameLocations":["9920:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8129,"src":"9920:5:10"},"referencedDeclaration":8129,"src":"9920:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"}},"visibility":"internal"}],"src":"9919:14:10"},"scope":9094,"src":"9864:111:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8812,"nodeType":"Block","src":"10084:47:10","statements":[{"expression":{"expression":{"baseExpression":{"id":8807,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"10102:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vault_$8129_storage_$","typeString":"mapping(uint256 => struct Vaults.Vault storage ref)"}},"id":8809,"indexExpression":{"id":8808,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8800,"src":"10109:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10102:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage","typeString":"struct Vaults.Vault storage ref"}},"id":8810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10118:5:10","memberName":"pools","nodeType":"MemberAccess","referencedDeclaration":8117,"src":"10102:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_storage_$dyn_storage","typeString":"struct CoverLib.Pool storage ref[] storage ref"}},"functionReturnParameters":8806,"id":8811,"nodeType":"Return","src":"10095:28:10"}]},"functionSelector":"60ebd718","id":8813,"implemented":true,"kind":"function","modifiers":[],"name":"getVaultPools","nameLocation":"9992:13:10","nodeType":"FunctionDefinition","parameters":{"id":8801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8800,"mutability":"mutable","name":"vaultId","nameLocation":"10024:7:10","nodeType":"VariableDeclaration","scope":8813,"src":"10016:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8799,"name":"uint256","nodeType":"ElementaryTypeName","src":"10016:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10005:33:10"},"returnParameters":{"id":8806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8813,"src":"10060:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool[]"},"typeName":{"baseType":{"id":8803,"nodeType":"UserDefinedTypeName","pathNode":{"id":8802,"name":"CoverLib.Pool","nameLocations":["10060:8:10","10069:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"10060:13:10"},"referencedDeclaration":3859,"src":"10060:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_storage_ptr","typeString":"struct CoverLib.Pool"}},"id":8804,"nodeType":"ArrayTypeName","src":"10060:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_storage_$dyn_storage_ptr","typeString":"struct CoverLib.Pool[]"}},"visibility":"internal"}],"src":"10059:24:10"},"scope":9094,"src":"9983:148:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8883,"nodeType":"Block","src":"10269:403:10","statements":[{"assignments":[8826],"declarations":[{"constant":false,"id":8826,"mutability":"mutable","name":"vault","nameLocation":"10293:5:10","nodeType":"VariableDeclaration","scope":8883,"src":"10280:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault"},"typeName":{"id":8825,"nodeType":"UserDefinedTypeName","pathNode":{"id":8824,"name":"Vault","nameLocations":["10280:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8129,"src":"10280:5:10"},"referencedDeclaration":8129,"src":"10280:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"}},"visibility":"internal"}],"id":8830,"initialValue":{"baseExpression":{"id":8827,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"10301:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vault_$8129_storage_$","typeString":"mapping(uint256 => struct Vaults.Vault storage ref)"}},"id":8829,"indexExpression":{"id":8828,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8815,"src":"10308:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10301:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage","typeString":"struct Vaults.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10280:36:10"},{"assignments":[8835],"declarations":[{"constant":false,"id":8835,"mutability":"mutable","name":"vaultDeposits","nameLocation":"10345:13:10","nodeType":"VariableDeclaration","scope":8883,"src":"10327:31:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$8149_memory_ptr_$dyn_memory_ptr","typeString":"struct Vaults.Deposits[]"},"typeName":{"baseType":{"id":8833,"nodeType":"UserDefinedTypeName","pathNode":{"id":8832,"name":"Deposits","nameLocations":["10327:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":8149,"src":"10327:8:10"},"referencedDeclaration":8149,"src":"10327:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$8149_storage_ptr","typeString":"struct Vaults.Deposits"}},"id":8834,"nodeType":"ArrayTypeName","src":"10327:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$8149_storage_$dyn_storage_ptr","typeString":"struct Vaults.Deposits[]"}},"visibility":"internal"}],"id":8844,"initialValue":{"arguments":[{"expression":{"expression":{"id":8840,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8826,"src":"10376:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10382:5:10","memberName":"pools","nodeType":"MemberAccess","referencedDeclaration":8117,"src":"10376:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10388:6:10","memberName":"length","nodeType":"MemberAccess","src":"10376:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10361:14:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Deposits_$8149_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Vaults.Deposits memory[] memory)"},"typeName":{"baseType":{"id":8837,"nodeType":"UserDefinedTypeName","pathNode":{"id":8836,"name":"Deposits","nameLocations":["10365:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":8149,"src":"10365:8:10"},"referencedDeclaration":8149,"src":"10365:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$8149_storage_ptr","typeString":"struct Vaults.Deposits"}},"id":8838,"nodeType":"ArrayTypeName","src":"10365:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$8149_storage_$dyn_storage_ptr","typeString":"struct Vaults.Deposits[]"}}},"id":8843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10361:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$8149_memory_ptr_$dyn_memory_ptr","typeString":"struct Vaults.Deposits memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10327:68:10"},{"body":{"id":8879,"nodeType":"Block","src":"10455:177:10","statements":[{"assignments":[8858],"declarations":[{"constant":false,"id":8858,"mutability":"mutable","name":"poolId","nameLocation":"10478:6:10","nodeType":"VariableDeclaration","scope":8879,"src":"10470:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8857,"name":"uint256","nodeType":"ElementaryTypeName","src":"10470:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8864,"initialValue":{"expression":{"baseExpression":{"expression":{"id":8859,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8826,"src":"10487:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10493:5:10","memberName":"pools","nodeType":"MemberAccess","referencedDeclaration":8117,"src":"10487:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"id":8862,"indexExpression":{"id":8861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"10499:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10487:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$3859_memory_ptr","typeString":"struct CoverLib.Pool memory"}},"id":8863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10502:2:10","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"10487:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10470:34:10"},{"expression":{"id":8877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8865,"name":"vaultDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8835,"src":"10519:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$8149_memory_ptr_$dyn_memory_ptr","typeString":"struct Vaults.Deposits memory[] memory"}},"id":8867,"indexExpression":{"id":8866,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"10533:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10519:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$8149_memory_ptr","typeString":"struct Vaults.Deposits memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":8868,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"10538:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$8149_storage_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(enum CoverLib.DepositType => struct Vaults.Deposits storage ref)))"}},"id":8870,"indexExpression":{"id":8869,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"10547:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10538:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$8149_storage_$_$","typeString":"mapping(uint256 => mapping(enum CoverLib.DepositType => struct Vaults.Deposits storage ref))"}},"id":8872,"indexExpression":{"id":8871,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"10553:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10538:22:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_DepositType_$3826_$_t_struct$_Deposits_$8149_storage_$","typeString":"mapping(enum CoverLib.DepositType => struct Vaults.Deposits storage ref)"}},"id":8876,"indexExpression":{"expression":{"expression":{"id":8873,"name":"CoverLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"10579:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CoverLib_$3864_$","typeString":"type(library CoverLib)"}},"id":8874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10588:11:10","memberName":"DepositType","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"10579:20:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DepositType_$3826_$","typeString":"type(enum CoverLib.DepositType)"}},"id":8875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10600:5:10","memberName":"Vault","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"10579:26:10","typeDescriptions":{"typeIdentifier":"t_enum$_DepositType_$3826","typeString":"enum CoverLib.DepositType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10538:82:10","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$8149_storage","typeString":"struct Vaults.Deposits storage ref"}},"src":"10519:101:10","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$8149_memory_ptr","typeString":"struct Vaults.Deposits memory"}},"id":8878,"nodeType":"ExpressionStatement","src":"10519:101:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8849,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"10426:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":8850,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8826,"src":"10430:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10436:5:10","memberName":"pools","nodeType":"MemberAccess","referencedDeclaration":8117,"src":"10430:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Pool_$3859_memory_ptr_$dyn_memory_ptr","typeString":"struct CoverLib.Pool memory[] memory"}},"id":8852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10442:6:10","memberName":"length","nodeType":"MemberAccess","src":"10430:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10426:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8880,"initializationExpression":{"assignments":[8846],"declarations":[{"constant":false,"id":8846,"mutability":"mutable","name":"i","nameLocation":"10419:1:10","nodeType":"VariableDeclaration","scope":8880,"src":"10411:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8845,"name":"uint256","nodeType":"ElementaryTypeName","src":"10411:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8848,"initialValue":{"hexValue":"30","id":8847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10423:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10411:13:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10450:3:10","subExpression":{"id":8854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"10450:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8856,"nodeType":"ExpressionStatement","src":"10450:3:10"},"nodeType":"ForStatement","src":"10406:226:10"},{"expression":{"id":8881,"name":"vaultDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8835,"src":"10651:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$8149_memory_ptr_$dyn_memory_ptr","typeString":"struct Vaults.Deposits memory[] memory"}},"functionReturnParameters":8823,"id":8882,"nodeType":"Return","src":"10644:20:10"}]},"functionSelector":"72bafbde","id":8884,"implemented":true,"kind":"function","modifiers":[],"name":"getUserVaultPoolDeposits","nameLocation":"10148:24:10","nodeType":"FunctionDefinition","parameters":{"id":8818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8815,"mutability":"mutable","name":"vaultId","nameLocation":"10191:7:10","nodeType":"VariableDeclaration","scope":8884,"src":"10183:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8814,"name":"uint256","nodeType":"ElementaryTypeName","src":"10183:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8817,"mutability":"mutable","name":"user","nameLocation":"10217:4:10","nodeType":"VariableDeclaration","scope":8884,"src":"10209:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8816,"name":"address","nodeType":"ElementaryTypeName","src":"10209:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10172:56:10"},"returnParameters":{"id":8823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8884,"src":"10250:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$8149_memory_ptr_$dyn_memory_ptr","typeString":"struct Vaults.Deposits[]"},"typeName":{"baseType":{"id":8820,"nodeType":"UserDefinedTypeName","pathNode":{"id":8819,"name":"Deposits","nameLocations":["10250:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":8149,"src":"10250:8:10"},"referencedDeclaration":8149,"src":"10250:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Deposits_$8149_storage_ptr","typeString":"struct Vaults.Deposits"}},"id":8821,"nodeType":"ArrayTypeName","src":"10250:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposits_$8149_storage_$dyn_storage_ptr","typeString":"struct Vaults.Deposits[]"}},"visibility":"internal"}],"src":"10249:19:10"},"scope":9094,"src":"10139:533:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8900,"nodeType":"Block","src":"10807:58:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":8894,"name":"userVaultDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"10825:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Vaults.VaultDeposit storage ref))"}},"id":8896,"indexExpression":{"id":8895,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"10843:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10825:23:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$","typeString":"mapping(uint256 => struct Vaults.VaultDeposit storage ref)"}},"id":8898,"indexExpression":{"id":8897,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8886,"src":"10849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10825:32:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage","typeString":"struct Vaults.VaultDeposit storage ref"}},"functionReturnParameters":8893,"id":8899,"nodeType":"Return","src":"10818:39:10"}]},"functionSelector":"57656486","id":8901,"implemented":true,"kind":"function","modifiers":[],"name":"getUserVaultDeposit","nameLocation":"10689:19:10","nodeType":"FunctionDefinition","parameters":{"id":8889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8886,"mutability":"mutable","name":"vaultId","nameLocation":"10727:7:10","nodeType":"VariableDeclaration","scope":8901,"src":"10719:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8885,"name":"uint256","nodeType":"ElementaryTypeName","src":"10719:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8888,"mutability":"mutable","name":"user","nameLocation":"10753:4:10","nodeType":"VariableDeclaration","scope":8901,"src":"10745:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8887,"name":"address","nodeType":"ElementaryTypeName","src":"10745:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10708:56:10"},"returnParameters":{"id":8893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8901,"src":"10786:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_memory_ptr","typeString":"struct Vaults.VaultDeposit"},"typeName":{"id":8891,"nodeType":"UserDefinedTypeName","pathNode":{"id":8890,"name":"VaultDeposit","nameLocations":["10786:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":8169,"src":"10786:12:10"},"referencedDeclaration":8169,"src":"10786:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage_ptr","typeString":"struct Vaults.VaultDeposit"}},"visibility":"internal"}],"src":"10785:21:10"},"scope":9094,"src":"10680:185:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8921,"nodeType":"Block","src":"10993:62:10","statements":[{"expression":{"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":8912,"name":"userVaultDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"11004:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Vaults.VaultDeposit storage ref))"}},"id":8915,"indexExpression":{"id":8913,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"11022:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11004:23:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VaultDeposit_$8169_storage_$","typeString":"mapping(uint256 => struct Vaults.VaultDeposit storage ref)"}},"id":8916,"indexExpression":{"id":8914,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"11028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11004:32:10","typeDescriptions":{"typeIdentifier":"t_struct$_VaultDeposit_$8169_storage","typeString":"struct Vaults.VaultDeposit storage ref"}},"id":8917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11037:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8153,"src":"11004:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11046:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11004:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8920,"nodeType":"ExpressionStatement","src":"11004:43:10"}]},"functionSelector":"1f8be73c","id":8922,"implemented":true,"kind":"function","modifiers":[{"id":8908,"kind":"modifierInvocation","modifierName":{"id":8907,"name":"nonReentrant","nameLocations":["10971:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":340,"src":"10971:12:10"},"nodeType":"ModifierInvocation","src":"10971:12:10"},{"id":8910,"kind":"modifierInvocation","modifierName":{"id":8909,"name":"onlyPool","nameLocations":["10984:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":9093,"src":"10984:8:10"},"nodeType":"ModifierInvocation","src":"10984:8:10"}],"name":"setUserVaultDepositToZero","nameLocation":"10882:25:10","nodeType":"FunctionDefinition","parameters":{"id":8906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8903,"mutability":"mutable","name":"vaultId","nameLocation":"10926:7:10","nodeType":"VariableDeclaration","scope":8922,"src":"10918:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8902,"name":"uint256","nodeType":"ElementaryTypeName","src":"10918:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8905,"mutability":"mutable","name":"user","nameLocation":"10952:4:10","nodeType":"VariableDeclaration","scope":8922,"src":"10944:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8904,"name":"address","nodeType":"ElementaryTypeName","src":"10944:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10907:56:10"},"returnParameters":{"id":8911,"nodeType":"ParameterList","parameters":[],"src":"10993:0:10"},"scope":9094,"src":"10873:182:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8965,"nodeType":"Block","src":"11121:205:10","statements":[{"assignments":[8933],"declarations":[{"constant":false,"id":8933,"mutability":"mutable","name":"allVaults","nameLocation":"11147:9:10","nodeType":"VariableDeclaration","scope":8965,"src":"11132:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vault_$8129_memory_ptr_$dyn_memory_ptr","typeString":"struct Vaults.Vault[]"},"typeName":{"baseType":{"id":8931,"nodeType":"UserDefinedTypeName","pathNode":{"id":8930,"name":"Vault","nameLocations":["11132:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8129,"src":"11132:5:10"},"referencedDeclaration":8129,"src":"11132:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"}},"id":8932,"nodeType":"ArrayTypeName","src":"11132:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vault_$8129_storage_$dyn_storage_ptr","typeString":"struct Vaults.Vault[]"}},"visibility":"internal"}],"id":8940,"initialValue":{"arguments":[{"id":8938,"name":"vaultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"11171:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11159:11:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Vault_$8129_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Vaults.Vault memory[] memory)"},"typeName":{"baseType":{"id":8935,"nodeType":"UserDefinedTypeName","pathNode":{"id":8934,"name":"Vault","nameLocations":["11163:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8129,"src":"11163:5:10"},"referencedDeclaration":8129,"src":"11163:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"}},"id":8936,"nodeType":"ArrayTypeName","src":"11163:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vault_$8129_storage_$dyn_storage_ptr","typeString":"struct Vaults.Vault[]"}}},"id":8939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11159:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vault_$8129_memory_ptr_$dyn_memory_ptr","typeString":"struct Vaults.Vault memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11132:50:10"},{"body":{"id":8961,"nodeType":"Block","src":"11235:55:10","statements":[{"expression":{"id":8959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8951,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"11250:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vault_$8129_memory_ptr_$dyn_memory_ptr","typeString":"struct Vaults.Vault memory[] memory"}},"id":8955,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8952,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"11260:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11264:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11260:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11250:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8956,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"11269:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Vault_$8129_storage_$","typeString":"mapping(uint256 => struct Vaults.Vault storage ref)"}},"id":8958,"indexExpression":{"id":8957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"11276:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11269:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage","typeString":"struct Vaults.Vault storage ref"}},"src":"11250:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_memory_ptr","typeString":"struct Vaults.Vault memory"}},"id":8960,"nodeType":"ExpressionStatement","src":"11250:28:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8945,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"11213:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8946,"name":"vaultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"11218:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11213:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8962,"initializationExpression":{"assignments":[8942],"declarations":[{"constant":false,"id":8942,"mutability":"mutable","name":"i","nameLocation":"11206:1:10","nodeType":"VariableDeclaration","scope":8962,"src":"11198:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8941,"name":"uint256","nodeType":"ElementaryTypeName","src":"11198:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8944,"initialValue":{"hexValue":"31","id":8943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11210:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"11198:13:10"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":8949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11230:3:10","subExpression":{"id":8948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"11230:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8950,"nodeType":"ExpressionStatement","src":"11230:3:10"},"nodeType":"ForStatement","src":"11193:97:10"},{"expression":{"id":8963,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"11309:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vault_$8129_memory_ptr_$dyn_memory_ptr","typeString":"struct Vaults.Vault memory[] memory"}},"functionReturnParameters":8928,"id":8964,"nodeType":"Return","src":"11302:16:10"}]},"functionSelector":"44d00f82","id":8966,"implemented":true,"kind":"function","modifiers":[],"name":"getVaults","nameLocation":"11072:9:10","nodeType":"FunctionDefinition","parameters":{"id":8923,"nodeType":"ParameterList","parameters":[],"src":"11081:2:10"},"returnParameters":{"id":8928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8966,"src":"11105:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vault_$8129_memory_ptr_$dyn_memory_ptr","typeString":"struct Vaults.Vault[]"},"typeName":{"baseType":{"id":8925,"nodeType":"UserDefinedTypeName","pathNode":{"id":8924,"name":"Vault","nameLocations":["11105:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":8129,"src":"11105:5:10"},"referencedDeclaration":8129,"src":"11105:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$8129_storage_ptr","typeString":"struct Vaults.Vault"}},"id":8926,"nodeType":"ArrayTypeName","src":"11105:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vault_$8129_storage_$dyn_storage_ptr","typeString":"struct Vaults.Vault[]"}},"visibility":"internal"}],"src":"11104:16:10"},"scope":9094,"src":"11063:263:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9003,"nodeType":"Block","src":"11397:245:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8974,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"11416:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11430:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8975,"name":"address","nodeType":"ElementaryTypeName","src":"11430:7:10","typeDescriptions":{}}},"id":8978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11430:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11416:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e616e636520616c726561647920736574","id":8980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11442:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_256d4bbc7883dafee56b1b5b430f2928ee11abc3dac304a43bb764d90df40708","typeString":"literal_string \"Governance already set\""},"value":"Governance already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_256d4bbc7883dafee56b1b5b430f2928ee11abc3dac304a43bb764d90df40708","typeString":"literal_string \"Governance already set\""}],"id":8973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11408:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11408:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8982,"nodeType":"ExpressionStatement","src":"11408:59:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8984,"name":"_governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"11486:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11509:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11501:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8985,"name":"address","nodeType":"ElementaryTypeName","src":"11501:7:10","typeDescriptions":{}}},"id":8988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11501:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11486:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e616e636520616464726573732063616e6e6f74206265207a65726f","id":8990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11513:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3aa1986b808de47282cda149f786d426662cb8137be11b0930bd660fe9ff4a19","typeString":"literal_string \"Governance address cannot be zero\""},"value":"Governance address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3aa1986b808de47282cda149f786d426662cb8137be11b0930bd660fe9ff4a19","typeString":"literal_string \"Governance address cannot be zero\""}],"id":8983,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11478:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11478:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8992,"nodeType":"ExpressionStatement","src":"11478:71:10"},{"expression":{"id":8995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8993,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"11560:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8994,"name":"_governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"11573:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11560:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8996,"nodeType":"ExpressionStatement","src":"11560:24:10"},{"expression":{"id":9001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8997,"name":"IGovernanceContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"11595:19:10","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$8103","typeString":"contract IGov"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8999,"name":"_governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"11622:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8998,"name":"IGov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"11617:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGov_$8103_$","typeString":"type(contract IGov)"}},"id":9000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$8103","typeString":"contract IGov"}},"src":"11595:39:10","typeDescriptions":{"typeIdentifier":"t_contract$_IGov_$8103","typeString":"contract IGov"}},"id":9002,"nodeType":"ExpressionStatement","src":"11595:39:10"}]},"functionSelector":"ab033ea9","id":9004,"implemented":true,"kind":"function","modifiers":[{"id":8971,"kind":"modifierInvocation","modifierName":{"id":8970,"name":"onlyOwner","nameLocations":["11387:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11387:9:10"},"nodeType":"ModifierInvocation","src":"11387:9:10"}],"name":"setGovernance","nameLocation":"11343:13:10","nodeType":"FunctionDefinition","parameters":{"id":8969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8968,"mutability":"mutable","name":"_governance","nameLocation":"11365:11:10","nodeType":"VariableDeclaration","scope":9004,"src":"11357:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8967,"name":"address","nodeType":"ElementaryTypeName","src":"11357:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11356:21:10"},"returnParameters":{"id":8972,"nodeType":"ParameterList","parameters":[],"src":"11397:0:10"},"scope":9094,"src":"11334:308:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9041,"nodeType":"Block","src":"11711:294:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9012,"name":"coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"11730:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11755:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11747:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9013,"name":"address","nodeType":"ElementaryTypeName","src":"11747:7:10","typeDescriptions":{}}},"id":9016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11747:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11730:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e616e636520616c726561647920736574","id":9018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11759:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_256d4bbc7883dafee56b1b5b430f2928ee11abc3dac304a43bb764d90df40708","typeString":"literal_string \"Governance already set\""},"value":"Governance already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_256d4bbc7883dafee56b1b5b430f2928ee11abc3dac304a43bb764d90df40708","typeString":"literal_string \"Governance already set\""}],"id":9011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11722:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11722:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9020,"nodeType":"ExpressionStatement","src":"11722:62:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9022,"name":"_coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9006,"src":"11817:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11843:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11835:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9023,"name":"address","nodeType":"ElementaryTypeName","src":"11835:7:10","typeDescriptions":{}}},"id":9026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11835:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11817:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e616e636520616464726573732063616e6e6f74206265207a65726f","id":9028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11860:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3aa1986b808de47282cda149f786d426662cb8137be11b0930bd660fe9ff4a19","typeString":"literal_string \"Governance address cannot be zero\""},"value":"Governance address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3aa1986b808de47282cda149f786d426662cb8137be11b0930bd660fe9ff4a19","typeString":"literal_string \"Governance address cannot be zero\""}],"id":9021,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11795:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11795:111:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9030,"nodeType":"ExpressionStatement","src":"11795:111:10"},{"expression":{"id":9035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9031,"name":"ICoverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"11917:14:10","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$7982","typeString":"contract ICover"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9033,"name":"_coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9006,"src":"11941:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9032,"name":"ICover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"11934:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICover_$7982_$","typeString":"type(contract ICover)"}},"id":9034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$7982","typeString":"contract ICover"}},"src":"11917:39:10","typeDescriptions":{"typeIdentifier":"t_contract$_ICover_$7982","typeString":"contract ICover"}},"id":9036,"nodeType":"ExpressionStatement","src":"11917:39:10"},{"expression":{"id":9039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9037,"name":"coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"11967:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9038,"name":"_coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9006,"src":"11983:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11967:30:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9040,"nodeType":"ExpressionStatement","src":"11967:30:10"}]},"functionSelector":"7c366cc6","id":9042,"implemented":true,"kind":"function","modifiers":[{"id":9009,"kind":"modifierInvocation","modifierName":{"id":9008,"name":"onlyOwner","nameLocations":["11701:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11701:9:10"},"nodeType":"ModifierInvocation","src":"11701:9:10"}],"name":"setCover","nameLocation":"11659:8:10","nodeType":"FunctionDefinition","parameters":{"id":9007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9006,"mutability":"mutable","name":"_coverContract","nameLocation":"11676:14:10","nodeType":"VariableDeclaration","scope":9042,"src":"11668:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9005,"name":"address","nodeType":"ElementaryTypeName","src":"11668:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11667:24:10"},"returnParameters":{"id":9010,"nodeType":"ParameterList","parameters":[],"src":"11711:0:10"},"scope":9094,"src":"11650:355:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9058,"nodeType":"Block","src":"12039:172:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12072:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12076:6:10","memberName":"sender","nodeType":"MemberAccess","src":"12072:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9047,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"12086:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12072:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9049,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12100:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12104:6:10","memberName":"sender","nodeType":"MemberAccess","src":"12100:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9051,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"12114:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12100:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12072:54:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f742074686520676f7665726e616e636520636f6e7472616374","id":9054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12141:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7258deee4e3e974e8adb937bcf0525c89cfdc8dffe55df968eaf3010e43c2203","typeString":"literal_string \"Caller is not the governance contract\""},"value":"Caller is not the governance contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7258deee4e3e974e8adb937bcf0525c89cfdc8dffe55df968eaf3010e43c2203","typeString":"literal_string \"Caller is not the governance contract\""}],"id":9044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12050:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12050:141:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9056,"nodeType":"ExpressionStatement","src":"12050:141:10"},{"id":9057,"nodeType":"PlaceholderStatement","src":"12202:1:10"}]},"id":9059,"name":"onlyGovernance","nameLocation":"12022:14:10","nodeType":"ModifierDefinition","parameters":{"id":9043,"nodeType":"ParameterList","parameters":[],"src":"12036:2:10"},"src":"12013:198:10","virtual":false,"visibility":"internal"},{"body":{"id":9075,"nodeType":"Block","src":"12240:175:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9062,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12273:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12277:6:10","memberName":"sender","nodeType":"MemberAccess","src":"12273:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9064,"name":"coverContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"12287:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12273:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9066,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12304:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12308:6:10","memberName":"sender","nodeType":"MemberAccess","src":"12304:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9068,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"12318:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12304:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12273:57:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f742074686520676f7665726e616e636520636f6e7472616374","id":9071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12345:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7258deee4e3e974e8adb937bcf0525c89cfdc8dffe55df968eaf3010e43c2203","typeString":"literal_string \"Caller is not the governance contract\""},"value":"Caller is not the governance contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7258deee4e3e974e8adb937bcf0525c89cfdc8dffe55df968eaf3010e43c2203","typeString":"literal_string \"Caller is not the governance contract\""}],"id":9061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12251:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12251:144:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9073,"nodeType":"ExpressionStatement","src":"12251:144:10"},{"id":9074,"nodeType":"PlaceholderStatement","src":"12406:1:10"}]},"id":9076,"name":"onlyCover","nameLocation":"12228:9:10","nodeType":"ModifierDefinition","parameters":{"id":9060,"nodeType":"ParameterList","parameters":[],"src":"12237:2:10"},"src":"12219:196:10","virtual":false,"visibility":"internal"},{"body":{"id":9092,"nodeType":"Block","src":"12443:174:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12476:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12480:6:10","memberName":"sender","nodeType":"MemberAccess","src":"12476:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9081,"name":"poolContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8236,"src":"12490:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12476:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9083,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12506:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12510:6:10","memberName":"sender","nodeType":"MemberAccess","src":"12506:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9085,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"12520:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12506:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12476:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f742074686520676f7665726e616e636520636f6e7472616374","id":9088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12547:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7258deee4e3e974e8adb937bcf0525c89cfdc8dffe55df968eaf3010e43c2203","typeString":"literal_string \"Caller is not the governance contract\""},"value":"Caller is not the governance contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7258deee4e3e974e8adb937bcf0525c89cfdc8dffe55df968eaf3010e43c2203","typeString":"literal_string \"Caller is not the governance contract\""}],"id":9078,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12454:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:143:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9090,"nodeType":"ExpressionStatement","src":"12454:143:10"},{"id":9091,"nodeType":"PlaceholderStatement","src":"12608:1:10"}]},"id":9093,"name":"onlyPool","nameLocation":"12432:8:10","nodeType":"ModifierDefinition","parameters":{"id":9077,"nodeType":"ParameterList","parameters":[],"src":"12440:2:10"},"src":"12423:194:10","virtual":false,"visibility":"internal"}],"scope":9095,"src":"2241:10379:10","usedErrors":[13,18,321],"usedEvents":[24,8257,8265,8273,8279,8287,8295]}],"src":"33:12589:10"},"id":10}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220373b6658416fa67f587bd31b0fda24785851a27822b133650316753c7967f10a64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY EXTCODESIZE PUSH7 0x58416FA67F587B 0xD3 SHL 0xF 0xDA 0x24 PUSH25 0x5851A27822B133650316753C7967F10A64736F6C634300081B STOP CALLER ","sourceMap":"657:1315:3:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220373b6658416fa67f587bd31b0fda24785851a27822b133650316753c7967f10a64736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY EXTCODESIZE PUSH7 0x58416FA67F587B 0xD3 SHL 0xF 0xDA 0x24 PUSH25 0x5851A27822B133650316753C7967F10A64736F6C634300081B STOP CALLER ","sourceMap":"657:1315:3:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f01680de34a5280e2d48bc07a6b9a9d9b5ad5175d500e38276ae2380f455d6cc64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE AND DUP1 0xDE CALLVALUE 0xA5 0x28 0xE 0x2D BASEFEE 0xBC SMOD 0xA6 0xB9 0xA9 0xD9 0xB5 0xAD MLOAD PUSH22 0xD500E38276AE2380F455D6CC64736F6C634300081B00 CALLER ","sourceMap":"281:28026:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f01680de34a5280e2d48bc07a6b9a9d9b5ad5175d500e38276ae2380f455d6cc64736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE AND DUP1 0xDE CALLVALUE 0xA5 0x28 0xE 0x2D BASEFEE 0xBC SMOD 0xA6 0xB9 0xA9 0xD9 0xB5 0xAD MLOAD PUSH22 0xD500E38276AE2380F455D6CC64736F6C634300081B00 CALLER ","sourceMap":"281:28026:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f989b9f7ecc8b58b54c4c9c4a5abc2f90b9924b22763f537486185cc903d0d8964736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP10 0xB9 0xF7 0xEC 0xC8 0xB5 DUP12 SLOAD 0xC4 0xC9 0xC4 0xA5 0xAB 0xC2 0xF9 SIGNEXTEND SWAP10 0x24 0xB2 0x27 PUSH4 0xF5374861 DUP6 0xCC SWAP1 RETURNDATASIZE 0xD DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f989b9f7ecc8b58b54c4c9c4a5abc2f90b9924b22763f537486185cc903d0d8964736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP10 0xB9 0xF7 0xEC 0xC8 0xB5 DUP12 SLOAD 0xC4 0xC9 0xC4 0xA5 0xAB 0xC2 0xF9 SIGNEXTEND SWAP10 0x24 0xB2 0x27 PUSH4 0xF5374861 DUP6 0xCC SWAP1 RETURNDATASIZE 0xD DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/CoverLib.sol":{"CoverLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122053be3f751fcdf29c7b7cc470d1196c1eabd4948a4033a954697aabb51664753964736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xBE EXTCODEHASH PUSH22 0x1FCDF29C7B7CC470D1196C1EABD4948A4033A954697A 0xAB 0xB5 AND PUSH5 0x753964736F PUSH13 0x634300081B0033000000000000 ","sourceMap":"60:1819:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122053be3f751fcdf29c7b7cc470d1196c1eabd4948a4033a954697aabb51664753964736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xBE EXTCODEHASH PUSH22 0x1FCDF29C7B7CC470D1196C1EABD4948A4033A954697A 0xAB 0xB5 AND PUSH5 0x753964736F PUSH13 0x634300081B0033000000000000 ","sourceMap":"60:1819:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoverLib.sol\":\"CoverLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]}},\"version\":1}"}},"contracts/InsuranceCover.sol":{"ILP":{"abi":[{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover","name":"_cover","type":"tuple"}],"name":"addPoolCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPool","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPoolCovers","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"getUserDeposit","outputs":[{"components":[{"internalType":"address","name":"lp","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"enum ILP.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"daysLeft","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"}],"internalType":"struct ILP.Deposits","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getVaultDeposits","outputs":[{"components":[{"internalType":"address","name":"lp","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"enum ILP.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"daysLeft","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"}],"internalType":"struct ILP.Deposits[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"__poolPercentageSplit","type":"uint256"}],"name":"increasePercentageSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"__poolPercentageSplit","type":"uint256"}],"name":"reducePercentageSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover","name":"_cover","type":"tuple"}],"name":"updatePoolCovers","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addPoolCover(uint256,(uint256,string,uint8,string,uint256,uint256,uint256,uint256,uint256,uint256,string))":"c7aa9874","getPool(uint256)":"068bcd8d","getPoolCovers(uint256)":"7eb111f0","getUserDeposit(uint256,address)":"4e055244","getVaultDeposits(uint256,address)":"82457766","increasePercentageSplit(uint256,uint256)":"9fd36b15","reducePercentageSplit(uint256,uint256)":"a4948d85","updatePoolCovers(uint256,(uint256,string,uint8,string,uint256,uint256,uint256,uint256,uint256,uint256,string))":"a14764d0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover\",\"name\":\"_cover\",\"type\":\"tuple\"}],\"name\":\"addPoolCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPoolCovers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum ILP.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"daysLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"}],\"internalType\":\"struct ILP.Deposits\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVaultDeposits\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum ILP.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"daysLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"}],\"internalType\":\"struct ILP.Deposits[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__poolPercentageSplit\",\"type\":\"uint256\"}],\"name\":\"increasePercentageSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__poolPercentageSplit\",\"type\":\"uint256\"}],\"name\":\"reducePercentageSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover\",\"name\":\"_cover\",\"type\":\"tuple\"}],\"name\":\"updatePoolCovers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsuranceCover.sol\":\"ILP\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/InsuranceCover.sol\":{\"keccak256\":\"0x2409da65a48fa8618ec7ac08911fe2132a77a8cc12dc50d224f44438b0755229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e359f18544fba8fdeedf4d0338c55ad0e2e182458aeab867d18278d6eb51d1ce\",\"dweb:/ipfs/QmdZ8JRGgKkrrUU5yrwkYuu7sFLZBdmXMAMJ2TqchjutZd\"]}},\"version\":1}"},"IbqBTC":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"bqMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"bqMint(address,uint256)":"e2094eda","burn(address,uint256)":"9dc29fac","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bqMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsuranceCover.sol\":\"IbqBTC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/InsuranceCover.sol\":{\"keccak256\":\"0x2409da65a48fa8618ec7ac08911fe2132a77a8cc12dc50d224f44438b0755229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e359f18544fba8fdeedf4d0338c55ad0e2e182458aeab867d18278d6eb51d1ce\",\"dweb:/ipfs/QmdZ8JRGgKkrrUU5yrwkYuu7sFLZBdmXMAMJ2TqchjutZd\"]}},\"version\":1}"},"InsuranceCover":{"abi":[{"inputs":[{"internalType":"address","name":"_lpContract","type":"address"},{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"address","name":"_bqBTC","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CoverNotAvailable","type":"error"},{"inputs":[],"name":"InsufficientPoolBalance","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidCoverDuration","type":"error"},{"inputs":[],"name":"LpNotActive","type":"error"},{"inputs":[],"name":"NameAlreadyExists","type":"error"},{"inputs":[],"name":"NoClaimableReward","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"UnsupportedCoverType","type":"error"},{"inputs":[],"name":"UserHaveAlreadyPurchasedCover","type":"error"},{"inputs":[],"name":"WrongPool","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"coverId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"}],"name":"CoverCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"coverValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"coverFee","type":"uint256"},{"indexed":false,"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"}],"name":"CoverPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"coverId","type":"uint256"},{"indexed":false,"internalType":"string","name":"coverName","type":"string"},{"indexed":false,"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"}],"name":"CoverUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PayoutClaimed","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"LastVaultClaimTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"NextLpClaimTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bqBTC","outputs":[{"internalType":"contract IbqBTC","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bqBTCAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"claimPayoutForLP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"}],"name":"clamPayoutForVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"coverCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"coverExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"coverFeeBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"coverIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"covers","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"string","name":"_cid","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"_riskType","type":"uint8"},{"internalType":"string","name":"_coverName","type":"string"},{"internalType":"string","name":"_chains","type":"string"},{"internalType":"uint256","name":"_capacity","type":"uint256"},{"internalType":"uint256","name":"_cost","type":"uint256"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"createCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"deleteExpiredUserCovers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllAvailableCovers","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllParticipants","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAllUserCovers","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"uint256","name":"coverValue","type":"uint256"},{"internalType":"uint256","name":"claimPaid","type":"uint256"},{"internalType":"uint256","name":"coverPeriod","type":"uint256"},{"internalType":"uint256","name":"endDay","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct CoverLib.GenericCoverInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCoverFeeBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"}],"name":"getCoverInfo","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getDepositClaimableDays","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getLastClaimTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_coverId","type":"uint256"}],"name":"getUserCoverInfo","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"uint256","name":"coverValue","type":"uint256"},{"internalType":"uint256","name":"claimPaid","type":"uint256"},{"internalType":"uint256","name":"coverPeriod","type":"uint256"},{"internalType":"uint256","name":"endDay","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct CoverLib.GenericCoverInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserParticipation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lpAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lpContract","outputs":[{"internalType":"contract ILP","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"participants","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"participation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"},{"internalType":"uint256","name":"_coverValue","type":"uint256"},{"internalType":"uint256","name":"_coverPeriod","type":"uint256"},{"internalType":"uint256","name":"_coverFee","type":"uint256"}],"name":"purchaseCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"},{"internalType":"string","name":"_coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"_riskType","type":"uint8"},{"internalType":"string","name":"_cid","type":"string"},{"internalType":"string","name":"_chains","type":"string"},{"internalType":"uint256","name":"_capacity","type":"uint256"},{"internalType":"uint256","name":"_cost","type":"uint256"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"updateCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"}],"name":"updateMaxAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_coverId","type":"uint256"},{"internalType":"uint256","name":"_claimPaid","type":"uint256"}],"name":"updateUserCoverValue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userCovers","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"uint256","name":"coverValue","type":"uint256"},{"internalType":"uint256","name":"claimPaid","type":"uint256"},{"internalType":"uint256","name":"coverPeriod","type":"uint256"},{"internalType":"uint256","name":"endDay","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":323,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x128 JUMPI PUSH1 0x1F PUSH2 0x3563 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x12D JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x128 JUMPI PUSH2 0x47 DUP2 PUSH2 0x143 JUMP JUMPDEST SWAP1 PUSH2 0x60 PUSH1 0x40 PUSH2 0x59 PUSH1 0x20 DUP5 ADD PUSH2 0x143 JUMP JUMPDEST SWAP3 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x112 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP6 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD DUP3 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x340B SWAP1 DUP2 PUSH2 0x158 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x128 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xDB981A0 EQ PUSH2 0x2AD5 JUMPI POP DUP1 PUSH4 0x10525814 EQ PUSH2 0x1B4B JUMPI DUP1 PUSH4 0x106B5DA1 EQ PUSH2 0x2965 JUMPI DUP1 PUSH4 0x195EC9EE EQ PUSH2 0x289D JUMPI DUP1 PUSH4 0x2D8A340C EQ PUSH2 0x26B3 JUMPI DUP1 PUSH4 0x34808EC3 EQ PUSH2 0x268A JUMPI DUP1 PUSH4 0x357917B7 EQ PUSH2 0x2106 JUMPI DUP1 PUSH4 0x35C1D349 EQ PUSH2 0x2646 JUMPI DUP1 PUSH4 0x46F84795 EQ PUSH2 0x1015 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x261D JUMPI DUP1 PUSH4 0x602710A4 EQ PUSH2 0x2124 JUMPI DUP1 PUSH4 0x609C7604 EQ PUSH2 0x2106 JUMPI DUP1 PUSH4 0x62858BFA EQ PUSH2 0x2096 JUMPI DUP1 PUSH4 0x6299DF6C EQ PUSH2 0x1F7F JUMPI DUP1 PUSH4 0x649718B2 EQ PUSH2 0x1D52 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CF5 JUMPI DUP1 PUSH4 0x73CCE3EE EQ PUSH2 0x1BBD JUMPI DUP1 PUSH4 0x782EA619 EQ PUSH2 0x1B8E JUMPI DUP1 PUSH4 0x7A728E7F EQ PUSH2 0x1B4B JUMPI DUP1 PUSH4 0x7CEB4A69 EQ PUSH2 0x1AB3 JUMPI DUP1 PUSH4 0x8ACEE3CF EQ PUSH2 0x1A8A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A61 JUMPI DUP1 PUSH4 0x8DE4D101 EQ PUSH2 0x127A JUMPI DUP1 PUSH4 0x93B1AD38 EQ PUSH2 0x104E JUMPI DUP1 PUSH4 0x96F3A8AD EQ PUSH2 0x1015 JUMPI DUP1 PUSH4 0x9732BDB5 EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0x996B8A6F EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0x9B4DC8CC EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0x9E7B399E EQ PUSH2 0x74C JUMPI DUP1 PUSH4 0xA650C232 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xBFC664F3 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xCADCB471 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xFB643583 EQ PUSH2 0x1C2 JUMPI PUSH4 0xFEB0B8F5 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x10 SLOAD DUP3 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH2 0x1ED DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x216 PUSH2 0x2B15 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x33AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 PUSH2 0x36C SWAP2 PUSH2 0x2A5 PUSH2 0x2B15 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x3184 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2DA DUP5 PUSH2 0x2D46 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x305 SWAP1 DUP5 AND PUSH1 0x40 DUP7 ADD PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST SUB DUP3 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2DB5 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x38A PUSH2 0x2B15 JUMP JUMPDEST PUSH2 0x392 PUSH2 0x338A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH2 0x3B4 PUSH1 0x1 SWAP3 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP4 DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP2 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x8 DUP2 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND SWAP1 DUP2 PUSH2 0x498 JUMPI JUMPDEST POP PUSH2 0x3F3 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x39E JUMP JUMPDEST PUSH1 0xFF NOT AND SWAP1 SSTORE DUP4 DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 DUP6 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x8 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE DUP3 DUP6 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD PUSH2 0x42F DUP2 SLOAD PUSH2 0x2C89 JUMP JUMPDEST DUP1 PUSH2 0x458 JUMPI JUMPDEST POP POP PUSH1 0x4 DUP3 ADD SSTORE DUP3 PUSH1 0x5 DUP3 ADD SSTORE DUP3 PUSH1 0x6 DUP3 ADD SSTORE DUP3 PUSH1 0x7 DUP3 ADD SSTORE ADD SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP9 EQ PUSH2 0x46D JUMPI POP SSTORE JUMPDEST DUP3 CODESIZE DUP1 PUSH2 0x435 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x488 SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 DUP10 ADD PUSH2 0x30EE JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 KECCAK256 SWAP2 SSTORE SSTORE PUSH2 0x465 JUMP JUMPDEST PUSH1 0x7 SWAP2 POP ADD SLOAD TIMESTAMP GT CODESIZE PUSH2 0x3E4 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4CB PUSH2 0x338A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4122BBB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x741 JUMPI DUP4 SWAP2 PUSH2 0x698 JUMPI JUMPDEST POP DUP3 SWAP1 CALLER DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x676 JUMPI PUSH2 0x12C PUSH2 0x55C PUSH1 0xC0 PUSH2 0x53E DUP5 PUSH2 0x31C8 JUMP JUMPDEST MLOAD ADD MLOAD JUMPDEST TIMESTAMP PUSH1 0xE0 PUSH2 0x54E DUP7 PUSH2 0x31C8 JUMP JUMPDEST MLOAD ADD MLOAD TIMESTAMP GT PUSH2 0x662 JUMPI PUSH2 0x3023 JUMP JUMPDEST DIV SWAP4 DUP1 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x596 JUMPI PUSH2 0x58E PUSH1 0x1 SWAP2 PUSH2 0x588 DUP9 PUSH1 0x60 PUSH2 0x580 DUP10 DUP10 PUSH2 0x31D5 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x2FFA JUMP JUMPDEST SWAP1 PUSH2 0x30BD JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x561 JUMP JUMPDEST DUP5 SWAP1 CALLER DUP4 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP5 KECCAK256 SSTORE DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x63A JUMPI JUMPDEST POP POP PUSH2 0x604 DUP2 PUSH1 0x2 SLOAD PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x408E6E0B73DAF4C873106E95FD067260FBFF8BF9D1B499CAD563D4480D45BAC PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x644 SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x64F JUMPI DUP3 DUP5 PUSH2 0x5F6 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP PUSH1 0xE0 PUSH2 0x66E DUP6 PUSH2 0x31C8 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x3023 JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH2 0x12C PUSH2 0x55C PUSH1 0x40 DUP7 KECCAK256 SLOAD PUSH2 0x542 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x6A9 DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x739 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x73D JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x739 JUMPI DUP1 MLOAD PUSH2 0x6DE DUP2 PUSH2 0x316D JUMP JUMPDEST SWAP3 PUSH2 0x6EC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D94 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 PUSH2 0x120 DUP2 DUP7 ADD SWAP4 MUL DUP5 ADD ADD SWAP3 DUP2 DUP5 GT PUSH2 0x735 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x71A JUMPI POP POP POP POP CODESIZE PUSH2 0x50B JUMP JUMPDEST PUSH1 0x20 PUSH2 0x120 SWAP2 PUSH2 0x72A DUP5 DUP7 PUSH2 0x3030 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x709 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x771 PUSH2 0x2B15 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH2 0x7B9 DUP4 PUSH2 0x7B2 DUP2 PUSH1 0x3 DUP6 ADD PUSH2 0x2CC3 JUMP JUMPDEST SUB DUP5 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x808 PUSH1 0x6 DUP5 ADD SLOAD SWAP3 PUSH2 0x7F5 PUSH1 0xFF PUSH1 0x8 PUSH1 0x7 DUP9 ADD SLOAD SWAP8 ADD SLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x120 PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD SWAP1 PUSH2 0x2B9F JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH2 0x88A CALLDATASIZE PUSH2 0x2E92 JUMP JUMPDEST PUSH2 0x89A SWAP9 SWAP8 SWAP4 SWAP5 SWAP7 SWAP6 SWAP3 SWAP9 PUSH2 0x33AC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7EB111F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP10 DUP8 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x100A JUMPI DUP11 SWAP8 PUSH2 0xFE6 JUMPI JUMPDEST POP SWAP7 SWAP10 PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 DUP11 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x20 PUSH2 0x8F5 DUP3 DUP12 PUSH2 0x31D5 JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x926 PUSH1 0x20 DUP3 DUP2 PUSH2 0x915 DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2B7C JUMP JUMPDEST DUP2 ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2D94 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP11 DUP13 PUSH2 0x947 PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH2 0x915 DUP4 DUP4 ADD SWAP7 DUP8 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x2B7C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH2 0x957 JUMPI PUSH1 0x1 ADD PUSH2 0x8E0 JUMP JUMPDEST PUSH4 0x3480A503 PUSH1 0xE2 SHL DUP13 MSTORE PUSH1 0x4 DUP13 REVERT JUMPDEST POP DUP11 SWAP9 POP DUP10 SWAP7 SWAP8 POP DUP12 PUSH1 0x40 MLOAD PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP2 MSTORE DUP6 PUSH1 0x4 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0x24 DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0xFDB JUMPI DUP12 DUP13 SWAP3 DUP14 SWAP3 PUSH2 0xFAC JUMPI JUMPDEST POP PUSH1 0x3 DUP11 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF98 JUMPI DUP10 EQ SWAP1 DUP2 ISZERO SWAP2 PUSH2 0xF8E JUMPI JUMPDEST POP PUSH2 0xF7F JUMPI PUSH8 0xDE0B6B3A7640000 DUP4 MUL DUP4 DUP2 DIV PUSH8 0xDE0B6B3A7640000 EQ DUP5 ISZERO OR ISZERO PUSH2 0xF6B JUMPI PUSH2 0x9F5 DUP13 SWAP3 PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 SWAP4 DIV SWAP1 PUSH2 0x2FFA JUMP JUMPDEST DIV SWAP7 DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI DUP2 DUP1 SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA4948D85 PUSH1 0xE0 SHL DUP4 MSTORE DUP13 PUSH1 0x4 DUP5 ADD MSTORE DUP10 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0xF52 JUMPI JUMPDEST POP POP PUSH2 0xA3A PUSH1 0xF SLOAD PUSH2 0x315E JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP6 PUSH2 0xA4A DUP8 PUSH2 0x2D78 JUMP JUMPDEST DUP10 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP5 DUP10 DUP7 MSTORE PUSH1 0x40 DUP9 ADD SWAP4 PUSH2 0xA64 DUP11 DUP7 PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x60 DUP10 ADD SWAP6 DUP7 MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE DUP1 PUSH1 0xC0 DUP9 ADD MSTORE DUP11 PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE DUP5 PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE DUP8 DUP10 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP3 DUP6 MLOAD DUP5 SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF3E JUMPI PUSH2 0xAC4 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xF0B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xEA2 JUMPI PUSH2 0xAFE SWAP3 SWAP2 DUP13 SWAP2 DUP4 PUSH2 0xE97 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE JUMPDEST MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xB1B SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x30D6 JUMP JUMPDEST MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDC5 JUMPI PUSH2 0xB3A PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE50 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDE4 JUMPI SWAP2 DUP1 PUSH2 0xB77 SWAP3 PUSH1 0xA SWAP6 SWAP5 DUP13 SWAP3 PUSH2 0xDD9 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP5 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE ADD PUSH2 0x140 DUP4 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDC5 JUMPI PUSH2 0xBDD DUP4 SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD8A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD27 JUMPI PUSH2 0xC16 SWAP3 SWAP2 DUP11 SWAP2 DUP4 PUSH2 0xD1C JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xD08 JUMPI SWAP1 PUSH2 0xC3B DUP3 PUSH1 0x1 DUP10 SWAP6 SWAP5 ADD PUSH1 0x10 SSTORE PUSH2 0x2B61 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL DUP10 DUP2 SHL PUSH1 0x0 NOT SWAP1 SWAP2 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x739 JUMPI PUSH2 0xC95 SWAP3 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x31EAA61D PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x2BE7 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0xCF3 JUMPI JUMPDEST POP SWAP2 DUP4 PUSH32 0x5928D65CC6AE9F07A7673F1A5A2F98D81F1BB0C2BC53BCAA33D6F11CF426F25E SWAP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xCED PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3367 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xCFD SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x739 JUMPI DUP4 DUP6 PUSH2 0xCA4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0xAE9 JUMP JUMPDEST DUP4 DUP11 MSTORE DUP2 DUP11 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0xD72 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xD59 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xC19 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xD4C JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xDB5 SWAP1 DUP5 DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDBB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP10 PUSH2 0xBE6 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xDA8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD DUP11 MSTORE DUP2 DUP11 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0xE38 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0xA SWAP8 SWAP7 SWAP5 LT PUSH2 0xE1F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xB7D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0xE0F JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0xE7D SWAP1 PUSH1 0x3 DUP6 ADD DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP10 PUSH2 0xB43 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x1 DUP7 ADD DUP13 MSTORE DUP2 DUP13 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP14 JUMPDEST DUP2 DUP2 LT PUSH2 0xEF3 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xEDA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0xB04 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0xECA JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0xF38 SWAP1 PUSH1 0x1 DUP8 ADD DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP12 PUSH2 0xACD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP2 PUSH2 0xF5C SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0xF67 JUMPI DUP10 DUP12 PUSH2 0xA2D JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP12 MSTORE PUSH1 0x4 DUP12 REVERT JUMPDEST SWAP1 POP DUP4 GT DUP13 PUSH2 0x9B8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP14 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP14 REVERT JUMPDEST SWAP2 POP POP PUSH2 0xFCB SWAP2 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0xFC3 DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2F9A JUMP JUMPDEST SWAP6 POP POP SWAP3 SWAP2 POP POP SWAP1 SWAP2 SWAP1 DUP14 PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1003 SWAP2 SWAP8 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0xFFB DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x31E9 JUMP JUMPDEST SWAP6 CODESIZE PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x103D PUSH2 0x2B15 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI DUP1 DUP2 PUSH1 0x10 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x123A JUMPI POP PUSH2 0x1077 DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 PUSH2 0x1085 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2D94 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x1094 PUSH1 0x1F NOT SWAP2 PUSH2 0x316D JUMP JUMPDEST ADD DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x1223 JUMPI POP POP DUP3 DUP4 JUMPDEST DUP3 DUP2 LT PUSH2 0x1111 JUMPI DUP4 DUP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD PUSH1 0x20 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x10E2 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x1101 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x2BE7 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x111A DUP2 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND PUSH2 0x113F JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP3 PUSH2 0x121C SWAP2 DUP8 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH1 0xA PUSH2 0x11FB PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1164 DUP5 PUSH2 0x2D78 JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x117B DUP2 PUSH2 0x319 DUP2 DUP12 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1194 PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP7 ADD PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A8 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x319 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x120B DUP3 DUP9 PUSH2 0x31D5 JUMP JUMPDEST MSTORE PUSH2 0x1216 DUP2 DUP8 PUSH2 0x31D5 JUMP JUMPDEST POP PUSH2 0x315E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x122E PUSH2 0x3105 JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x1243 DUP2 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP5 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x1266 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1066 JUMP JUMPDEST SWAP2 PUSH2 0x1272 PUSH1 0x1 SWAP2 PUSH2 0x315E JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x125E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x24 PUSH2 0x128B CALLDATASIZE PUSH2 0x2E92 JUMP JUMPDEST PUSH2 0x129E SWAP10 SWAP8 SWAP7 SWAP6 SWAP3 SWAP10 SWAP9 SWAP2 SWAP5 SWAP4 SWAP9 PUSH2 0x33AC JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP10 DUP9 DUP12 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1A56 JUMPI DUP10 DUP11 SWAP5 DUP12 SWAP3 PUSH2 0x1A2D JUMPI JUMPDEST POP PUSH1 0x3 DUP7 LT ISZERO PUSH2 0x1A19 JUMPI PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1A19 JUMPI DUP6 EQ SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x1A0F JUMPI JUMPDEST POP PUSH2 0x1A00 JUMPI DUP8 DUP10 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP3 PUSH8 0xDE0B6B3A7640000 DUP3 MUL DUP3 DUP2 DIV PUSH8 0xDE0B6B3A7640000 EQ DUP4 ISZERO OR ISZERO PUSH2 0x19EC JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x64 PUSH2 0x133C SWAP3 DIV SWAP1 PUSH2 0x2FFA JUMP JUMPDEST DIV SWAP1 DUP2 PUSH1 0x7 DUP6 ADD SLOAD GT PUSH2 0x19DD JUMPI DUP10 PUSH1 0x24 SWAP11 SWAP12 SWAP13 PUSH1 0x40 MLOAD SWAP12 DUP13 DUP1 SWAP3 PUSH4 0x7EB111F PUSH1 0xE4 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP10 DUP11 ISZERO PUSH2 0xFDB JUMPI DUP12 SWAP11 PUSH2 0x19C1 JUMPI JUMPDEST POP SWAP6 SWAP11 PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 DUP12 JUMPDEST DUP12 MLOAD DUP2 LT ISZERO PUSH2 0x141B JUMPI DUP12 DUP12 DUP3 DUP13 DUP13 PUSH1 0x20 PUSH2 0x139B DUP5 DUP8 PUSH2 0x31D5 JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x13BB PUSH1 0x20 DUP3 DUP2 PUSH2 0x915 DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2B7C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x13DB PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH2 0x915 DUP4 DUP4 ADD SWAP7 DUP8 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x2B7C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ SWAP3 DUP4 PUSH2 0x1404 JUMPI JUMPDEST POP POP POP PUSH2 0x13F5 JUMPI PUSH1 0x1 ADD PUSH2 0x1381 JUMP JUMPDEST PUSH4 0x3480A503 PUSH1 0xE2 SHL DUP14 MSTORE PUSH1 0x4 DUP14 REVERT JUMPDEST PUSH2 0x140F SWAP3 SWAP4 POP PUSH2 0x31D5 JUMP JUMPDEST MLOAD MLOAD EQ ISZERO DUP12 DUP3 DUP15 PUSH2 0x13E6 JUMP JUMPDEST POP DUP12 SWAP9 SWAP7 SWAP10 SWAP8 POP DUP13 PUSH1 0x4 DUP7 ADD SLOAD SWAP2 DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1905 JUMPI DUP12 PUSH2 0x1447 PUSH1 0x1 DUP11 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x198E JUMPI JUMPDEST POP POP PUSH1 0x20 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1924 JUMPI PUSH2 0x147F SWAP3 SWAP2 DUP3 PUSH2 0x1919 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP9 ADD SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1905 JUMPI DUP12 PUSH2 0x14A3 PUSH1 0x3 DUP11 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x18D2 JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1864 JUMPI PUSH2 0x14DD SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0x1859 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD SSTORE JUMPDEST DUP3 PUSH1 0x4 DUP8 ADD SSTORE PUSH1 0x5 DUP7 ADD SSTORE DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1845 JUMPI PUSH2 0x150B PUSH1 0xA DUP8 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1812 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x17A1 JUMPI SWAP1 DUP1 PUSH2 0x1549 SWAP3 DUP13 SWAP14 DUP14 SWAP11 SWAP12 SWAP13 SWAP14 SWAP3 PUSH2 0x1796 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xA DUP7 ADD SSTORE JUMPDEST PUSH1 0x6 DUP6 ADD SWAP2 DUP4 DUP4 SSTORE PUSH2 0x156D PUSH1 0x9 DUP8 ADD SWAP5 DUP7 DUP7 SSTORE PUSH1 0x7 DUP9 ADD SLOAD SWAP1 PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x8 DUP8 ADD SWAP1 DUP2 SSTORE SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x1722 JUMPI SWAP1 PUSH2 0x1587 SWAP2 PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x171E JUMPI DUP8 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x9FD36B15 PUSH1 0xE0 SHL DUP5 MSTORE DUP12 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1713 JUMPI DUP8 SWAP2 PUSH2 0x16FA JUMPI JUMPDEST POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x735 JUMPI DUP7 SWAP5 PUSH2 0x16A3 DUP7 SWAP3 PUSH1 0xA PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xA14764D PUSH1 0xE4 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP9 ADD MSTORE DUP3 SLOAD PUSH1 0x44 DUP9 ADD MSTORE PUSH2 0x160 PUSH1 0x64 DUP9 ADD MSTORE PUSH2 0x165B PUSH2 0x1631 PUSH2 0x1A4 DUP10 ADD PUSH1 0x1 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH2 0x1646 PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH1 0x84 DUP12 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST DUP9 DUP2 SUB PUSH1 0x43 NOT ADD PUSH1 0xA4 DUP11 ADD MSTORE PUSH1 0x3 DUP6 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xC4 DUP10 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xE4 DUP10 ADD MSTORE SWAP5 SLOAD PUSH2 0x104 DUP9 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH2 0x124 DUP9 ADD MSTORE SLOAD PUSH2 0x144 DUP8 ADD MSTORE SLOAD PUSH2 0x164 DUP7 ADD MSTORE DUP5 DUP4 SUB PUSH1 0x43 NOT ADD PUSH2 0x184 DUP7 ADD MSTORE ADD PUSH2 0x2CC3 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x16E5 JUMPI JUMPDEST POP POP PUSH32 0x758A67328BA53C1867C0272BBD2CA10D6FE71D37120188C523FE7AE7BDBBE469 SWAP2 PUSH2 0xCED PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3367 JUMP JUMPDEST DUP2 PUSH2 0x16EF SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x739 JUMPI DUP4 DUP6 PUSH2 0x16B2 JUMP JUMPDEST DUP2 PUSH2 0x1704 SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x170F JUMPI DUP6 DUP12 PUSH2 0x15CE JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1731 JUMPI JUMPDEST POP POP PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x173A SWAP2 PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x171E JUMPI DUP8 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xA4948D85 PUSH1 0xE0 SHL DUP5 MSTORE DUP12 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1713 JUMPI DUP8 SWAP2 ISZERO PUSH2 0x172A JUMPI DUP2 PUSH2 0x178B SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x170F JUMPI DUP6 DUP12 PUSH2 0x172A JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0xA DUP8 ADD DUP12 MSTORE DUP1 DUP12 KECCAK256 SWAP12 DUP12 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x17FA JUMPI POP SWAP12 DUP3 SWAP2 DUP13 SWAP14 PUSH1 0x1 SWAP5 PUSH1 0x1F SWAP15 SWAP12 SWAP13 SWAP14 SWAP15 NOT DUP2 AND LT PUSH2 0x17E1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA DUP7 ADD SSTORE PUSH2 0x154F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x17D1 JUMP JUMPDEST DUP3 DUP3 ADD MLOAD DUP15 SSTORE PUSH1 0x1 SWAP1 SWAP14 ADD SWAP13 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x183F SWAP1 PUSH1 0xA DUP9 ADD DUP13 MSTORE PUSH1 0x20 DUP13 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP12 PUSH2 0x1514 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0xAE9 JUMP JUMPDEST POP SWAP2 PUSH1 0x3 DUP10 ADD DUP14 MSTORE DUP1 DUP14 KECCAK256 SWAP1 DUP14 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x18B7 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x189E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP8 ADD SSTORE PUSH2 0x14E3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x188E JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x18FE SWAP3 PUSH1 0x3 DUP13 ADD DUP2 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP12 DUP15 PUSH2 0x14AC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST SWAP1 POP DUP12 ADD MLOAD DUP16 PUSH2 0x146B JUMP JUMPDEST POP SWAP1 PUSH1 0x1 DUP10 ADD DUP14 MSTORE DUP2 DUP14 KECCAK256 DUP14 SWAP3 JUMPDEST DUP13 PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1977 JUMPI POP PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x195E JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x1 DUP9 ADD SSTORE PUSH2 0x1485 JUMP JUMPDEST DUP13 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 PUSH2 0x194F JUMP JUMPDEST DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x19BA SWAP3 PUSH1 0x1 DUP13 ADD DUP2 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP12 DUP15 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0x19D6 SWAP2 SWAP11 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0xFFB DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST SWAP9 CODESIZE PUSH2 0x1376 JUMP JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP10 MSTORE PUSH1 0x4 DUP10 REVERT JUMPDEST SWAP1 POP DUP2 GT CODESIZE PUSH2 0x12F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST SWAP2 POP POP PUSH2 0x1A45 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0xFC3 DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST SWAP8 SWAP6 POP POP SWAP3 SWAP2 POP POP SWAP1 SWAP4 SWAP1 CODESIZE PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1ACD PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1AE9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x7 SLOAD AND CALLER EQ PUSH2 0x2F1B JUMP JUMPDEST PUSH2 0x1AF1 PUSH2 0x338A JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP6 KECCAK256 ADD PUSH2 0x1B1D DUP5 DUP3 SLOAD PUSH2 0x3023 JUMP JUMPDEST SWAP1 SSTORE DUP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1B42 PUSH1 0x5 PUSH1 0x40 DUP5 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x30BD JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1B73 PUSH2 0x2B15 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP4 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1BD7 PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x13815491 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x24 DUP1 CALLDATALOAD PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0x120 SWAP2 DUP6 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1CEA JUMPI DUP5 SWAP4 PUSH2 0x1C9E JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP5 DUP8 MSTORE DUP3 MSTORE DUP6 KECCAK256 SLOAD SWAP1 SWAP5 PUSH2 0x12C SWAP5 PUSH2 0x1C74 SWAP5 SWAP1 SWAP4 SWAP3 PUSH2 0x1C85 JUMPI POP POP POP PUSH1 0xC0 DUP2 ADD MLOAD SWAP1 JUMPDEST PUSH1 0xE0 TIMESTAMP SWAP2 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x1C7D JUMPI JUMPDEST POP PUSH2 0x3023 JUMP JUMPDEST DIV PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CODESIZE PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x40 SWAP3 DUP3 MSTORE PUSH1 0xB DUP8 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP7 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0x1C60 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x1CE3 JUMPI JUMPDEST PUSH2 0x1CB6 DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x120 DUP2 DUP4 SUB SLT PUSH2 0x73D JUMPI SWAP2 PUSH1 0x20 SWAP5 PUSH2 0x1CD9 PUSH2 0x12C SWAP6 SWAP4 PUSH2 0x1C74 SWAP6 PUSH2 0x3030 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP2 PUSH2 0x1C24 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1D0E PUSH2 0x33AC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1D6C PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F34 JUMPI POP PUSH2 0x1D8D DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 PUSH2 0x1D9B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D94 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x1DAA PUSH1 0x1F NOT SWAP2 PUSH2 0x316D JUMP JUMPDEST ADD DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F1D JUMPI POP POP DUP4 DUP5 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E27 JUMPI DUP5 DUP7 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD PUSH1 0x20 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DF8 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x1E17 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x2DB5 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x1DE9 JUMP JUMPDEST PUSH2 0x1E30 DUP2 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP4 DUP8 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 DUP2 DUP9 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x1E5F JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP3 PUSH2 0x1F16 SWAP2 DUP6 DUP10 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP1 DUP10 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E8E DUP5 PUSH2 0x2D46 JUMP JUMPDEST DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP5 MSTORE DUP7 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1EB5 DUP4 PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP7 ADD PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC9 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x1F0B DUP3 DUP10 PUSH2 0x31D5 JUMP JUMPDEST MSTORE PUSH2 0x1216 DUP2 DUP9 PUSH2 0x31D5 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1F28 PUSH2 0x3184 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x1DAD JUMP JUMPDEST PUSH2 0x1F3D DUP2 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP3 DUP7 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP1 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x1F6B JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1D7C JUMP JUMPDEST SWAP3 PUSH2 0x1F77 PUSH1 0x1 SWAP2 PUSH2 0x315E JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x1F63 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 PUSH1 0x1 DUP4 ADD SWAP1 PUSH2 0x1FB5 SWAP2 PUSH2 0x2CC3 JUMP JUMPDEST SUB PUSH2 0x1FC0 SWAP1 DUP5 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0xFF AND DUP2 PUSH2 0x1FDA DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST SUB PUSH2 0x1FE5 SWAP1 DUP4 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD SWAP2 PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD SWAP2 PUSH1 0x8 DUP8 ADD SLOAD SWAP4 PUSH1 0x9 DUP9 ADD SLOAD SWAP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA DUP2 SWAP12 ADD SWAP1 PUSH2 0x201A SWAP2 PUSH2 0x2CC3 JUMP JUMPDEST SUB PUSH2 0x2025 SWAP1 DUP11 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD PUSH2 0x160 SWAP1 MSTORE PUSH2 0x160 DUP12 ADD PUSH2 0x2044 SWAP2 PUSH2 0x2B9F JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP12 ADD PUSH2 0x2052 SWAP2 PUSH2 0x2BC4 JUMP JUMPDEST DUP10 DUP2 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x2063 SWAP2 PUSH2 0x2B9F JUMP JUMPDEST SWAP6 PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x36C SWAP2 PUSH2 0x2B9F JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 PUSH2 0x36C SWAP2 PUSH2 0x20B6 PUSH2 0x3105 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xA PUSH2 0x20EC PUSH1 0x40 MLOAD SWAP3 PUSH2 0x20D4 DUP5 PUSH2 0x2D78 JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x117B DUP2 PUSH2 0x319 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2BE7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2144 PUSH2 0x338A JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0x260E JUMPI PUSH1 0x1B DUP3 GT DUP1 ISZERO SWAP1 PUSH2 0x2602 JUMPI JUMPDEST PUSH2 0x25F3 JUMPI DUP1 DUP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x25E4 JUMPI DUP1 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x8 DUP4 ADD DUP1 SLOAD PUSH1 0x24 CALLDATALOAD GT PUSH2 0x25D5 JUMPI PUSH1 0x7 DUP5 ADD PUSH2 0x219D PUSH1 0x24 CALLDATALOAD DUP3 SLOAD PUSH2 0x30BD JUMP JUMPDEST PUSH1 0x6 DUP7 ADD DUP1 SLOAD DUP3 GT PUSH2 0x25C6 JUMPI PUSH1 0x4 SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x25B1 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x2205 SWAP4 SSTORE SLOAD PUSH2 0x1C6E DUP3 DUP3 PUSH2 0x3023 JUMP JUMPDEST SWAP1 SSTORE CALLER DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x25A2 JUMPI PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND SWAP1 PUSH3 0x15180 DUP2 MUL DUP2 DUP2 DIV PUSH3 0x15180 EQ DUP3 ISZERO OR ISZERO PUSH2 0x258E JUMPI PUSH2 0x2252 SWAP1 TIMESTAMP PUSH2 0x30BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH2 0x225F DUP6 PUSH2 0x2D46 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 DUP2 DUP6 MSTORE PUSH2 0x2278 PUSH1 0x40 DUP8 ADD SWAP2 DUP3 PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2294 DUP3 PUSH2 0x228D DUP2 PUSH1 0x1 DUP13 ADD PUSH2 0x2CC3 JUMP JUMPDEST SUB DUP4 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 MSTORE PUSH1 0xA0 DUP9 ADD SWAP5 DUP11 DUP7 MSTORE PUSH1 0xC0 DUP10 ADD SWAP7 DUP8 MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP10 ADD MSTORE CALLER DUP11 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP11 KECCAK256 SWAP1 DUP11 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP9 SLOAD AND OR DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xE83 JUMPI PUSH2 0x2315 SWAP1 PUSH1 0x2 DUP8 ADD PUSH2 0x30D6 JUMP JUMPDEST MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDC5 JUMPI PUSH2 0x2334 PUSH1 0x3 DUP8 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x255B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x24E6 JUMPI DUP3 PUSH2 0x100 SWAP8 SWAP6 SWAP4 PUSH1 0x8 SWAP8 SWAP6 SWAP4 PUSH2 0x2377 SWAP4 DUP14 SWAP3 PUSH2 0x24DB JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST MLOAD PUSH1 0x4 DUP5 ADD SSTORE MLOAD PUSH1 0x5 DUP4 ADD SSTORE MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP2 DUP3 SWAP1 PUSH1 0x8 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x24A8 JUMPI JUMPDEST POP ISZERO PUSH2 0x2456 JUMPI JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2442 JUMPI SWAP2 PUSH1 0x2 SWAP2 PUSH1 0xFF SWAP4 SSTORE PUSH2 0x23F2 PUSH1 0x64 CALLDATALOAD DUP4 SLOAD PUSH2 0x30BD JUMP JUMPDEST DUP3 SSTORE ADD SLOAD AND PUSH2 0x2415 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH32 0x23B0F39E0762759FFB18632A1A2B79C9EB58571454E5F7C36E0A2F81759E0A34 PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x2494 JUMPI DUP1 PUSH1 0x1 PUSH2 0x2472 SWAP3 ADD PUSH1 0x8 SSTORE PUSH2 0x2B30 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE CODESIZE PUSH2 0x23C2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH2 0x24B1 DUP2 PUSH2 0x2B30 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24D1 JUMPI PUSH1 0x1 ADD PUSH2 0x23B3 JUMP JUMPDEST POP POP PUSH1 0x1 CODESIZE PUSH2 0x23BB JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xAE9 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP8 ADD DUP11 MSTORE DUP1 DUP11 KECCAK256 SWAP2 DUP11 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x2543 JUMPI POP SWAP3 PUSH1 0x8 SWAP7 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x100 SWAP10 SWAP8 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x252A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x237D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x251A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x2588 SWAP1 PUSH1 0x3 DUP9 ADD DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST CODESIZE PUSH2 0x233D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x9857CBD9 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST DUP2 PUSH2 0x25BB SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x171E JUMPI DUP8 CODESIZE PUSH2 0x21F2 JUMP JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 REVERT JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST PUSH4 0xBCCD4043 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x1F899589 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST POP PUSH2 0x16E DUP3 LT ISZERO PUSH2 0x2158 JUMP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH2 0x2671 DUP4 PUSH2 0x2B30 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x26D0 PUSH2 0x338A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x13815491 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH2 0x120 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x741 JUMPI DUP4 SWAP2 PUSH2 0x2863 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x284F JUMPI PUSH2 0x2840 JUMPI CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x281E JUMPI PUSH2 0x12C PUSH2 0x2763 PUSH1 0xC0 DUP4 ADD MLOAD JUMPDEST TIMESTAMP PUSH1 0xE0 DUP6 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x1C7D JUMPI POP PUSH2 0x3023 JUMP JUMPDEST DIV SWAP1 DUP2 ISZERO PUSH2 0x280F JUMPI SWAP1 PUSH1 0x60 PUSH2 0x2779 SWAP3 ADD MLOAD PUSH2 0x2FFA JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x2800 JUMPI CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP5 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1CEA JUMPI PUSH2 0x27EC JUMPI JUMPDEST POP PUSH2 0x604 DUP2 PUSH1 0x2 SLOAD PUSH2 0x3023 JUMP JUMPDEST DUP4 PUSH2 0x27F9 SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0x2D94 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x27DF JUMP JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0xED700A67 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH2 0x12C PUSH2 0x2763 PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x2750 JUMP JUMPDEST PUSH4 0xE067835F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP1 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x2896 JUMPI JUMPDEST PUSH2 0x287A DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST DUP2 ADD PUSH2 0x120 DUP3 DUP3 SUB SLT PUSH2 0x739 JUMPI PUSH2 0x2890 SWAP2 PUSH2 0x3030 JUMP JUMPDEST CODESIZE PUSH2 0x2712 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2870 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD DUP1 SWAP2 PUSH1 0x8 DUP6 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x2946 JUMPI POP POP POP DUP3 PUSH2 0x28FC SWAP2 SUB DUP4 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x2924 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2916 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x28E6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x298F PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND CALLER EQ PUSH2 0x2F1B JUMP JUMPDEST PUSH2 0x2997 PUSH2 0x338A JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 SLOAD PUSH1 0x9 DUP3 ADD SLOAD SWAP3 MLOAD PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP5 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CEA JUMPI DUP5 SWAP3 PUSH2 0x2AAF JUMPI JUMPDEST POP PUSH1 0x4 ADD SLOAD DUP1 ISZERO PUSH2 0x2A71 JUMPI PUSH8 0xDE0B6B3A7640000 DUP2 MUL SWAP1 DUP2 DIV PUSH8 0xDE0B6B3A7640000 SUB PUSH2 0x2442 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x64 PUSH2 0x2A20 SWAP3 DIV SWAP1 PUSH2 0x2FFA JUMP JUMPDEST DIV DUP2 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x6 PUSH1 0x40 DUP5 KECCAK256 ADD SSTORE DUP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x2A5A PUSH1 0x6 PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD DUP3 DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x3023 JUMP JUMPDEST SWAP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 DUP4 KECCAK256 ADD SSTORE PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420636F766572206361706163697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 SWAP2 SWAP3 POP PUSH2 0x2AC7 SWAP1 RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0xFC3 DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST POP POP SWAP4 POP POP POP POP SWAP2 SWAP1 PUSH2 0x29E2 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x65E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x65E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2AFE PUSH2 0x2B15 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2B2B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2B4B JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x2B4B JUMPI PUSH1 0x10 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2B8F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B7F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2BB8 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2B7C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BD1 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2C86 SWAP2 DUP2 MLOAD DUP2 MSTORE PUSH2 0x140 PUSH2 0x2C34 PUSH2 0x2C10 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x160 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD SWAP1 PUSH2 0x2B9F JUMP JUMPDEST PUSH2 0x2C22 PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2B9F JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH2 0x140 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2B9F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2CB9 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2CA3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2C98 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x2CD3 DUP4 PUSH2 0x2C89 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2D29 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2CEF JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x2D0F JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D62 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D62 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D62 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2DDE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x100 DUP1 PUSH2 0x2DFD PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x120 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD SWAP1 PUSH2 0x2B9F JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D62 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2B2B JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x2E62 DUP3 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 PUSH2 0x2E70 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D94 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2B2B JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2B2B JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B2B JUMPI DUP3 PUSH2 0x2EC1 SWAP2 PUSH1 0x4 ADD PUSH2 0x2E4B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B2B JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B2B JUMPI DUP3 PUSH2 0x2EED SWAP2 PUSH1 0x4 ADD PUSH2 0x2E4B JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B2B JUMPI PUSH2 0x2F0C SWAP2 PUSH1 0x4 ADD PUSH2 0x2E4B JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0xE4 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2F22 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2B2B JUMPI DUP1 MLOAD PUSH2 0x2F6E DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 PUSH2 0x2F7C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D94 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x2B2B JUMPI PUSH2 0x2C86 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x2B7C JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0x2B2B JUMPI DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B2B JUMPI PUSH2 0x2FC1 SWAP2 DUP4 ADD PUSH2 0x2F58 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B2B JUMPI SWAP2 PUSH1 0x40 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 DUP3 ADD MLOAD SWAP2 PUSH1 0x80 DUP2 ADD MLOAD SWAP2 PUSH1 0xA0 DUP3 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2B2B JUMPI PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x300D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x300D JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH2 0x120 SWAP2 SUB SLT PUSH2 0x2B2B JUMPI PUSH1 0x40 MLOAD PUSH2 0x3049 DUP2 PUSH2 0x2D46 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP3 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x2B2B JUMPI DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2B2B JUMPI PUSH2 0x100 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x300D JUMPI JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BD1 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2BD1 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x30F9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x30EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3112 DUP3 PUSH2 0x2D78 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x140 DUP4 PUSH1 0x0 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x300D JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D62 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3191 DUP3 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2B4B JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2B4B JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x2B2B JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B2B JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2B2B JUMPI DUP2 MLOAD SWAP2 PUSH2 0x321D DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 PUSH2 0x322B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D94 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x2B2B JUMPI PUSH1 0x20 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3257 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B2B JUMPI DUP3 ADD SWAP1 PUSH2 0x160 DUP3 DUP8 SUB PUSH1 0x1F NOT ADD SLT PUSH2 0x2B2B JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3286 DUP3 PUSH2 0x2D78 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD DUP3 MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B2B JUMPI DUP8 PUSH1 0x20 PUSH2 0x32AF SWAP3 DUP7 ADD ADD PUSH2 0x2F58 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B2B JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B2B JUMPI DUP8 PUSH1 0x20 PUSH2 0x32E9 SWAP3 DUP7 ADD ADD PUSH2 0x2F58 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x100 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x160 DUP4 ADD MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x2B2B JUMPI PUSH2 0x3356 DUP9 PUSH1 0x20 DUP1 SWAP7 SWAP6 DUP2 SWAP7 ADD ADD PUSH2 0x2F58 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x3248 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x20 PUSH2 0x3380 PUSH2 0x3388 SWAP4 PUSH1 0x40 DUP8 MSTORE PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x2B9F JUMP JUMPDEST SWAP5 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x339B JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x33C0 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xA5 0xE9 EXP DUP7 BLOBBASEFEE 0xAB 0xC5 SWAP6 0xA7 0xD DUP13 CALLCODE LOG2 DUP16 0xB8 MULMOD STOP 0xB2 PUSH21 0x520893B96DFC36222A6FCBC464736F6C634300081B STOP CALLER ","sourceMap":"2656:15955:8:-:0;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;1857:1:4;-1:-1:-1;1857:1:4;-1:-1:-1;;;;;2656:15955:8;;;;1273:26:0;;1269:95;;1857:1:4;2656:15955:8;;-1:-1:-1;;;;;;2656:15955:8;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;3052:40:0;-1:-1:-1;;3052:40:0;4487:29:8;2656:15955;;-1:-1:-1;;;;;2656:15955:8;;;-1:-1:-1;;;;;;2656:15955:8;;;;;;;;4527:23;2656:15955;;;;;;;;;;4561:22;2656:15955;;;;;;;;;;;;;;4594:21;2656:15955;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;2656:15955:8;;-1:-1:-1;1322:31:0;2656:15955:8;-1:-1:-1;2656:15955:8;;;;;;-1:-1:-1;2656:15955:8;;;;;-1:-1:-1;2656:15955:8;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":11029,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_struct_Cover_dyn_fromMemory":{"entryPoint":12777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":11851,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":12120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_enum_RiskTypet_uint256t_uint256t_uint256t_boolt_uint256_fromMemory":{"entryPoint":12186,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_struct_Deposits_fromMemory":{"entryPoint":12336,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_stringt_enum_RiskTypet_stringt_stringt_uint256t_uint256t_uint256":{"entryPoint":11922,"id":null,"parameterSlots":1,"returnSlots":8},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_enum_RiskType":{"entryPoint":11204,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":11167,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_enum_RiskType":{"entryPoint":13159,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":11459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Cover":{"entryPoint":11239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_GenericCoverInfo":{"entryPoint":11701,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Cover":{"entryPoint":12549,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_GenericCoverInfo":{"entryPoint":12676,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_GenericCoverInfo_dyn":{"entryPoint":12653,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":11824,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":12477,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":12282,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":12323,"id":null,"parameterSlots":2,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":12526,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11132,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11401,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":11668,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_46161":{"entryPoint":11590,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_46164":{"entryPoint":11640,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":13228,"id":84,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":13194,"id":356,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":12638,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_GenericCoverInfo_dyn":{"entryPoint":12757,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_struct_GenericCoverInfo_dyn_46182":{"entryPoint":12744,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_fac3":{"entryPoint":12059,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":11056,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_address_dyn_46166":{"entryPoint":11105,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_offsett_enum_RiskType_to_enum_RiskType":{"entryPoint":12502,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_RiskType":{"entryPoint":12490,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c9081630db981a014612ad5575080631052581414611b4b578063106b5da114612965578063195ec9ee1461289d5780632d8a340c146126b357806334808ec31461268a578063357917b71461210657806335c1d3491461264657806346f84795146110155780635aa6e6751461261d578063602710a414612124578063609c76041461210657806362858bfa146120965780636299df6c14611f7f578063649718b214611d52578063715018a614611cf557806373cce3ee14611bbd578063782ea61914611b8e5780637a728e7f14611b4b5780637ceb4a6914611ab35780638acee3cf14611a8a5780638da5cb5b14611a615780638de4d1011461127a57806393b1ad381461104e57806396f3a8ad146110155780639732bdb51461087b578063996b8a6f146108525780639b4dc8cc146108295780639e7b399e1461074c578063a650c232146104ae578063bfc664f314610370578063cadcb47114610285578063f2fde38b146101fc578063fb643583146101c25763feb0b8f5146101a257600080fd5b346101bf57806003193601126101bf576020600f54604051908152f35b80fd5b50346101bf5760203660031901126101bf57600435906010548210156101bf5760206101ed83612b61565b90549060031b1c604051908152f35b50346101bf5760203660031901126101bf57610216612b15565b61021e6133ac565b6001600160a01b0316801561027157600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b50346101bf5760403660031901126101bf57604061036c916102a5612b15565b6102ad613184565b5060018060a01b03168152600d60205281812060243582526020522060ff6008604051926102da84612d46565b80546001600160a01b03168452600181015460208501526002810154610305908416604086016130ca565b604051610320816103198160038601612cc3565b0382612d94565b606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e08501520154161515610100820152604051918291602083526020830190612db5565b0390f35b50346101bf5760203660031901126101bf5761038a612b15565b61039261338a565b6001600160a01b031660015b6010548110156104a657806103b4600192612b61565b90549060031b1c838552600d6020526040852081865260205260408520600881019081549060ff82169081610498575b506103f3575b5050500161039e565b60ff19169055838552600d60205260408520908552602052836008604082208281558285820155826002820155826003820161042f8154612c89565b80610458575b5050600482015582600582015582600682015582600782015501553880806103ea565b601f8111881461046d5750555b823880610435565b8183526020832061048891601f0160051c81019089016130ee565b8082528160208120915555610465565b6007915001544211386103e4565b826001815580f35b50346101bf5760203660031901126101bf576004356104cb61338a565b600354604051634122bbb360e11b815260048101839052336024820152908390829060449082906001600160a01b03165afa908115610741578391610698575b508290338452600c602052604084208385526020526040842054156000146106765761012c61055c60c061053e846131c8565b5101515b4260e061054e866131c8565b510151421161066257613023565b049380925b82518410156105965761058e60019161058888606061058089896131d5565b510151612ffa565b906130bd565b930192610561565b8490338352600c602052604083208284526020524260408420558260018060a01b0360045416803b1561065e57604051637104a76d60e11b8152336004820152602481018490529082908290604490829084905af180156106535761063a575b505061060481600254613023565b6002556040519081527f0408e6e0b73daf4c873106e95fd067260fbff8bf9d1b499cad563d4480d45bac60203392a36001815580f35b8161064491612d94565b61064f5782846105f6565b8280fd5b6040513d84823e3d90fd5b5080fd5b5060e061066e856131c8565b510151613023565b338452600c6020526040842083855260205261012c61055c6040862054610542565b90503d8084833e6106a98183612d94565b810190602081830312610739578051906001600160401b03821161073d570181601f820112156107395780516106de8161316d565b926106ec6040519485612d94565b818452602061012081860193028401019281841161073557602001915b83831061071a57505050503861050b565b60206101209161072a8486613030565b815201920191610709565b8680fd5b8380fd5b8480fd5b6040513d85823e3d90fd5b50346101bf5760403660031901126101bf576040906001600160a01b03610771612b15565b168152600d60205281812060243582526020522060018060a01b0381541660018201549160ff600282015416604051916107b9836107b28160038501612cc3565b0384612d94565b60048101549260058201546108086006840154926107f560ff6008600788015497015416966040519a8b9a8b5260208b015260408a0190612bc4565b6101206060890152610120880190612b9f565b94608087015260a086015260c085015260e084015215156101008301520390f35b50346101bf57806003193601126101bf576006546040516001600160a01b039091168152602090f35b50346101bf57806003193601126101bf576005546040516001600160a01b039091168152602090f35b50346101bf5761088a36612e92565b61089a98979394969592986133ac565b6003546040516307eb111f60e41b815260048101839052956001600160a01b0390911692908987602481875afa96871561100a578a97610fe6575b5096996020890197908a5b88518110156109665760206108f5828b6131d5565b510151604051610926602082816109158183019687815193849201612b7c565b81010301601f198101835282612d94565b5190208a8c6109476020604051809361091583830196879251928391612b7c565b51902014610957576001016108e0565b633480a50360e21b8c5260048cfd5b508a9850899697508b60405163068bcd8d60e01b81528560048201528a816024818a5afa8015610fdb578b8c928d92610fac575b5060038a1015610f98576003811015610f9857891490811591610f8e575b50610f7f57670de0b6b3a76400008302838104670de0b6b3a76400001484151715610f6b576109f58c926064670de0b6b3a7640000930490612ffa565b0496803b1561065e5781809160446040518094819363a4948d8560e01b83528c60048401528960248401525af1801561065357610f52575b5050610a3a600f5461315e565b600f5560405195610a4a87612d78565b89875260208701948986526040880193610a648a866130ca565b60608901958652608089015260a08801528060c08801528a60e088015261010087015284610120870152610140860152878952600e602052604089209285518455518051906001600160401b038211610f3e57610ac46001860154612c89565b601f8111610f0b575b50602090601f8311600114610ea257610afe92918c9183610e97575b50508160011b916000199060031b1c19161790565b60018401555b516003811015610e8357610b1b90600284016130d6565b518051906001600160401b038211610dc557610b3a6003840154612c89565b601f8111610e50575b50602090601f8311600114610de4579180610b7792600a95948c92610dd95750508160011b916000199060031b1c19161790565b60038201555b6080840151600482015560a0840151600582015560c0840151600682015560e0840151600782015561010084015160088201556101208401516009820155016101408301518051906001600160401b038211610dc557610bdd8354612c89565b601f8111610d8a575b50602090601f8311600114610d2757610c1692918a9183610d1c5750508160011b916000199060031b1c19161790565b90555b601054600160401b811015610d085790610c3b82600189959401601055612b61565b8154600391821b89811b60001990911b1990911617909155546001600160a01b031691823b1561073957610c95928492836040518096819582946331eaa61d60e21b84526004840152604060248401526044830190612be7565b03925af1801561065357610cf3575b5091837f5928d65cc6ae9f07a7673f1a5a2f98d81f1bb0c2bc53bcaa33d6f11cf426f25e9352600a60205260408520600160ff19825416179055610ced60405192839283613367565b0390a280f35b81610cfd91612d94565b610739578385610ca4565b634e487b7160e01b87526041600452602487fd5b015190508a80610ae9565b838a52818a209190601f1984168b5b818110610d725750908460019594939210610d59575b505050811b019055610c19565b015160001960f88460031b161c19169055898080610d4c565b92936020600181928786015181550195019301610d36565b610db590848b5260208b20601f850160051c81019160208610610dbb575b601f0160051c01906130ee565b89610be6565b9091508190610da8565b634e487b7160e01b89526041600452602489fd5b015190508b80610ae9565b600384018a52818a209190601f1984168b5b818110610e385750916001939185600a97969410610e1f575b505050811b016003820155610b7d565b015160001960f88460031b161c191690558a8080610e0f565b92936020600181928786015181550195019301610df6565b610e7d90600385018b5260208b20601f850160051c81019160208610610dbb57601f0160051c01906130ee565b89610b43565b634e487b7160e01b89526021600452602489fd5b015190508c80610ae9565b600186018c52818c209190601f1984168d5b818110610ef35750908460019594939210610eda575b505050811b016001840155610b04565b015160001960f88460031b161c191690558b8080610eca565b92936020600181928786015181550195019301610eb4565b610f3890600187018d5260208d20601f850160051c81019160208610610dbb57601f0160051c01906130ee565b8b610acd565b634e487b7160e01b8b52604160045260248bfd5b81610f5c91612d94565b610f6757898b610a2d565b8980fd5b634e487b7160e01b8c52601160045260248cfd5b6369e489f560e11b8b5260048bfd5b905083118c6109b8565b634e487b7160e01b8d52602160045260248dfd5b915050610fcb91503d808d833e610fc38183612d94565b810190612f9a565b955050929150509091908d61099a565b6040513d8d823e3d90fd5b6110039197503d808c833e610ffb8183612d94565b8101906131e9565b95386108d5565b6040513d8c823e3d90fd5b50346101bf5760203660031901126101bf576020906040906001600160a01b0361103d612b15565b168152600983522054604051908152f35b50346101bf57806003193601126101bf578081601054905b81811061123a57506110778261316d565b916110856040519384612d94565b808352611094601f199161316d565b01835b81811061122357505082835b8281106111115783856040519182916020830160208452825180915260408401602060408360051b870101940192905b8282106110e257505050500390f35b919360019193955060206111018192603f198a82030186528851612be7565b96019201920185949391926110d3565b61111a81612b61565b90549060031b1c808652600a60205260ff60408720541661113f575b506001016110a3565b6001919261121c918752600e60205260408720600a6111fb6040519261116484612d78565b8054845260405161117b81610319818b8601612cc3565b602085015261119460ff600283015416604086016130ca565b6040516111a8816103198160038601612cc3565b606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e0850152600881015461010085015260098101546101208501526103196040518094819301612cc3565b61014082015261120b82886131d5565b5261121681876131d5565b5061315e565b9190611136565b60209061122e613105565b82828701015201611097565b61124381612b61565b90549060031b1c8452600a60205260ff604085205416611266575b600101611066565b9161127260019161315e565b92905061125e565b50346101bf57602461128b36612e92565b61129e99979695929998919493986133ac565b60018060a01b036003541699888b6040519485809263068bcd8d60e01b82528660048301525afa8015611a5657898a948b92611a2d575b506003861015611a19576003811015611a1957851490811591611a0f575b50611a0057878952600e6020526040892092670de0b6b3a76400008202828104670de0b6b3a764000014831517156119ec57670de0b6b3a764000091606461133c920490612ffa565b0490816007850154116119dd578960249a9b9c6040519b8c80926307eb111f60e41b82528760048301525afa998a15610fdb578b9a6119c1575b50959a6020880196908b5b8b5181101561141b578b8b828c8c602061139b84876131d5565b5101516040516113bb602082816109158183019687815193849201612b7c565b519020916113db6020604051809361091583830196879251928391612b7c565b519020149283611404575b5050506113f557600101611381565b633480a50360e21b8d5260048dfd5b61140f9293506131d5565b515114158b828e6113e6565b508b98969997508c60048601549188516001600160401b038111611905578b61144760018a0154612c89565b601f811161198e575b505060208c601f83116001146119245761147f929182611919575b508160011b916000199060031b1c19161790565b60018801555b80516001600160401b038111611905578b6114a360038a0154612c89565b601f81116118d2575b50506020918c601f8311600114611864576114dd939091836118595750508160011b916000199060031b1c19161790565b60038701555b826004870155600586015589516001600160401b0381116118455761150b600a870154612c89565b601f8111611812575b506020601f82116001146117a1579080611549928c9d8d9a9b9c9d926117965750508160011b916000199060031b1c19161790565b600a8601555b600685019183835561156d6009870194868655600788015490613023565b600887019081559181811115611722579061158791613023565b6003546001600160a01b031690813b1561171e578791604483926040519485938492639fd36b1560e01b84528b600485015260248401525af19081156117135787916116fa575b50505b6003546001600160a01b031691823b156107355786946116a38692600a604051998a9889978896630a14764d60e41b885260048801526040602488015282546044880152610160606488015261165b6116316101a4890160018601612cc3565b61164660ff60028701541660848b0190612bc4565b8881036043190160a48a015260038501612cc3565b600484015460c4890152600584015460e48901529454610104880152600783015461012488015254610144870152546101648601528483036043190161018486015201612cc3565b03925af18015610653576116e5575b50507f758a67328ba53c1867c0272bbd2ca10d6fe71d37120188c523fe7ae7bdbbe46991610ced60405192839283613367565b816116ef91612d94565b6107395783856116b2565b8161170491612d94565b61170f57858b6115ce565b8580fd5b6040513d89823e3d90fd5b8780fd5b818110611731575b50506115d1565b61173a91613023565b6003546001600160a01b031690813b1561171e57879160448392604051948593849263a4948d8560e01b84528b600485015260248401525af19081156117135787911561172a578161178b91612d94565b61170f57858b61172a565b015190508d80610ae9565b600a87018b52808b209b8b5b601f19841681106117fa57509b82918c9d600194601f9e9b9c9d9e198116106117e1575b505050811b01600a86015561154f565b015160001960f88460031b161c191690558c80806117d1565b828201518e556001909d019c602092830192016117ad565b61183f90600a88018c5260208c20601f840160051c81019160208510610dbb57601f0160051c01906130ee565b8b611514565b634e487b7160e01b8a52604160045260248afd5b015190508e80610ae9565b5091600389018d52808d20908d935b601f19841685106118b7576001945083601f1981161061189e575b505050811b0160038701556114e3565b015160001960f88460031b161c191690558d808061188e565b81810151835560209485019460019093019290910190611873565b60206118fe9260038c01815220601f840160051c81019160208510610dbb57601f0160051c01906130ee565b8b8e6114ac565b634e487b7160e01b8c52604160045260248cfd5b90508b01518f61146b565b5090600189018d52818d208d925b8c601f198416851061197757506001935082601f1981161061195e575b5050811b016001880155611485565b8c015160001960f88460031b161c191690558e8061194f565b810151825560209384019360019092019101611932565b60206119ba9260018c01815220601f840160051c81019160208510610dbb57601f0160051c01906130ee565b8b8e611450565b6119d6919a503d808d833e610ffb8183612d94565b9838611376565b6369e489f560e11b8a5260048afd5b634e487b7160e01b8b52601160045260248bfd5b6369e489f560e11b8952600489fd5b90508111386112f3565b634e487b7160e01b8b52602160045260248bfd5b915050611a459193503d808b833e610fc38183612d94565b9795505092915050909390386112d5565b6040513d8b823e3d90fd5b50346101bf57806003193601126101bf576001546040516001600160a01b039091168152602090f35b50346101bf57806003193601126101bf576003546040516001600160a01b039091168152602090f35b50346101bf5760603660031901126101bf57611acd612b15565b60243560443591611ae960018060a01b03600754163314612f1b565b611af161338a565b60018060a01b0316808452600d6020526040842082855260205260046040852001611b1d848254613023565b90558352600d60205260408320908352602052611b42600560408420019182546130bd565b90556001815580f35b50346101bf5760403660031901126101bf576020906040906001600160a01b03611b73612b15565b168152600b8352818120602435825283522054604051908152f35b50346101bf5760203660031901126101bf5760ff60406020926004358152600a84522054166040519015158152f35b50346101bf5760403660031901126101bf57611bd7612b15565b600354604051631381549160e21b815260248035600483018190526001600160a01b0385811692840192909252919391926101209185916044918391165afa928315611cea578493611c9e575b506001600160a01b0316808452600b602090815260408086208487528252852054909461012c94611c7494909392611c855750505060c0810151905b60e042910151804211611c7d575b50613023565b04604051908152f35b905038611c6e565b6040928252600b87528282209082528652205490611c60565b9092506101203d8111611ce3575b611cb68183612d94565b8101906101208183031261073d5791602094611cd961012c9593611c7495613030565b9450945091611c24565b503d611cac565b6040513d86823e3d90fd5b50346101bf57806003193601126101bf57611d0e6133ac565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101bf5760203660031901126101bf57611d6c612b15565b60105482916001600160a01b0316825b828110611f345750611d8d8361316d565b92611d9b6040519485612d94565b808452611daa601f199161316d565b01845b818110611f1d57505083845b838110611e275784866040519182916020830160208452825180915260408401602060408360051b870101940192905b828210611df857505050500390f35b91936001919395506020611e178192603f198a82030186528851612db5565b9601920192018594939192611de9565b611e3081612b61565b90549060031b1c838752600d602052604087208188526020526004604088200154611e5f575b50600101611db9565b60019192611f1691858952600d602052604089209089526020526040882060ff600860405192611e8e84612d46565b868060a01b038154168452868101546020850152611eb583600283015416604086016130ca565b604051611ec9816103198160038601612cc3565b606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e08501520154161515610100820152611f0b82896131d5565b5261121681886131d5565b9190611e56565b602090611f28613184565b82828801015201611dad565b611f3d81612b61565b90549060031b1c828652600d602052604086209086526020526004604086200154611f6b575b600101611d7c565b92611f7760019161315e565b939050611f63565b50346101bf5760203660031901126101bf576004358152600e6020526040902080546040519182806001830190611fb591612cc3565b03611fc09084612d94565b60028101546040519060ff1681611fda8160038601612cc3565b03611fe59083612d94565b6004830154916005840154600685015460078601549160088701549360098801549560405180600a819b019061201a91612cc3565b03612025908a612d94565b6040519a8b9a8b5260208b0161016090526101608b0161204491612b9f565b9060408b0161205291612bc4565b89810360608b015261206391612b9f565b95608089015260a088015260c087015260e086015261010085015261012084015282810361014084015261036c91612b9f565b50346101bf5760203660031901126101bf57604061036c916120b6613105565b506004358152600e60205220600a6120ec604051926120d484612d78565b8054845260405161117b816103198160018601612cc3565b610140820152604051918291602083526020830190612be7565b50346101bf57806003193601126101bf576020600254604051908152f35b50346101bf5760803660031901126101bf5760443560043561214461338a565b6064351561260e57601b8211801590612602575b6125f357808352600a60205260ff604084205416156125e457808352600e6020526040832091600883018054602435116125d5576007840161219d60243582546130bd565b60068601805482116125c65760045488906001600160a01b0316803b1561065e57604051632770a7eb60e21b815233600482015260643560248201529082908290604490829084905af18015610653576125b1575b505081612205935554611c6e8282613023565b9055338452600d602052604084208285526020526004604085200154156000146125a25760ff6002840154169062015180810281810462015180148215171561258e5761225290426130bd565b6040519361225f85612d46565b33855260208501938185526122786040870191826130ca565b604051906122948261228d8160018c01612cc3565b0383612d94565b606087019182526080870192602435845260a08801948a865260c0890196875260e08901526001610100890152338a52600d60205260408a20908a52602052604089209560018060a01b038851166bffffffffffffffffffffffff60a01b885416178755516001870155516003811015610e835761231590600287016130d6565b518051906001600160401b038211610dc5576123346003870154612c89565b601f811161255b575b50602090601f83116001146124e657826101009795936008979593612377938d926124db5750508160011b916000199060031b1c19161790565b60038501555b51600484015551600583015551600682015560e0840151600782015501910151151560ff80198354169116179055818290600854915b8281106124a8575b5015612456575b5033825260096020526040822080549060018201809211612442579160029160ff93556123f260643583546130bd565b825501541661241560405191602435835260643560208401526040830190612bc4565b7f23b0f39e0762759ffb18632a1a2b79c9eb58571454e5f7c36e0a2f81759e0a3460603392a26001815580f35b634e487b7160e01b84526011600452602484fd5b600160401b811015612494578060016124729201600855612b30565b81546001600160a01b0360039290921b91821b19163390911b179055386123c2565b634e487b7160e01b83526041600452602483fd5b6124b181612b30565b905460039190911b1c6001600160a01b031633146124d1576001016123b3565b50506001386123bb565b015190503880610ae9565b90600387018a52808a20918a5b601f1985168110612543575092600896949260019261010099979583601f1981161061252a575b505050811b01600385015561237d565b015160001960f88460031b161c1916905538808061251a565b919260206001819286850151815501940192016124f3565b61258890600388018b5260208b20601f850160051c81019160208610610dbb57601f0160051c01906130ee565b3861233d565b634e487b7160e01b86526011600452602486fd5b639857cbd960e01b8452600484fd5b816125bb91612d94565b61171e5787386121f2565b63bc6072f160e01b8852600488fd5b63bc6072f160e01b8552600485fd5b63bccd404360e01b8352600483fd5b631f89958960e11b8352600483fd5b5061016e821015612158565b63162908e360e11b8352600483fd5b50346101bf57806003193601126101bf576007546040516001600160a01b039091168152602090f35b50346101bf5760203660031901126101bf57600435906008548210156101bf57602061267183612b30565b905460405160039290921b1c6001600160a01b03168152f35b50346101bf57806003193601126101bf576004546040516001600160a01b039091168152602090f35b50346101bf5760203660031901126101bf576004356126d061338a565b600354604051631381549160e21b8152600481018390523360248201529061012090829060449082906001600160a01b03165afa908115610741578391612863575b506080810151600281101561284f5761284057338352600b6020526040832082845260205260408320541560001461281e5761012c61276360c08301515b4260e0850151804211611c7d5750613023565b0490811561280f57906060612779920151612ffa565b600254811161280057338352600b6020526040832082845260205242604084205560018060a01b0360045416803b1561073957604051637104a76d60e11b8152336004820152602481018390529084908290604490829084905af18015611cea576127ec575b5061060481600254613023565b836127f991949294612d94565b91386127df565b63bc6072f160e01b8352600483fd5b63ed700a6760e01b8452600484fd5b338352600b6020526040832082845260205261012c6127636040852054612750565b63e067835f60e01b8352600483fd5b634e487b7160e01b84526021600452602484fd5b90506101203d8111612896575b61287a8183612d94565b8101610120828203126107395761289091613030565b38612712565b503d612870565b50346101bf57806003193601126101bf5760405180602060085491828152018091600885527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee390855b81811061294657505050826128fc910383612d94565b604051928392602084019060208552518091526040840192915b818110612924575050500390f35b82516001600160a01b0316845285945060209384019390920191600101612916565b82546001600160a01b03168452602090930192600192830192016128e6565b50346101bf5760203660031901126101bf5760043561298f60018060a01b03600654163314612f1b565b61299761338a565b808252600e60205260408083206003546009820154925163068bcd8d60e01b815260048101939093528490839060249082906001600160a01b03165afa918215611cea578492612aaf575b50600401548015612a7157670de0b6b3a76400008102908104670de0b6b3a76400000361244257670de0b6b3a7640000916064612a20920490612ffa565b04818352600e6020526006604084200155808252600e602052612a5a6006604084200154828452600e602052600760408520015490613023565b908252600e60205260086040832001556001815580f35b60405162461bcd60e51b8152602060048201526016602482015275496e76616c696420636f76657220636170616369747960501b6044820152606490fd5b6004919250612ac7903d8087833e610fc38183612d94565b5050935050505091906129e2565b90503461065e57604036600319011261065e576020916040906001600160a01b03612afe612b15565b168152600c84528181206024358252845220548152f35b600435906001600160a01b0382168203612b2b57565b600080fd5b600854811015612b4b57600860005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b601054811015612b4b57601060005260206000200190600090565b60005b838110612b8f5750506000910152565b8181015183820152602001612b7f565b90602091612bb881518092818552858086019101612b7c565b601f01601f1916010190565b906003821015612bd15752565b634e487b7160e01b600052602160045260246000fd5b612c869181518152610140612c34612c1060208501516101606020860152610160850190612b9f565b612c2260408601516040860190612bc4565b60608501518482036060860152612b9f565b926080810151608084015260a081015160a084015260c081015160c084015260e081015160e0840152610100810151610100840152610120810151610120840152015190610140818403910152612b9f565b90565b90600182811c92168015612cb9575b6020831014612ca357565b634e487b7160e01b600052602260045260246000fd5b91607f1691612c98565b60009291815491612cd383612c89565b8083529260018116908115612d295750600114612cef57505050565b60009081526020812093945091925b838310612d0f575060209250010190565b600181602092949394548385870101520191019190612cfe565b915050602093945060ff929192191683830152151560051b010190565b61012081019081106001600160401b03821117612d6257604052565b634e487b7160e01b600052604160045260246000fd5b61016081019081106001600160401b03821117612d6257604052565b90601f801991011681019081106001600160401b03821117612d6257604052565b9060018060a01b03825116815260208201516020820152612dde60408301516040830190612bc4565b61010080612dfd60608501516101206060860152610120850190612b9f565b936080810151608085015260a081015160a085015260c081015160c085015260e081015160e08501520151151591015290565b6001600160401b038111612d6257601f01601f191660200190565b81601f82011215612b2b57803590612e6282612e30565b92612e706040519485612d94565b82845260208383010111612b2b57816000926020809301838601378301015290565b610100600319820112612b2b57600435916024356001600160401b038111612b2b5782612ec191600401612e4b565b916044356003811015612b2b57916064356001600160401b038111612b2b5782612eed91600401612e4b565b91608435906001600160401b038211612b2b57612f0c91600401612e4b565b9060a4359060c4359060e43590565b15612f2257565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b81601f82011215612b2b578051612f6e81612e30565b92612f7c6040519485612d94565b81845260208284010111612b2b57612c869160208085019101612b7c565b9060e082820312612b2b578151906001600160401b038211612b2b57612fc1918301612f58565b9160208201516003811015612b2b579160408101519160608201519160808101519160a08201518015158103612b2b5760c09092015190565b8181029291811591840414171561300d57565b634e487b7160e01b600052601160045260246000fd5b9190820391821161300d57565b919082610120910312612b2b5760405161304981612d46565b8251909283916001600160a01b0381168103612b2b57825260208101516020830152604081015160408301526060810151606083015260808101516002811015612b2b57610100918291608085015260a081015160a085015260c081015160c085015260e081015160e08501520151910152565b9190820180921161300d57565b6003821015612bd15752565b906003811015612bd15760ff80198354169116179055565b8181106130f9575050565b600081556001016130ee565b6040519061311282612d78565b6060610140836000815282602082015260006040820152828082015260006080820152600060a0820152600060c0820152600060e0820152600061010082015260006101208201520152565b600019811461300d5760010190565b6001600160401b038111612d625760051b60200190565b6040519061319182612d46565b6000610100838281528260208201528260408201526060808201528260808201528260a08201528260c08201528260e08201520152565b805115612b4b5760200190565b8051821015612b4b5760209160051b010190565b602081830312612b2b578051906001600160401b038211612b2b57019080601f83011215612b2b5781519161321d8361316d565b9261322b6040519485612d94565b80845260208085019160051b83010191838311612b2b5760208101915b83831061325757505050505090565b82516001600160401b038111612b2b57820190610160828703601f190112612b2b576040519061328682612d78565b6020830151825260408301516001600160401b038111612b2b578760206132af92860101612f58565b602083015260608301516003811015612b2b57604083015260808301516001600160401b038111612b2b578760206132e992860101612f58565b606083015260a0830151608083015260c083015160a083015260e083015160c083015261010083015160e0830152610120830151610100830152610140830151610120830152610160830151916001600160401b038311612b2b5761335688602080969581960101612f58565b610140820152815201920191613248565b9291602061338061338893604087526040870190612b9f565b940190612bc4565b565b60026000541461339b576002600055565b633ee5aeb560e01b60005260046000fd5b6001546001600160a01b031633036133c057565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212204ba5e90a864aabc595a70d8cf2a28fb80900b274520893b96dfc36222a6fcbc464736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xDB981A0 EQ PUSH2 0x2AD5 JUMPI POP DUP1 PUSH4 0x10525814 EQ PUSH2 0x1B4B JUMPI DUP1 PUSH4 0x106B5DA1 EQ PUSH2 0x2965 JUMPI DUP1 PUSH4 0x195EC9EE EQ PUSH2 0x289D JUMPI DUP1 PUSH4 0x2D8A340C EQ PUSH2 0x26B3 JUMPI DUP1 PUSH4 0x34808EC3 EQ PUSH2 0x268A JUMPI DUP1 PUSH4 0x357917B7 EQ PUSH2 0x2106 JUMPI DUP1 PUSH4 0x35C1D349 EQ PUSH2 0x2646 JUMPI DUP1 PUSH4 0x46F84795 EQ PUSH2 0x1015 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x261D JUMPI DUP1 PUSH4 0x602710A4 EQ PUSH2 0x2124 JUMPI DUP1 PUSH4 0x609C7604 EQ PUSH2 0x2106 JUMPI DUP1 PUSH4 0x62858BFA EQ PUSH2 0x2096 JUMPI DUP1 PUSH4 0x6299DF6C EQ PUSH2 0x1F7F JUMPI DUP1 PUSH4 0x649718B2 EQ PUSH2 0x1D52 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CF5 JUMPI DUP1 PUSH4 0x73CCE3EE EQ PUSH2 0x1BBD JUMPI DUP1 PUSH4 0x782EA619 EQ PUSH2 0x1B8E JUMPI DUP1 PUSH4 0x7A728E7F EQ PUSH2 0x1B4B JUMPI DUP1 PUSH4 0x7CEB4A69 EQ PUSH2 0x1AB3 JUMPI DUP1 PUSH4 0x8ACEE3CF EQ PUSH2 0x1A8A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A61 JUMPI DUP1 PUSH4 0x8DE4D101 EQ PUSH2 0x127A JUMPI DUP1 PUSH4 0x93B1AD38 EQ PUSH2 0x104E JUMPI DUP1 PUSH4 0x96F3A8AD EQ PUSH2 0x1015 JUMPI DUP1 PUSH4 0x9732BDB5 EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0x996B8A6F EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0x9B4DC8CC EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0x9E7B399E EQ PUSH2 0x74C JUMPI DUP1 PUSH4 0xA650C232 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xBFC664F3 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xCADCB471 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xFB643583 EQ PUSH2 0x1C2 JUMPI PUSH4 0xFEB0B8F5 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x10 SLOAD DUP3 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH2 0x1ED DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x216 PUSH2 0x2B15 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x33AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 PUSH2 0x36C SWAP2 PUSH2 0x2A5 PUSH2 0x2B15 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x3184 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2DA DUP5 PUSH2 0x2D46 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x305 SWAP1 DUP5 AND PUSH1 0x40 DUP7 ADD PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST SUB DUP3 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2DB5 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x38A PUSH2 0x2B15 JUMP JUMPDEST PUSH2 0x392 PUSH2 0x338A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH2 0x3B4 PUSH1 0x1 SWAP3 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP4 DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP2 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x8 DUP2 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND SWAP1 DUP2 PUSH2 0x498 JUMPI JUMPDEST POP PUSH2 0x3F3 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x39E JUMP JUMPDEST PUSH1 0xFF NOT AND SWAP1 SSTORE DUP4 DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 DUP6 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x8 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE DUP3 DUP6 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD PUSH2 0x42F DUP2 SLOAD PUSH2 0x2C89 JUMP JUMPDEST DUP1 PUSH2 0x458 JUMPI JUMPDEST POP POP PUSH1 0x4 DUP3 ADD SSTORE DUP3 PUSH1 0x5 DUP3 ADD SSTORE DUP3 PUSH1 0x6 DUP3 ADD SSTORE DUP3 PUSH1 0x7 DUP3 ADD SSTORE ADD SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP9 EQ PUSH2 0x46D JUMPI POP SSTORE JUMPDEST DUP3 CODESIZE DUP1 PUSH2 0x435 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x488 SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 DUP10 ADD PUSH2 0x30EE JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 KECCAK256 SWAP2 SSTORE SSTORE PUSH2 0x465 JUMP JUMPDEST PUSH1 0x7 SWAP2 POP ADD SLOAD TIMESTAMP GT CODESIZE PUSH2 0x3E4 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4CB PUSH2 0x338A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4122BBB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x741 JUMPI DUP4 SWAP2 PUSH2 0x698 JUMPI JUMPDEST POP DUP3 SWAP1 CALLER DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x676 JUMPI PUSH2 0x12C PUSH2 0x55C PUSH1 0xC0 PUSH2 0x53E DUP5 PUSH2 0x31C8 JUMP JUMPDEST MLOAD ADD MLOAD JUMPDEST TIMESTAMP PUSH1 0xE0 PUSH2 0x54E DUP7 PUSH2 0x31C8 JUMP JUMPDEST MLOAD ADD MLOAD TIMESTAMP GT PUSH2 0x662 JUMPI PUSH2 0x3023 JUMP JUMPDEST DIV SWAP4 DUP1 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x596 JUMPI PUSH2 0x58E PUSH1 0x1 SWAP2 PUSH2 0x588 DUP9 PUSH1 0x60 PUSH2 0x580 DUP10 DUP10 PUSH2 0x31D5 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x2FFA JUMP JUMPDEST SWAP1 PUSH2 0x30BD JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x561 JUMP JUMPDEST DUP5 SWAP1 CALLER DUP4 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP5 KECCAK256 SSTORE DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x63A JUMPI JUMPDEST POP POP PUSH2 0x604 DUP2 PUSH1 0x2 SLOAD PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x408E6E0B73DAF4C873106E95FD067260FBFF8BF9D1B499CAD563D4480D45BAC PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x644 SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x64F JUMPI DUP3 DUP5 PUSH2 0x5F6 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP PUSH1 0xE0 PUSH2 0x66E DUP6 PUSH2 0x31C8 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x3023 JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH2 0x12C PUSH2 0x55C PUSH1 0x40 DUP7 KECCAK256 SLOAD PUSH2 0x542 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x6A9 DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x739 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x73D JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x739 JUMPI DUP1 MLOAD PUSH2 0x6DE DUP2 PUSH2 0x316D JUMP JUMPDEST SWAP3 PUSH2 0x6EC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D94 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 PUSH2 0x120 DUP2 DUP7 ADD SWAP4 MUL DUP5 ADD ADD SWAP3 DUP2 DUP5 GT PUSH2 0x735 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x71A JUMPI POP POP POP POP CODESIZE PUSH2 0x50B JUMP JUMPDEST PUSH1 0x20 PUSH2 0x120 SWAP2 PUSH2 0x72A DUP5 DUP7 PUSH2 0x3030 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x709 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x771 PUSH2 0x2B15 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH2 0x7B9 DUP4 PUSH2 0x7B2 DUP2 PUSH1 0x3 DUP6 ADD PUSH2 0x2CC3 JUMP JUMPDEST SUB DUP5 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x808 PUSH1 0x6 DUP5 ADD SLOAD SWAP3 PUSH2 0x7F5 PUSH1 0xFF PUSH1 0x8 PUSH1 0x7 DUP9 ADD SLOAD SWAP8 ADD SLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x120 PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD SWAP1 PUSH2 0x2B9F JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH2 0x88A CALLDATASIZE PUSH2 0x2E92 JUMP JUMPDEST PUSH2 0x89A SWAP9 SWAP8 SWAP4 SWAP5 SWAP7 SWAP6 SWAP3 SWAP9 PUSH2 0x33AC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7EB111F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP10 DUP8 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x100A JUMPI DUP11 SWAP8 PUSH2 0xFE6 JUMPI JUMPDEST POP SWAP7 SWAP10 PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 DUP11 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x20 PUSH2 0x8F5 DUP3 DUP12 PUSH2 0x31D5 JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x926 PUSH1 0x20 DUP3 DUP2 PUSH2 0x915 DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2B7C JUMP JUMPDEST DUP2 ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2D94 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP11 DUP13 PUSH2 0x947 PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH2 0x915 DUP4 DUP4 ADD SWAP7 DUP8 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x2B7C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH2 0x957 JUMPI PUSH1 0x1 ADD PUSH2 0x8E0 JUMP JUMPDEST PUSH4 0x3480A503 PUSH1 0xE2 SHL DUP13 MSTORE PUSH1 0x4 DUP13 REVERT JUMPDEST POP DUP11 SWAP9 POP DUP10 SWAP7 SWAP8 POP DUP12 PUSH1 0x40 MLOAD PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP2 MSTORE DUP6 PUSH1 0x4 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0x24 DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0xFDB JUMPI DUP12 DUP13 SWAP3 DUP14 SWAP3 PUSH2 0xFAC JUMPI JUMPDEST POP PUSH1 0x3 DUP11 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF98 JUMPI DUP10 EQ SWAP1 DUP2 ISZERO SWAP2 PUSH2 0xF8E JUMPI JUMPDEST POP PUSH2 0xF7F JUMPI PUSH8 0xDE0B6B3A7640000 DUP4 MUL DUP4 DUP2 DIV PUSH8 0xDE0B6B3A7640000 EQ DUP5 ISZERO OR ISZERO PUSH2 0xF6B JUMPI PUSH2 0x9F5 DUP13 SWAP3 PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 SWAP4 DIV SWAP1 PUSH2 0x2FFA JUMP JUMPDEST DIV SWAP7 DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI DUP2 DUP1 SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA4948D85 PUSH1 0xE0 SHL DUP4 MSTORE DUP13 PUSH1 0x4 DUP5 ADD MSTORE DUP10 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0xF52 JUMPI JUMPDEST POP POP PUSH2 0xA3A PUSH1 0xF SLOAD PUSH2 0x315E JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP6 PUSH2 0xA4A DUP8 PUSH2 0x2D78 JUMP JUMPDEST DUP10 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP5 DUP10 DUP7 MSTORE PUSH1 0x40 DUP9 ADD SWAP4 PUSH2 0xA64 DUP11 DUP7 PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x60 DUP10 ADD SWAP6 DUP7 MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE DUP1 PUSH1 0xC0 DUP9 ADD MSTORE DUP11 PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE DUP5 PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE DUP8 DUP10 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP3 DUP6 MLOAD DUP5 SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF3E JUMPI PUSH2 0xAC4 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xF0B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xEA2 JUMPI PUSH2 0xAFE SWAP3 SWAP2 DUP13 SWAP2 DUP4 PUSH2 0xE97 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE JUMPDEST MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xB1B SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x30D6 JUMP JUMPDEST MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDC5 JUMPI PUSH2 0xB3A PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE50 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDE4 JUMPI SWAP2 DUP1 PUSH2 0xB77 SWAP3 PUSH1 0xA SWAP6 SWAP5 DUP13 SWAP3 PUSH2 0xDD9 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP5 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE ADD PUSH2 0x140 DUP4 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDC5 JUMPI PUSH2 0xBDD DUP4 SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD8A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD27 JUMPI PUSH2 0xC16 SWAP3 SWAP2 DUP11 SWAP2 DUP4 PUSH2 0xD1C JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xD08 JUMPI SWAP1 PUSH2 0xC3B DUP3 PUSH1 0x1 DUP10 SWAP6 SWAP5 ADD PUSH1 0x10 SSTORE PUSH2 0x2B61 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL DUP10 DUP2 SHL PUSH1 0x0 NOT SWAP1 SWAP2 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x739 JUMPI PUSH2 0xC95 SWAP3 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x31EAA61D PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x2BE7 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0xCF3 JUMPI JUMPDEST POP SWAP2 DUP4 PUSH32 0x5928D65CC6AE9F07A7673F1A5A2F98D81F1BB0C2BC53BCAA33D6F11CF426F25E SWAP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xCED PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3367 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xCFD SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x739 JUMPI DUP4 DUP6 PUSH2 0xCA4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0xAE9 JUMP JUMPDEST DUP4 DUP11 MSTORE DUP2 DUP11 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0xD72 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xD59 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xC19 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xD4C JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xDB5 SWAP1 DUP5 DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDBB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP10 PUSH2 0xBE6 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xDA8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD DUP11 MSTORE DUP2 DUP11 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0xE38 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH1 0xA SWAP8 SWAP7 SWAP5 LT PUSH2 0xE1F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xB7D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0xE0F JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0xE7D SWAP1 PUSH1 0x3 DUP6 ADD DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP10 PUSH2 0xB43 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x1 DUP7 ADD DUP13 MSTORE DUP2 DUP13 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP14 JUMPDEST DUP2 DUP2 LT PUSH2 0xEF3 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xEDA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0xB04 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0xECA JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0xF38 SWAP1 PUSH1 0x1 DUP8 ADD DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP12 PUSH2 0xACD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP2 PUSH2 0xF5C SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0xF67 JUMPI DUP10 DUP12 PUSH2 0xA2D JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP12 MSTORE PUSH1 0x4 DUP12 REVERT JUMPDEST SWAP1 POP DUP4 GT DUP13 PUSH2 0x9B8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP14 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP14 REVERT JUMPDEST SWAP2 POP POP PUSH2 0xFCB SWAP2 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0xFC3 DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2F9A JUMP JUMPDEST SWAP6 POP POP SWAP3 SWAP2 POP POP SWAP1 SWAP2 SWAP1 DUP14 PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1003 SWAP2 SWAP8 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0xFFB DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x31E9 JUMP JUMPDEST SWAP6 CODESIZE PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x103D PUSH2 0x2B15 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI DUP1 DUP2 PUSH1 0x10 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x123A JUMPI POP PUSH2 0x1077 DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 PUSH2 0x1085 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2D94 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x1094 PUSH1 0x1F NOT SWAP2 PUSH2 0x316D JUMP JUMPDEST ADD DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x1223 JUMPI POP POP DUP3 DUP4 JUMPDEST DUP3 DUP2 LT PUSH2 0x1111 JUMPI DUP4 DUP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD PUSH1 0x20 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x10E2 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x1101 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x2BE7 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x111A DUP2 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND PUSH2 0x113F JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP3 PUSH2 0x121C SWAP2 DUP8 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH1 0xA PUSH2 0x11FB PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1164 DUP5 PUSH2 0x2D78 JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x117B DUP2 PUSH2 0x319 DUP2 DUP12 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1194 PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP7 ADD PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A8 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x319 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x120B DUP3 DUP9 PUSH2 0x31D5 JUMP JUMPDEST MSTORE PUSH2 0x1216 DUP2 DUP8 PUSH2 0x31D5 JUMP JUMPDEST POP PUSH2 0x315E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x122E PUSH2 0x3105 JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x1243 DUP2 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP5 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x1266 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1066 JUMP JUMPDEST SWAP2 PUSH2 0x1272 PUSH1 0x1 SWAP2 PUSH2 0x315E JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x125E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x24 PUSH2 0x128B CALLDATASIZE PUSH2 0x2E92 JUMP JUMPDEST PUSH2 0x129E SWAP10 SWAP8 SWAP7 SWAP6 SWAP3 SWAP10 SWAP9 SWAP2 SWAP5 SWAP4 SWAP9 PUSH2 0x33AC JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP10 DUP9 DUP12 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1A56 JUMPI DUP10 DUP11 SWAP5 DUP12 SWAP3 PUSH2 0x1A2D JUMPI JUMPDEST POP PUSH1 0x3 DUP7 LT ISZERO PUSH2 0x1A19 JUMPI PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1A19 JUMPI DUP6 EQ SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x1A0F JUMPI JUMPDEST POP PUSH2 0x1A00 JUMPI DUP8 DUP10 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP3 PUSH8 0xDE0B6B3A7640000 DUP3 MUL DUP3 DUP2 DIV PUSH8 0xDE0B6B3A7640000 EQ DUP4 ISZERO OR ISZERO PUSH2 0x19EC JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x64 PUSH2 0x133C SWAP3 DIV SWAP1 PUSH2 0x2FFA JUMP JUMPDEST DIV SWAP1 DUP2 PUSH1 0x7 DUP6 ADD SLOAD GT PUSH2 0x19DD JUMPI DUP10 PUSH1 0x24 SWAP11 SWAP12 SWAP13 PUSH1 0x40 MLOAD SWAP12 DUP13 DUP1 SWAP3 PUSH4 0x7EB111F PUSH1 0xE4 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP10 DUP11 ISZERO PUSH2 0xFDB JUMPI DUP12 SWAP11 PUSH2 0x19C1 JUMPI JUMPDEST POP SWAP6 SWAP11 PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 DUP12 JUMPDEST DUP12 MLOAD DUP2 LT ISZERO PUSH2 0x141B JUMPI DUP12 DUP12 DUP3 DUP13 DUP13 PUSH1 0x20 PUSH2 0x139B DUP5 DUP8 PUSH2 0x31D5 JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x13BB PUSH1 0x20 DUP3 DUP2 PUSH2 0x915 DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2B7C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x13DB PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH2 0x915 DUP4 DUP4 ADD SWAP7 DUP8 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x2B7C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ SWAP3 DUP4 PUSH2 0x1404 JUMPI JUMPDEST POP POP POP PUSH2 0x13F5 JUMPI PUSH1 0x1 ADD PUSH2 0x1381 JUMP JUMPDEST PUSH4 0x3480A503 PUSH1 0xE2 SHL DUP14 MSTORE PUSH1 0x4 DUP14 REVERT JUMPDEST PUSH2 0x140F SWAP3 SWAP4 POP PUSH2 0x31D5 JUMP JUMPDEST MLOAD MLOAD EQ ISZERO DUP12 DUP3 DUP15 PUSH2 0x13E6 JUMP JUMPDEST POP DUP12 SWAP9 SWAP7 SWAP10 SWAP8 POP DUP13 PUSH1 0x4 DUP7 ADD SLOAD SWAP2 DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1905 JUMPI DUP12 PUSH2 0x1447 PUSH1 0x1 DUP11 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x198E JUMPI JUMPDEST POP POP PUSH1 0x20 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1924 JUMPI PUSH2 0x147F SWAP3 SWAP2 DUP3 PUSH2 0x1919 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP9 ADD SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1905 JUMPI DUP12 PUSH2 0x14A3 PUSH1 0x3 DUP11 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x18D2 JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1864 JUMPI PUSH2 0x14DD SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0x1859 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD SSTORE JUMPDEST DUP3 PUSH1 0x4 DUP8 ADD SSTORE PUSH1 0x5 DUP7 ADD SSTORE DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1845 JUMPI PUSH2 0x150B PUSH1 0xA DUP8 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1812 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x17A1 JUMPI SWAP1 DUP1 PUSH2 0x1549 SWAP3 DUP13 SWAP14 DUP14 SWAP11 SWAP12 SWAP13 SWAP14 SWAP3 PUSH2 0x1796 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xA DUP7 ADD SSTORE JUMPDEST PUSH1 0x6 DUP6 ADD SWAP2 DUP4 DUP4 SSTORE PUSH2 0x156D PUSH1 0x9 DUP8 ADD SWAP5 DUP7 DUP7 SSTORE PUSH1 0x7 DUP9 ADD SLOAD SWAP1 PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x8 DUP8 ADD SWAP1 DUP2 SSTORE SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x1722 JUMPI SWAP1 PUSH2 0x1587 SWAP2 PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x171E JUMPI DUP8 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x9FD36B15 PUSH1 0xE0 SHL DUP5 MSTORE DUP12 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1713 JUMPI DUP8 SWAP2 PUSH2 0x16FA JUMPI JUMPDEST POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x735 JUMPI DUP7 SWAP5 PUSH2 0x16A3 DUP7 SWAP3 PUSH1 0xA PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xA14764D PUSH1 0xE4 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP9 ADD MSTORE DUP3 SLOAD PUSH1 0x44 DUP9 ADD MSTORE PUSH2 0x160 PUSH1 0x64 DUP9 ADD MSTORE PUSH2 0x165B PUSH2 0x1631 PUSH2 0x1A4 DUP10 ADD PUSH1 0x1 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH2 0x1646 PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH1 0x84 DUP12 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST DUP9 DUP2 SUB PUSH1 0x43 NOT ADD PUSH1 0xA4 DUP11 ADD MSTORE PUSH1 0x3 DUP6 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xC4 DUP10 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xE4 DUP10 ADD MSTORE SWAP5 SLOAD PUSH2 0x104 DUP9 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH2 0x124 DUP9 ADD MSTORE SLOAD PUSH2 0x144 DUP8 ADD MSTORE SLOAD PUSH2 0x164 DUP7 ADD MSTORE DUP5 DUP4 SUB PUSH1 0x43 NOT ADD PUSH2 0x184 DUP7 ADD MSTORE ADD PUSH2 0x2CC3 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x16E5 JUMPI JUMPDEST POP POP PUSH32 0x758A67328BA53C1867C0272BBD2CA10D6FE71D37120188C523FE7AE7BDBBE469 SWAP2 PUSH2 0xCED PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3367 JUMP JUMPDEST DUP2 PUSH2 0x16EF SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x739 JUMPI DUP4 DUP6 PUSH2 0x16B2 JUMP JUMPDEST DUP2 PUSH2 0x1704 SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x170F JUMPI DUP6 DUP12 PUSH2 0x15CE JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1731 JUMPI JUMPDEST POP POP PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x173A SWAP2 PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x171E JUMPI DUP8 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xA4948D85 PUSH1 0xE0 SHL DUP5 MSTORE DUP12 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1713 JUMPI DUP8 SWAP2 ISZERO PUSH2 0x172A JUMPI DUP2 PUSH2 0x178B SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x170F JUMPI DUP6 DUP12 PUSH2 0x172A JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0xA DUP8 ADD DUP12 MSTORE DUP1 DUP12 KECCAK256 SWAP12 DUP12 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x17FA JUMPI POP SWAP12 DUP3 SWAP2 DUP13 SWAP14 PUSH1 0x1 SWAP5 PUSH1 0x1F SWAP15 SWAP12 SWAP13 SWAP14 SWAP15 NOT DUP2 AND LT PUSH2 0x17E1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA DUP7 ADD SSTORE PUSH2 0x154F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x17D1 JUMP JUMPDEST DUP3 DUP3 ADD MLOAD DUP15 SSTORE PUSH1 0x1 SWAP1 SWAP14 ADD SWAP13 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x183F SWAP1 PUSH1 0xA DUP9 ADD DUP13 MSTORE PUSH1 0x20 DUP13 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP12 PUSH2 0x1514 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0xAE9 JUMP JUMPDEST POP SWAP2 PUSH1 0x3 DUP10 ADD DUP14 MSTORE DUP1 DUP14 KECCAK256 SWAP1 DUP14 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x18B7 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x189E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP8 ADD SSTORE PUSH2 0x14E3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x188E JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x18FE SWAP3 PUSH1 0x3 DUP13 ADD DUP2 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP12 DUP15 PUSH2 0x14AC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST SWAP1 POP DUP12 ADD MLOAD DUP16 PUSH2 0x146B JUMP JUMPDEST POP SWAP1 PUSH1 0x1 DUP10 ADD DUP14 MSTORE DUP2 DUP14 KECCAK256 DUP14 SWAP3 JUMPDEST DUP13 PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1977 JUMPI POP PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x195E JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x1 DUP9 ADD SSTORE PUSH2 0x1485 JUMP JUMPDEST DUP13 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 PUSH2 0x194F JUMP JUMPDEST DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x19BA SWAP3 PUSH1 0x1 DUP13 ADD DUP2 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST DUP12 DUP15 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0x19D6 SWAP2 SWAP11 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0xFFB DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST SWAP9 CODESIZE PUSH2 0x1376 JUMP JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH4 0x69E489F5 PUSH1 0xE1 SHL DUP10 MSTORE PUSH1 0x4 DUP10 REVERT JUMPDEST SWAP1 POP DUP2 GT CODESIZE PUSH2 0x12F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST SWAP2 POP POP PUSH2 0x1A45 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP12 DUP4 RETURNDATACOPY PUSH2 0xFC3 DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST SWAP8 SWAP6 POP POP SWAP3 SWAP2 POP POP SWAP1 SWAP4 SWAP1 CODESIZE PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1ACD PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1AE9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x7 SLOAD AND CALLER EQ PUSH2 0x2F1B JUMP JUMPDEST PUSH2 0x1AF1 PUSH2 0x338A JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP6 KECCAK256 ADD PUSH2 0x1B1D DUP5 DUP3 SLOAD PUSH2 0x3023 JUMP JUMPDEST SWAP1 SSTORE DUP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1B42 PUSH1 0x5 PUSH1 0x40 DUP5 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x30BD JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1B73 PUSH2 0x2B15 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP4 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1BD7 PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x13815491 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x24 DUP1 CALLDATALOAD PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0x120 SWAP2 DUP6 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1CEA JUMPI DUP5 SWAP4 PUSH2 0x1C9E JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP5 DUP8 MSTORE DUP3 MSTORE DUP6 KECCAK256 SLOAD SWAP1 SWAP5 PUSH2 0x12C SWAP5 PUSH2 0x1C74 SWAP5 SWAP1 SWAP4 SWAP3 PUSH2 0x1C85 JUMPI POP POP POP PUSH1 0xC0 DUP2 ADD MLOAD SWAP1 JUMPDEST PUSH1 0xE0 TIMESTAMP SWAP2 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x1C7D JUMPI JUMPDEST POP PUSH2 0x3023 JUMP JUMPDEST DIV PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CODESIZE PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x40 SWAP3 DUP3 MSTORE PUSH1 0xB DUP8 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP7 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0x1C60 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x1CE3 JUMPI JUMPDEST PUSH2 0x1CB6 DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x120 DUP2 DUP4 SUB SLT PUSH2 0x73D JUMPI SWAP2 PUSH1 0x20 SWAP5 PUSH2 0x1CD9 PUSH2 0x12C SWAP6 SWAP4 PUSH2 0x1C74 SWAP6 PUSH2 0x3030 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP2 PUSH2 0x1C24 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1D0E PUSH2 0x33AC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH2 0x1D6C PUSH2 0x2B15 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1F34 JUMPI POP PUSH2 0x1D8D DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 PUSH2 0x1D9B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D94 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x1DAA PUSH1 0x1F NOT SWAP2 PUSH2 0x316D JUMP JUMPDEST ADD DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F1D JUMPI POP POP DUP4 DUP5 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E27 JUMPI DUP5 DUP7 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD PUSH1 0x20 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DF8 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x1E17 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x2DB5 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x1DE9 JUMP JUMPDEST PUSH2 0x1E30 DUP2 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP4 DUP8 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 DUP2 DUP9 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x1E5F JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP3 PUSH2 0x1F16 SWAP2 DUP6 DUP10 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP1 DUP10 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E8E DUP5 PUSH2 0x2D46 JUMP JUMPDEST DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP5 MSTORE DUP7 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1EB5 DUP4 PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP7 ADD PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC9 DUP2 PUSH2 0x319 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x1F0B DUP3 DUP10 PUSH2 0x31D5 JUMP JUMPDEST MSTORE PUSH2 0x1216 DUP2 DUP9 PUSH2 0x31D5 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1F28 PUSH2 0x3184 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x1DAD JUMP JUMPDEST PUSH2 0x1F3D DUP2 PUSH2 0x2B61 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP3 DUP7 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP1 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x1F6B JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1D7C JUMP JUMPDEST SWAP3 PUSH2 0x1F77 PUSH1 0x1 SWAP2 PUSH2 0x315E JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x1F63 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 PUSH1 0x1 DUP4 ADD SWAP1 PUSH2 0x1FB5 SWAP2 PUSH2 0x2CC3 JUMP JUMPDEST SUB PUSH2 0x1FC0 SWAP1 DUP5 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0xFF AND DUP2 PUSH2 0x1FDA DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST SUB PUSH2 0x1FE5 SWAP1 DUP4 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD SWAP2 PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD SWAP2 PUSH1 0x8 DUP8 ADD SLOAD SWAP4 PUSH1 0x9 DUP9 ADD SLOAD SWAP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA DUP2 SWAP12 ADD SWAP1 PUSH2 0x201A SWAP2 PUSH2 0x2CC3 JUMP JUMPDEST SUB PUSH2 0x2025 SWAP1 DUP11 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD PUSH2 0x160 SWAP1 MSTORE PUSH2 0x160 DUP12 ADD PUSH2 0x2044 SWAP2 PUSH2 0x2B9F JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP12 ADD PUSH2 0x2052 SWAP2 PUSH2 0x2BC4 JUMP JUMPDEST DUP10 DUP2 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x2063 SWAP2 PUSH2 0x2B9F JUMP JUMPDEST SWAP6 PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x36C SWAP2 PUSH2 0x2B9F JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 PUSH2 0x36C SWAP2 PUSH2 0x20B6 PUSH2 0x3105 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xA PUSH2 0x20EC PUSH1 0x40 MLOAD SWAP3 PUSH2 0x20D4 DUP5 PUSH2 0x2D78 JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x117B DUP2 PUSH2 0x319 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x2CC3 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2BE7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2144 PUSH2 0x338A JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0x260E JUMPI PUSH1 0x1B DUP3 GT DUP1 ISZERO SWAP1 PUSH2 0x2602 JUMPI JUMPDEST PUSH2 0x25F3 JUMPI DUP1 DUP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x25E4 JUMPI DUP1 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x8 DUP4 ADD DUP1 SLOAD PUSH1 0x24 CALLDATALOAD GT PUSH2 0x25D5 JUMPI PUSH1 0x7 DUP5 ADD PUSH2 0x219D PUSH1 0x24 CALLDATALOAD DUP3 SLOAD PUSH2 0x30BD JUMP JUMPDEST PUSH1 0x6 DUP7 ADD DUP1 SLOAD DUP3 GT PUSH2 0x25C6 JUMPI PUSH1 0x4 SLOAD DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x653 JUMPI PUSH2 0x25B1 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x2205 SWAP4 SSTORE SLOAD PUSH2 0x1C6E DUP3 DUP3 PUSH2 0x3023 JUMP JUMPDEST SWAP1 SSTORE CALLER DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x25A2 JUMPI PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND SWAP1 PUSH3 0x15180 DUP2 MUL DUP2 DUP2 DIV PUSH3 0x15180 EQ DUP3 ISZERO OR ISZERO PUSH2 0x258E JUMPI PUSH2 0x2252 SWAP1 TIMESTAMP PUSH2 0x30BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH2 0x225F DUP6 PUSH2 0x2D46 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 DUP2 DUP6 MSTORE PUSH2 0x2278 PUSH1 0x40 DUP8 ADD SWAP2 DUP3 PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2294 DUP3 PUSH2 0x228D DUP2 PUSH1 0x1 DUP13 ADD PUSH2 0x2CC3 JUMP JUMPDEST SUB DUP4 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 MSTORE PUSH1 0xA0 DUP9 ADD SWAP5 DUP11 DUP7 MSTORE PUSH1 0xC0 DUP10 ADD SWAP7 DUP8 MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP10 ADD MSTORE CALLER DUP11 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP11 KECCAK256 SWAP1 DUP11 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP9 SLOAD AND OR DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xE83 JUMPI PUSH2 0x2315 SWAP1 PUSH1 0x2 DUP8 ADD PUSH2 0x30D6 JUMP JUMPDEST MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xDC5 JUMPI PUSH2 0x2334 PUSH1 0x3 DUP8 ADD SLOAD PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x255B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x24E6 JUMPI DUP3 PUSH2 0x100 SWAP8 SWAP6 SWAP4 PUSH1 0x8 SWAP8 SWAP6 SWAP4 PUSH2 0x2377 SWAP4 DUP14 SWAP3 PUSH2 0x24DB JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST MLOAD PUSH1 0x4 DUP5 ADD SSTORE MLOAD PUSH1 0x5 DUP4 ADD SSTORE MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP2 DUP3 SWAP1 PUSH1 0x8 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x24A8 JUMPI JUMPDEST POP ISZERO PUSH2 0x2456 JUMPI JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2442 JUMPI SWAP2 PUSH1 0x2 SWAP2 PUSH1 0xFF SWAP4 SSTORE PUSH2 0x23F2 PUSH1 0x64 CALLDATALOAD DUP4 SLOAD PUSH2 0x30BD JUMP JUMPDEST DUP3 SSTORE ADD SLOAD AND PUSH2 0x2415 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH32 0x23B0F39E0762759FFB18632A1A2B79C9EB58571454E5F7C36E0A2F81759E0A34 PUSH1 0x60 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x2494 JUMPI DUP1 PUSH1 0x1 PUSH2 0x2472 SWAP3 ADD PUSH1 0x8 SSTORE PUSH2 0x2B30 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE CODESIZE PUSH2 0x23C2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH2 0x24B1 DUP2 PUSH2 0x2B30 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24D1 JUMPI PUSH1 0x1 ADD PUSH2 0x23B3 JUMP JUMPDEST POP POP PUSH1 0x1 CODESIZE PUSH2 0x23BB JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xAE9 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP8 ADD DUP11 MSTORE DUP1 DUP11 KECCAK256 SWAP2 DUP11 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x2543 JUMPI POP SWAP3 PUSH1 0x8 SWAP7 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x100 SWAP10 SWAP8 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x252A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x237D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x251A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x2588 SWAP1 PUSH1 0x3 DUP9 ADD DUP12 MSTORE PUSH1 0x20 DUP12 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xDBB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x30EE JUMP JUMPDEST CODESIZE PUSH2 0x233D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x9857CBD9 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST DUP2 PUSH2 0x25BB SWAP2 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x171E JUMPI DUP8 CODESIZE PUSH2 0x21F2 JUMP JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 REVERT JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST PUSH4 0xBCCD4043 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x1F899589 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST POP PUSH2 0x16E DUP3 LT ISZERO PUSH2 0x2158 JUMP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x20 PUSH2 0x2671 DUP4 PUSH2 0x2B30 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x26D0 PUSH2 0x338A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x13815491 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH2 0x120 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x741 JUMPI DUP4 SWAP2 PUSH2 0x2863 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x284F JUMPI PUSH2 0x2840 JUMPI CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x281E JUMPI PUSH2 0x12C PUSH2 0x2763 PUSH1 0xC0 DUP4 ADD MLOAD JUMPDEST TIMESTAMP PUSH1 0xE0 DUP6 ADD MLOAD DUP1 TIMESTAMP GT PUSH2 0x1C7D JUMPI POP PUSH2 0x3023 JUMP JUMPDEST DIV SWAP1 DUP2 ISZERO PUSH2 0x280F JUMPI SWAP1 PUSH1 0x60 PUSH2 0x2779 SWAP3 ADD MLOAD PUSH2 0x2FFA JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x2800 JUMPI CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x40 DUP5 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1CEA JUMPI PUSH2 0x27EC JUMPI JUMPDEST POP PUSH2 0x604 DUP2 PUSH1 0x2 SLOAD PUSH2 0x3023 JUMP JUMPDEST DUP4 PUSH2 0x27F9 SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0x2D94 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x27DF JUMP JUMPDEST PUSH4 0xBC6072F1 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0xED700A67 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH2 0x12C PUSH2 0x2763 PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x2750 JUMP JUMPDEST PUSH4 0xE067835F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP1 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x2896 JUMPI JUMPDEST PUSH2 0x287A DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST DUP2 ADD PUSH2 0x120 DUP3 DUP3 SUB SLT PUSH2 0x739 JUMPI PUSH2 0x2890 SWAP2 PUSH2 0x3030 JUMP JUMPDEST CODESIZE PUSH2 0x2712 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2870 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x8 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD DUP1 SWAP2 PUSH1 0x8 DUP6 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x2946 JUMPI POP POP POP DUP3 PUSH2 0x28FC SWAP2 SUB DUP4 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x2924 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2916 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x28E6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1BF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x298F PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND CALLER EQ PUSH2 0x2F1B JUMP JUMPDEST PUSH2 0x2997 PUSH2 0x338A JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 SLOAD PUSH1 0x9 DUP3 ADD SLOAD SWAP3 MLOAD PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP5 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CEA JUMPI DUP5 SWAP3 PUSH2 0x2AAF JUMPI JUMPDEST POP PUSH1 0x4 ADD SLOAD DUP1 ISZERO PUSH2 0x2A71 JUMPI PUSH8 0xDE0B6B3A7640000 DUP2 MUL SWAP1 DUP2 DIV PUSH8 0xDE0B6B3A7640000 SUB PUSH2 0x2442 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x64 PUSH2 0x2A20 SWAP3 DIV SWAP1 PUSH2 0x2FFA JUMP JUMPDEST DIV DUP2 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x6 PUSH1 0x40 DUP5 KECCAK256 ADD SSTORE DUP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x2A5A PUSH1 0x6 PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD DUP3 DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x3023 JUMP JUMPDEST SWAP1 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 DUP4 KECCAK256 ADD SSTORE PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420636F766572206361706163697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 SWAP2 SWAP3 POP PUSH2 0x2AC7 SWAP1 RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0xFC3 DUP2 DUP4 PUSH2 0x2D94 JUMP JUMPDEST POP POP SWAP4 POP POP POP POP SWAP2 SWAP1 PUSH2 0x29E2 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x65E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x65E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2AFE PUSH2 0x2B15 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2B2B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2B4B JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x2B4B JUMPI PUSH1 0x10 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2B8F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B7F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2BB8 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2B7C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BD1 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2C86 SWAP2 DUP2 MLOAD DUP2 MSTORE PUSH2 0x140 PUSH2 0x2C34 PUSH2 0x2C10 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x160 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD SWAP1 PUSH2 0x2B9F JUMP JUMPDEST PUSH2 0x2C22 PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2B9F JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH2 0x140 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2B9F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2CB9 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2CA3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2C98 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x2CD3 DUP4 PUSH2 0x2C89 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2D29 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2CEF JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x2D0F JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D62 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D62 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2D62 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2DDE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x100 DUP1 PUSH2 0x2DFD PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x120 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD SWAP1 PUSH2 0x2B9F JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D62 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2B2B JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x2E62 DUP3 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 PUSH2 0x2E70 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D94 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2B2B JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2B2B JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B2B JUMPI DUP3 PUSH2 0x2EC1 SWAP2 PUSH1 0x4 ADD PUSH2 0x2E4B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B2B JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B2B JUMPI DUP3 PUSH2 0x2EED SWAP2 PUSH1 0x4 ADD PUSH2 0x2E4B JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B2B JUMPI PUSH2 0x2F0C SWAP2 PUSH1 0x4 ADD PUSH2 0x2E4B JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0xE4 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2F22 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2B2B JUMPI DUP1 MLOAD PUSH2 0x2F6E DUP2 PUSH2 0x2E30 JUMP JUMPDEST SWAP3 PUSH2 0x2F7C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D94 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x2B2B JUMPI PUSH2 0x2C86 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x2B7C JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0x2B2B JUMPI DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B2B JUMPI PUSH2 0x2FC1 SWAP2 DUP4 ADD PUSH2 0x2F58 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B2B JUMPI SWAP2 PUSH1 0x40 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 DUP3 ADD MLOAD SWAP2 PUSH1 0x80 DUP2 ADD MLOAD SWAP2 PUSH1 0xA0 DUP3 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2B2B JUMPI PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x300D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x300D JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH2 0x120 SWAP2 SUB SLT PUSH2 0x2B2B JUMPI PUSH1 0x40 MLOAD PUSH2 0x3049 DUP2 PUSH2 0x2D46 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP3 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x2B2B JUMPI DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2B2B JUMPI PUSH2 0x100 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x300D JUMPI JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BD1 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2BD1 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x30F9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x30EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3112 DUP3 PUSH2 0x2D78 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x140 DUP4 PUSH1 0x0 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x300D JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D62 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3191 DUP3 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2B4B JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2B4B JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x2B2B JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2B2B JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2B2B JUMPI DUP2 MLOAD SWAP2 PUSH2 0x321D DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 PUSH2 0x322B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2D94 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x2B2B JUMPI PUSH1 0x20 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3257 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B2B JUMPI DUP3 ADD SWAP1 PUSH2 0x160 DUP3 DUP8 SUB PUSH1 0x1F NOT ADD SLT PUSH2 0x2B2B JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3286 DUP3 PUSH2 0x2D78 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD DUP3 MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B2B JUMPI DUP8 PUSH1 0x20 PUSH2 0x32AF SWAP3 DUP7 ADD ADD PUSH2 0x2F58 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2B2B JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2B2B JUMPI DUP8 PUSH1 0x20 PUSH2 0x32E9 SWAP3 DUP7 ADD ADD PUSH2 0x2F58 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x100 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x160 DUP4 ADD MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x2B2B JUMPI PUSH2 0x3356 DUP9 PUSH1 0x20 DUP1 SWAP7 SWAP6 DUP2 SWAP7 ADD ADD PUSH2 0x2F58 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x3248 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x20 PUSH2 0x3380 PUSH2 0x3388 SWAP4 PUSH1 0x40 DUP8 MSTORE PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x2B9F JUMP JUMPDEST SWAP5 ADD SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x339B JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x33C0 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xA5 0xE9 EXP DUP7 BLOBBASEFEE 0xAB 0xC5 SWAP6 0xA7 0xD DUP13 CALLCODE LOG2 DUP16 0xB8 MULMOD STOP 0xB2 PUSH21 0x520893B96DFC36222A6FCBC464736F6C634300081B STOP CALLER ","sourceMap":"2656:15955:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3744:25;2656:15955;;;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;3776:25;2656:15955;3776:25;;;;;2656:15955;3776:25;;;:::i;:::-;2656:15955;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;2656:15955:8;2627:22:0;;2623:91;;3004:6;2656:15955:8;;-1:-1:-1;;;;;;2656:15955:8;;;;;;;-1:-1:-1;;;;;2656:15955:8;3052:40:0;;;;2656:15955:8;;2623:91:0;-1:-1:-1;;;2672:31:0;;2656:15955:8;;;;;2672:31:0;;2656:15955:8;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;13157:10;2656:15955;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;:::i;:::-;2466:103:4;;:::i;:::-;-1:-1:-1;;;;;2656:15955:8;13587:1;13611:3;13594:8;2656:15955;13590:19;;;;;13644:11;;13587:1;13644:11;;:::i;:::-;2656:15955;;;;;;;;;13716:10;2656:15955;;;;;;;;;;;;;13756:18;;;2656:15955;;;;;;;13756:56;;;;13611:3;13752:170;;;13611:3;;;;2656:15955;13575:13;;13752:170;2656:15955;;;;;;;;13716:10;2656:15955;;;;;;;;;;;13756:18;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;13752:170;2656:15955;;;;;;;;;;;;;;;;;;;;;;;13752:170;;;;;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13756:56;13796:16;;;;2656:15955;13778:15;:34;13756:56;;;13590:19;;13587:1;2656:15955;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;2466:103:4;;:::i;:::-;16132:10:8;2656:15955;;;-1:-1:-1;;;16132:85:8;;2656:15955;16132:85;;2656:15955;;;16196:10;2656:15955;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;16132:85;;;;;;;;;;;2656:15955;16228:18;;16257:21;16196:10;2656:15955;;16293:18;2656:15955;;;;;;;;;;;;;;16293:44;16289:202;2656:15955;;;16722:9;16691:27;16370:21;:11;;;:::i;:::-;;:21;2656:15955;16289:202;16525:15;2656:15955;16569:11;;;:::i;:::-;;:22;2656:15955;16525:15;16555:36;16551:105;;16691:27;:::i;:::-;2656:15955;16749:13;;16744:234;16785:3;2656:15955;;16764:19;;;;;16937:29;2656:15955;16835:11;16887:35;16835:11;16887:19;16835:11;;;;:::i;:::-;;16887:19;2656:15955;16887:35;:::i;:::-;16937:29;;:::i;:::-;16785:3;2656:15955;16749:13;;;16764:19;;;16196:10;2656:15955;;16293:18;2656:15955;;;;;;;;;;16525:15;2656:15955;;;;;;;;;;;;;17058:36;;;;;2656:15955;;-1:-1:-1;;;17058:36:8;;16196:10;2656:15955;17058:36;;2656:15955;;;;;;;;;;;;;;;;;;17058:36;;;;;;;;16744:234;2656:15955;;17107:29;2656:15955;17107:29;2656:15955;17107:29;:::i;:::-;;2656:15955;;;;;;17154:46;2656:15955;16196:10;17154:46;;2656:15955;;;;;17058:36;;;;;:::i;:::-;2656:15955;;17058:36;;;;2656:15955;;;;17058:36;2656:15955;;;;;;;;;17058:36;2656:15955;;;16551:105;16622:11;2656:15955;16622:11;;;:::i;:::-;;:22;2656:15955;16691:27;:::i;16289:202::-;16196:10;2656:15955;;16293:18;2656:15955;;;;;;;;;;16722:9;16691:27;2656:15955;;;;16289:202;;16132:85;;;;;;;;;;;;:::i;:::-;;;2656:15955;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16132:85;;;;;;;2656:15955;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;16132:85;2656:15955;;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;-1:-1:-1;;;;;2656:15955:8;;:::i;:::-;;;;3588:92;2656:15955;;;;;;;;;;;;;;;;;;;;;3588:92;;2656:15955;3588:92;2656:15955;3588:92;;;2656:15955;;;;3588:92;2656:15955;3588:92;2656:15955;3588:92;;;;2656:15955;:::i;:::-;;;;:::i;:::-;;3588:92;;2656:15955;3588:92;;;;2656:15955;;3588:92;;;2656:15955;3588:92;2656:15955;;3588:92;;;;2656:15955;3588:92;;2656:15955;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3223:24;2656:15955;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;3189:27;2656:15955;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;;;;;;;;:::i;:::-;6058:10:8;2656:15955;;;-1:-1:-1;;;6058:32:8;;2656:15955;6058:32;;2656:15955;;;;-1:-1:-1;;;;;2656:15955:8;;;;;6058:32;2656:15955;6058:32;2656:15955;;6058:32;;;;;;;;;;;2656:15955;-1:-1:-1;6106:13:8;;2656:15955;;;;-1:-1:-1;6106:13:8;6146:3;2656:15955;;6121:23;;;;;2656:15955;6215:15;;;;:::i;:::-;;:25;;2656:15955;;6198:43;2656:15955;6198:43;;2656:15955;6198:43;;;2656:15955;;;;;;;;;:::i;:::-;;;6198:43;;2656:15955;;6198:43;;;;;;:::i;:::-;2656:15955;6188:54;;2656:15955;;6273:28;2656:15955;;;6273:28;;2656:15955;6273:28;;;2656:15955;;;;;;;;:::i;6273:28::-;2656:15955;6263:39;;6188:114;6166:213;;2656:15955;;6106:13;;6166:213;-1:-1:-1;;;6344:19:8;;2656:15955;8108:19;6344;6121:23;;;;;;;;;;2656:15955;;;;;6582:26;;;2656:15955;6582:26;;2656:15955;6582:26;;6058:32;6582:26;;;;;;;;2656:15955;;;;6582:26;;;6101:289;2656:15955;6058:10;2656:15955;;;;;6058:10;2656:15955;;;;;6625:16;;;;;:53;;;6101:289;6621:104;;;6777:4;2656:15955;;;;;6777:4;2656:15955;;;;;;;6758:31;2656:15955;;6785:3;6777:4;2656:15955;;6758:31;;:::i;:::-;2656:15955;5088:52;;;;;;2656:15955;;;5088:52;2656:15955;;;;;;;;;5088:52;;;2656:15955;5088:52;;2656:15955;;6058:32;2656:15955;;;5088:52;;;;;;;;6101:289;2656:15955;;5153:12;;2656:15955;5153:12;:::i;:::-;;2656:15955;;;;;;;:::i;:::-;;;;;5206:373;;2656:15955;;;;;5206:373;;;;;;;:::i;:::-;;;;2656:15955;;;5206:373;;;2656:15955;5206:373;;;2656:15955;5206:373;;;;2656:15955;5206:373;2656:15955;5206:373;;2656:15955;5206:373;;;2656:15955;5206:373;;;;2656:15955;5206:373;;;2656:15955;;;;5590:6;2656:15955;;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;:::i;:::-;;;;;;6101:289;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6058:10;2656:15955;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;6058:10;2656:15955;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6058:10;2656:15955;;;;5206:373;;;2656:15955;;;;;5206:373;;;2656:15955;;;;;5206:373;;;2656:15955;;;;;;5206:373;;2656:15955;;;;;5206:373;;;2656:15955;;;;;5206:373;;;2656:15955;;;;;;5206:373;;;2656:15955;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5624:8;2656:15955;-1:-1:-1;;;2656:15955:8;;;;;;;;;;;;;5624:8;2656:15955;;:::i;:::-;;;6058:10;2656:15955;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;5657:39;;;;;2656:15955;;;;;;;;;;;;;;;;5657:39;;2656:15955;5657:39;;2656:15955;;6058:32;2656:15955;;;5088:52;2656:15955;;;;:::i;:::-;5657:39;;;;;;;;;;2656:15955;;;;5752:44;2656:15955;;;;;;;;;;;;;;;;;5752:44;2656:15955;;5752:44;;;;;:::i;:::-;;;;2656:15955;;5657:39;;;;;:::i;:::-;2656:15955;;5657:39;;;;2656:15955;-1:-1:-1;;;2656:15955:8;;;;;6058:32;2656:15955;;;;;;-1:-1:-1;2656:15955:8;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6058:10;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;2656:15955:8;;;;;-1:-1:-1;;;2656:15955:8;;;;;6058:32;2656:15955;;;;;;-1:-1:-1;2656:15955:8;;;;;6058:10;2656:15955;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6058:10;2656:15955;;;;;;;;;;;;6058:10;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6058:10;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;2656:15955:8;;;;;6058:32;2656:15955;;;;;;-1:-1:-1;2656:15955:8;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6058:10;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;2656:15955:8;;;;;6058:32;2656:15955;;5088:52;;;;;:::i;:::-;2656:15955;;5088:52;;;;2656:15955;;;;;-1:-1:-1;;;2656:15955:8;;;;;6058:32;2656:15955;;6621:104;-1:-1:-1;;;6702:11:8;;2656:15955;7444:11;6702;6625:53;6645:33;;;;6625:53;;;2656:15955;-1:-1:-1;;;2656:15955:8;;;;;6058:32;2656:15955;;6582:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;2656:15955;;;;;;;;;6058:32;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;2656:15955;;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;:::i;:::-;;;;3322:48;2656:15955;;;;;;;;;;;;;;;;;;;;;;;12203:23;12242:13;12261:8;2656:15955;12237:180;12257:19;;;;;;2656:15955;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;12541:17;;;12574:13;12589:19;;;;;;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;12610:3;12643:11;;;:::i;:::-;2656:15955;;;;;;;;;12341:11;2656:15955;;;;;;;;12669:117;;12610:3;;2656:15955;;12574:13;;12669:117;2656:15955;;;12763:7;2656:15955;;;12734:6;2656:15955;;;;;12341:11;2656:15955;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;12709:35;;;;:::i;:::-;;;;;;:::i;:::-;;12763:7;:::i;:::-;12669:117;;;;2656:15955;;;;;:::i;:::-;;;;;;;;;;12278:3;12311:11;;;:::i;:::-;2656:15955;;;;;;;;12341:11;2656:15955;;;;;;;;12337:69;;12278:3;2656:15955;;12242:13;;12337:69;12377:13;;2656:15955;12377:13;;:::i;:::-;12337:69;;;;;2656:15955;;;;;7320:27;2656:15955;;;:::i;:::-;1500:62:0;;;;;;;;;;;;;:::i;:::-;2656:15955:8;;;;;7320:10;2656:15955;;;;;;;;;;;;;;7320:27;;;2656:15955;7320:27;;2656:15955;7320:27;;;;;;2656:15955;;;;7320:27;;;2656:15955;;7320:10;2656:15955;;;;;7320:10;2656:15955;;;;;7364:17;;;;;:56;;;2656:15955;7360:107;;;2656:15955;;;7510:6;2656:15955;;;;;;7581:4;2656:15955;;;;;7581:4;2656:15955;;;;;;;7581:4;2656:15955;7589:3;7561:32;2656:15955;;7561:32;;:::i;:::-;2656:15955;7618:17;;;;;2656:15955;7618:30;7614:81;;2656:15955;7320:27;2656:15955;;;;;;;;;;;;7746:57;;;2656:15955;7746:57;;2656:15955;7746:57;;;;;;;;;;;2656:15955;-1:-1:-1;7819:13:8;;2656:15955;;;;-1:-1:-1;7819:13:8;7859:3;2656:15955;;7834:23;;;;;7928:15;;;;;2656:15955;7928:15;;;;:::i;:::-;;:25;;2656:15955;;7911:43;2656:15955;7911:43;;2656:15955;7911:43;;;2656:15955;;;;;;;;;:::i;7911:43::-;2656:15955;7901:54;;2656:15955;7986:28;2656:15955;;;7986:28;;2656:15955;7986:28;;;2656:15955;;;;;;;;:::i;7986:28::-;2656:15955;7976:39;;7901:114;:165;;;;7859:3;7879:264;;;;;2656:15955;;7819:13;;7879:264;-1:-1:-1;;;8108:19:8;;2656:15955;8108:19;;7901:165;8036:15;;;;;:::i;:::-;;2656:15955;8036:30;;7901:165;;;;;7834:23;;;;;;;;;2656:15955;8193:14;;2656:15955;;;;-1:-1:-1;;;;;2656:15955:8;;;;8220:15;2656:15955;;8220:15;;2656:15955;;:::i;:::-;;;;;;7814:340;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8220:15;;2656:15955;;;;-1:-1:-1;;;;;2656:15955:8;;;;8259:12;2656:15955;7320:10;8259:12;;2656:15955;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7320:10;8259:12;;2656:15955;;8193:14;2656:15955;8193:14;;2656:15955;8329:10;;;2656:15955;;;-1:-1:-1;;;;;2656:15955:8;;;;;8358:9;;;2656:15955;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8358:9;;;2656:15955;;8385:20;;;2656:15955;;;;8480:30;8429:12;;;2656:15955;;;;7618:17;;;2656:15955;8480:30;;:::i;:::-;8462:15;;;2656:15955;;;8462:15;8527:28;;;;;;8593;;;;:::i;:::-;7320:10;2656:15955;-1:-1:-1;;;;;2656:15955:8;;8636:55;;;;;2656:15955;;8636:55;2656:15955;;;;;;;;;;;;8636:55;;;2656:15955;8636:55;;2656:15955;7320:27;2656:15955;;;8636:55;;;;;;;;;;;8523:364;;;;7320:10;2656:15955;-1:-1:-1;;;;;2656:15955:8;;8899:43;;;;;2656:15955;;;;;8358:9;2656:15955;;;;;;;;;;;;8899:43;;2656:15955;8899:43;;2656:15955;;7320:27;2656:15955;;;;;;;;;;7589:3;2656:15955;;;;;;;;;8220:15;;2656:15955;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2656:15955:8;;;;;7320:10;8259:12;;2656:15955;:::i;:::-;;8193:14;;2656:15955;;;;;8329:10;;;2656:15955;;;;;;;;;;;7618:17;;;2656:15955;;;;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;8358:9;2656:15955;:::i;:::-;8899:43;;;;;;;;;;8523:364;2656:15955;;8960:45;2656:15955;8960:45;2656:15955;;8960:45;;;;;:::i;8899:43::-;;;;;:::i;:::-;2656:15955;;8899:43;;;;8636:55;;;;;:::i;:::-;2656:15955;;8636:55;;;;2656:15955;;;;8636:55;2656:15955;;;;;;;;;8636:55;2656:15955;;;8523:364;8713:28;;;8709:178;;8523:364;;;;;8709:178;8779:28;;;:::i;:::-;7320:10;2656:15955;-1:-1:-1;;;;;2656:15955:8;;8822:53;;;;;2656:15955;;8822:53;2656:15955;;;;;;;;;;;;8822:53;;;2656:15955;8822:53;;2656:15955;7320:27;2656:15955;;;8822:53;;;;;;;;;;8709:178;8822:53;;;;;:::i;:::-;2656:15955;;8822:53;;8709:178;;2656:15955;;;;-1:-1:-1;2656:15955:8;;;;;8358:9;;;2656:15955;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8358:9;;;2656:15955;;;;;;;;;;7320:10;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8358:9;;;;2656:15955;;;;;;;;8329:10;2656:15955;;;;;;;;;;;8329:10;2656:15955;;;;:::i;:::-;;;;;-1:-1:-1;;;2656:15955:8;;;;;7320:27;2656:15955;;;;;;-1:-1:-1;2656:15955:8;;;;;8259:12;;7320:10;8259:12;;2656:15955;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;;7320:10;8259:12;;2656:15955;;;;;;;;;;7320:10;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8259:12;7320:10;8259:12;;2656:15955;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;2656:15955:8;;;;;7320:27;2656:15955;;;;;;;;;;;;8220:15;;2656:15955;8220:15;;2656:15955;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;;;8220:15;;2656:15955;;;;;;;;;;;7320:10;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8220:15;2656:15955;8220:15;;2656:15955;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7746:57;;;;;;;;;;;;;;:::i;:::-;;;;;7614:81;-1:-1:-1;;;7672:11:8;;2656:15955;7444:11;7672;2656:15955;-1:-1:-1;;;2656:15955:8;;;;;7320:27;2656:15955;;7360:107;-1:-1:-1;;;7444:11:8;;2656:15955;7444:11;;7364:56;7385:35;;;;7364:56;;;2656:15955;-1:-1:-1;;;2656:15955:8;;;;;7320:27;2656:15955;;7320:27;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;3135:21;2656:15955;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;:::i;:::-;;;;;;18428:51;2656:15955;;;;;18450:10;2656:15955;;18436:10;:24;18428:51;:::i;:::-;2466:103:4;;:::i;:::-;2656:15955:8;;;;;;;;;13361:10;2656:15955;;;;;;;;;;;;;;13361:37;:51;2656:15955;;;13361:51;:::i;:::-;2656:15955;;;;13361:10;2656:15955;;;;;;;;;;13423:50;:36;2656:15955;;;13423:36;2656:15955;;;13423:50;:::i;:::-;2656:15955;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;:::i;:::-;;;;3429:70;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;;;;3379:43;2656:15955;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;:::i;:::-;17380:10;2656:15955;;;-1:-1:-1;;;17380:77:8;;2656:15955;;;;17380:77;;2656:15955;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;17380:77;;2656:15955;;;;;;;17380:77;;;;;;;;;;;2656:15955;-1:-1:-1;;;;;;2656:15955:8;;;;17506:15;2656:15955;;;;;;;;;;;;;;;;;;17915:9;;17884:27;;17470:21;;2656:15955;;;17574:21;;;;;;2656:15955;17502:184;;2656:15955;17718:15;17762:22;;2656:15955;17718:15;;17748:36;17744:105;;17502:184;17884:27;;:::i;:::-;2656:15955;;;;;;;17744:105;17801:36;;17744:105;;;17502:184;2656:15955;;;;17506:15;2656:15955;;;;;;;;;;;;17502:184;;;17380:77;;;;;;;;;;;;;;;:::i;:::-;;;2656:15955;17380:77;2656:15955;;;;;;;;;;17915:9;2656:15955;;17884:27;2656:15955;;:::i;:::-;17380:77;;;;;;;;;;;;;2656:15955;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;2656:15955:8;;-1:-1:-1;;;;;;2656:15955:8;;;;;;;-1:-1:-1;;;;;2656:15955:8;3052:40:0;2656:15955:8;;3052:40:0;2656:15955:8;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;:::i;:::-;11438:8;2656:15955;11380:23;;-1:-1:-1;;;;;2656:15955:8;11380:23;11434:19;;;;;;2656:15955;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;11747:17;;;11780:13;11795:19;;;;;;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;11816:3;11849:11;;;:::i;:::-;2656:15955;;;;;;;;;11518:10;2656:15955;;;;;;;;;;;;;;11879:31;2656:15955;11875:145;;11816:3;;2656:15955;;11780:13;;11875:145;2656:15955;;;11997:7;2656:15955;;;;11518:10;2656:15955;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11935:43;;;;:::i;:::-;;;;;;:::i;11997:7::-;11875:145;;;;2656:15955;;;;;:::i;:::-;;;;;;;;;;11455:3;11488:11;;;:::i;:::-;2656:15955;;;;;;;;;11518:10;2656:15955;;;;;;;;;;;;;;11518:31;2656:15955;11514:89;;11455:3;2656:15955;;11419:13;;11514:89;11574:13;;2656:15955;11574:13;;:::i;:::-;11514:89;;;;;2656:15955;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;3687:48;2656:15955;;;;;;;;;3687:48;;;2656:15955;3687:48;;2656:15955;;;;:::i;:::-;;;;;;:::i;:::-;3687:48;;;2656:15955;;;;;;;;;3687:48;;;2656:15955;:::i;:::-;;;;;;:::i;:::-;;3687:48;;2656:15955;3687:48;;;;2656:15955;3687:48;;;2656:15955;3687:48;;;2656:15955;3687:48;;;;2656:15955;3687:48;;;;2656:15955;;;;3687:48;;;;;2656:15955;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;:::i;:::-;;;;;;12967:6;2656:15955;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;14028:15;2656:15955;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;2466:103:4;;:::i;:::-;2656:15955:8;;9202:14;9198:69;;9297:2;9281:18;;;;:41;;;2656:15955;9277:103;;2656:15955;;;9395:11;2656:15955;;;;;;;;9394:22;9390:81;;2656:15955;;;9514:6;2656:15955;;;;;9559:15;;;;2656:15955;;;;9545:29;9541:94;;9672:17;;;:31;2656:15955;;;;9672:31;:::i;:::-;9737:20;;;2656:15955;;9720:37;;9716:102;;2656:15955;;;;-1:-1:-1;;;;;2656:15955:8;9830:33;;;;;2656:15955;;-1:-1:-1;;;9830:33:8;;9841:10;2656:15955;9830:33;;2656:15955;;;;;;;;;;;;;;;;;;9830:33;;;;;;;;2656:15955;;;;10008:40;2656:15955;;;9939:37;;;;:::i;10008:40::-;2656:15955;;9841:10;2656:15955;;10106:10;2656:15955;;;;;;;;;;;;;;10179:20;2656:15955;10179:25;10175:583;2656:15955;;;;10382:14;;;2656:15955;;;10619:6;2656:15955;;;;;10619:6;2656:15955;;;;;;;10585:41;:15;;:41;:::i;:::-;2656:15955;;;;;;:::i;:::-;9841:10;2656:15955;;;10256:419;;2656:15955;;;;10256:419;2656:15955;10256:419;;;;;:::i;:::-;2656:15955;;10426:15;2656:15955;10426:15;2656:15955;10426:15;2656:15955;10426:15;;2656:15955;:::i;:::-;;;;:::i;:::-;;10256:419;;2656:15955;;;;10256:419;;2656:15955;;;;;10256:419;;;2656:15955;;;;10256:419;;;2656:15955;;;;10256:419;;2656:15955;;10256:419;;;2656:15955;9841:10;2656:15955;;10106:10;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10382:14;2656:15955;;;:::i;:::-;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;:::i;:::-;;;;;;10175:583;2656:15955;;;;;;;;;;;10256:419;2656:15955;;;9559:15;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9737:20;2656:15955;;;;10256:419;;2656:15955;9672:17;2656:15955;;;;10256:419;;2656:15955;;;;;;;;;;;;;;10770:23;10809:10;2656:15955;9559:15;2656:15955;10804:184;10821:23;;;;;;10804:184;11004:11;;11000:73;;10804:184;9841:10;;2656:15955;;11083:13;2656:15955;;;;;;;;;;;;;;;;;11126:28;2656:15955;;;;11126:28;2656:15955;;;;11126:28;:::i;:::-;2656:15955;;11223:14;2656:15955;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11172:66;2656:15955;9841:10;11172:66;;2656:15955;;;;;;-1:-1:-1;;;2656:15955:8;;;;;;;;11000:73;-1:-1:-1;;;2656:15955:8;;;;;;;;;;9559:15;2656:15955;;:::i;:::-;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;9841:10;2656:15955;;;;;;11000:73;;;2656:15955;-1:-1:-1;;;2656:15955:8;;;;;;;;10846:3;10870:15;;;:::i;:::-;2656:15955;;;;;;;;-1:-1:-1;;;;;2656:15955:8;9841:10;10870:29;10866:111;;2656:15955;;10809:10;;10866:111;10920:17;;2656:15955;10956:5;;;2656:15955;;;;-1:-1:-1;2656:15955:8;;;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;9559:15;2656:15955;;;;;10256:419;2656:15955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;2656:15955:8;;;;;;;;10175:583;-1:-1:-1;;;10715:31:8;;2656:15955;10715:31;;9830:33;;;;;:::i;:::-;2656:15955;;9830:33;;;;9716:102;-1:-1:-1;;;9781:25:8;;2656:15955;15734:25;9781;9541:94;-1:-1:-1;;;9598:25:8;;2656:15955;15734:25;9598;9390:81;-1:-1:-1;;;9440:19:8;;2656:15955;9440:19;;9277:103;-1:-1:-1;;;9346:22:8;;2656:15955;9346:22;;9281:41;9303:19;9319:3;9303:19;;;9281:41;;9198:69;-1:-1:-1;;;9240:15:8;;2656:15955;9240:15;;2656:15955;;;;;;;;;;;;;3254:25;2656:15955;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;3286:29;2656:15955;3286:29;;;;;2656:15955;3286:29;;;:::i;:::-;2656:15955;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;2466:103:4;;:::i;:::-;14737:10:8;2656:15955;;;-1:-1:-1;;;14737:83:8;;2656:15955;14737:83;;2656:15955;;;14799:10;2656:15955;;;;;14737:83;;2656:15955;;;;;;-1:-1:-1;;;;;2656:15955:8;14737:83;;;;;;;;;;;2656:15955;14835:18;;;;2656:15955;;;;;;;14831:92;;14799:10;2656:15955;;14971:15;2656:15955;;;;;;;;;;;;;;14971:41;14967:196;2656:15955;;;15486:9;15455:27;15045:21;;;2656:15955;14967:196;15197:15;2656:15955;15241:22;;2656:15955;15197:15;;15227:36;15223:105;;15455:27;;:::i;:::-;2656:15955;15512:18;;;15508:77;;15621:23;;:39;:23;;2656:15955;15621:39;:::i;:::-;2656:15955;;15677:33;;15673:98;;14799:10;2656:15955;;14971:15;2656:15955;;;;;;;;;;15197:15;2656:15955;;;;;;;;;;;;15848:41;;;;;2656:15955;;-1:-1:-1;;;15848:41:8;;14799:10;2656:15955;15848:41;;2656:15955;;;;;;;;;;;;;;;;;;15848:41;;;;;;;;14967:196;2656:15955;15902:34;2656:15955;;;15902:34;:::i;15848:41::-;;;;;;;;:::i;:::-;;;;;15673:98;-1:-1:-1;;;15734:25:8;;2656:15955;15734:25;;15508:77;-1:-1:-1;;;15554:19:8;;2656:15955;15554:19;;14967:196;14799:10;2656:15955;;14971:15;2656:15955;;;;;;;;;;15486:9;15455:27;2656:15955;;;;14967:196;;14831:92;-1:-1:-1;;;14898:13:8;;2656:15955;14898:13;;2656:15955;-1:-1:-1;;;2656:15955:8;;;;;;;;14737:83;;;;;;;;;;;;;;:::i;:::-;;;;2656:15955;;;;;;;;;:::i;:::-;14737:83;;;;;;;;2656:15955;;;;;;;;;;;;;;;;;18236:12;2656:15955;;;;;;;;18236:12;2656:15955;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;-1:-1:-1;2656:15955:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;18538:50;2656:15955;;;;;18560:9;2656:15955;;18546:10;:23;18538:50;:::i;:::-;2466:103:4;;:::i;:::-;2656:15955:8;;;14173:6;2656:15955;;;;;;14228:10;2656:15955;14247:12;;;2656:15955;;;-1:-1:-1;;;14228:32:8;;2656:15955;14228:32;;2656:15955;;;;;;;;14228:32;;2656:15955;;-1:-1:-1;;;;;2656:15955:8;14228:32;;;;;;;2656:15955;14228:32;;;2656:15955;14324:14;2656:15955;14324:14;2656:15955;14324:18;;2656:15955;;14423:4;2656:15955;;;;;14423:4;2656:15955;;;14423:4;2656:15955;14431:3;14398:37;2656:15955;;14398:37;;:::i;:::-;2656:15955;;;;14173:6;2656:15955;;18560:9;2656:15955;;;14454:31;2656:15955;;;;14173:6;2656:15955;;14535:75;18560:9;2656:15955;;;14535:31;2656:15955;;;;14173:6;2656:15955;;14582:28;2656:15955;;;14582:28;2656:15955;14535:75;;:::i;:::-;2656:15955;;;14173:6;2656:15955;;14505:26;2656:15955;;;14505:26;2656:15955;;;;;;;;;-1:-1:-1;;;2656:15955:8;;;;;;;;14228:32;2656:15955;;;-1:-1:-1;;;2656:15955:8;;;;;;;14228:32;2656:15955;14228:32;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2656:15955;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;:::i;:::-;;;;3506:73;2656:15955;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;:::o;:::-;;;;;3286:29;2656:15955;;;;;;3286:29;-1:-1:-1;2656:15955:8;;-1:-1:-1;2656:15955:8;;;-1:-1:-1;2656:15955:8;:::o;:::-;;;;;;;;;;;;;11438:8;2656:15955;;;;;;11438:8;-1:-1:-1;2656:15955:8;;-1:-1:-1;2656:15955:8;;;-1:-1:-1;2656:15955:8;:::o;:::-;;;;;;;;-1:-1:-1;;2656:15955:8;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;2656:15955:8;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;-1:-1:-1;2656:15955:8;;;;;-1:-1:-1;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;2656:15955:8;;;;;;;;-1:-1:-1;2656:15955:8;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;:::o;:::-;;;;-1:-1:-1;2656:15955:8;;;;;-1:-1:-1;2656:15955:8;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;2656:15955:8;;;;;;-1:-1:-1;;2656:15955:8;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;2656:15955:8;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;2656:15955:8;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2656:15955:8;;;;;;;;;;;;-1:-1:-1;;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;2656:15955:8;;;;;;;-1:-1:-1;2656:15955:8;;;;;;;;;-1:-1:-1;2656:15955:8;;;;-1:-1:-1;2656:15955:8;;;;-1:-1:-1;2656:15955:8;;;;-1:-1:-1;2656:15955:8;;;;-1:-1:-1;2656:15955:8;;;;-1:-1:-1;2656:15955:8;;;;;;:::o;:::-;-1:-1:-1;;2656:15955:8;;;;;;;:::o;:::-;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;2656:15955:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;-1:-1:-1;;2656:15955:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2656:15955:8;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;2575:307:4:-;1899:1;2702:7;2656:15955:8;2702:18:4;2698:86;;1899:1;2702:7;2656:15955:8;2575:307:4:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;1796:162:0;2656:15955:8;;-1:-1:-1;;;;;2656:15955:8;735:10:2;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:2;1901:40:0;2656:15955:8;;-1:-1:-1;1901:40:0"},"methodIdentifiers":{"LastVaultClaimTime(address,uint256)":"0db981a0","NextLpClaimTime(address,uint256)":"7a728e7f","bqBTC()":"34808ec3","bqBTCAddress()":"996b8a6f","claimPayoutForLP(uint256)":"2d8a340c","clamPayoutForVault(uint256)":"a650c232","coverCount()":"feb0b8f5","coverExists(uint256)":"782ea619","coverFeeBalance()":"357917b7","coverIds(uint256)":"fb643583","covers(uint256)":"6299df6c","createCover(uint256,string,uint8,string,string,uint256,uint256,uint256)":"9732bdb5","deleteExpiredUserCovers(address)":"bfc664f3","getAllAvailableCovers()":"93b1ad38","getAllParticipants()":"195ec9ee","getAllUserCovers(address)":"649718b2","getCoverFeeBalance()":"609c7604","getCoverInfo(uint256)":"62858bfa","getDepositClaimableDays(address,uint256)":"73cce3ee","getLastClaimTime(address,uint256)":"10525814","getUserCoverInfo(address,uint256)":"cadcb471","getUserParticipation(address)":"46f84795","governance()":"5aa6e675","lpAddress()":"9b4dc8cc","lpContract()":"8acee3cf","owner()":"8da5cb5b","participants(uint256)":"35c1d349","participation(address)":"96f3a8ad","purchaseCover(uint256,uint256,uint256,uint256)":"602710a4","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateCover(uint256,string,uint8,string,string,uint256,uint256,uint256)":"8de4d101","updateMaxAmount(uint256)":"106b5da1","updateUserCoverValue(address,uint256,uint256)":"7ceb4a69","userCovers(address,uint256)":"9e7b399e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lpContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bqBTC\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CoverNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientPoolBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCoverDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LpNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoClaimableReward\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedCoverType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserHaveAlreadyPurchasedCover\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongPool\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"}],\"name\":\"CoverCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coverValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coverFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"}],\"name\":\"CoverPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"}],\"name\":\"CoverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PayoutClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LastVaultClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NextLpClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bqBTC\",\"outputs\":[{\"internalType\":\"contract IbqBTC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bqBTCAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"claimPayoutForLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"clamPayoutForVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"coverExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverFeeBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"coverIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"covers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"_riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_coverName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"createCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deleteExpiredUserCovers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAvailableCovers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllParticipants\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAllUserCovers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"coverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct CoverLib.GenericCoverInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCoverFeeBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"}],\"name\":\"getCoverInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getDepositClaimableDays\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getLastClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"}],\"name\":\"getUserCoverInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"coverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct CoverLib.GenericCoverInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserParticipation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpContract\",\"outputs\":[{\"internalType\":\"contract ILP\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"participation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverFee\",\"type\":\"uint256\"}],\"name\":\"purchaseCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"_riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"updateCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"}],\"name\":\"updateMaxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimPaid\",\"type\":\"uint256\"}],\"name\":\"updateUserCoverValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userCovers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"coverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsuranceCover.sol\":\"InsuranceCover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/InsuranceCover.sol\":{\"keccak256\":\"0x2409da65a48fa8618ec7ac08911fe2132a77a8cc12dc50d224f44438b0755229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e359f18544fba8fdeedf4d0338c55ad0e2e182458aeab867d18278d6eb51d1ce\",\"dweb:/ipfs/QmdZ8JRGgKkrrUU5yrwkYuu7sFLZBdmXMAMJ2TqchjutZd\"]}},\"version\":1}"}},"contracts/InsurancePool.sol":{"ICover":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getDepositClaimableDays","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getLastClaimTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"}],"name":"updateMaxAmount","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDepositClaimableDays(address,uint256)":"73cce3ee","getLastClaimTime(address,uint256)":"10525814","updateMaxAmount(uint256)":"106b5da1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getDepositClaimableDays\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getLastClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"}],\"name\":\"updateMaxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsurancePool.sol\":\"ICover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/InsurancePool.sol\":{\"keccak256\":\"0x0afb6d69bd7e67c1b4d78c6101eccc28735663dcac552e65898c05b976a5cb72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6866aeebe932c790cac5e0a95772e857c54b83f1fc45692bdf5af67e163fe8e8\",\"dweb:/ipfs/QmbVYktyqVry8LYDRNGncUweGNs2XDe7ig6eSLDTJXrpLm\"]}},\"version\":1}"},"IGov":{"abi":[{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"getProposalDetails","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"votesFor","type":"uint256"},{"internalType":"uint256","name":"votesAgainst","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"timeleft","type":"uint256"},{"internalType":"enum IGov.ProposalStaus","name":"status","type":"uint8"},{"internalType":"bool","name":"executed","type":"bool"},{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"string","name":"txHash","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"claimAmount","type":"uint256"}],"internalType":"struct IGov.ProposalParams","name":"proposalParam","type":"tuple"}],"internalType":"struct IGov.Proposal","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"setUserVaultDepositToZero","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"updateProposalStatusToClaimed","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getProposalDetails(uint256)":"3b4d01a7","setUserVaultDepositToZero(uint256,address)":"1f8be73c","updateProposalStatusToClaimed(uint256)":"f1b4bf9d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeleft\",\"type\":\"uint256\"},{\"internalType\":\"enum IGov.ProposalStaus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"txHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IGov.ProposalParams\",\"name\":\"proposalParam\",\"type\":\"tuple\"}],\"internalType\":\"struct IGov.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setUserVaultDepositToZero\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"updateProposalStatusToClaimed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsurancePool.sol\":\"IGov\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/InsurancePool.sol\":{\"keccak256\":\"0x0afb6d69bd7e67c1b4d78c6101eccc28735663dcac552e65898c05b976a5cb72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6866aeebe932c790cac5e0a95772e857c54b83f1fc45692bdf5af67e163fe8e8\",\"dweb:/ipfs/QmbVYktyqVry8LYDRNGncUweGNs2XDe7ig6eSLDTJXrpLm\"]}},\"version\":1}"},"IVault":{"abi":[{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserVaultDeposit","outputs":[{"components":[{"internalType":"address","name":"lp","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"enum CoverLib.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"daysLeft","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"}],"internalType":"struct IVault.VaultDeposit","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"}],"name":"getVault","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"vaultName","type":"string"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct IVault.Pool[]","name":"pools","type":"tuple[]"},{"internalType":"uint256","name":"minInv","type":"uint256"},{"internalType":"uint256","name":"maxInv","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"internalType":"struct IVault.Vault","name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getUserVaultDeposit(uint256,address)":"57656486","getVault(uint256)":"9403b634"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserVaultDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"daysLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.VaultDeposit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"getVault\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"vaultName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct IVault.Pool[]\",\"name\":\"pools\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"minInv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct IVault.Vault\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsurancePool.sol\":\"IVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/InsurancePool.sol\":{\"keccak256\":\"0x0afb6d69bd7e67c1b4d78c6101eccc28735663dcac552e65898c05b976a5cb72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6866aeebe932c790cac5e0a95772e857c54b83f1fc45692bdf5af67e163fe8e8\",\"dweb:/ipfs/QmbVYktyqVry8LYDRNGncUweGNs2XDe7ig6eSLDTJXrpLm\"]}},\"version\":1}"},"IbqBTC":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"bqMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"bqMint(address,uint256)":"e2094eda","burn(address,uint256)":"9dc29fac","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bqMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsurancePool.sol\":\"IbqBTC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/InsurancePool.sol\":{\"keccak256\":\"0x0afb6d69bd7e67c1b4d78c6101eccc28735663dcac552e65898c05b976a5cb72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6866aeebe932c790cac5e0a95772e857c54b83f1fc45692bdf5af67e163fe8e8\",\"dweb:/ipfs/QmbVYktyqVry8LYDRNGncUweGNs2XDe7ig6eSLDTJXrpLm\"]}},\"version\":1}"},"InsurancePool":{"abi":[{"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"address","name":"_bqBTC","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"},{"indexed":false,"internalType":"address","name":"","type":"address"}],"name":"ClaimAttempt","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"string","name":"pool","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"pool","type":"string"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"poolName","type":"string"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"apy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_minPeriod","type":"uint256"}],"name":"PoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"pool","type":"string"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ICoverContract","outputs":[{"internalType":"contract ICover","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"IGovernanceContract","outputs":[{"internalType":"contract IGov","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"IVaultContract","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover","name":"_cover","type":"tuple"}],"name":"addPoolCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"bqBTC","outputs":[{"internalType":"contract IbqBTC","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bqBTCAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"claimProposalFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"coverContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"enum CoverLib.RiskType","name":"_riskType","type":"uint8"},{"internalType":"string","name":"_poolName","type":"string"},{"internalType":"uint256","name":"_apy","type":"uint256"},{"internalType":"uint256","name":"_minPeriod","type":"uint256"},{"internalType":"uint8","name":"_leverage","type":"uint8"},{"internalType":"uint256","name":"investmentarm","type":"uint256"},{"internalType":"enum CoverLib.AssetDepositType","name":"adt","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"name":"createPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"deactivatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"enum CoverLib.DepositType","name":"pdt","type":"uint8"},{"internalType":"enum CoverLib.AssetDepositType","name":"adt","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"internalType":"struct CoverLib.DepositParams","name":"depositParam","type":"tuple"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getAllParticipants","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllPools","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct CoverLib.Pool[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPool","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct CoverLib.Pool","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPoolCovers","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPoolTVL","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"getPoolsByAddress","outputs":[{"components":[{"internalType":"string","name":"poolName","type":"string"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"}],"internalType":"struct InsurancePool.PoolInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"getUserDeposit","outputs":[{"components":[{"internalType":"address","name":"lp","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"enum CoverLib.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"daysLeft","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"},{"internalType":"enum CoverLib.DepositType","name":"pdt","type":"uint8"}],"internalType":"struct InsurancePool.Deposits","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserParticipation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"__poolPercentageSplit","type":"uint256"}],"name":"increasePercentageSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"participants","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"participation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}],"name":"poolActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"poolWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pools","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"__poolPercentageSplit","type":"uint256"}],"name":"reducePercentageSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_coverContract","type":"address"}],"name":"setCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_governance","type":"address"}],"name":"setGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_vaultContract","type":"address"}],"name":"setVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_apy","type":"uint256"},{"internalType":"uint256","name":"_minPeriod","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"coverName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"string","name":"chains","type":"string"},{"internalType":"uint256","name":"capacity","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"capacityAmount","type":"uint256"},{"internalType":"uint256","name":"coverValues","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"string","name":"CID","type":"string"}],"internalType":"struct CoverLib.Cover","name":"_cover","type":"tuple"}],"name":"updatePoolCovers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vaultContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"vaultWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"enum CoverLib.DepositType","name":"pdt","type":"uint8"}],"name":"withdrawUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":296,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x10D JUMPI PUSH1 0x1F PUSH2 0x43F3 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x112 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x10D JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x128 JUMP JUMPDEST SWAP3 ADD PUSH2 0x128 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 DUP4 OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x42B6 SWAP1 DUP2 PUSH2 0x13D DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10D JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68BCD8D EQ PUSH2 0x3382 JUMPI DUP1 PUSH4 0x195EC9EE EQ PUSH2 0x32B6 JUMPI DUP1 PUSH4 0x2274346B EQ PUSH2 0x328D JUMPI DUP1 PUSH4 0x248A75B7 EQ PUSH2 0x3264 JUMPI DUP1 PUSH4 0x25F11E8D EQ PUSH2 0x3230 JUMPI DUP1 PUSH4 0x2607B539 EQ PUSH2 0x29F6 JUMPI DUP1 PUSH4 0x29BA7BB2 EQ PUSH2 0x29CD JUMPI DUP1 PUSH4 0x31866763 EQ PUSH2 0x2567 JUMPI DUP1 PUSH4 0x34808EC3 EQ PUSH2 0x253E JUMPI DUP1 PUSH4 0x35C1D349 EQ PUSH2 0x24FC JUMPI DUP1 PUSH4 0x3DC66AD3 EQ PUSH2 0x219C JUMPI DUP1 PUSH4 0x46F84795 EQ PUSH2 0x14B7 JUMPI DUP1 PUSH4 0x4E055244 EQ PUSH2 0x1EEE JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x1EC5 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x1DD1 JUMPI DUP1 PUSH4 0x6D8E6574 EQ PUSH2 0x1AF2 JUMPI DUP1 PUSH4 0x6F60537D EQ PUSH2 0x1AC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A6C JUMPI DUP1 PUSH4 0x7C366CC6 EQ PUSH2 0x198F JUMPI DUP1 PUSH4 0x7EB111F0 EQ PUSH2 0x1876 JUMPI DUP1 PUSH4 0x83BC6357 EQ PUSH2 0x1549 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1520 JUMPI DUP1 PUSH4 0x8F244630 EQ PUSH2 0x14F1 JUMPI DUP1 PUSH4 0x96F3A8AD EQ PUSH2 0x14B7 JUMPI DUP1 PUSH4 0x996B8A6F EQ PUSH2 0x148E JUMPI DUP1 PUSH4 0x9ABD9B05 EQ PUSH2 0x143A JUMPI DUP1 PUSH4 0x9FD36B15 EQ PUSH2 0x13DF JUMPI DUP1 PUSH4 0xA14764D0 EQ PUSH2 0x1344 JUMPI DUP1 PUSH4 0xA4948D85 EQ PUSH2 0x12E5 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x11F6 JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x10D8 JUMPI DUP1 PUSH4 0xB5D90C28 EQ PUSH2 0x10AF JUMPI DUP1 PUSH4 0xC7AA9874 EQ PUSH2 0x1021 JUMPI DUP1 PUSH4 0xD86C0444 EQ PUSH2 0xEC9 JUMPI DUP1 PUSH4 0xD88FF1F4 EQ PUSH2 0xCB9 JUMPI DUP1 PUSH4 0xE35F8129 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xF525CB68 EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xF6E80558 EQ PUSH2 0x6CC JUMPI PUSH4 0xFB839DDA EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1F0 PUSH2 0x4215 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BB2B243 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x120 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x6AD JUMPI JUMPDEST POP ADD SWAP1 DUP2 MLOAD ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x2500ED8D PUSH1 0xE2 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3E0 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x27C DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x285 DUP2 PUSH2 0x34F1 JUMP JUMPDEST SUB PUSH2 0x3B8 JUMPI PUSH1 0xE0 ADD MLOAD SWAP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x36C JUMPI JUMPDEST POP PUSH2 0x31B SWAP2 PUSH2 0x2E4 PUSH2 0x120 SWAP3 PUSH2 0x3B7B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BB2B243 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x360 JUMPI PUSH2 0x331 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x359 JUMPI JUMPDEST PUSH2 0x34A DUP2 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x4192 JUMP JUMPDEST POP CODESIZE PUSH2 0x32A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3B0 JUMPI JUMPDEST DUP2 PUSH2 0x387 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3AB JUMPI PUSH2 0x31B SWAP2 PUSH2 0x2E4 PUSH2 0x3A2 PUSH2 0x120 SWAP4 PUSH2 0x3980 JUMP JUMPDEST SWAP3 POP POP SWAP2 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x37A JUMP JUMPDEST POP PUSH2 0x31B SWAP2 PUSH2 0x3DB PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x120 SWAP7 MLOAD CALLER GAS CALL PUSH2 0x3D5 PUSH2 0x3AFF JUMP JUMPDEST POP PUSH2 0x3B2F JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST SWAP1 RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0x3F0 DUP2 DUP5 PUSH2 0x3656 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x664 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x64C JUMPI ADD SWAP1 PUSH2 0x100 DUP3 DUP5 SUB SLT PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x100 DUP5 ADD DUP5 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x650 JUMPI PUSH1 0x40 MSTORE DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x64C JUMPI DUP2 PUSH2 0x45C SWAP2 DUP6 ADD PUSH2 0x4150 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x64C JUMPI DUP4 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x64C JUMPI DUP2 MLOAD SWAP2 PUSH2 0x48E DUP4 PUSH2 0x3A02 JUMP JUMPDEST SWAP3 PUSH2 0x49C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3656 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x648 JUMPI PUSH1 0x20 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x517 JUMPI POP POP POP POP POP PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x514 JUMPI POP PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x509 SWAP1 PUSH1 0xE0 ADD PUSH2 0x413C JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE CODESIZE PUSH2 0x26B JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x644 JUMPI DUP3 ADD PUSH2 0x1E0 DUP2 DUP8 SUB PUSH1 0x1F NOT ADD SLT PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x545 DUP3 PUSH2 0x35CB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x640 JUMPI DUP8 PUSH1 0x20 PUSH2 0x56E SWAP3 DUP5 ADD ADD PUSH2 0x4150 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x640 JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x5D2 PUSH2 0x140 DUP3 ADD PUSH2 0x3980 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x640 JUMPI PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1E0 SWAP1 PUSH2 0x617 PUSH2 0x1C0 DUP3 ADD PUSH2 0x413C JUMP JUMPDEST PUSH2 0x1A0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x63C JUMPI PUSH2 0x1C0 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x4B9 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20616374697665207769746864726177616C20666F722075736572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x6C6 SWAP2 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x359 JUMPI PUSH2 0x34A DUP2 DUP4 PUSH2 0x3656 JUMP JUMPDEST CODESIZE PUSH2 0x234 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x72C PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x734 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH2 0x7BB PUSH2 0x4215 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x3B4D01A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xB55 JUMPI JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD SWAP1 PUSH1 0xC0 DUP4 ADD MLOAD SWAP3 PUSH1 0x5 DUP5 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x2 PUSH1 0x0 SWAP5 EQ SWAP1 DUP2 PUSH2 0xB31 JUMPI JUMPDEST POP ISZERO PUSH2 0xAF4 JUMPI PUSH1 0xA0 DUP3 ADD DUP1 MLOAD DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xAB8 JUMPI PUSH2 0x853 PUSH1 0xFF PUSH1 0x9 DUP4 ADD SLOAD AND PUSH2 0x3CCA JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD SWAP4 PUSH1 0xC0 DUP7 ADD SWAP2 DUP3 MLOAD DUP7 LT PUSH2 0xA73 JUMPI PUSH2 0x887 DUP9 SWAP7 DUP5 MLOAD PUSH2 0x87D PUSH1 0x8 DUP9 ADD SWAP2 DUP3 SLOAD PUSH2 0x3973 JUMP JUMPDEST SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH2 0x39A0 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x893 DUP5 MLOAD PUSH2 0x3BBF JUMP JUMPDEST SWAP4 DUP6 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x911 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x8B6 DUP2 DUP9 PUSH2 0x39C5 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x63C JUMPI DUP9 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x906 JUMPI DUP9 PUSH1 0x1 SWAP4 PUSH2 0x8F6 JUMPI JUMPDEST POP POP ADD PUSH2 0x896 JUMP JUMPDEST PUSH2 0x8FF SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP11 DUP9 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP4 POP SWAP2 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x648 JUMPI DUP6 SWAP4 PUSH1 0x24 DUP6 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP4 DUP5 SWAP3 PUSH4 0xF1B4BF9D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xA68 JUMPI PUSH32 0xEEF4955E8B18DCB6D1C19905B7B86E5FE56138AD1CE2C5E540CE4E959312F511 SWAP4 DUP7 PUSH1 0x60 SWAP5 PUSH2 0xA58 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP5 MLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND DUP2 MLOAD DUP2 EXTCODESIZE ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP2 DUP5 DUP4 ISZERO PUSH2 0xA48 JUMPI PUSH32 0x415071086C9EA63F7F39884C21A8AF430AF53BFD511A362DFF69CABCB1B8BCC1 SWAP4 PUSH2 0xA38 JUMPI JUMPDEST POP POP MLOAD SWAP2 PUSH2 0xA25 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x1 PUSH1 0x40 DUP5 ADD SWAP2 ADD PUSH2 0x3881 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD MSTORE DUP1 CALLER SWAP4 SUB SWAP1 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xA41 SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0xA61 SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP9 DUP7 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320696E2074686520706F6F6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BDD0818481D985B1A59081C1C9BDC1BDCD85B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x141C9BDC1BDCD85B081B9BDD08185C1C1C9BDD9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE0 SWAP2 POP ADD MLOAD ISZERO ISZERO DUP5 PUSH2 0x81B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0xB66 DUP2 DUP5 PUSH2 0x3656 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x664 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x64C JUMPI ADD SWAP2 PUSH2 0x120 DUP4 DUP3 SUB SLT PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xB9E DUP5 PUSH2 0x363A JUMP JUMPDEST DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xA54 JUMPI PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xBF3 PUSH1 0xE0 DUP3 ADD PUSH2 0x3980 JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xA54 JUMPI ADD SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC26 DUP5 PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0xC2F DUP4 PUSH2 0x413C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x664 JUMPI PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x664 JUMPI DUP3 PUSH2 0xC6D SWAP2 DUP6 ADD PUSH2 0x4150 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x514 JUMPI POP DUP3 SWAP2 PUSH2 0xC96 SWAP2 PUSH1 0xC0 SWAP5 ADD PUSH2 0x4150 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE SWAP1 DUP3 PUSH2 0x7F7 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x6 SLOAD PUSH2 0xCD6 DUP2 PUSH2 0x3A02 JUMP JUMPDEST SWAP1 PUSH2 0xCE4 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0xCF3 DUP3 PUSH2 0x3A02 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xEB2 JUMPI POP POP PUSH1 0x1 JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD73 JUMPI DUP3 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xD44 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0xD63 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x34FB JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0xD35 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x8 DUP8 ADD SLOAD SWAP2 PUSH1 0x9 DUP9 ADD SLOAD PUSH1 0xFF AND SWAP4 PUSH1 0xA DUP10 ADD SLOAD SWAP6 PUSH1 0xB DUP11 ADD SLOAD SWAP8 PUSH1 0xC DUP12 ADD SLOAD SWAP10 DUP11 PUSH1 0xA8 SHR PUSH1 0xFF AND SWAP12 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP1 PUSH2 0xDDB DUP3 PUSH2 0x35CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 DUP2 SWAP5 ADD SWAP1 PUSH2 0xDF0 SWAP2 PUSH2 0x3881 JUMP JUMPDEST SUB PUSH2 0xDFB SWAP1 DUP4 PUSH2 0x3656 JUMP JUMPDEST PUSH1 0x20 ADD MSTORE DUP14 PUSH2 0xE09 DUP3 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 ADD MSTORE PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF DUP2 AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0xE65 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0x0 NOT DUP2 ADD SWAP2 DUP2 DUP4 GT PUSH2 0xE9C JUMPI DUP3 PUSH2 0xE91 SWAP2 PUSH2 0xE8A PUSH2 0xE97 SWAP6 DUP9 PUSH2 0x39C5 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x39C5 JUMP JUMPDEST POP PUSH2 0x39F3 JUMP JUMPDEST PUSH2 0xD03 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0xEBD PUSH2 0x3904 JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0xCF7 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xEEB PUSH2 0x4237 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xFD1 JUMPI DUP2 ISZERO PUSH2 0xF9E JUMPI DUP1 ISZERO PUSH2 0xF60 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x4 ADD DUP4 SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x17B8644F386D1C7C7138EF98B3C8035622BBE94D7BE9B26F71D2654A547C2943 SWAP2 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081B5A5B9A5B5D5B481C195C9A5BD9 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x496E76616C696420415059 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F74206578697374206F7220697320696E61637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7665 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x102F CALLDATASIZE PUSH2 0x3736 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x109B JUMPI JUMPDEST PUSH2 0x104D SWAP1 PUSH2 0x3D0B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x1085 JUMPI DUP3 PUSH2 0x107D SWAP2 PUSH1 0x1 PUSH2 0x1083 SWAP6 ADD DUP2 SSTORE PUSH2 0x3D56 JUMP JUMPDEST SWAP1 PUSH2 0x3D72 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1044 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 PUSH1 0x1 DUP4 ADD SWAP1 PUSH2 0x110F SWAP2 PUSH2 0x3881 JUMP JUMPDEST SUB PUSH2 0x111A SWAP1 DUP5 PUSH2 0x3656 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x3 DUP2 ADD SLOAD SWAP1 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x8 DUP5 ADD SLOAD SWAP1 PUSH1 0x9 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP3 PUSH1 0xA DUP7 ADD SLOAD SWAP5 PUSH1 0xB DUP8 ADD SLOAD SWAP7 PUSH1 0xC ADD SLOAD SWAP8 DUP9 PUSH1 0xA8 SHR PUSH1 0xFF AND SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE DUP14 PUSH1 0x20 DUP2 ADD PUSH2 0x1E0 SWAP1 MSTORE PUSH2 0x1E0 ADD PUSH2 0x1185 SWAP2 PUSH2 0x34C2 JUMP JUMPDEST SWAP12 DUP14 PUSH2 0x1190 DUP3 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 ADD MSTORE PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF DUP2 AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x11EC DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x1C0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x120F PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1217 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12A7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1258 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 OR PUSH1 0x7 SSTORE PUSH1 0xA DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636520616464726573732063616E6E6F74206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11DBDD995C9B985B98D948185B1C9958591E481CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x12F3 CALLDATASIZE PUSH2 0x3720 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1330 JUMPI JUMPDEST PUSH2 0x1311 SWAP1 PUSH2 0x3D0B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x132C PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x39A0 JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1308 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x1352 CALLDATASIZE PUSH2 0x3736 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x13CB JUMPI JUMPDEST PUSH2 0x1370 SWAP1 PUSH2 0x3D0B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1083 JUMPI DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x13A0 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3D56 JUMP JUMPDEST POP SLOAD DUP3 MLOAD EQ PUSH2 0x13B1 JUMPI PUSH1 0x1 ADD PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x107D SWAP1 PUSH2 0x1083 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3D56 JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1367 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x13ED CALLDATASIZE PUSH2 0x3720 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1426 JUMPI JUMPDEST PUSH2 0x140B SWAP1 PUSH2 0x3D0B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x132C PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x3973 JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1402 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1456 PUSH2 0x4237 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1473 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x3CCA JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x14D8 PUSH2 0x3677 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1562 PUSH2 0x3677 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x1579 PUSH2 0x4215 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1862 JUMPI JUMPDEST ISZERO PUSH2 0x181E JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x15CF DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x1650 PUSH1 0x1 DUP5 ADD SWAP4 DUP5 SLOAD SWAP1 PUSH2 0x15F1 DUP3 ISZERO ISZERO PUSH2 0x3A19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP3 ADD SWAP2 PUSH2 0x1620 PUSH1 0x7 DUP5 SLOAD SWAP3 PUSH2 0x1616 PUSH1 0xFF DUP6 AND PUSH2 0x1610 DUP2 PUSH2 0x34E7 JUMP JUMPDEST ISZERO PUSH2 0x3A6F JUMP JUMPDEST ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x1636 PUSH1 0x5 DUP8 ADD SWAP2 DUP3 SLOAD PUSH2 0x39A0 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x64 PUSH2 0x1649 DUP3 PUSH1 0xB DUP10 ADD SLOAD PUSH2 0x398D JUMP JUMPDEST DIV SWAP1 PUSH2 0x39A0 JUMP JUMPDEST PUSH2 0x1661 PUSH1 0xFF PUSH1 0xC DUP8 ADD SLOAD AND DUP3 PUSH2 0x398D JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SSTORE PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD PUSH2 0x1684 DUP2 PUSH2 0x3A02 JUMP JUMPDEST SWAP5 PUSH2 0x1692 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x3656 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1754 JUMPI POP POP POP POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1724 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x16D4 DUP2 DUP8 PUSH2 0x39C5 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1713 JUMPI JUMPDEST POP ADD PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171E SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP7 PUSH2 0x170C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4261 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x174A DUP6 SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 ADD SWAP1 DUP4 PUSH2 0x39D9 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1767 DUP2 PUSH2 0x361E JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1785 DUP2 PUSH2 0x177E DUP2 DUP10 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST SUB DUP3 PUSH2 0x3656 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x179A DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x17B3 DUP2 PUSH2 0x177E DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x180A DUP2 PUSH2 0x177E DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865207661756C7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x158E JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1892 PUSH1 0x4 CALLDATALOAD PUSH2 0x3BBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x18CA JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x197F DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH2 0x140 PUSH2 0x192D PUSH2 0x1908 DUP7 DUP6 ADD MLOAD PUSH2 0x160 DUP9 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD SWAP1 PUSH2 0x34C2 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x1916 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x34C2 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH2 0x140 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x34C2 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x18BB JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x19A8 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A33 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x19EE JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND OR PUSH1 0xD SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F76657220616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x10DBDD995C88185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1A85 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI PUSH2 0x1B32 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x36D9 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x3AB JUMPI PUSH1 0xE4 CALLDATALOAD SWAP3 PUSH1 0xC4 CALLDATALOAD PUSH1 0x2 DUP6 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3AB JUMPI PUSH2 0x1B70 PUSH2 0x4237 JUMP JUMPDEST PUSH2 0x1B79 DUP7 PUSH2 0x34F1 JUMP JUMPDEST DUP6 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1DC7 JUMPI JUMPDEST POP ISZERO PUSH2 0x1D82 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xE9C JUMPI PUSH1 0x6 SSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 DUP7 DUP6 SSTORE PUSH1 0x1 DUP6 ADD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1085 JUMPI PUSH2 0x1BCA DUP3 SLOAD PUSH2 0x3847 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1D3A JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1CD1 JUMPI SWAP1 DUP1 PUSH2 0x1C42 SWAP5 SWAP4 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1CC6 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x3 DUP8 ADD SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x4 DUP8 ADD SSTORE PUSH1 0x0 PUSH1 0x5 DUP8 ADD SSTORE PUSH1 0x0 PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0x0 PUSH1 0x6 DUP8 ADD SSTORE PUSH1 0x9 DUP7 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP7 ADD PUSH2 0x39AD JUMP JUMPDEST DUP1 PUSH1 0xB DUP6 ADD SSTORE PUSH1 0xC DUP5 ADD SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x64 SUB SWAP6 PUSH1 0x64 DUP8 GT PUSH2 0xE9C JUMPI PUSH32 0xF01906DC0AC306FA816E50166A7ED46AF1F05721CB90CEA30BEEBDD8DEDE3A6D SWAP7 PUSH1 0xA PUSH2 0x1CC1 SWAP8 ADD SSTORE PUSH2 0x1C8F DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xFF PUSH1 0xA8 SHL ADD NOT SWAP1 SWAP3 AND OR PUSH1 0xA8 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA8 SHL AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE SWAP1 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 DUP4 ADD SWAP1 PUSH2 0x34C2 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP12 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D22 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x1C42 SWAP7 SWAP6 SWAP5 PUSH1 0x1 SWAP5 LT PUSH2 0x1D09 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1C05 JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP14 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1CE3 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1D78 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D6C JUMPI POP PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720417373657420666F72204465706F736974000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO ISZERO DUP8 PUSH2 0x1B83 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1DEA PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1DF2 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E8C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1E47 JUMPI DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xD SLOAD AND OR PUSH1 0xD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15985D5B1D08185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x3AB JUMPI PUSH1 0x0 PUSH2 0x120 PUSH1 0x40 MLOAD PUSH2 0x1F27 DUP2 PUSH2 0x3602 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1F91 DUP3 PUSH2 0x3602 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD SLOAD SWAP3 SWAP8 SWAP3 PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x1FDC DUP2 PUSH2 0x34E7 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x5 DUP6 ADD SLOAD SWAP3 PUSH1 0xA0 DUP8 ADD SWAP4 DUP5 MSTORE PUSH2 0x206B PUSH1 0x20 PUSH1 0x6 DUP9 ADD SLOAD SWAP7 PUSH1 0xC0 DUP11 ADD SWAP8 DUP9 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x7 DUP12 ADD SLOAD SWAP11 PUSH1 0xE0 DUP14 ADD SWAP12 DUP13 MSTORE PUSH2 0x100 PUSH1 0x8 DUP3 ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE ADD SLOAD AND SWAP11 PUSH2 0x120 DUP14 ADD SWAP12 PUSH2 0x202E DUP2 PUSH2 0x34F1 JUMP JUMPDEST DUP13 MSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4149605 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 DUP5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x216A JUMPI JUMPDEST POP DUP1 PUSH2 0x215B JUMPI POP PUSH2 0x20AA PUSH2 0x12C PUSH2 0x20A2 DUP8 MLOAD JUMPDEST TIMESTAMP DUP11 MLOAD DUP1 TIMESTAMP GT PUSH2 0x2153 JUMPI JUMPDEST POP PUSH2 0x39A0 JUMP JUMPDEST DIV DUP4 MLOAD PUSH2 0x398D JUMP JUMPDEST DUP8 MSTORE DUP6 MLOAD TIMESTAMP DUP2 GT PUSH2 0x211D JUMPI POP PUSH2 0x140 SWAP10 PUSH1 0x0 DUP6 MSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP11 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 MSTORE SWAP1 MLOAD PUSH1 0x20 DUP12 ADD MSTORE SWAP1 MLOAD SWAP1 DUP10 ADD MSTORE MLOAD PUSH1 0x60 DUP9 ADD MSTORE MLOAD PUSH2 0x20ED DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE MLOAD PUSH1 0xA0 DUP7 ADD MSTORE MLOAD PUSH1 0xC0 DUP6 ADD MSTORE MLOAD PUSH1 0xE0 DUP5 ADD MSTORE MLOAD PUSH2 0x100 DUP4 ADD MSTORE MLOAD PUSH2 0x2115 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x2128 SWAP1 TIMESTAMP SWAP1 PUSH2 0x39A0 JUMP JUMPDEST SWAP10 PUSH3 0x15180 DUP12 ADD SWAP11 DUP12 DUP2 GT PUSH2 0xE9C JUMPI PUSH3 0x1517F ADD SWAP11 DUP12 GT PUSH2 0xE9C JUMPI PUSH3 0x15180 PUSH2 0x140 SWAP12 DIV DUP6 MSTORE PUSH2 0x20BF JUMP JUMPDEST SWAP1 POP DUP16 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x12C PUSH2 0x20A2 PUSH2 0x20AA SWAP3 PUSH2 0x2091 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2194 JUMPI JUMPDEST DUP2 PUSH2 0x2184 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x514 JUMPI POP MLOAD DUP12 PUSH2 0x207E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2177 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x21B8 PUSH2 0x4215 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x224C PUSH1 0x1 DUP5 ADD SWAP4 DUP5 SLOAD SWAP1 PUSH2 0x2204 DUP3 ISZERO ISZERO PUSH2 0x3A19 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP3 ADD SWAP2 PUSH2 0x2223 PUSH1 0x7 DUP5 SLOAD SWAP3 PUSH2 0x1616 PUSH1 0xFF DUP6 AND PUSH2 0x1610 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x2239 PUSH1 0x5 DUP5 ADD SWAP2 DUP3 SLOAD PUSH2 0x39A0 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x64 PUSH2 0x1649 DUP3 PUSH1 0xB DUP7 ADD SLOAD PUSH2 0x398D JUMP JUMPDEST SWAP2 PUSH1 0xC DUP3 ADD SWAP3 PUSH2 0x2260 PUSH1 0xFF DUP6 SLOAD AND DUP3 PUSH2 0x398D JUMP JUMPDEST PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD PUSH2 0x2283 DUP2 PUSH2 0x3A02 JUMP JUMPDEST SWAP5 PUSH2 0x2291 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x3656 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2439 JUMPI POP POP POP POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2323 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x22D3 DUP2 DUP8 PUSH2 0x39C5 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x2312 JUMPI JUMPDEST POP ADD PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231D SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP7 PUSH2 0x230B JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD PUSH1 0xA8 SHR AND PUSH2 0x2338 DUP2 PUSH2 0x34F1 JUMP JUMPDEST SUB PUSH2 0x240B JUMPI SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x23B8 JUMPI JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4261 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x23A5 PUSH2 0x174A SWAP3 PUSH2 0x3B7B JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x1 CALLER SWAP7 ADD SWAP1 DUP4 PUSH2 0x39D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2403 JUMPI JUMPDEST DUP2 PUSH2 0x23D3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4261 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x23A5 PUSH2 0x23FA PUSH2 0x174A SWAP4 PUSH2 0x3980 JUMP JUMPDEST SWAP3 POP POP SWAP2 PUSH2 0x2388 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23C6 JUMP JUMPDEST POP PUSH2 0x174A DUP2 PUSH2 0x2434 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4261 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SLOAD CALLER GAS CALL PUSH2 0x3D5 PUSH2 0x3AFF JUMP JUMPDEST PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x244C DUP2 PUSH2 0x361E JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2463 DUP2 PUSH2 0x177E DUP2 DUP10 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x2478 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x2491 DUP2 PUSH2 0x177E DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x24E8 DUP2 PUSH2 0x177E DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x2525 PUSH1 0x20 SWAP2 PUSH2 0x368D JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x2580 PUSH2 0x3677 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2975 JUMPI POP PUSH2 0x25A6 DUP5 PUSH2 0x3A02 JUMP JUMPDEST SWAP4 PUSH2 0x25B4 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x3656 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x25C3 PUSH1 0x1F NOT SWAP2 PUSH2 0x3A02 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2910 JUMPI POP POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x0 SWAP1 PUSH1 0x1 JUMPDEST DUP5 DUP2 GT ISZERO PUSH2 0x26BD JUMPI DUP7 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2624 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 PUSH2 0x120 DUP1 PUSH2 0x2655 DUP5 MLOAD PUSH2 0x140 DUP6 MSTORE PUSH2 0x140 DUP6 ADD SWAP1 PUSH2 0x34C2 JUMP JUMPDEST SWAP4 DUP6 DUP2 ADD MLOAD DUP7 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x2615 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x26FD DUP2 PUSH2 0x3602 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x120 PUSH1 0xFF PUSH1 0x9 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP6 ADD SWAP6 DUP7 MSTORE DUP3 PUSH1 0x4 DUP3 ADD SLOAD AND PUSH2 0x2741 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE ADD SLOAD AND SWAP2 PUSH2 0x277C DUP4 PUSH2 0x34F1 JUMP JUMPDEST ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x39E671F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP13 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x28DD JUMPI JUMPDEST POP PUSH2 0x27C4 SWAP2 MLOAD PUSH2 0x398D JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2803 JUMPI JUMPDEST POP POP PUSH2 0x27FE SWAP1 PUSH2 0x39F3 JUMP JUMPDEST PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 DUP3 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x8 DUP9 ADD SLOAD PUSH1 0x9 DUP10 ADD SLOAD SWAP7 MLOAD SWAP12 SWAP9 PUSH1 0xFF SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP6 SWAP2 SWAP5 SWAP3 SWAP4 SWAP3 SWAP1 PUSH2 0x2863 DUP14 PUSH2 0x3602 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 DUP2 SWAP4 ADD SWAP1 PUSH2 0x2876 SWAP2 PUSH2 0x3881 JUMP JUMPDEST SUB PUSH2 0x2881 SWAP1 DUP3 PUSH2 0x3656 JUMP JUMPDEST DUP13 MSTORE DUP10 PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE DUP1 PUSH2 0x28BF SWAP1 PUSH2 0x39F3 JUMP JUMPDEST SWAP4 PUSH2 0x28CA DUP3 DUP11 PUSH2 0x39C5 JUMP JUMPDEST MSTORE PUSH2 0x28D5 SWAP1 DUP9 PUSH2 0x39C5 JUMP JUMPDEST POP DUP8 DUP1 PUSH2 0x27F3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2908 JUMPI JUMPDEST DUP2 PUSH2 0x28F6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x514 JUMPI POP MLOAD PUSH2 0x27C4 PUSH2 0x27B9 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP6 SWAP5 SWAP6 MLOAD PUSH2 0x2922 DUP2 PUSH2 0x3602 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE DUP3 DUP3 DUP10 ADD ADD MSTORE ADD SWAP4 SWAP3 SWAP4 PUSH2 0x25C7 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP5 SWAP4 SWAP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x29B8 JUMPI JUMPDEST PUSH2 0x29B0 SWAP1 PUSH2 0x39F3 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2594 JUMP JUMPDEST SWAP4 PUSH2 0x29C5 PUSH2 0x29B0 SWAP2 PUSH2 0x39F3 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x29A7 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x2A10 DUP3 PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0x2A18 PUSH2 0x3677 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x44 CALLDATALOAD DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 PUSH1 0x64 CALLDATALOAD DUP3 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x322C JUMPI PUSH1 0x80 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x2 DUP4 LT ISZERO PUSH2 0x648 JUMPI PUSH1 0xA0 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH2 0x3228 JUMPI PUSH1 0xC0 DUP7 ADD SWAP5 DUP6 MSTORE PUSH2 0x2A81 PUSH2 0x4215 JUMP JUMPDEST DUP8 MLOAD DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP5 PUSH1 0xFF PUSH1 0x9 DUP8 ADD SLOAD AND ISZERO PUSH2 0x31D8 JUMPI PUSH1 0xC DUP7 ADD SWAP5 DUP6 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND SWAP2 MLOAD PUSH2 0x2AB5 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2ABE DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2AC7 DUP4 PUSH2 0x34F1 JUMP JUMPDEST DUP3 SUB PUSH2 0x3184 JUMPI DUP4 MLOAD PUSH1 0x4 DUP10 ADD SLOAD LT PUSH2 0x314C JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR AND SUB PUSH2 0x3107 JUMPI DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP12 KECCAK256 DUP13 MLOAD DUP13 MSTORE SWAP1 SWAP2 MSTORE DUP10 KECCAK256 DUP6 MLOAD PUSH2 0x2B1F DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2B28 DUP2 PUSH2 0x34F1 JUMP JUMPDEST DUP11 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD PUSH2 0x30B0 JUMPI PUSH1 0x1 SWAP1 PUSH2 0x2B45 DUP2 PUSH2 0x34F1 JUMP JUMPDEST SUB PUSH2 0x3053 JUMPI DUP3 MLOAD ISZERO PUSH2 0x300E JUMPI MLOAD DUP7 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP14 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x906 JUMPI PUSH2 0x2FD7 JUMPI JUMPDEST POP DUP2 MLOAD PUSH2 0x2BAE PUSH1 0x5 DUP8 ADD SWAP2 DUP3 SLOAD PUSH2 0x3973 JUMP JUMPDEST SWAP1 SSTORE DUP2 MLOAD SWAP4 JUMPDEST PUSH2 0x2BDA PUSH1 0xFF PUSH2 0x2BD1 PUSH1 0x5 DUP10 ADD SLOAD PUSH1 0x64 PUSH2 0x1649 DUP3 PUSH1 0xB DUP14 ADD SLOAD PUSH2 0x398D JUMP JUMPDEST SWAP3 SLOAD AND DUP3 PUSH2 0x398D JUMP JUMPDEST PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0x6 DUP7 ADD SSTORE PUSH2 0x16D PUSH1 0x64 PUSH2 0x2BF7 PUSH1 0x3 DUP9 ADD SLOAD DUP8 PUSH2 0x398D JUMP JUMPDEST DIV DIV SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 MLOAD AND SWAP1 DUP10 MLOAD SWAP3 MLOAD PUSH3 0x15180 DUP2 MUL DUP2 DUP2 DIV PUSH3 0x15180 EQ DUP3 ISZERO OR ISZERO PUSH2 0x2FC3 JUMPI SWAP3 PUSH2 0x2D6A SWAP5 SWAP3 PUSH1 0x9 SWAP3 DUP12 PUSH2 0x2C38 DUP15 SWAP16 SWAP8 SWAP15 SWAP14 SWAP15 TIMESTAMP PUSH2 0x3973 JUMP JUMPDEST SWAP2 DUP14 DUP13 DUP13 DUP7 MLOAD SWAP10 PUSH2 0x2C48 DUP12 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP9 PUSH2 0x2C55 DUP11 PUSH2 0x3602 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP10 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP10 ADD SWAP3 DUP5 DUP5 MSTORE PUSH1 0xA0 DUP11 ADD SWAP6 DUP7 MSTORE DUP13 PUSH1 0xC0 DUP12 ADD SWAP8 TIMESTAMP DUP10 MSTORE PUSH1 0xE0 DUP13 ADD SWAP10 DUP11 MSTORE PUSH2 0x100 DUP13 ADD SWAP11 DUP8 DUP13 MSTORE PUSH2 0x120 DUP14 ADD SWAP15 DUP16 PUSH2 0x2CA4 DUP3 PUSH2 0x34F1 JUMP JUMPDEST MSTORE MLOAD PUSH2 0x2CAF DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2CB8 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2F21 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 SWAP5 MLOAD DUP11 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP10 KECCAK256 DUP10 DUP1 MSTORE SWAP1 MSTORE SWAP2 SWAP1 SWAP7 KECCAK256 SWAP11 MLOAD DUP12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR DUP11 SSTORE MLOAD PUSH1 0x1 DUP11 ADD SSTORE MLOAD PUSH1 0x2 DUP10 ADD SSTORE MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH2 0x2D2A SWAP1 PUSH2 0x2D21 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x39AD JUMP JUMPDEST MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD PUSH1 0x8 DUP3 ADD SSTORE ADD SWAP1 MLOAD PUSH2 0x2D4E DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2D57 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH2 0x3BBF JUMP JUMPDEST SWAP4 DUP6 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x2DDD JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2D8D DUP2 DUP9 PUSH2 0x39C5 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x63C JUMPI DUP9 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x906 JUMPI DUP9 PUSH1 0x1 SWAP4 PUSH2 0x2DCD JUMPI JUMPDEST POP POP ADD PUSH2 0x2D6D JUMP JUMPDEST PUSH2 0x2DD6 SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP11 DUP9 PUSH2 0x2DC5 JUMP JUMPDEST POP PUSH1 0x10 SLOAD DUP7 SWAP6 POP DUP8 SWAP1 DUP7 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2EE9 JUMPI JUMPDEST POP ISZERO PUSH2 0x2E89 JUMPI JUMPDEST POP DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP2 SWAP1 DUP3 LT PUSH2 0x2E75 JUMPI PUSH1 0x40 SWAP8 SWAP4 PUSH2 0x2E65 PUSH1 0x1 SWAP7 SWAP5 PUSH32 0x6F85D9948D6CA3DD6CE6CE7D175DA22B4E865827AE6FCD530EC7EDAC1240F928 SWAP5 DUP9 SWAP5 SSTORE DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP5 MLOAD DUP11 MLOAD SWAP4 DUP5 SWAP4 ADD SWAP1 DUP4 PUSH2 0x39D9 JUMP JUMPDEST SUB SWAP1 LOG2 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x2ED5 JUMPI DUP1 PUSH1 0x1 PUSH2 0x2EB1 SWAP3 ADD PUSH1 0x10 SSTORE PUSH2 0x368D JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP3 SWAP1 SHL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP7 PUSH2 0x2DF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH2 0x2EF2 DUP2 PUSH2 0x368D JUMP JUMPDEST SWAP1 SLOAD DUP6 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2F17 JUMPI PUSH1 0x1 ADD PUSH2 0x2DE9 JUMP JUMPDEST POP POP PUSH1 0x1 DUP9 PUSH2 0x2DF1 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 SWAP5 MLOAD DUP11 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP10 KECCAK256 PUSH1 0x1 DUP1 DUP12 MSTORE SWAP2 MSTORE SWAP3 SWAP1 SWAP8 KECCAK256 SWAP12 MLOAD DUP13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 AND OR DUP12 SSTORE SWAP1 MLOAD SWAP1 DUP11 ADD SSTORE MLOAD PUSH1 0x2 DUP10 ADD SSTORE MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH2 0x2F85 SWAP1 PUSH2 0x2D21 DUP2 PUSH2 0x34E7 JUMP JUMPDEST MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD PUSH1 0x8 DUP3 ADD SSTORE ADD SWAP1 MLOAD PUSH2 0x2FA9 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2FB2 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x2D64 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3006 JUMPI JUMPDEST DUP2 PUSH2 0x2FF0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x644 JUMPI PUSH2 0x3001 SWAP1 PUSH2 0x3980 JUMP JUMPDEST PUSH2 0x2B9C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE ISZERO PUSH2 0x3072 JUMPI PUSH1 0x5 DUP6 ADD PUSH2 0x3069 CALLVALUE DUP3 SLOAD PUSH2 0x3973 JUMP JUMPDEST SWAP1 SSTORE CALLVALUE SWAP4 PUSH2 0x2BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4465706F7369742063616E6E6F74206265207A65726F PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C7265616479206465706F736974656420696E746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1D1A1A5CC81C1BDBDB PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F7420616363657074207468697320617373657400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14195C9A5BD9081D1BDBC81CDA1BDC9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F74206163636570742074686973206465706F7369 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x742074797065 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20697320696E616374697665206F7220646F6573206E6F7420657869 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1CDD PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x10 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3363 JUMPI POP POP POP DUP2 PUSH2 0x3317 SWAP2 SUB DUP3 PUSH2 0x3656 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3341 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3333 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x3301 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x339B PUSH2 0x3904 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x349B PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xC PUSH1 0x40 MLOAD SWAP3 PUSH2 0x33C0 DUP5 PUSH2 0x35CB JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x33D8 DUP2 PUSH2 0x177E DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE DUP3 PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x33ED DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP1 DUP3 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD DUP5 AND ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP7 ADD MSTORE SWAP2 ADD SLOAD DUP1 DUP4 AND PUSH2 0x180 DUP6 ADD MSTORE SWAP1 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0xA8 SHR AND PUSH2 0x3481 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x34FB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x34B2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x34A2 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x34DB DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x349F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0xB3F JUMPI JUMP JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0xB3F JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH2 0x1C0 DUP1 PUSH2 0x351F PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x1E0 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1E0 DUP6 ADD SWAP1 PUSH2 0x34C2 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x352E DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF PUSH2 0x180 DUP3 ADD MLOAD AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x1A0 DUP3 ADD MLOAD AND PUSH2 0x1A0 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x35C6 DUP4 PUSH2 0x34F1 JUMP JUMPDEST ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x36A8 JUMPI PUSH1 0x10 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1085 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3AB JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x36F0 DUP3 PUSH2 0x36BE JUMP JUMPDEST SWAP3 PUSH2 0x36FE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3656 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI PUSH2 0x160 DUP2 DUP4 SUB PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3774 DUP4 PUSH2 0x361E JUMP JUMPDEST DUP2 PUSH1 0x4 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x24 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x4 PUSH2 0x379D SWAP3 DUP6 ADD ADD PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x64 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x4 PUSH2 0x37D7 SWAP3 DUP6 ADD ADD PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x84 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA4 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC4 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x104 DUP3 ADD CALLDATALOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x124 DUP3 ADD CALLDATALOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x144 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3AB JUMPI PUSH2 0x383E SWAP3 ADD PUSH1 0x4 ADD PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3877 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3861 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x3891 DUP4 PUSH2 0x3847 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x38E7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x38AD JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x38CD JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x38BC JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3911 DUP3 PUSH2 0x35CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP4 DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xE9C JUMPI JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xE9C JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xE9C JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x39B7 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x36A8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x39F0 SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x3881 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xE9C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1085 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3A20 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206465706F73697420666F756E6420666F72207468697320616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3A76 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4465706F736974206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3ABA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F73697420706572696F6420686173206E6F7420656E64656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3B2A JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3B10 DUP3 PUSH2 0x36BE JUMP JUMPDEST SWAP2 PUSH2 0x3B1E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3656 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3B36 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6174697665206173736574207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3B82 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x3BD7 DUP2 PUSH2 0x3A02 JUMP JUMPDEST SWAP2 PUSH2 0x3BE5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3656 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3C07 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x3C1A DUP2 PUSH2 0x361E JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3C31 DUP2 PUSH2 0x177E DUP2 DUP10 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x3C46 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3C5F DUP2 PUSH2 0x177E DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3CB6 DUP2 PUSH2 0x177E DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST ISZERO PUSH2 0x3CD1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x506F6F6C206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D12 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520636F76657220636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x36A8 JUMPI PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x4126 JUMPI DUP3 MLOAD DUP2 SSTORE PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1085 JUMPI DUP2 SWAP1 PUSH2 0x3DA4 DUP5 SLOAD PUSH2 0x3847 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x40D3 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x406E JUMPI PUSH1 0x0 SWAP3 PUSH2 0x4063 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x3DF3 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x3DEA DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x3 DUP2 ADD PUSH1 0x60 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1085 JUMPI PUSH2 0x3E17 DUP4 SLOAD PUSH2 0x3847 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x401B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3FAD JUMPI SWAP2 DUP1 PUSH1 0xA SWAP5 SWAP3 PUSH2 0x140 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3FA2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP6 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP6 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE ADD SWAP3 ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1085 JUMPI PUSH2 0x3EB4 DUP3 SLOAD PUSH2 0x3847 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3F5A JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x3EF8 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3EED JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3F42 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x3F29 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3F1F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3F0A JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x3F98 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x3F8C JUMPI POP PUSH2 0x3EBD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3F7F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3F76 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3E42 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4003 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH2 0x140 SWAP9 SWAP7 PUSH1 0xA SWAP9 SWAP7 LT PUSH2 0x3FEA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3E57 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3FDD JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x3FC0 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x4059 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x404D JUMPI POP PUSH2 0x3E20 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4040 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x4037 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3DC4 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x40BB JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x40A2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3DD9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x4095 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x407F JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x411C JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x410D JUMPI POP PUSH2 0x3DAD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x4100 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x40F2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3AB JUMPI DUP1 MLOAD PUSH2 0x4166 DUP2 PUSH2 0x36BE JUMP JUMPDEST SWAP3 PUSH2 0x4174 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3656 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x3AB JUMPI PUSH2 0x39F0 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x349F JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x120 SWAP2 SUB SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x41AB DUP3 PUSH2 0x363A JUMP JUMPDEST PUSH2 0x41B4 DUP2 PUSH2 0x413C JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x100 SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x4226 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x424B JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID BASEFEE PUSH0 SHL 0xB6 MSTORE 0x4C PUSH7 0x3555797E00171A LT RETURN COINBASE PUSH6 0x6E59B02D6B55 PUSH27 0xA38BA7D5D9751A2646970667358221220FC0F18F9A583883457F7 0xA6 0xA9 0xCD 0x2E 0xA8 PUSH24 0x4512BB24F47DC3467A6FEC3ADA49E10464736F6C63430008 SHL STOP CALLER ","sourceMap":"2917:19868:9:-:0;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1857:1:4;-1:-1:-1;1857:1:4;-1:-1:-1;;;;;2917:19868:9;;;;1273:26:0;;1269:95;;1857:1:4;2917:19868:9;;-1:-1:-1;;;;;;2917:19868:9;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;3052:40:0;-1:-1:-1;;3052:40:0;5183:28:9;2917:19868;;-1:-1:-1;;;;;;2917:19868:9;;;;;;;;;5221:22;2917:19868;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;5253:21;2917:19868;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;2917:19868:9;;-1:-1:-1;1322:31:0;2917:19868:9;-1:-1:-1;2917:19868:9;;;;;;-1:-1:-1;2917:19868:9;;;;;-1:-1:-1;2917:19868:9;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":13943,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":16700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":14720,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":14041,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":16720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_VaultDeposit_fromMemory":{"entryPoint":16786,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_struct_Cover":{"entryPoint":14134,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint256t_uint256":{"entryPoint":14112,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":13506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":14465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Pool":{"entryPoint":13563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_string_storage":{"entryPoint":14809,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Pool":{"entryPoint":14596,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_PoolInfo_dyn":{"entryPoint":14850,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":14014,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":14707,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":14733,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":14752,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":13471,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":14407,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":15103,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":13910,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_64397":{"entryPoint":13771,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_64398":{"entryPoint":13799,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_64402":{"entryPoint":13826,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_64422":{"entryPoint":13854,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_64445":{"entryPoint":13882,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":16951,"id":84,"parameterSlots":0,"returnSlots":0},"fun_getPoolCovers":{"entryPoint":15295,"id":6507,"parameterSlots":1,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":16917,"id":356,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":14835,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_Cover_dyn":{"entryPoint":14789,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":15627,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_149f":{"entryPoint":15227,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_20be":{"entryPoint":15562,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_407b":{"entryPoint":15027,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4829":{"entryPoint":14959,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_58da":{"entryPoint":14873,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fffe":{"entryPoint":15151,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":13965,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_struct_Cover__dyn":{"entryPoint":15702,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_enum_Status_to_enum_Status":{"entryPoint":14765,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_struct_Cover_to_struct_Cover":{"entryPoint":15730,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_enum_AssetDepositType":{"entryPoint":13553,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_RiskType":{"entryPoint":13543,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8063068bcd8d14613382578063195ec9ee146132b65780632274346b1461328d578063248a75b71461326457806325f11e8d146132305780632607b539146129f657806329ba7bb2146129cd578063318667631461256757806334808ec31461253e57806335c1d349146124fc5780633dc66ad31461219c57806346f84795146114b75780634e05524414611eee5780635aa6e67514611ec55780636817031b14611dd15780636d8e657414611af25780636f60537d14611ac9578063715018a614611a6c5780637c366cc61461198f5780637eb111f01461187657806383bc6357146115495780638da5cb5b146115205780638f244630146114f157806396f3a8ad146114b7578063996b8a6f1461148e5780639abd9b051461143a5780639fd36b15146113df578063a14764d014611344578063a4948d85146112e5578063ab033ea9146111f6578063ac4afa38146110d8578063b5d90c28146110af578063c7aa987414611021578063d86c044414610ec9578063d88ff1f414610cb9578063e35f81291461079d578063f2fde38b14610713578063f525cb68146106f5578063f6e80558146106cc5763fb839dda146101d457600080fd5b346103ab5760203660031901126103ab576004356101f0614215565b600954604051632bb2b24360e11b8152600481018390523360248201526001600160a01b039091169061012081604481855afa8015610360576020916000916106ad575b50019081511561066857600060249160405192838092632500ed8d60e21b82528760048301525afa908115610360576000916103e0575b50600160c082015161027c816134f1565b610285816134f1565b036103b85760e00151905160405163a9059cbb60e01b8152336004820152602481019190915290602090829060449082906000906001600160a01b03165af19081156103605760009161036c575b5061031b916102e461012092613b7b565b600954604051632bb2b24360e11b81526004810192909252336024830152909283916001600160a01b031690829081906044820190565b03915afa801561036057610331575b6001600055005b610352906101203d8111610359575b61034a8183613656565b810190614192565b503861032a565b503d610340565b6040513d6000823e3d90fd5b90506020813d6020116103b0575b8161038760209383613656565b810103126103ab5761031b916102e46103a261012093613980565b925050916102d3565b600080fd5b3d915061037a565b5061031b916103db60008080806101209651335af16103d5613aff565b50613b2f565b6102e4565b903d8082843e6103f08184613656565b820191602081840312610664578051906001600160401b03821161064c57019061010082840312610514576040519261010084018481106001600160401b03821117610650576040528251845260208301516001600160401b03811161064c578161045c918501614150565b602085015260408301516001600160401b03811161064c5783019080601f8301121561064c5781519161048e83613a02565b9261049c6040519485613656565b80845260208085019160051b830101918383116106485760208101915b8383106105175750505050506040840152606082015160608401526080820151608084015260a082015160a084015260c0820151906002821015610514575060c08301526105099060e00161413c565b60e08201523861026b565b80fd5b82516001600160401b0381116106445782016101e0818703601f1901126106445760405190610545826135cb565b6020810151825260408101516001600160401b0381116106405787602061056e92840101614150565b6020830152606081015160038110156106405760408301526080810151606083015260a0810151608083015260c081015160a083015260e081015160c083015261010081015160e08301526101208101516101008301526105d26101408201613980565b6101208301526101608101516101408301526101808101516101608301526101a081015160ff81168103610640576101808301526101e0906106176101c0820161413c565b6101a08401520151600281101561063c576101c08201528152602092830192016104b9565b8880fd5b8980fd5b8780fd5b8580fd5b8280fd5b634e487b7160e01b83526041600452602483fd5b5080fd5b60405162461bcd60e51b815260206004820152601d60248201527f4e6f20616374697665207769746864726177616c20666f7220757365720000006044820152606490fd5b6106c691506101203d81116103595761034a8183613656565b38610234565b346103ab5760003660031901126103ab576008546040516001600160a01b039091168152602090f35b346103ab5760003660031901126103ab576020600654604051908152f35b346103ab5760203660031901126103ab5761072c613677565b610734614237565b6001600160a01b0316801561078757600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b346103ab5760203660031901126103ab5760006004356107bb614215565b600a54604051633b4d01a760e01b81526004810183905292908390602490829084906001600160a01b03165af191821561036057600092610b55575b506101008201519060c0830151926005841015610b3f576002600094149081610b31575b5015610af45760a082018051845260056020526040842083516001600160a01b03163303610ab85761085360ff600983015416613cca565b6005810180549360c086019182518610610a73576108878896845161087d60088801918254613973565b90558451906139a0565b90556108938451613bbf565b93855b8551811015610911576008546001600160a01b0316906108b681886139c5565b5151823b1561063c57889260248492604051958693849263106b5da160e01b845260048401525af191821561090657886001936108f6575b505001610896565b6108ff91613656565b8a886108ee565b6040513d8a823e3d90fd5b50919350919460018060a01b03600a541692833b1561064857859360248592604051968793849263f1b4bf9d60e01b845260048401525af1918215610a68577feef4955e8b18dcb6d1c19905b7b86e5fe56138ad1ce2c5e540ce4e959312f5119386606094610a58575b5050519084519060018060a01b039051169060405192835260208301526040820152a160018060a01b03600b54168151813b15610a5457604051637104a76d60e11b8152336004820152602481019190915292908390604490829084905af191848315610a48577f415071086c9ea63f7f39884c21a8af430af53bfd511a362dff69cabcb1b8bcc193610a38575b50505191610a2560405191604083526001604084019101613881565b9260208201528033930390a26001815580f35b610a4191613656565b8484610a09565b604051903d90823e3d90fd5b8380fd5b610a6191613656565b888661097b565b6040513d87823e3d90fd5b60405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f7567682066756e647320696e2074686520706f6f6c000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273139bdd0818481d985b1a59081c1c9bdc1bdcd85b60621b6044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274141c9bdc1bdcd85b081b9bdd08185c1c1c9bdd9959605a1b6044820152606490fd5b60e09150015115158461081b565b634e487b7160e01b600052602160045260246000fd5b90913d8082843e610b668184613656565b820191602081840312610664578051906001600160401b03821161064c570191610120838203126106645760405192610b9e8461363a565b805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c08101516005811015610a545760c0850152610bf360e08201613980565b60e0850152610100810151906001600160401b038211610a5457019060e08282031261064c5760405192610c26846135e7565b610c2f8361413c565b8452602083015160038110156106645760208501526040830151604085015260608301516001600160401b0381116106645782610c6d918501614150565b60608501526080830151906001600160401b03821161051457508291610c969160c09401614150565b608084015260a081015160a0840152015160c082015261010082015290826107f7565b346103ab5760003660031901126103ab57600654610cd681613a02565b90610ce46040519283613656565b808252601f19610cf382613a02565b0160005b818110610eb257505060015b81811115610d7357826040518091602082016020835281518091526040830190602060408260051b8601019301916000905b828210610d4457505050500390f35b91936001919395506020610d638192603f198a820301865288516134fb565b9601920192018594939192610d35565b806000526005602052806040600020600281015460ff1660038201546004830154600584015460068501546007860154600887015491600988015460ff1693600a89015495600b8a015497600c8b0154998a60a81c60ff169b6040519e8f90610ddb826135cb565b815260405180600181940190610df091613881565b03610dfb9083613656565b602001528d610e09826134e7565b6040015260608d015260808c015260a08b015260c08a015260e0890152610100880152151561012087015261014086015261016085015260ff811661018085015260081c6001600160a01b03166101a0840152610e65816134f1565b6101c0830152600019810191818311610e9c5782610e9191610e8a610e9795886139c5565b52856139c5565b506139f3565b610d03565b634e487b7160e01b600052601160045260246000fd5b602090610ebd613904565b82828701015201610cf7565b346103ab5760603660031901126103ab57600435602435604435610eeb614237565b82600052600560205260ff6009604060002001541615610fd1578115610f9e578015610f60576000838152600560209081526040918290206003810185905560040183905581519384528301919091527f17b8644f386d1c7c7138ef98b3c8035622bbe94d7be9b26f71d2654a547c294391a2005b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081b5a5b9a5b5d5b481c195c9a5bd960521b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642041505960a81b6044820152606490fd5b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c20646f6573206e6f74206578697374206f7220697320696e61637469604482015261766560f01b6064820152608490fd5b346103ab5761102f36613736565b9060018060a01b03600d54163314801561109b575b61104d90613d0b565b6000526004602052604060002090815491600160401b831015611085578261107d91600161108395018155613d56565b90613d72565b005b634e487b7160e01b600052604160045260246000fd5b50600f546001600160a01b03163314611044565b346103ab5760003660031901126103ab57600a546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab57600435600052600560205260406000208054604051918280600183019061110f91613881565b0361111a9084613656565b600281015460ff1690600381015490600481015490600581015460068201546007830154600884015490600985015460ff1692600a86015494600b87015496600c0154978860a81c60ff16996040519d8e9d8e528d602081016101e090526101e001611185916134c2565b9b8d611190826134e7565b6040015260608d015260808c015260a08b015260c08a015260e0890152610100880152151561012087015261014086015261016085015260ff811661018085015260081c6001600160a01b03166101a08401526111ec816134f1565b6101c08301520390f35b346103ab5760203660031901126103ab5761120f613677565b611217614237565b600754906001600160a01b0382166112a7576001600160a01b0316908115611258576001600160a01b03199081168217600755600a80549091169091179055005b60405162461bcd60e51b815260206004820152602160248201527f476f7665726e616e636520616464726573732063616e6e6f74206265207a65726044820152606f60f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601660248201527511dbdd995c9b985b98d948185b1c9958591e481cd95d60521b6044820152606490fd5b346103ab576112f336613720565b9060018060a01b03600d541633148015611330575b61131190613d0b565b600052600560205261132c600a6040600020019182546139a0565b9055005b50600f546001600160a01b03163314611308565b346103ab5761135236613736565b600d546001600160a01b0316331480156113cb575b61137090613d0b565b60005b826000526004602052604060002054811015611083578260005260046020526113a0816040600020613d56565b50548251146113b157600101611373565b61107d906110839360005260046020526040600020613d56565b50600f546001600160a01b03163314611367565b346103ab576113ed36613720565b9060018060a01b03600d541633148015611426575b61140b90613d0b565b600052600560205261132c600a604060002001918254613973565b50600f546001600160a01b03163314611402565b346103ab5760203660031901126103ab57600435611456614237565b80600052600560205261147360ff60096040600020015416613cca565b6000908152600560205260409020600901805460ff19169055005b346103ab5760003660031901126103ab57600c546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab576001600160a01b036114d8613677565b1660005260116020526020604060002054604051908152f35b346103ab5760203660031901126103ab5760043560005260056020526020600560406000200154604051908152f35b346103ab5760003660031901126103ab576001546040516001600160a01b039091168152602090f35b346103ab5760603660031901126103ab57611562613677565b60243560443560028110156103ab57611579614215565b600e546001600160a01b031633148015611862575b1561181e5781600052600560205260406000209260018060a01b0316908160005260036020526040600020836000526020526040600020906115cf816134f1565b60005260205260406000209161165060018401938454906115f1821515613a19565b60016004820191611620600784549261161660ff8516611610816134e7565b15613a6f565b0154421015613ab3565b60ff1916179055611636600587019182546139a0565b809155606461164982600b89015461398d565b04906139a0565b61166160ff600c870154168261398d565b600786015560068501556000526004602052604060002092835461168481613a02565b946116926040519687613656565b818652602086019060005260206000206000915b838310611754575050505060005b8451811015611724576008546001600160a01b0316906116d481876139c5565b5151823b156103ab5760009260248492604051958693849263106b5da160e01b845260048401525af191821561036057600192611713575b50016116b4565b600061171e91613656565b8661170c565b5060016000805160206142618339815191529161174a85546040519384930190836139d9565b0390a26001600055005b600b60206001926040516117678161361e565b855481526040516117858161177e81898b01613881565b0382613656565b8382015260ff60028701541661179a816134e7565b60408201526040516117b38161177e8160038b01613881565b606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e08201526008860154610100820152600986015461012082015260405161180a8161177e81600a8b01613881565b6101408201528152019201920191906116a6565b606460405162461bcd60e51b815260206004820152602060248201527f43616c6c6572206973206e6f7420746865207661756c7420636f6e74726163746044820152fd5b50600f546001600160a01b0316331461158e565b346103ab5760203660031901126103ab57611892600435613bbf565b6040518091602082016020835281518091526040830190602060408260051b8601019301916000905b8282106118ca57505050500390f35b9193600191939550602061197f8192603f198a82030186528851908151815261014061192d61190886850151610160888601526101608501906134c2565b6040850151611916816134e7565b6040850152606085015184820360608601526134c2565b926080810151608084015260a081015160a084015260c081015160c084015260e081015160e08401526101008101516101008401526101208101516101208401520151906101408184039101526134c2565b96019201920185949391926118bb565b346103ab5760203660031901126103ab576119a8613677565b6119b0614237565b600d54906001600160a01b038216611a33576001600160a01b03169081156119ee57600880546001600160a01b031990811684179091551617600d55005b60405162461bcd60e51b815260206004820152601c60248201527f436f76657220616464726573732063616e6e6f74206265207a65726f000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527010dbdd995c88185b1c9958591e481cd95d607a1b6044820152606490fd5b346103ab5760003660031901126103ab57611a85614237565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346103ab5760003660031901126103ab576009546040516001600160a01b039091168152602090f35b346103ab576101203660031901126103ab5760043560243560038110156103ab576044356001600160401b0381116103ab57611b329036906004016136d9565b9060a4359160ff83168093036103ab5760e4359260c43560028510156103ab57610104356001600160a01b038116908190036103ab57611b70614237565b611b79866134f1565b8515908115611dc7575b5015611d825760065460018101809111610e9c576006558560005260056020526040600020938685556001850184516001600160401b03811161108557611bca8254613847565b601f8111611d3a575b506020601f8211600114611cd1579080611c42949392600091611cc6575b508160011b916000199060031b1c19161790555b6064356003870155608435600487015560006005870155600060078701556000600687015560098601600160ff19825416179055600286016139ad565b80600b850155600c8401918254916064039560648711610e9c577ff01906dc0ac306fa816e50166a7ed46af1f05721cb90cea30beebdd8dede3a6d96600a611cc1970155611c8f816134f1565b60ff60ff60a81b01199092161760a89190911b60ff60a81b1617905560405160208082529092839290918301906134c2565b0390a2005b90508701518b611bf1565b601f1982169083600052806000209160005b818110611d225750918391611c4296959460019410611d09575b5050811b019055611c05565b89015160001960f88460031b161c191690558b80611cfd565b9192602060018192868d015181550194019201611ce3565b826000526020600020601f830160051c81019160208410611d78575b601f0160051c01905b818110611d6c5750611bd3565b60008155600101611d5f565b9091508190611d56565b60405162461bcd60e51b815260206004820152601760248201527f57726f6e6720417373657420666f72204465706f7369740000000000000000006044820152606490fd5b9050151587611b83565b346103ab5760203660031901126103ab57611dea613677565b611df2614237565b600e546001600160a01b0316611e8c576001600160a01b03168015611e4757806bffffffffffffffffffffffff60a01b60095416176009556bffffffffffffffffffffffff60a01b600d541617600d55600080f35b60405162461bcd60e51b815260206004820152601c60248201527f5661756c7420616464726573732063616e6e6f74206265207a65726f000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527015985d5b1d08185b1c9958591e481cd95d607a1b6044820152606490fd5b346103ab5760003660031901126103ab576007546040516001600160a01b039091168152602090f35b346103ab5760403660031901126103ab576004356024356001600160a01b0381168082036103ab576000610120604051611f2781613602565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e082015282610100820152015260005260036020526040600020826000526020526040600020600080526020526040600020906040518092611f9182613602565b80546001600160a01b03168252600181015460208301908152600282015460408401908152600383015460608501908152600484015492979260808601919060ff16611fdc816134e7565b825260058501549260a0870193845261206b602060068801549660c08a0197885260ff600960078b01549a60e08d019b8c5261010060088201549d019c8d520154169a6101208d019b61202e816134f1565b8c52600854604051630414960560e21b81526001600160a01b03928316600482015260248101939093529193849290911690829081906044820190565b03915afa9081156103605760009161216a575b508061215b57506120aa61012c6120a287515b428a51804211612153575b506139a0565b04835161398d565b8752855142811161211d575061014099600085525b604080519a516001600160a01b03168b52905160208b0152905190890152516060880152516120ed816134e7565b60808701525160a08601525160c08501525160e08401525161010083015251612115816134f1565b610120820152f35b6121289042906139a0565b99620151808b019a8b8111610e9c576201517f019a8b11610e9c57620151806101409b0485526120bf565b90508f61209c565b61012c6120a26120aa92612091565b906020823d602011612194575b8161218460209383613656565b810103126105145750518b61207e565b3d9150612177565b346103ab5760203660031901126103ab576004356121b8614215565b80600052600560205260406000209033600052600360205260406000208160005260205260406000206000805260205260406000209161224c6001840193845490612204821515613a19565b60026004820191612223600784549261161660ff8516611610816134e7565b60ff1916179055612239600584019182546139a0565b809155606461164982600b86015461398d565b91600c82019261226060ff8554168261398d565b600784015560068301556000526004602052604060002092835461228381613a02565b946122916040519687613656565b818652602086019060005260206000206000915b838310612439575050505060005b8451811015612323576008546001600160a01b0316906122d381876139c5565b5151823b156103ab5760009260248492604051958693849263106b5da160e01b845260048401525af191821561036057600192612312575b50016122b3565b600061231d91613656565b8661230b565b5082600160ff825460a81c16612338816134f1565b0361240b5754815460405163a9059cbb60e01b8152336004820152602481019190915290602090829060081c6001600160a01b0316816000816044810103925af1908115610360576000916123b8575b50600080516020614261833981519152916123a561174a92613b7b565b54604051918291600133960190836139d9565b90506020813d602011612403575b816123d360209383613656565b810103126103ab57600080516020614261833981519152916123a56123fa61174a93613980565b92505091612388565b3d91506123c6565b5061174a8161243460008080806000805160206142618339815191529754335af16103d5613aff565b6123a5565b600b602060019260405161244c8161361e565b855481526040516124638161177e81898b01613881565b8382015260ff600287015416612478816134e7565b60408201526040516124918161177e8160038b01613881565b606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e0820152600886015461010082015260098601546101208201526040516124e88161177e81600a8b01613881565b6101408201528152019201920191906122a5565b346103ab5760203660031901126103ab576004356010548110156103ab5761252560209161368d565b905460405160039290921b1c6001600160a01b03168152f35b346103ab5760003660031901126103ab57600b546040516001600160a01b039091168152602090f35b346103ab5760203660031901126103ab57612580613677565b600654600091906001600160a01b03821660015b8281111561297557506125a684613a02565b936125b46040519586613656565b8085526125c3601f1991613a02565b0160005b8181106129105750506008546001600160a01b03169260009060015b848111156126bd57866040518091602082016020835281518091526040830190602060408260051b8601019301916000905b82821061262457505050500390f35b919360019193955060208091603f1989820301855287519061012080612655845161014085526101408501906134c2565b93858101518685015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610100810151151561010085015201519101529601920192018594939192612615565b806000526005602052604060002084600052600360205260406000208260005260205260406000206000805260205260406000206040516126fd81613602565b60018060a01b038254168152600182015460208201526002820154604082015261012060ff60096003850154946060850195865282600482015416612741816134e7565b6080860152600581015460a0860152600681015460c0860152600781015460e086015260088101546101008601520154169161277c836134f1565b01526040516339e671f760e11b81526001600160a01b0385166004820152602481018490526020816044818c5afa908115610360576000916128dd575b506127c4915161398d565b856000526003602052604060002083600052602052604060002060008052602052600160406000200154612803575b50506127fe906139f3565b6125e3565b60008681526003602081815260408084208785528252808420848052909152918290208082015460019091015491850154600486015460058701546008880154600989015496519b9860ff9097169690959194929392906128638d613602565b6040518060018193019061287691613881565b036128819082613656565b8c528960208d015260408c015260608b015260808a015260a089015260c088015260e08701521515610100860152610120850152806128bf906139f3565b936128ca828a6139c5565b526128d590886139c5565b5087806127f3565b906020823d8211612908575b816128f660209383613656565b810103126105145750516127c46127b9565b3d91506128e9565b60209060409594955161292281613602565b60608152600083820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e082015260006101008201526000610120820152828289010152019392936125c7565b8160009493945260036020526040600020816000526020526040600020600080526020526001604060002001546129b8575b6129b0906139f3565b929192612594565b936129c56129b0916139f3565b9490506129a7565b346103ab5760003660031901126103ab57600f546040516001600160a01b039091168152602090f35b60e03660031901126103ab576040516000612a10826135e7565b612a18613677565b82526020820191602435835260408101604435815260608201906064358252608435600281101561322c576080840190815260a4359160028310156106485760a0850192835260c435936001600160a01b03851685036132285760c08601948552612a81614215565b875187526005602052604087209460ff600987015416156131d857600c860194855460ff8160a81c169151612ab5816134f1565b612abe816134f1565b612ac7836134f1565b820361318457835160048901541061314c5782516001600160a01b0390811660089290921c16036131075787516001600160a01b03168952600360209081526040808b208c518c5290915289208551612b1f816134f1565b612b28816134f1565b8a52602052600160408a2001546130b057600190612b45816134f1565b036130535782511561300e5751865183516040516323b872dd60e01b81526001600160a01b039283166004820152306024820152604481019190915291602091839160649183918d91165af1801561090657612fd7575b508151612bae60058701918254613973565b90558151935b612bda60ff612bd16005890154606461164982600b8d015461398d565b9254168261398d565b6007870155600686015561016d6064612bf760038801548761398d565b04049260018060a01b038751169089519251620151808102818104620151801482151715612fc35792612d6a94926009928b612c388e9f979e9d9e42613973565b918d8c8c865199612c488b6134f1565b60405198612c558a613602565b8952602089019283526040890190815260608901918252608089019284845260a08a019586528c60c08b019742895260e08c01998a526101008c019a878c526101208d019e8f612ca4826134f1565b5251612caf816134f1565b612cb8816134f1565b612f2157516001600160a01b039081168752600360208181526040808a2094518a529381528389208980529052919096209a518b546001600160a01b0319169616959095178a555160018a0155516002890155519187019190915551612d2a90612d21816134e7565b600487016139ad565b516005850155516006840155516007830155516008820155019051612d4e816134f1565b612d57816134f1565b60ff801983541691161790555b51613bbf565b93855b8551811015612ddd576008546001600160a01b031690612d8d81886139c5565b5151823b1561063c57889260248492604051958693849263106b5da160e01b845260048401525af19182156109065788600193612dcd575b505001612d6d565b612dd691613656565b8a88612dc5565b50601054869550879086805b828110612ee9575b5015612e89575b5080516001600160a01b0316865260116020526040862080546001810191908210612e755760409793612e65600196947f6f85d9948d6ca3dd6ce6ce7d175da22b4e865827ae6fcd530ec7edac1240f92894889455838060a01b0390511694518a519384930190836139d9565b0390a25582519182526020820152f35b634e487b7160e01b88526011600452602488fd5b81516001600160a01b031690600160401b811015612ed557806001612eb1920160105561368d565b81546001600160a01b0360039290921b91821b191692901b91909117905586612df8565b634e487b7160e01b88526041600452602488fd5b612ef28161368d565b9054855160039290921b1c6001600160a01b03908116911614612f1757600101612de9565b5050600188612df1565b516001600160a01b039081168752600360208181526040808a2094518a529381528389206001808b529152929097209b518c546001600160a01b0319169116178b559051908a0155516002890155519187019190915551612f8590612d21816134e7565b516005850155516006840155516007830155516008820155019051612fa9816134f1565b612fb2816134f1565b60ff80198354169116179055612d64565b634e487b7160e01b8b52601160045260248bfd5b6020813d602011613006575b81612ff060209383613656565b810103126106445761300190613980565b612b9c565b3d9150612fe3565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b5034156130725760058501613069348254613973565b90553493612bb4565b60405162461bcd60e51b81526020600482015260166024820152754465706f7369742063616e6e6f74206265207a65726f60501b6044820152606490fd5b60405162461bcd60e51b815260206004820152602960248201527f557365722068617320616c7265616479206465706f736974656420696e746f206044820152681d1a1a5cc81c1bdbdb60ba1b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f506f6f6c20646f6573206e6f74206163636570742074686973206173736574006044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f14195c9a5bd9081d1bdbc81cda1bdc9d60821b6044820152606490fd5b60405162461bcd60e51b815260206004820152602660248201527f506f6f6c20646f6573206e6f74206163636570742074686973206465706f736960448201526574207479706560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c20697320696e616374697665206f7220646f6573206e6f74206578696044820152611cdd60f21b6064820152608490fd5b8680fd5b8480fd5b346103ab5760203660031901126103ab576004356000526005602052602060ff600960406000200154166040519015158152f35b346103ab5760003660031901126103ab57600d546040516001600160a01b039091168152602090f35b346103ab5760003660031901126103ab57600e546040516001600160a01b039091168152602090f35b346103ab5760003660031901126103ab576040518060206010549283815201809260106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6729060005b8181106133635750505081613317910382613656565b6040519182916020830190602084525180915260408301919060005b818110613341575050500390f35b82516001600160a01b0316845285945060209384019390920191600101613333565b82546001600160a01b0316845260209093019260019283019201613301565b346103ab5760203660031901126103ab5761339b613904565b50600435600052600560205261349b604060002060ff600c604051926133c0846135cb565b805484526040516133d88161177e8160018601613881565b6020850152826002820154166133ed816134e7565b60408501526003810154606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e0850152600880820154610100860152600982015484161515610120860152600a820154610140860152600b8201546101608601529101548083166101808501529081901c6001600160a01b03166101a084015260a81c16613481816134f1565b6101c08201526040519182916020835260208301906134fb565b0390f35b60005b8381106134b25750506000910152565b81810151838201526020016134a2565b906020916134db8151809281855285808601910161349f565b601f01601f1916010190565b60031115610b3f57565b60021115610b3f57565b90815181526101c08061351f60208501516101e060208601526101e08501906134c2565b93604081015161352e816134e7565b6040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610100810151610100850152610120810151151561012085015261014081015161014085015261016081015161016085015260ff6101808201511661018085015260018060a01b036101a0820151166101a08501520151916135c6836134f1565b015290565b6101e081019081106001600160401b0382111761108557604052565b60e081019081106001600160401b0382111761108557604052565b61014081019081106001600160401b0382111761108557604052565b61016081019081106001600160401b0382111761108557604052565b61012081019081106001600160401b0382111761108557604052565b90601f801991011681019081106001600160401b0382111761108557604052565b600435906001600160a01b03821682036103ab57565b6010548110156136a857601060005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160401b03811161108557601f01601f191660200190565b81601f820112156103ab578035906136f0826136be565b926136fe6040519485613656565b828452602083830101116103ab57816000926020809301838601378301015290565b60409060031901126103ab576004359060243590565b9060406003198301126103ab57600435916024356001600160401b0381116103ab5761016081830360031901126103ab57604051916137748361361e565b8160040135835260248201356001600160401b0381116103ab5781600461379d928501016136d9565b6020840152604482013560038110156103ab57604084015260648201356001600160401b0381116103ab578160046137d7928501016136d9565b60608401526084820135608084015260a482013560a084015260c482013560c084015260e482013560e0840152610104820135610100840152610124820135610120840152610144820135916001600160401b0383116103ab5761383e92016004016136d9565b61014082015290565b90600182811c92168015613877575b602083101461386157565b634e487b7160e01b600052602260045260246000fd5b91607f1691613856565b6000929181549161389183613847565b80835292600181169081156138e757506001146138ad57505050565b60009081526020812093945091925b8383106138cd575060209250010190565b6001816020929493945483858701015201910191906138bc565b915050602093945060ff929192191683830152151560051b010190565b60405190613911826135cb565b60006101c083828152606060208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a08201520152565b91908201809211610e9c57565b519081151582036103ab57565b81810292918115918404141715610e9c57565b91908203918211610e9c57565b906139b7816134e7565b60ff80198354169116179055565b80518210156136a85760209160051b010190565b6040906139f0939281528160208201520190613881565b90565b6000198114610e9c5760010190565b6001600160401b0381116110855760051b60200190565b15613a2057565b60405162461bcd60e51b815260206004820152602160248201527f4e6f206465706f73697420666f756e6420666f722074686973206164647265736044820152607360f81b6064820152608490fd5b15613a7657565b60405162461bcd60e51b81526020600482015260156024820152744465706f736974206973206e6f742061637469766560581b6044820152606490fd5b15613aba57565b60405162461bcd60e51b815260206004820152601c60248201527f4465706f73697420706572696f6420686173206e6f7420656e646564000000006044820152606490fd5b3d15613b2a573d90613b10826136be565b91613b1e6040519384613656565b82523d6000602084013e565b606090565b15613b3657565b60405162461bcd60e51b815260206004820152601c60248201527f4e6174697665206173736574207472616e73666572206661696c6564000000006044820152606490fd5b15613b8257565b60405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b600052600460205260406000208054613bd781613a02565b91613be56040519384613656565b818352602083019060005260206000206000915b838310613c07575050505090565b600b6020600192604051613c1a8161361e565b85548152604051613c318161177e81898b01613881565b8382015260ff600287015416613c46816134e7565b6040820152604051613c5f8161177e8160038b01613881565b606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e082015260088601546101008201526009860154610120820152604051613cb68161177e81600a8b01613881565b610140820152815201920192019190613bf9565b15613cd157565b60405162461bcd60e51b8152602060048201526012602482015271506f6f6c206973206e6f742061637469766560701b6044820152606490fd5b15613d1257565b606460405162461bcd60e51b815260206004820152602060248201527f43616c6c6572206973206e6f742074686520636f76657220636f6e74726163746044820152fd5b80548210156136a857600052600b602060002091020190600090565b9092919261412657825181556001810160208401518051906001600160401b038211611085578190613da48454613847565b601f81116140d3575b50602090601f831160011461406e57600092614063575b50508160011b916000199060031b1c19161790555b613df36040840151613dea816134e7565b600283016139ad565b6003810160608401518051906001600160401b03821161108557613e178354613847565b601f811161401b575b50602090601f8311600114613fad579180600a94926101409694600092613fa2575b50508160011b916000199060031b1c19161790555b6080850151600482015560a0850151600582015560c0850151600682015560e0850151600782015561010085015160088201556101208501516009820155019201519182516001600160401b03811161108557613eb48254613847565b601f8111613f5a575b506020601f8211600114613ef85781929394600092613eed575b50508160011b916000199060031b1c1916179055565b015190503880613ed7565b601f1982169083600052806000209160005b818110613f4257509583600195969710613f29575b505050811b019055565b015160001960f88460031b161c19169055388080613f1f565b9192602060018192868b015181550194019201613f0a565b826000526020600020601f830160051c81019160208410613f98575b601f0160051c01905b818110613f8c5750613ebd565b60008155600101613f7f565b9091508190613f76565b015190503880613e42565b90601f1983169184600052816000209260005b81811061400357509260019285926101409896600a989610613fea575b505050811b019055613e57565b015160001960f88460031b161c19169055388080613fdd565b92936020600181928786015181550195019301613fc0565b836000526020600020601f840160051c81019160208510614059575b601f0160051c01905b81811061404d5750613e20565b60008155600101614040565b9091508190614037565b015190503880613dc4565b60008581528281209350601f198516905b8181106140bb57509084600195949392106140a2575b505050811b019055613dd9565b015160001960f88460031b161c19169055388080614095565b9293602060018192878601518155019501930161407f565b909150836000526020600020601f840160051c8101916020851061411c575b90601f859493920160051c01905b81811061410d5750613dad565b60008155849350600101614100565b90915081906140f2565b634e487b7160e01b600052600060045260246000fd5b51906001600160a01b03821682036103ab57565b81601f820112156103ab578051614166816136be565b926141746040519485613656565b818452602082840101116103ab576139f0916020808501910161349f565b90816101209103126103ab57604051906141ab8261363a565b6141b48161413c565b825260208101516020830152604081015160408301526060810151606083015260808101519060038210156103ab5761010091608084015260a081015160a084015260c081015160c084015260e081015160e0840152015161010082015290565b600260005414614226576002600055565b633ee5aeb560e01b60005260046000fd5b6001546001600160a01b0316330361424b57565b63118cdaa760e01b6000523360045260246000fdfe485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d9751a2646970667358221220fc0f18f9a583883457f7a6a9cd2ea8774512bb24f47dc3467a6fec3ada49e10464736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68BCD8D EQ PUSH2 0x3382 JUMPI DUP1 PUSH4 0x195EC9EE EQ PUSH2 0x32B6 JUMPI DUP1 PUSH4 0x2274346B EQ PUSH2 0x328D JUMPI DUP1 PUSH4 0x248A75B7 EQ PUSH2 0x3264 JUMPI DUP1 PUSH4 0x25F11E8D EQ PUSH2 0x3230 JUMPI DUP1 PUSH4 0x2607B539 EQ PUSH2 0x29F6 JUMPI DUP1 PUSH4 0x29BA7BB2 EQ PUSH2 0x29CD JUMPI DUP1 PUSH4 0x31866763 EQ PUSH2 0x2567 JUMPI DUP1 PUSH4 0x34808EC3 EQ PUSH2 0x253E JUMPI DUP1 PUSH4 0x35C1D349 EQ PUSH2 0x24FC JUMPI DUP1 PUSH4 0x3DC66AD3 EQ PUSH2 0x219C JUMPI DUP1 PUSH4 0x46F84795 EQ PUSH2 0x14B7 JUMPI DUP1 PUSH4 0x4E055244 EQ PUSH2 0x1EEE JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x1EC5 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x1DD1 JUMPI DUP1 PUSH4 0x6D8E6574 EQ PUSH2 0x1AF2 JUMPI DUP1 PUSH4 0x6F60537D EQ PUSH2 0x1AC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A6C JUMPI DUP1 PUSH4 0x7C366CC6 EQ PUSH2 0x198F JUMPI DUP1 PUSH4 0x7EB111F0 EQ PUSH2 0x1876 JUMPI DUP1 PUSH4 0x83BC6357 EQ PUSH2 0x1549 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1520 JUMPI DUP1 PUSH4 0x8F244630 EQ PUSH2 0x14F1 JUMPI DUP1 PUSH4 0x96F3A8AD EQ PUSH2 0x14B7 JUMPI DUP1 PUSH4 0x996B8A6F EQ PUSH2 0x148E JUMPI DUP1 PUSH4 0x9ABD9B05 EQ PUSH2 0x143A JUMPI DUP1 PUSH4 0x9FD36B15 EQ PUSH2 0x13DF JUMPI DUP1 PUSH4 0xA14764D0 EQ PUSH2 0x1344 JUMPI DUP1 PUSH4 0xA4948D85 EQ PUSH2 0x12E5 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x11F6 JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x10D8 JUMPI DUP1 PUSH4 0xB5D90C28 EQ PUSH2 0x10AF JUMPI DUP1 PUSH4 0xC7AA9874 EQ PUSH2 0x1021 JUMPI DUP1 PUSH4 0xD86C0444 EQ PUSH2 0xEC9 JUMPI DUP1 PUSH4 0xD88FF1F4 EQ PUSH2 0xCB9 JUMPI DUP1 PUSH4 0xE35F8129 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xF525CB68 EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xF6E80558 EQ PUSH2 0x6CC JUMPI PUSH4 0xFB839DDA EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1F0 PUSH2 0x4215 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BB2B243 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x120 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x6AD JUMPI JUMPDEST POP ADD SWAP1 DUP2 MLOAD ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x2500ED8D PUSH1 0xE2 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3E0 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x27C DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x285 DUP2 PUSH2 0x34F1 JUMP JUMPDEST SUB PUSH2 0x3B8 JUMPI PUSH1 0xE0 ADD MLOAD SWAP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x36C JUMPI JUMPDEST POP PUSH2 0x31B SWAP2 PUSH2 0x2E4 PUSH2 0x120 SWAP3 PUSH2 0x3B7B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BB2B243 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x360 JUMPI PUSH2 0x331 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x359 JUMPI JUMPDEST PUSH2 0x34A DUP2 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x4192 JUMP JUMPDEST POP CODESIZE PUSH2 0x32A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3B0 JUMPI JUMPDEST DUP2 PUSH2 0x387 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3AB JUMPI PUSH2 0x31B SWAP2 PUSH2 0x2E4 PUSH2 0x3A2 PUSH2 0x120 SWAP4 PUSH2 0x3980 JUMP JUMPDEST SWAP3 POP POP SWAP2 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x37A JUMP JUMPDEST POP PUSH2 0x31B SWAP2 PUSH2 0x3DB PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x120 SWAP7 MLOAD CALLER GAS CALL PUSH2 0x3D5 PUSH2 0x3AFF JUMP JUMPDEST POP PUSH2 0x3B2F JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST SWAP1 RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0x3F0 DUP2 DUP5 PUSH2 0x3656 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x664 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x64C JUMPI ADD SWAP1 PUSH2 0x100 DUP3 DUP5 SUB SLT PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x100 DUP5 ADD DUP5 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x650 JUMPI PUSH1 0x40 MSTORE DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x64C JUMPI DUP2 PUSH2 0x45C SWAP2 DUP6 ADD PUSH2 0x4150 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x64C JUMPI DUP4 ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x64C JUMPI DUP2 MLOAD SWAP2 PUSH2 0x48E DUP4 PUSH2 0x3A02 JUMP JUMPDEST SWAP3 PUSH2 0x49C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3656 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x648 JUMPI PUSH1 0x20 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x517 JUMPI POP POP POP POP POP PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x514 JUMPI POP PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x509 SWAP1 PUSH1 0xE0 ADD PUSH2 0x413C JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE CODESIZE PUSH2 0x26B JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x644 JUMPI DUP3 ADD PUSH2 0x1E0 DUP2 DUP8 SUB PUSH1 0x1F NOT ADD SLT PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x545 DUP3 PUSH2 0x35CB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x640 JUMPI DUP8 PUSH1 0x20 PUSH2 0x56E SWAP3 DUP5 ADD ADD PUSH2 0x4150 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x640 JUMPI PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x5D2 PUSH2 0x140 DUP3 ADD PUSH2 0x3980 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x640 JUMPI PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1E0 SWAP1 PUSH2 0x617 PUSH2 0x1C0 DUP3 ADD PUSH2 0x413C JUMP JUMPDEST PUSH2 0x1A0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x63C JUMPI PUSH2 0x1C0 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x4B9 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20616374697665207769746864726177616C20666F722075736572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x6C6 SWAP2 POP PUSH2 0x120 RETURNDATASIZE DUP2 GT PUSH2 0x359 JUMPI PUSH2 0x34A DUP2 DUP4 PUSH2 0x3656 JUMP JUMPDEST CODESIZE PUSH2 0x234 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x72C PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x734 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH2 0x7BB PUSH2 0x4215 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x3B4D01A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xB55 JUMPI JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD SWAP1 PUSH1 0xC0 DUP4 ADD MLOAD SWAP3 PUSH1 0x5 DUP5 LT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x2 PUSH1 0x0 SWAP5 EQ SWAP1 DUP2 PUSH2 0xB31 JUMPI JUMPDEST POP ISZERO PUSH2 0xAF4 JUMPI PUSH1 0xA0 DUP3 ADD DUP1 MLOAD DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xAB8 JUMPI PUSH2 0x853 PUSH1 0xFF PUSH1 0x9 DUP4 ADD SLOAD AND PUSH2 0x3CCA JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD SWAP4 PUSH1 0xC0 DUP7 ADD SWAP2 DUP3 MLOAD DUP7 LT PUSH2 0xA73 JUMPI PUSH2 0x887 DUP9 SWAP7 DUP5 MLOAD PUSH2 0x87D PUSH1 0x8 DUP9 ADD SWAP2 DUP3 SLOAD PUSH2 0x3973 JUMP JUMPDEST SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH2 0x39A0 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x893 DUP5 MLOAD PUSH2 0x3BBF JUMP JUMPDEST SWAP4 DUP6 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x911 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x8B6 DUP2 DUP9 PUSH2 0x39C5 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x63C JUMPI DUP9 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x906 JUMPI DUP9 PUSH1 0x1 SWAP4 PUSH2 0x8F6 JUMPI JUMPDEST POP POP ADD PUSH2 0x896 JUMP JUMPDEST PUSH2 0x8FF SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP11 DUP9 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP4 POP SWAP2 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x648 JUMPI DUP6 SWAP4 PUSH1 0x24 DUP6 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP4 DUP5 SWAP3 PUSH4 0xF1B4BF9D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xA68 JUMPI PUSH32 0xEEF4955E8B18DCB6D1C19905B7B86E5FE56138AD1CE2C5E540CE4E959312F511 SWAP4 DUP7 PUSH1 0x60 SWAP5 PUSH2 0xA58 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP5 MLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND DUP2 MLOAD DUP2 EXTCODESIZE ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7104A76D PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP2 DUP5 DUP4 ISZERO PUSH2 0xA48 JUMPI PUSH32 0x415071086C9EA63F7F39884C21A8AF430AF53BFD511A362DFF69CABCB1B8BCC1 SWAP4 PUSH2 0xA38 JUMPI JUMPDEST POP POP MLOAD SWAP2 PUSH2 0xA25 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x1 PUSH1 0x40 DUP5 ADD SWAP2 ADD PUSH2 0x3881 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD MSTORE DUP1 CALLER SWAP4 SUB SWAP1 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xA41 SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0xA61 SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP9 DUP7 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320696E2074686520706F6F6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BDD0818481D985B1A59081C1C9BDC1BDCD85B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x141C9BDC1BDCD85B081B9BDD08185C1C1C9BDD9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE0 SWAP2 POP ADD MLOAD ISZERO ISZERO DUP5 PUSH2 0x81B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0xB66 DUP2 DUP5 PUSH2 0x3656 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x664 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x64C JUMPI ADD SWAP2 PUSH2 0x120 DUP4 DUP3 SUB SLT PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xB9E DUP5 PUSH2 0x363A JUMP JUMPDEST DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xA54 JUMPI PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xBF3 PUSH1 0xE0 DUP3 ADD PUSH2 0x3980 JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xA54 JUMPI ADD SWAP1 PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC26 DUP5 PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0xC2F DUP4 PUSH2 0x413C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x664 JUMPI PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x664 JUMPI DUP3 PUSH2 0xC6D SWAP2 DUP6 ADD PUSH2 0x4150 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x514 JUMPI POP DUP3 SWAP2 PUSH2 0xC96 SWAP2 PUSH1 0xC0 SWAP5 ADD PUSH2 0x4150 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE SWAP1 DUP3 PUSH2 0x7F7 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x6 SLOAD PUSH2 0xCD6 DUP2 PUSH2 0x3A02 JUMP JUMPDEST SWAP1 PUSH2 0xCE4 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0xCF3 DUP3 PUSH2 0x3A02 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xEB2 JUMPI POP POP PUSH1 0x1 JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD73 JUMPI DUP3 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xD44 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0xD63 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x34FB JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0xD35 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x8 DUP8 ADD SLOAD SWAP2 PUSH1 0x9 DUP9 ADD SLOAD PUSH1 0xFF AND SWAP4 PUSH1 0xA DUP10 ADD SLOAD SWAP6 PUSH1 0xB DUP11 ADD SLOAD SWAP8 PUSH1 0xC DUP12 ADD SLOAD SWAP10 DUP11 PUSH1 0xA8 SHR PUSH1 0xFF AND SWAP12 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP1 PUSH2 0xDDB DUP3 PUSH2 0x35CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 DUP2 SWAP5 ADD SWAP1 PUSH2 0xDF0 SWAP2 PUSH2 0x3881 JUMP JUMPDEST SUB PUSH2 0xDFB SWAP1 DUP4 PUSH2 0x3656 JUMP JUMPDEST PUSH1 0x20 ADD MSTORE DUP14 PUSH2 0xE09 DUP3 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 ADD MSTORE PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF DUP2 AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0xE65 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0x0 NOT DUP2 ADD SWAP2 DUP2 DUP4 GT PUSH2 0xE9C JUMPI DUP3 PUSH2 0xE91 SWAP2 PUSH2 0xE8A PUSH2 0xE97 SWAP6 DUP9 PUSH2 0x39C5 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x39C5 JUMP JUMPDEST POP PUSH2 0x39F3 JUMP JUMPDEST PUSH2 0xD03 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0xEBD PUSH2 0x3904 JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0xCF7 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH2 0xEEB PUSH2 0x4237 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xFD1 JUMPI DUP2 ISZERO PUSH2 0xF9E JUMPI DUP1 ISZERO PUSH2 0xF60 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x4 ADD DUP4 SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x17B8644F386D1C7C7138EF98B3C8035622BBE94D7BE9B26F71D2654A547C2943 SWAP2 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081B5A5B9A5B5D5B481C195C9A5BD9 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x496E76616C696420415059 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F74206578697374206F7220697320696E61637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7665 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x102F CALLDATASIZE PUSH2 0x3736 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x109B JUMPI JUMPDEST PUSH2 0x104D SWAP1 PUSH2 0x3D0B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x1085 JUMPI DUP3 PUSH2 0x107D SWAP2 PUSH1 0x1 PUSH2 0x1083 SWAP6 ADD DUP2 SSTORE PUSH2 0x3D56 JUMP JUMPDEST SWAP1 PUSH2 0x3D72 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1044 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 PUSH1 0x1 DUP4 ADD SWAP1 PUSH2 0x110F SWAP2 PUSH2 0x3881 JUMP JUMPDEST SUB PUSH2 0x111A SWAP1 DUP5 PUSH2 0x3656 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x3 DUP2 ADD SLOAD SWAP1 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x8 DUP5 ADD SLOAD SWAP1 PUSH1 0x9 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP3 PUSH1 0xA DUP7 ADD SLOAD SWAP5 PUSH1 0xB DUP8 ADD SLOAD SWAP7 PUSH1 0xC ADD SLOAD SWAP8 DUP9 PUSH1 0xA8 SHR PUSH1 0xFF AND SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE DUP14 PUSH1 0x20 DUP2 ADD PUSH2 0x1E0 SWAP1 MSTORE PUSH2 0x1E0 ADD PUSH2 0x1185 SWAP2 PUSH2 0x34C2 JUMP JUMPDEST SWAP12 DUP14 PUSH2 0x1190 DUP3 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 ADD MSTORE PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF DUP2 AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x11EC DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x1C0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x120F PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1217 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12A7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1258 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 OR PUSH1 0x7 SSTORE PUSH1 0xA DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636520616464726573732063616E6E6F74206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11DBDD995C9B985B98D948185B1C9958591E481CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x12F3 CALLDATASIZE PUSH2 0x3720 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1330 JUMPI JUMPDEST PUSH2 0x1311 SWAP1 PUSH2 0x3D0B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x132C PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x39A0 JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1308 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x1352 CALLDATASIZE PUSH2 0x3736 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x13CB JUMPI JUMPDEST PUSH2 0x1370 SWAP1 PUSH2 0x3D0B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1083 JUMPI DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x13A0 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3D56 JUMP JUMPDEST POP SLOAD DUP3 MLOAD EQ PUSH2 0x13B1 JUMPI PUSH1 0x1 ADD PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x107D SWAP1 PUSH2 0x1083 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3D56 JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1367 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x13ED CALLDATASIZE PUSH2 0x3720 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1426 JUMPI JUMPDEST PUSH2 0x140B SWAP1 PUSH2 0x3D0B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x132C PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x3973 JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1402 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1456 PUSH2 0x4237 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1473 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x3CCA JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x14D8 PUSH2 0x3677 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1562 PUSH2 0x3677 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x1579 PUSH2 0x4215 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1862 JUMPI JUMPDEST ISZERO PUSH2 0x181E JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x15CF DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x1650 PUSH1 0x1 DUP5 ADD SWAP4 DUP5 SLOAD SWAP1 PUSH2 0x15F1 DUP3 ISZERO ISZERO PUSH2 0x3A19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP3 ADD SWAP2 PUSH2 0x1620 PUSH1 0x7 DUP5 SLOAD SWAP3 PUSH2 0x1616 PUSH1 0xFF DUP6 AND PUSH2 0x1610 DUP2 PUSH2 0x34E7 JUMP JUMPDEST ISZERO PUSH2 0x3A6F JUMP JUMPDEST ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x1636 PUSH1 0x5 DUP8 ADD SWAP2 DUP3 SLOAD PUSH2 0x39A0 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x64 PUSH2 0x1649 DUP3 PUSH1 0xB DUP10 ADD SLOAD PUSH2 0x398D JUMP JUMPDEST DIV SWAP1 PUSH2 0x39A0 JUMP JUMPDEST PUSH2 0x1661 PUSH1 0xFF PUSH1 0xC DUP8 ADD SLOAD AND DUP3 PUSH2 0x398D JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SSTORE PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD PUSH2 0x1684 DUP2 PUSH2 0x3A02 JUMP JUMPDEST SWAP5 PUSH2 0x1692 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x3656 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1754 JUMPI POP POP POP POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1724 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x16D4 DUP2 DUP8 PUSH2 0x39C5 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1713 JUMPI JUMPDEST POP ADD PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171E SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP7 PUSH2 0x170C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4261 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x174A DUP6 SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 ADD SWAP1 DUP4 PUSH2 0x39D9 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1767 DUP2 PUSH2 0x361E JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1785 DUP2 PUSH2 0x177E DUP2 DUP10 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST SUB DUP3 PUSH2 0x3656 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x179A DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x17B3 DUP2 PUSH2 0x177E DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x180A DUP2 PUSH2 0x177E DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865207661756C7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x158E JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1892 PUSH1 0x4 CALLDATALOAD PUSH2 0x3BBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x18CA JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x197F DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH2 0x140 PUSH2 0x192D PUSH2 0x1908 DUP7 DUP6 ADD MLOAD PUSH2 0x160 DUP9 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD SWAP1 PUSH2 0x34C2 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x1916 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x34C2 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH2 0x140 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x34C2 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x18BB JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x19A8 PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A33 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x19EE JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND OR PUSH1 0xD SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F76657220616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x10DBDD995C88185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1A85 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI PUSH2 0x1B32 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x36D9 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x3AB JUMPI PUSH1 0xE4 CALLDATALOAD SWAP3 PUSH1 0xC4 CALLDATALOAD PUSH1 0x2 DUP6 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3AB JUMPI PUSH2 0x1B70 PUSH2 0x4237 JUMP JUMPDEST PUSH2 0x1B79 DUP7 PUSH2 0x34F1 JUMP JUMPDEST DUP6 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1DC7 JUMPI JUMPDEST POP ISZERO PUSH2 0x1D82 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xE9C JUMPI PUSH1 0x6 SSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 DUP7 DUP6 SSTORE PUSH1 0x1 DUP6 ADD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1085 JUMPI PUSH2 0x1BCA DUP3 SLOAD PUSH2 0x3847 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1D3A JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1CD1 JUMPI SWAP1 DUP1 PUSH2 0x1C42 SWAP5 SWAP4 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1CC6 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x3 DUP8 ADD SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x4 DUP8 ADD SSTORE PUSH1 0x0 PUSH1 0x5 DUP8 ADD SSTORE PUSH1 0x0 PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0x0 PUSH1 0x6 DUP8 ADD SSTORE PUSH1 0x9 DUP7 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP7 ADD PUSH2 0x39AD JUMP JUMPDEST DUP1 PUSH1 0xB DUP6 ADD SSTORE PUSH1 0xC DUP5 ADD SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x64 SUB SWAP6 PUSH1 0x64 DUP8 GT PUSH2 0xE9C JUMPI PUSH32 0xF01906DC0AC306FA816E50166A7ED46AF1F05721CB90CEA30BEEBDD8DEDE3A6D SWAP7 PUSH1 0xA PUSH2 0x1CC1 SWAP8 ADD SSTORE PUSH2 0x1C8F DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xFF PUSH1 0xA8 SHL ADD NOT SWAP1 SWAP3 AND OR PUSH1 0xA8 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA8 SHL AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE SWAP1 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 DUP4 ADD SWAP1 PUSH2 0x34C2 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP12 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D22 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x1C42 SWAP7 SWAP6 SWAP5 PUSH1 0x1 SWAP5 LT PUSH2 0x1D09 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1C05 JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP14 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1CE3 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1D78 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D6C JUMPI POP PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720417373657420666F72204465706F736974000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO ISZERO DUP8 PUSH2 0x1B83 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x1DEA PUSH2 0x3677 JUMP JUMPDEST PUSH2 0x1DF2 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E8C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1E47 JUMPI DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xD SLOAD AND OR PUSH1 0xD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15985D5B1D08185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x3AB JUMPI PUSH1 0x0 PUSH2 0x120 PUSH1 0x40 MLOAD PUSH2 0x1F27 DUP2 PUSH2 0x3602 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1F91 DUP3 PUSH2 0x3602 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD SLOAD SWAP3 SWAP8 SWAP3 PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x1FDC DUP2 PUSH2 0x34E7 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x5 DUP6 ADD SLOAD SWAP3 PUSH1 0xA0 DUP8 ADD SWAP4 DUP5 MSTORE PUSH2 0x206B PUSH1 0x20 PUSH1 0x6 DUP9 ADD SLOAD SWAP7 PUSH1 0xC0 DUP11 ADD SWAP8 DUP9 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x7 DUP12 ADD SLOAD SWAP11 PUSH1 0xE0 DUP14 ADD SWAP12 DUP13 MSTORE PUSH2 0x100 PUSH1 0x8 DUP3 ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE ADD SLOAD AND SWAP11 PUSH2 0x120 DUP14 ADD SWAP12 PUSH2 0x202E DUP2 PUSH2 0x34F1 JUMP JUMPDEST DUP13 MSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4149605 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 DUP5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x216A JUMPI JUMPDEST POP DUP1 PUSH2 0x215B JUMPI POP PUSH2 0x20AA PUSH2 0x12C PUSH2 0x20A2 DUP8 MLOAD JUMPDEST TIMESTAMP DUP11 MLOAD DUP1 TIMESTAMP GT PUSH2 0x2153 JUMPI JUMPDEST POP PUSH2 0x39A0 JUMP JUMPDEST DIV DUP4 MLOAD PUSH2 0x398D JUMP JUMPDEST DUP8 MSTORE DUP6 MLOAD TIMESTAMP DUP2 GT PUSH2 0x211D JUMPI POP PUSH2 0x140 SWAP10 PUSH1 0x0 DUP6 MSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP11 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 MSTORE SWAP1 MLOAD PUSH1 0x20 DUP12 ADD MSTORE SWAP1 MLOAD SWAP1 DUP10 ADD MSTORE MLOAD PUSH1 0x60 DUP9 ADD MSTORE MLOAD PUSH2 0x20ED DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE MLOAD PUSH1 0xA0 DUP7 ADD MSTORE MLOAD PUSH1 0xC0 DUP6 ADD MSTORE MLOAD PUSH1 0xE0 DUP5 ADD MSTORE MLOAD PUSH2 0x100 DUP4 ADD MSTORE MLOAD PUSH2 0x2115 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x2128 SWAP1 TIMESTAMP SWAP1 PUSH2 0x39A0 JUMP JUMPDEST SWAP10 PUSH3 0x15180 DUP12 ADD SWAP11 DUP12 DUP2 GT PUSH2 0xE9C JUMPI PUSH3 0x1517F ADD SWAP11 DUP12 GT PUSH2 0xE9C JUMPI PUSH3 0x15180 PUSH2 0x140 SWAP12 DIV DUP6 MSTORE PUSH2 0x20BF JUMP JUMPDEST SWAP1 POP DUP16 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x12C PUSH2 0x20A2 PUSH2 0x20AA SWAP3 PUSH2 0x2091 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2194 JUMPI JUMPDEST DUP2 PUSH2 0x2184 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x514 JUMPI POP MLOAD DUP12 PUSH2 0x207E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2177 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x21B8 PUSH2 0x4215 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x224C PUSH1 0x1 DUP5 ADD SWAP4 DUP5 SLOAD SWAP1 PUSH2 0x2204 DUP3 ISZERO ISZERO PUSH2 0x3A19 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP3 ADD SWAP2 PUSH2 0x2223 PUSH1 0x7 DUP5 SLOAD SWAP3 PUSH2 0x1616 PUSH1 0xFF DUP6 AND PUSH2 0x1610 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x2239 PUSH1 0x5 DUP5 ADD SWAP2 DUP3 SLOAD PUSH2 0x39A0 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x64 PUSH2 0x1649 DUP3 PUSH1 0xB DUP7 ADD SLOAD PUSH2 0x398D JUMP JUMPDEST SWAP2 PUSH1 0xC DUP3 ADD SWAP3 PUSH2 0x2260 PUSH1 0xFF DUP6 SLOAD AND DUP3 PUSH2 0x398D JUMP JUMPDEST PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD PUSH2 0x2283 DUP2 PUSH2 0x3A02 JUMP JUMPDEST SWAP5 PUSH2 0x2291 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x3656 JUMP JUMPDEST DUP2 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2439 JUMPI POP POP POP POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2323 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x22D3 DUP2 DUP8 PUSH2 0x39C5 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x360 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x2312 JUMPI JUMPDEST POP ADD PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231D SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP7 PUSH2 0x230B JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD PUSH1 0xA8 SHR AND PUSH2 0x2338 DUP2 PUSH2 0x34F1 JUMP JUMPDEST SUB PUSH2 0x240B JUMPI SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x23B8 JUMPI JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4261 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x23A5 PUSH2 0x174A SWAP3 PUSH2 0x3B7B JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x1 CALLER SWAP7 ADD SWAP1 DUP4 PUSH2 0x39D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2403 JUMPI JUMPDEST DUP2 PUSH2 0x23D3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4261 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x23A5 PUSH2 0x23FA PUSH2 0x174A SWAP4 PUSH2 0x3980 JUMP JUMPDEST SWAP3 POP POP SWAP2 PUSH2 0x2388 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x23C6 JUMP JUMPDEST POP PUSH2 0x174A DUP2 PUSH2 0x2434 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4261 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SLOAD CALLER GAS CALL PUSH2 0x3D5 PUSH2 0x3AFF JUMP JUMPDEST PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x244C DUP2 PUSH2 0x361E JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2463 DUP2 PUSH2 0x177E DUP2 DUP10 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x2478 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x2491 DUP2 PUSH2 0x177E DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x24E8 DUP2 PUSH2 0x177E DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x2525 PUSH1 0x20 SWAP2 PUSH2 0x368D JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x2580 PUSH2 0x3677 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2975 JUMPI POP PUSH2 0x25A6 DUP5 PUSH2 0x3A02 JUMP JUMPDEST SWAP4 PUSH2 0x25B4 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x3656 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x25C3 PUSH1 0x1F NOT SWAP2 PUSH2 0x3A02 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2910 JUMPI POP POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x0 SWAP1 PUSH1 0x1 JUMPDEST DUP5 DUP2 GT ISZERO PUSH2 0x26BD JUMPI DUP7 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2624 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 PUSH2 0x120 DUP1 PUSH2 0x2655 DUP5 MLOAD PUSH2 0x140 DUP6 MSTORE PUSH2 0x140 DUP6 ADD SWAP1 PUSH2 0x34C2 JUMP JUMPDEST SWAP4 DUP6 DUP2 ADD MLOAD DUP7 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x2615 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x26FD DUP2 PUSH2 0x3602 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x120 PUSH1 0xFF PUSH1 0x9 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP6 ADD SWAP6 DUP7 MSTORE DUP3 PUSH1 0x4 DUP3 ADD SLOAD AND PUSH2 0x2741 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE ADD SLOAD AND SWAP2 PUSH2 0x277C DUP4 PUSH2 0x34F1 JUMP JUMPDEST ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x39E671F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP13 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x28DD JUMPI JUMPDEST POP PUSH2 0x27C4 SWAP2 MLOAD PUSH2 0x398D JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2803 JUMPI JUMPDEST POP POP PUSH2 0x27FE SWAP1 PUSH2 0x39F3 JUMP JUMPDEST PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 DUP3 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x8 DUP9 ADD SLOAD PUSH1 0x9 DUP10 ADD SLOAD SWAP7 MLOAD SWAP12 SWAP9 PUSH1 0xFF SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP6 SWAP2 SWAP5 SWAP3 SWAP4 SWAP3 SWAP1 PUSH2 0x2863 DUP14 PUSH2 0x3602 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x1 DUP2 SWAP4 ADD SWAP1 PUSH2 0x2876 SWAP2 PUSH2 0x3881 JUMP JUMPDEST SUB PUSH2 0x2881 SWAP1 DUP3 PUSH2 0x3656 JUMP JUMPDEST DUP13 MSTORE DUP10 PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE DUP1 PUSH2 0x28BF SWAP1 PUSH2 0x39F3 JUMP JUMPDEST SWAP4 PUSH2 0x28CA DUP3 DUP11 PUSH2 0x39C5 JUMP JUMPDEST MSTORE PUSH2 0x28D5 SWAP1 DUP9 PUSH2 0x39C5 JUMP JUMPDEST POP DUP8 DUP1 PUSH2 0x27F3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2908 JUMPI JUMPDEST DUP2 PUSH2 0x28F6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x514 JUMPI POP MLOAD PUSH2 0x27C4 PUSH2 0x27B9 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP6 SWAP5 SWAP6 MLOAD PUSH2 0x2922 DUP2 PUSH2 0x3602 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE DUP3 DUP3 DUP10 ADD ADD MSTORE ADD SWAP4 SWAP3 SWAP4 PUSH2 0x25C7 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP5 SWAP4 SWAP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x29B8 JUMPI JUMPDEST PUSH2 0x29B0 SWAP1 PUSH2 0x39F3 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2594 JUMP JUMPDEST SWAP4 PUSH2 0x29C5 PUSH2 0x29B0 SWAP2 PUSH2 0x39F3 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x29A7 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH2 0x2A10 DUP3 PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0x2A18 PUSH2 0x3677 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x44 CALLDATALOAD DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 PUSH1 0x64 CALLDATALOAD DUP3 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x322C JUMPI PUSH1 0x80 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x2 DUP4 LT ISZERO PUSH2 0x648 JUMPI PUSH1 0xA0 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH2 0x3228 JUMPI PUSH1 0xC0 DUP7 ADD SWAP5 DUP6 MSTORE PUSH2 0x2A81 PUSH2 0x4215 JUMP JUMPDEST DUP8 MLOAD DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP5 PUSH1 0xFF PUSH1 0x9 DUP8 ADD SLOAD AND ISZERO PUSH2 0x31D8 JUMPI PUSH1 0xC DUP7 ADD SWAP5 DUP6 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND SWAP2 MLOAD PUSH2 0x2AB5 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2ABE DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2AC7 DUP4 PUSH2 0x34F1 JUMP JUMPDEST DUP3 SUB PUSH2 0x3184 JUMPI DUP4 MLOAD PUSH1 0x4 DUP10 ADD SLOAD LT PUSH2 0x314C JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR AND SUB PUSH2 0x3107 JUMPI DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP12 KECCAK256 DUP13 MLOAD DUP13 MSTORE SWAP1 SWAP2 MSTORE DUP10 KECCAK256 DUP6 MLOAD PUSH2 0x2B1F DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2B28 DUP2 PUSH2 0x34F1 JUMP JUMPDEST DUP11 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD PUSH2 0x30B0 JUMPI PUSH1 0x1 SWAP1 PUSH2 0x2B45 DUP2 PUSH2 0x34F1 JUMP JUMPDEST SUB PUSH2 0x3053 JUMPI DUP3 MLOAD ISZERO PUSH2 0x300E JUMPI MLOAD DUP7 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP14 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x906 JUMPI PUSH2 0x2FD7 JUMPI JUMPDEST POP DUP2 MLOAD PUSH2 0x2BAE PUSH1 0x5 DUP8 ADD SWAP2 DUP3 SLOAD PUSH2 0x3973 JUMP JUMPDEST SWAP1 SSTORE DUP2 MLOAD SWAP4 JUMPDEST PUSH2 0x2BDA PUSH1 0xFF PUSH2 0x2BD1 PUSH1 0x5 DUP10 ADD SLOAD PUSH1 0x64 PUSH2 0x1649 DUP3 PUSH1 0xB DUP14 ADD SLOAD PUSH2 0x398D JUMP JUMPDEST SWAP3 SLOAD AND DUP3 PUSH2 0x398D JUMP JUMPDEST PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0x6 DUP7 ADD SSTORE PUSH2 0x16D PUSH1 0x64 PUSH2 0x2BF7 PUSH1 0x3 DUP9 ADD SLOAD DUP8 PUSH2 0x398D JUMP JUMPDEST DIV DIV SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 MLOAD AND SWAP1 DUP10 MLOAD SWAP3 MLOAD PUSH3 0x15180 DUP2 MUL DUP2 DUP2 DIV PUSH3 0x15180 EQ DUP3 ISZERO OR ISZERO PUSH2 0x2FC3 JUMPI SWAP3 PUSH2 0x2D6A SWAP5 SWAP3 PUSH1 0x9 SWAP3 DUP12 PUSH2 0x2C38 DUP15 SWAP16 SWAP8 SWAP15 SWAP14 SWAP15 TIMESTAMP PUSH2 0x3973 JUMP JUMPDEST SWAP2 DUP14 DUP13 DUP13 DUP7 MLOAD SWAP10 PUSH2 0x2C48 DUP12 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP9 PUSH2 0x2C55 DUP11 PUSH2 0x3602 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP10 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP10 ADD SWAP3 DUP5 DUP5 MSTORE PUSH1 0xA0 DUP11 ADD SWAP6 DUP7 MSTORE DUP13 PUSH1 0xC0 DUP12 ADD SWAP8 TIMESTAMP DUP10 MSTORE PUSH1 0xE0 DUP13 ADD SWAP10 DUP11 MSTORE PUSH2 0x100 DUP13 ADD SWAP11 DUP8 DUP13 MSTORE PUSH2 0x120 DUP14 ADD SWAP15 DUP16 PUSH2 0x2CA4 DUP3 PUSH2 0x34F1 JUMP JUMPDEST MSTORE MLOAD PUSH2 0x2CAF DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2CB8 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2F21 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 SWAP5 MLOAD DUP11 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP10 KECCAK256 DUP10 DUP1 MSTORE SWAP1 MSTORE SWAP2 SWAP1 SWAP7 KECCAK256 SWAP11 MLOAD DUP12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR DUP11 SSTORE MLOAD PUSH1 0x1 DUP11 ADD SSTORE MLOAD PUSH1 0x2 DUP10 ADD SSTORE MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH2 0x2D2A SWAP1 PUSH2 0x2D21 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x39AD JUMP JUMPDEST MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD PUSH1 0x8 DUP3 ADD SSTORE ADD SWAP1 MLOAD PUSH2 0x2D4E DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2D57 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH2 0x3BBF JUMP JUMPDEST SWAP4 DUP6 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x2DDD JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2D8D DUP2 DUP9 PUSH2 0x39C5 JUMP JUMPDEST MLOAD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x63C JUMPI DUP9 SWAP3 PUSH1 0x24 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x106B5DA1 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x906 JUMPI DUP9 PUSH1 0x1 SWAP4 PUSH2 0x2DCD JUMPI JUMPDEST POP POP ADD PUSH2 0x2D6D JUMP JUMPDEST PUSH2 0x2DD6 SWAP2 PUSH2 0x3656 JUMP JUMPDEST DUP11 DUP9 PUSH2 0x2DC5 JUMP JUMPDEST POP PUSH1 0x10 SLOAD DUP7 SWAP6 POP DUP8 SWAP1 DUP7 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2EE9 JUMPI JUMPDEST POP ISZERO PUSH2 0x2E89 JUMPI JUMPDEST POP DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP2 SWAP1 DUP3 LT PUSH2 0x2E75 JUMPI PUSH1 0x40 SWAP8 SWAP4 PUSH2 0x2E65 PUSH1 0x1 SWAP7 SWAP5 PUSH32 0x6F85D9948D6CA3DD6CE6CE7D175DA22B4E865827AE6FCD530EC7EDAC1240F928 SWAP5 DUP9 SWAP5 SSTORE DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP5 MLOAD DUP11 MLOAD SWAP4 DUP5 SWAP4 ADD SWAP1 DUP4 PUSH2 0x39D9 JUMP JUMPDEST SUB SWAP1 LOG2 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x2ED5 JUMPI DUP1 PUSH1 0x1 PUSH2 0x2EB1 SWAP3 ADD PUSH1 0x10 SSTORE PUSH2 0x368D JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP3 SWAP1 SHL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP7 PUSH2 0x2DF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH2 0x2EF2 DUP2 PUSH2 0x368D JUMP JUMPDEST SWAP1 SLOAD DUP6 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2F17 JUMPI PUSH1 0x1 ADD PUSH2 0x2DE9 JUMP JUMPDEST POP POP PUSH1 0x1 DUP9 PUSH2 0x2DF1 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 SWAP5 MLOAD DUP11 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP10 KECCAK256 PUSH1 0x1 DUP1 DUP12 MSTORE SWAP2 MSTORE SWAP3 SWAP1 SWAP8 KECCAK256 SWAP12 MLOAD DUP13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 AND OR DUP12 SSTORE SWAP1 MLOAD SWAP1 DUP11 ADD SSTORE MLOAD PUSH1 0x2 DUP10 ADD SSTORE MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH2 0x2F85 SWAP1 PUSH2 0x2D21 DUP2 PUSH2 0x34E7 JUMP JUMPDEST MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD PUSH1 0x8 DUP3 ADD SSTORE ADD SWAP1 MLOAD PUSH2 0x2FA9 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x2FB2 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x2D64 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3006 JUMPI JUMPDEST DUP2 PUSH2 0x2FF0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x3656 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x644 JUMPI PUSH2 0x3001 SWAP1 PUSH2 0x3980 JUMP JUMPDEST PUSH2 0x2B9C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE ISZERO PUSH2 0x3072 JUMPI PUSH1 0x5 DUP6 ADD PUSH2 0x3069 CALLVALUE DUP3 SLOAD PUSH2 0x3973 JUMP JUMPDEST SWAP1 SSTORE CALLVALUE SWAP4 PUSH2 0x2BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4465706F7369742063616E6E6F74206265207A65726F PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C7265616479206465706F736974656420696E746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1D1A1A5CC81C1BDBDB PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F7420616363657074207468697320617373657400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14195C9A5BD9081D1BDBC81CDA1BDC9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F74206163636570742074686973206465706F7369 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x742074797065 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20697320696E616374697665206F7220646F6573206E6F7420657869 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1CDD PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x10 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3363 JUMPI POP POP POP DUP2 PUSH2 0x3317 SWAP2 SUB DUP3 PUSH2 0x3656 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3341 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3333 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x3301 JUMP JUMPDEST CALLVALUE PUSH2 0x3AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH2 0x339B PUSH2 0x3904 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x349B PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xC PUSH1 0x40 MLOAD SWAP3 PUSH2 0x33C0 DUP5 PUSH2 0x35CB JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x33D8 DUP2 PUSH2 0x177E DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE DUP3 PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x33ED DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP1 DUP3 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD DUP5 AND ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP7 ADD MSTORE SWAP2 ADD SLOAD DUP1 DUP4 AND PUSH2 0x180 DUP6 ADD MSTORE SWAP1 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0xA8 SHR AND PUSH2 0x3481 DUP2 PUSH2 0x34F1 JUMP JUMPDEST PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x34FB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x34B2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x34A2 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x34DB DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x349F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0xB3F JUMPI JUMP JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0xB3F JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH2 0x1C0 DUP1 PUSH2 0x351F PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x1E0 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1E0 DUP6 ADD SWAP1 PUSH2 0x34C2 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x352E DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF PUSH2 0x180 DUP3 ADD MLOAD AND PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x1A0 DUP3 ADD MLOAD AND PUSH2 0x1A0 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x35C6 DUP4 PUSH2 0x34F1 JUMP JUMPDEST ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1085 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x36A8 JUMPI PUSH1 0x10 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1085 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3AB JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x36F0 DUP3 PUSH2 0x36BE JUMP JUMPDEST SWAP3 PUSH2 0x36FE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3656 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI PUSH2 0x160 DUP2 DUP4 SUB PUSH1 0x3 NOT ADD SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3774 DUP4 PUSH2 0x361E JUMP JUMPDEST DUP2 PUSH1 0x4 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x24 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x4 PUSH2 0x379D SWAP3 DUP6 ADD ADD PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x64 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3AB JUMPI DUP2 PUSH1 0x4 PUSH2 0x37D7 SWAP3 DUP6 ADD ADD PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x84 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA4 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC4 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE4 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x104 DUP3 ADD CALLDATALOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x124 DUP3 ADD CALLDATALOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x144 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3AB JUMPI PUSH2 0x383E SWAP3 ADD PUSH1 0x4 ADD PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3877 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3861 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3856 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x3891 DUP4 PUSH2 0x3847 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x38E7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x38AD JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x38CD JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x38BC JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3911 DUP3 PUSH2 0x35CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP4 DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xE9C JUMPI JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xE9C JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xE9C JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x39B7 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x36A8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x39F0 SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x3881 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xE9C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1085 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3A20 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206465706F73697420666F756E6420666F72207468697320616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3A76 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4465706F736974206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3ABA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F73697420706572696F6420686173206E6F7420656E64656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3B2A JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3B10 DUP3 PUSH2 0x36BE JUMP JUMPDEST SWAP2 PUSH2 0x3B1E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3656 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3B36 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6174697665206173736574207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3B82 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x3BD7 DUP2 PUSH2 0x3A02 JUMP JUMPDEST SWAP2 PUSH2 0x3BE5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3656 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3C07 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x3C1A DUP2 PUSH2 0x361E JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3C31 DUP2 PUSH2 0x177E DUP2 DUP10 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x3C46 DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3C5F DUP2 PUSH2 0x177E DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3CB6 DUP2 PUSH2 0x177E DUP2 PUSH1 0xA DUP12 ADD PUSH2 0x3881 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST ISZERO PUSH2 0x3CD1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x506F6F6C206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3D12 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520636F76657220636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x36A8 JUMPI PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x4126 JUMPI DUP3 MLOAD DUP2 SSTORE PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1085 JUMPI DUP2 SWAP1 PUSH2 0x3DA4 DUP5 SLOAD PUSH2 0x3847 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x40D3 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x406E JUMPI PUSH1 0x0 SWAP3 PUSH2 0x4063 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x3DF3 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x3DEA DUP2 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x3 DUP2 ADD PUSH1 0x60 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1085 JUMPI PUSH2 0x3E17 DUP4 SLOAD PUSH2 0x3847 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x401B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3FAD JUMPI SWAP2 DUP1 PUSH1 0xA SWAP5 SWAP3 PUSH2 0x140 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3FA2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP6 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP6 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE ADD SWAP3 ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1085 JUMPI PUSH2 0x3EB4 DUP3 SLOAD PUSH2 0x3847 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3F5A JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x3EF8 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3EED JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3ED7 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3F42 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x3F29 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3F1F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3F0A JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x3F98 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x3F8C JUMPI POP PUSH2 0x3EBD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3F7F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3F76 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3E42 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4003 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH2 0x140 SWAP9 SWAP7 PUSH1 0xA SWAP9 SWAP7 LT PUSH2 0x3FEA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3E57 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3FDD JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x3FC0 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x4059 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x404D JUMPI POP PUSH2 0x3E20 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4040 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x4037 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3DC4 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x40BB JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x40A2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3DD9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x4095 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x407F JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x411C JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x410D JUMPI POP PUSH2 0x3DAD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x4100 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x40F2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x3AB JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3AB JUMPI DUP1 MLOAD PUSH2 0x4166 DUP2 PUSH2 0x36BE JUMP JUMPDEST SWAP3 PUSH2 0x4174 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x3656 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x3AB JUMPI PUSH2 0x39F0 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x349F JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x120 SWAP2 SUB SLT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x41AB DUP3 PUSH2 0x363A JUMP JUMPDEST PUSH2 0x41B4 DUP2 PUSH2 0x413C JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x100 SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x4226 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x424B JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID BASEFEE PUSH0 SHL 0xB6 MSTORE 0x4C PUSH7 0x3555797E00171A LT RETURN COINBASE PUSH6 0x6E59B02D6B55 PUSH27 0xA38BA7D5D9751A2646970667358221220FC0F18F9A583883457F7 0xA6 0xA9 0xCD 0x2E 0xA8 PUSH24 0x4512BB24F47DC3467A6FEC3ADA49E10464736F6C63430008 SHL STOP CALLER ","sourceMap":"2917:19868:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;2466:103:4;;:::i;:::-;14000:14:9;2917:19868;;;-1:-1:-1;;;14000:69:9;;2917:19868;14000:69;;2917:19868;;;14058:10;2917:19868;;;;-1:-1:-1;;;;;2917:19868:9;;;;14000:69;2917:19868;;;;14000:69;;;;;;2917:19868;14000:69;2917:19868;14000:69;;;2917:19868;14087:23;;2917:19868;;;14087:27;2917:19868;;;14186:33;2917:19868;;;;;;;;;;14186:33;;;2917:19868;14186:33;;2917:19868;14186:33;;;;;;;2917:19868;14186:33;;;2917:19868;14261:15;2917:19868;14261:15;;;2917:19868;;;;:::i;:::-;;;;:::i;:::-;14290:38;2917:19868;;;14366:11;2917:19868;;;;;-1:-1:-1;;;14359:111:9;;14058:10;2917:19868;14359:111;;2917:19868;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;2917:19868:9;14359:111;;;;;;;2917:19868;14359:111;;;14286:443;14484:41;14739:56;14484:41;;14000:69;14484:41;;:::i;:::-;14000:14;2917:19868;;;-1:-1:-1;;;14739:56:9;;2917:19868;14739:56;;2917:19868;;;;14058:10;2917:19868;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;14739:56;;;;;;;;;;;14286:443;2917:19868;;;;14739:56;;;14000:69;14739:56;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;2917:19868;;;;;;;;;14359:111;;;2917:19868;14359:111;;2917:19868;14359:111;;;;;;2917:19868;14359:111;;;:::i;:::-;;;2917:19868;;;;14739:56;2917:19868;14484:41;2917:19868;14000:69;2917:19868;;:::i;:::-;14359:111;;;;;;2917:19868;;;;14359:111;;;-1:-1:-1;14359:111:9;;14286:443;2917:19868;14739:56;2917:19868;14670:48;2917:19868;;;;14000:69;2917:19868;;14058:10;14575:81;;;;:::i;:::-;;14670:48;:::i;:::-;14286:443;;14186:33;;;;;;;;;;;:::i;:::-;;;2917:19868;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;:::i;:::-;;;;;14186:33;;;2917:19868;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14000:69;2917:19868;;;;;;;;;;;;:::i;:::-;14000:69;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;14186:33;2917:19868;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;14000:69;;;;;;;;;;;;;;:::i;:::-;;;;2917:19868;;;;;;-1:-1:-1;;2917:19868:9;;;;4333:28;2917:19868;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;4272:24;2917:19868;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;2917:19868:9;2627:22:0;;2623:91;;3004:6;2917:19868:9;;-1:-1:-1;;;;;;2917:19868:9;;;;;;;-1:-1:-1;;;;;2917:19868:9;3052:40:0;-1:-1:-1;;3052:40:0;2917:19868:9;2623:91:0;2672:31;;;2917:19868:9;2672:31:0;2917:19868:9;;;;;2672:31:0;2917:19868:9;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;2466:103:4;;:::i;:::-;18370:19:9;2917:19868;;;-1:-1:-1;;;18370:73:9;;2917:19868;18370:73;;2917:19868;;;;;;;18370:73;;2917:19868;;;;-1:-1:-1;;;;;2917:19868:9;18370:73;;;;;;;2917:19868;18370:73;;;2917:19868;18496:22;;;;;18549:15;;;;2917:19868;;;;;;;;18568:27;2917:19868;18549:46;;:67;;;;2917:19868;;;;;18708:20;;;2917:19868;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;18747:10;:32;2917:19868;;18814:44;2917:19868;18822:13;;;2917:19868;;18814:44;:::i;:::-;2917:19868;18889:8;;2917:19868;;18901:25;18549:15;18901:25;;2917:19868;;;18889:37;;2917:19868;;19038:37;2917:19868;;;;18991:37;:8;;;2917:19868;;;18991:37;:::i;:::-;2917:19868;;;;19038:37;;:::i;:::-;2917:19868;;19122:57;2917:19868;;19122:57;:::i;:::-;19194:10;;19229:3;2917:19868;;19206:21;;;;;18991:8;2917:19868;-1:-1:-1;;;;;2917:19868:9;;19279:13;;;;:::i;:::-;;2917:19868;19248:48;;;;;2917:19868;;18370:73;2917:19868;;;;;;;;;;;;19248:48;;2917:19868;19248:48;;2917:19868;19248:48;;;;;;;;2917:19868;19248:48;;;19229:3;;;2917:19868;19194:10;;19248:48;;;;:::i;:::-;;;;;;2917:19868;;;;;;;;;19206:21;;;;;;;2917:19868;;;;;18370:19;2917:19868;;19317:62;;;;;;2917:19868;;18370:73;2917:19868;;;;;;;;;;;;19317:62;;2917:19868;19317:62;;2917:19868;19317:62;;;;;;;19395:127;19317:62;;2917:19868;19317:62;;;19189:118;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19395:127;2917:19868;;;;;19533:5;2917:19868;;;;19533:51;;;;;2917:19868;;-1:-1:-1;;;19533:51:9;;18747:10;2917:19868;19533:51;;2917:19868;;;;;;;;;;;;;;;;;;19533:51;;;;;;;;19600:63;19533:51;;;19189:118;2917:19868;;;;;;;;;;;;;;;19622:13;;2917:19868;:::i;:::-;;;;;;18747:10;;19600:63;;;;2917:19868;;;;;19533:51;;;;:::i;:::-;;;;;;2917:19868;;;;;;;;;;19533:51;2917:19868;;;19317:62;;;;:::i;:::-;;;;;;2917:19868;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;18370:73;2917:19868;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;18370:73;2917:19868;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;18370:73;2917:19868;;;-1:-1:-1;;;2917:19868:9;;;;;;;18549:67;2917:19868;18599:17;;;2917:19868;;;18549:67;;;2917:19868;;;;;;;;;18370:73;2917:19868;;18370:73;;;;;;;;;;;;:::i;:::-;;;2917:19868;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;18370:73;;;;2917:19868;;;;;;-1:-1:-1;;2917:19868:9;;;;7650:9;2917:19868;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2917:19868:9;;;:::i;:::-;;;;;;;;;7675:13;;7687:1;7690:14;;;;;;;2917:19868;;;;;;;;;;;;;;;;;;;;;;;7754:5;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;7687:1;2917:19868;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;7706:3;2917:19868;;;7754:5;2917:19868;;;;;;7898:13;;;2917:19868;;;7934:8;;;2917:19868;;7971:14;;2917:19868;7754:5;8008:8;;2917:19868;7650:9;8045:14;;2917:19868;8087:13;;;2917:19868;8123:8;;;2917:19868;8159:13;;;;2917:19868;;;8214:27;;;;2917:19868;8281:25;;;;2917:19868;8334:13;;;;2917:19868;;;;;;;;;;;;;;;;:::i;:::-;;;;;7857:13;7687:1;7857:13;;;2917:19868;;;;:::i;:::-;;;;;;:::i;:::-;;7792:648;2917:19868;;;;;:::i;:::-;;7792:648;2917:19868;7792:648;;;2917:19868;7792:648;;;2917:19868;7792:648;;;2917:19868;7792:648;;;2917:19868;;7792:648;;2917:19868;7792:648;;;2917:19868;;;7792:648;;;2917:19868;7792:648;;;2917:19868;7792:648;;;2917:19868;;;;7792:648;;;2917:19868;8123:8;2917:19868;-1:-1:-1;;;;;2917:19868:9;7792:648;;;2917:19868;;;;:::i;:::-;7792:648;;;2917:19868;-1:-1:-1;;2917:19868:9;;;;;;;;7776:664;;;;7706:3;7776:664;;;:::i;:::-;;;;:::i;:::-;;7706:3;:::i;:::-;7675:13;;2917:19868;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;;;1500:62:0;;:::i;:::-;2917:19868:9;;;6488:5;2917:19868;;;6488:23;2917:19868;;;6488:23;2917:19868;;;;;6568:8;;2917:19868;;6610:14;;2917:19868;;;;;;6488:5;2917:19868;;;;;;;;;6662:18;;;2917:19868;;;;6697:24;2917:19868;;;;;;;;;;;;;;6750:38;;;2917:19868;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;:::i;:::-;;;;;;;22473:13;2917:19868;;22459:10;:27;:57;;;;2917:19868;22438:136;;;:::i;:::-;2917:19868;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;22459:57;-1:-1:-1;22504:12:9;2917:19868;-1:-1:-1;;;;;2917:19868:9;22459:10;22490:26;22459:57;;2917:19868;;;;;;-1:-1:-1;;2917:19868:9;;;;4401:31;2917:19868;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;4220:46;2917:19868;;;;;;;;;4220:46;;;2917:19868;4220:46;;2917:19868;;;;:::i;:::-;;;;;;:::i;:::-;4220:46;;;2917:19868;;;4220:46;;;;2917:19868;4220:46;2917:19868;4220:46;;2917:19868;4220:46;;;;2917:19868;4220:46;;;2917:19868;4220:46;;;2917:19868;4220:46;;;2917:19868;4220:46;;;;2917:19868;;;4220:46;;;;2917:19868;4220:46;;;;2917:19868;4220:46;;;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4220:46;2917:19868;-1:-1:-1;;;;;2917:19868:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;21363:10:9;2917:19868;;-1:-1:-1;;;;;2917:19868:9;;;;-1:-1:-1;;;;;2917:19868:9;;21432:25;;2917:19868;;-1:-1:-1;;;;;;2917:19868:9;;;;;21363:10;2917:19868;21539:39;2917:19868;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;:::i;:::-;;;;;;;22473:13;2917:19868;;22459:10;:27;:57;;;;2917:19868;22438:136;;;:::i;:::-;2917:19868;;6929:5;2917:19868;;6929:62;:37;2917:19868;;;6929:37;2917:19868;;;6929:62;:::i;:::-;2917:19868;;;22459:57;-1:-1:-1;22504:12:9;2917:19868;-1:-1:-1;;;;;2917:19868:9;22459:10;22490:26;22459:57;;2917:19868;;;;;;;:::i;:::-;22473:13;2917:19868;-1:-1:-1;;;;;2917:19868:9;22459:10;:27;:57;;;;2917:19868;22438:136;;;:::i;:::-;2917:19868;8659:3;2917:19868;;;;;;;;;;8625:32;;;;;2917:19868;;;;;;8682:24;2917:19868;;;;8682:24;:::i;:::-;2917:19868;;;;8682:40;8678:135;;2917:19868;;8613:10;;8678:135;8742:24;2917:19868;8742:33;2917:19868;;;;;;;;;8742:24;:::i;22459:57::-;-1:-1:-1;22504:12:9;2917:19868;-1:-1:-1;;;;;2917:19868:9;22459:10;22490:26;22459:57;;2917:19868;;;;;;;:::i;:::-;;;;;;;22473:13;2917:19868;;22459:10;:27;:57;;;;2917:19868;22438:136;;;:::i;:::-;2917:19868;;7134:5;2917:19868;;7134:62;:37;2917:19868;;;7134:37;2917:19868;;;7134:62;:::i;22459:57::-;-1:-1:-1;22504:12:9;2917:19868;-1:-1:-1;;;;;2917:19868:9;22459:10;22490:26;22459:57;;2917:19868;;;;;;-1:-1:-1;;2917:19868:9;;;;;;1500:62:0;;:::i;:::-;2917:19868:9;;;7285:5;2917:19868;;7277:54;2917:19868;7285:23;2917:19868;;;7285:23;2917:19868;;7277:54;:::i;:::-;2917:19868;;;;7285:5;2917:19868;;;;;7285:23;7341;2917:19868;;-1:-1:-1;;2917:19868:9;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;4463:27;2917:19868;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;-1:-1:-1;;;;;2917:19868:9;;:::i;:::-;;;;4632:48;2917:19868;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;20859:5;2917:19868;;;20859:5;2917:19868;;;20859:18;2917:19868;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;:::i;:::-;;;;;;;;;;;2466:103:4;;:::i;:::-;22664:13:9;2917:19868;-1:-1:-1;;;;;2917:19868:9;22650:10;:27;:57;;;;2917:19868;;;;;;;12810:5;2917:19868;;;;;;;;;;;;;;;;12865:8;2917:19868;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;12917:18;13354:93;2917:19868;12917:18;;2917:19868;;;12917:22;12909:68;12917:22;;;12909:68;:::i;:::-;2917:19868;;13008:18;;2917:19868;13109:116;13149:22;2917:19868;;;12987:112;2917:19868;;;;;;:::i;:::-;13008:44;12987:112;:::i;:::-;13149:22;2917:19868;13130:15;:41;;13109:116;:::i;:::-;2917:19868;;;;;;13286:38;12810:5;13286:16;;2917:19868;;;13286:38;:::i;:::-;2917:19868;;;13443:3;13387:52;:33;;;;2917:19868;13387:52;:::i;:::-;2917:19868;13354:93;;:::i;:::-;13477:33;2917:19868;13489:21;;;2917:19868;;13477:33;;:::i;:::-;13149:22;13520:21;;2917:19868;13562:22;;;2917:19868;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13680:10;;;;2917:19868;13715:3;2917:19868;;13692:21;;;;;2917:19868;;-1:-1:-1;;;;;2917:19868:9;;13765:13;;;;:::i;:::-;;2917:19868;13734:48;;;;;2917:19868;;;;;;;;;;;;;;;13734:48;;2917:19868;13734:48;;2917:19868;13734:48;;;;;;;2917:19868;13734:48;;;13715:3;;2917:19868;13680:10;;13734:48;2917:19868;13734:48;;;:::i;:::-;;;;13692:21;;2917:19868;-1:-1:-1;;;;;;;;;;;13692:21:9;13808:62;13692:21;2917:19868;;;13848:21;;;;13808:62;;;:::i;:::-;;;;2917:19868;;;;;13387:33;2917:19868;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;12865:8;2917:19868;;;:::i;:::-;;;;;;;;;;;;;12810:5;2917:19868;;;;;;;13562:22;2917:19868;;;;;;;13149:22;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22650:57;-1:-1:-1;22695:12:9;2917:19868;-1:-1:-1;;;;;2917:19868:9;22650:10;22681:26;22650:57;;2917:19868;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;21670:13:9;2917:19868;;-1:-1:-1;;;;;2917:19868:9;;;;-1:-1:-1;;;;;2917:19868:9;;21737:28;;2917:19868;;21808:39;2917:19868;;-1:-1:-1;;;;;;2917:19868:9;;;;;;;;;;21670:13;2917:19868;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;1500:62:0;;:::i;:::-;3004:6;2917:19868:9;;-1:-1:-1;;;;;;2917:19868:9;;;;;;;-1:-1:-1;;;;;2917:19868:9;3052:40:0;2917:19868:9;;3052:40:0;2917:19868:9;;;;;;;-1:-1:-1;;2917:19868:9;;;;4367:28;2917:19868;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;1500:62:0;;:::i;:::-;2917:19868:9;;;:::i;:::-;5623:39;;:62;;;;;2917:19868;;;;;5745:14;2917:19868;;;;;;;;;5745:14;2917:19868;;;;5801:5;2917:19868;;;;;;;;;;5853:16;;2917:19868;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6078:28;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;5891:11;;2917:19868;;;;5919:17;;2917:19868;;5801:5;5959:11;;2917:19868;;5984:16;;;2917:19868;;5745:14;6014:17;;2917:19868;6045:16;;;2917:19868;;;;;;;;;;6078:16;;:28;:::i;:::-;6116;;;;2917:19868;6170:16;;;2917:19868;;;;;;;;;;;;6309:30;6208;;2917:19868;6208:30;;2917:19868;;;;:::i;:::-;-1:-1:-1;;;;;;2917:19868:9;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;6309:30;;;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6078:28;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5801:5;2917:19868;;;;;;;;;;;;5801:5;2917:19868;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;5623:62;5666:19;;;;5623:62;;;2917:19868;;;;;;-1:-1:-1;;2917:19868:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;21979:13:9;2917:19868;-1:-1:-1;;;;;2917:19868:9;;;-1:-1:-1;;;;;2917:19868:9;22046:28;;2917:19868;;;;;;22117:39;2917:19868;;;22117:39;2917:19868;;;;22166:30;2917:19868;;;22166:30;2917:19868;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;4302:25;2917:19868;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19832:8;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;19832:8;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;19937:47;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;19937:47:9;;-1:-1:-1;;;;;2917:19868:9;;;;19937:47;;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;19937:47;;;;;;;;;;2917:19868;19937:47;;;2917:19868;-1:-1:-1;20026:14:9;;;2917:19868;20431:39;20384:9;20353:27;2917:19868;;20022:138;20191:15;2917:19868;;20191:15;;20220:36;20216:103;;20022:138;20353:27;;:::i;:::-;2917:19868;;;20431:39;:::i;:::-;2917:19868;;;;20191:15;20484:41;;20191:15;;2917:19868;;;;;;20480:255;2917:19868;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;20480:255;20615:40;20191:15;;20615:40;;:::i;:::-;2917:19868;20704:6;2917:19868;;;;;;;;;;;;;;;20704:6;2917:19868;;;;;20480:255;;20216:103;20272:36;;20216:103;;;20022:138;20384:9;20353:27;20431:39;20124:25;20022:138;;19937:47;;2917:19868;19937:47;;2917:19868;19937:47;;;;;;2917:19868;19937:47;;;:::i;:::-;;;2917:19868;;;;;;19937:47;;;;;;-1:-1:-1;19937:47:9;;2917:19868;;;;;;-1:-1:-1;;2917:19868:9;;;;;;2466:103:4;;:::i;:::-;2917:19868:9;;;11051:5;2917:19868;;;;;11115:10;;2917:19868;;11106:8;2917:19868;;;;;;;;;;;;;;;;;;;;;11205:18;11648:93;2917:19868;11205:18;;2917:19868;;;11205:22;11197:68;11205:22;;;11197:68;:::i;:::-;2917:19868;;11296:18;;2917:19868;11397:116;11437:22;2917:19868;;;11275:112;2917:19868;;;;;;:::i;11397:116::-;2917:19868;;;;;;11580:38;11051:5;11580:16;;2917:19868;;;11580:38;:::i;:::-;2917:19868;;;11737:3;11681:52;:33;;;;2917:19868;11681:52;:::i;11648:93::-;11783:21;;;;2917:19868;11771:33;2917:19868;;;;11771:33;;:::i;:::-;11437:22;11814:21;;2917:19868;11856:22;;;2917:19868;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11974:10;;;;2917:19868;12009:3;2917:19868;;11986:21;;;;;2917:19868;;-1:-1:-1;;;;;2917:19868:9;;12059:13;;;;:::i;:::-;;2917:19868;12028:48;;;;;2917:19868;;12028:48;2917:19868;;;;;;;;;;;;12028:48;;2917:19868;12028:48;;2917:19868;12028:48;;;;;;;2917:19868;12028:48;;;12009:3;;2917:19868;11974:10;;12028:48;2917:19868;12028:48;;;:::i;:::-;;;;11986:21;;;2917:19868;;;;;;;;;;:::i;:::-;12101:57;2917:19868;;;;;;;-1:-1:-1;;;12189:113:9;;11115:10;2917:19868;12189:113;;2917:19868;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;12189:113;;;;;;;;;2917:19868;12189:113;;;12097:429;12316:41;-1:-1:-1;;;;;;;;;;;12316:41:9;;12541:63;12316:41;;:::i;:::-;2917:19868;;;11115:10;;;2917:19868;11115:10;12582:21;;12541:63;;;:::i;12189:113::-;;;2917:19868;12189:113;;2917:19868;12189:113;;;;;;2917:19868;12189:113;;;:::i;:::-;;;2917:19868;;;;-1:-1:-1;;;;;;;;;;;2917:19868:9;12316:41;2917:19868;12541:63;2917:19868;;:::i;:::-;12189:113;;;;;;;;;-1:-1:-1;12189:113:9;;12097:429;2917:19868;12541:63;2917:19868;12467:48;2917:19868;;;;-1:-1:-1;;;;;;;;;;;2917:19868:9;;11115:10;12407:46;;;;:::i;12467:48::-;12097:429;;2917:19868;11681:33;2917:19868;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;11106:8;2917:19868;;;:::i;:::-;;;;;;;;;;;;;11051:5;2917:19868;;;;;;;11856:22;2917:19868;;;;;;;11437:22;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;4597:29;2917:19868;4597:29;;;;;;2917:19868;4597:29;;:::i;:::-;2917:19868;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;4438:19;2917:19868;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;:::i;:::-;9322:9;2917:19868;;;9302:13;-1:-1:-1;;;;;2917:19868:9;;9314:1;9317:14;;;;;;;2917:19868;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;9892:14:9;2917:19868;-1:-1:-1;;;;;2917:19868:9;;;;9314:1;9654:14;;;;;;;2917:19868;;;;;;;;;;;;;;;;;;;;;;;9718:5;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;9314:1;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9670:3;2917:19868;;;9718:5;2917:19868;;;;;;;;9373:8;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;9314:1;2917:19868;;;;;;;;;;;;;;;;;;9373:8;2917:19868;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;9718:5;2917:19868;;;;;;;9322:9;2917:19868;;;;;;;;;;;;;;;9892:14;2917:19868;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;9892:101:9;;-1:-1:-1;;;;;2917:19868:9;;;9892:101;;2917:19868;;;;;;;;;;;9892:101;;;;;;;;2917:19868;9892:101;;;9670:3;2917:19868;10031:39;2917:19868;;10031:39;:::i;:::-;2917:19868;;;9373:8;2917:19868;;;;;;;;;;;;;;;;;;9314:1;2917:19868;;;10105:61;2917:19868;10084:816;;9670:3;;;;;;:::i;:::-;9639:13;;10084:816;2917:19868;;;;9373:8;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;10363:112;;;2917:19868;9314:1;10512:107;;;2917:19868;10646:8;;;2917:19868;;10687:14;;2917:19868;9718:5;10728:8;;2917:19868;9892:14;10763:8;;2917:19868;;10803:13;;2917:19868;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;10284:13;9314:1;10284:13;;;2917:19868;;;;:::i;:::-;;;;;;:::i;:::-;;;10243:642;2917:19868;10243:642;;2917:19868;;10243:642;;2917:19868;;10243:642;;2917:19868;;10243:642;;2917:19868;;10243:642;;2917:19868;;10243:642;;2917:19868;;10243:642;;2917:19868;;;;10243:642;;2917:19868;;10243:642;;2917:19868;10226:13;;;;:::i;:::-;10219:666;;;;;:::i;:::-;;;;;;:::i;:::-;;10084:816;;;;9892:101;;2917:19868;9892:101;;;;;;;;;2917:19868;9892:101;;;:::i;:::-;;;2917:19868;;;;-1:-1:-1;2917:19868:9;10031:39;9892:101;;;;;-1:-1:-1;9892:101:9;;2917:19868;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9333:3;2917:19868;;;;;;9373:8;2917:19868;;;;;;;;;;;;;;;;;;9314:1;2917:19868;;;9373:61;2917:19868;9352:163;;9333:3;;;;:::i;:::-;9302:13;;;;;9352:163;9487:13;;9333:3;9487:13;;:::i;:::-;9352:163;;;;;2917:19868;;;;;;-1:-1:-1;;2917:19868:9;;;;4564:27;2917:19868;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;2466:103:4;;:::i;:::-;2917:19868:9;;;;14985:5;2917:19868;;;;;15030:21;2917:19868;15030:21;;;2917:19868;;;;;15121:22;;;2917:19868;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;15121:42;;2917:19868;;;;;15281:22;;2917:19868;-1:-1:-1;2917:19868:9;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;15376:40;2917:19868;;;;-1:-1:-1;;;;;2917:19868:9;;;15504:8;2917:19868;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;15504:108;2917:19868;;;;15695:13;2917:19868;;;:::i;:::-;15723:57;2917:19868;;;;15804:23;2917:19868;;;;;;;;;-1:-1:-1;;;15875:161:9;;-1:-1:-1;;;;;2917:19868:9;;;;15875:161;;2917:19868;15980:4;2917:19868;;;;;;;;;;;;;;;;;;;;;;;15875:161;;;;;;;;15719:575;2917:19868;;;16050:39;14985:5;16050:16;;2917:19868;;;16050:39;:::i;:::-;2917:19868;;;;15719:575;;16447:33;2917:19868;16324:93;14985:5;16324:16;;2917:19868;;16357:52;:33;;;;2917:19868;16357:52;:::i;16324:93::-;2917:19868;;;16447:33;;:::i;:::-;16491:21;;;2917:19868;16533:22;;;2917:19868;16635:3;2917:19868;16601:24;15504:8;16609:16;;2917:19868;16601:24;;:::i;:::-;2917:19868;;;;;;;;;;;;;;;;17027:6;2917:19868;;;;;17027:6;2917:19868;;;;;;;16945:15;17528:34;16945:15;;15030:21;16945:15;;16986:48;16945:15;;;;;;;16986:48;:::i;:::-;2917:19868;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;16678:432;;2917:19868;;;;16678:432;;2917:19868;;;;16678:432;;2917:19868;;;;16678:432;;2917:19868;;;;;16678:432;;2917:19868;;;16678:432;2917:19868;16678:432;;16945:15;;2917:19868;;;16678:432;;2917:19868;;;16678:432;;;2917:19868;;;;16678:432;;;2917:19868;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;17125:47;;2917:19868;-1:-1:-1;;;;;2917:19868:9;;;;;15504:8;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;14985:5;2917:19868;;;;16533:22;2917:19868;;;;16491:21;2917:19868;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;17121:360;2917:19868;17528:34;:::i;:::-;17577:10;;17612:3;2917:19868;;17589:21;;;;;2917:19868;;-1:-1:-1;;;;;2917:19868:9;;17662:13;;;;:::i;:::-;;2917:19868;17631:48;;;;;2917:19868;;;;;;;;;;;;;;;17631:48;;2917:19868;17631:48;;2917:19868;17631:48;;;;;;;;2917:19868;17631:48;;;17612:3;;;2917:19868;17577:10;;17631:48;;;;:::i;:::-;;;;;17589:21;-1:-1:-1;17754:12:9;2917:19868;17589:21;;-1:-1:-1;17589:21:9;;;;17750:23;;;;;;17733:191;17938:11;;17934:83;;17733:191;-1:-1:-1;2917:19868:9;;-1:-1:-1;;;;;2917:19868:9;;;18027:13;2917:19868;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;18085:123;2917:19868;;;18085:123;2917:19868;;;;;;;;;;;;;;;;18177:21;;;;18085:123;;;:::i;:::-;;;;2917:19868;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;18027:13;2917:19868;;;;;17934:83;2917:19868;;-1:-1:-1;;;;;2917:19868:9;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;17754:12;2917:19868;;:::i;:::-;;;-1:-1:-1;;;;;15504:8:9;2917:19868;;;;;;;;;;;;;;;;;;17934:83;;;2917:19868;-1:-1:-1;;;2917:19868:9;;;;;;;;17775:3;17798:15;;;:::i;:::-;2917:19868;;;;15504:8;2917:19868;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;17798:41;17794:120;;2917:19868;;17738:10;;17794:120;17859:17;;2917:19868;17894:5;;;17121:360;2917:19868;-1:-1:-1;;;;;2917:19868:9;;;;;15504:8;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14985:5;2917:19868;;;;16533:22;2917:19868;;;;16491:21;2917:19868;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;17121:360;;2917:19868;-1:-1:-1;;;2917:19868:9;;;;;;;;15875:161;2917:19868;15875:161;;2917:19868;15875:161;;;;;;2917:19868;15875:161;;;:::i;:::-;;;2917:19868;;;;;;;:::i;:::-;15875:161;;;;;-1:-1:-1;15875:161:9;;2917:19868;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;15719:575;16169:9;;:13;2917:19868;;14985:5;16223:16;;:29;16169:9;2917:19868;;16223:29;:::i;:::-;2917:19868;;16169:9;15719:575;;;2917:19868;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;20992:5;2917:19868;;;;21022:13;2917:19868;;;21022:13;2917:19868;;;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;4496:28;2917:19868;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;4530:28;2917:19868;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;21134:12;2917:19868;;;;;;;;21134:12;2917:19868;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;:::i;:::-;;;;;;7493:5;2917:19868;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7493:5;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;2917:19868:9;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;2917:19868:9;;;;:::o;:::-;;-1:-1:-1;2917:19868:9;;;:::o;:::-;;-1:-1:-1;2917:19868:9;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;:::o;:::-;17754:12;2917:19868;;;;;;17754:12;-1:-1:-1;2917:19868:9;;-1:-1:-1;2917:19868:9;;;-1:-1:-1;2917:19868:9;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;-1:-1:-1;;2917:19868:9;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;2917:19868:9;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;-1:-1:-1;;2917:19868:9;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;2917:19868:9;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;-1:-1:-1;;2917:19868:9;;;;;;;:::o;:::-;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;2917:19868:9;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;9000:145;-1:-1:-1;2917:19868:9;9117:12;2917:19868;;;-1:-1:-1;2917:19868:9;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;2917:19868:9;;-1:-1:-1;2917:19868:9;-1:-1:-1;2917:19868:9;;;;;;;9110:28;;;;9000:145;:::o;2917:19868::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;9117:12;2917:19868;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;-1:-1:-1;2917:19868:9;;;;;-1:-1:-1;2917:19868:9;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;2917:19868:9;;;;;;;;;;;-1:-1:-1;2917:19868:9;;-1:-1:-1;2917:19868:9;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;-1:-1:-1;2917:19868:9;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;-1:-1:-1;2917:19868:9;;;;;-1:-1:-1;2917:19868:9;;;;;;;-1:-1:-1;;;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2917:19868:9;;;;-1:-1:-1;2917:19868:9;;;;;;;-1:-1:-1;2917:19868:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2917:19868:9;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2575:307:4:-;1899:1;2702:7;2917:19868:9;2702:18:4;2698:86;;1899:1;2702:7;2917:19868:9;2575:307:4:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;1796:162:0;2917:19868:9;;-1:-1:-1;;;;;2917:19868:9;735:10:2;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:2;1901:40:0;2917:19868:9;;-1:-1:-1;1901:40:0"},"methodIdentifiers":{"ICoverContract()":"f6e80558","IGovernanceContract()":"b5d90c28","IVaultContract()":"6f60537d","addPoolCover(uint256,(uint256,string,uint8,string,uint256,uint256,uint256,uint256,uint256,uint256,string))":"c7aa9874","bqBTC()":"34808ec3","bqBTCAddress()":"996b8a6f","claimProposalFunds(uint256)":"e35f8129","coverContract()":"248a75b7","createPool(uint256,uint8,string,uint256,uint256,uint8,uint256,uint8,address)":"6d8e6574","deactivatePool(uint256)":"9abd9b05","deposit((address,uint256,uint256,uint256,uint8,uint8,address))":"2607b539","getAllParticipants()":"195ec9ee","getAllPools()":"d88ff1f4","getPool(uint256)":"068bcd8d","getPoolCovers(uint256)":"7eb111f0","getPoolTVL(uint256)":"8f244630","getPoolsByAddress(address)":"31866763","getUserDeposit(uint256,address)":"4e055244","getUserParticipation(address)":"46f84795","governance()":"5aa6e675","increasePercentageSplit(uint256,uint256)":"9fd36b15","initialOwner()":"29ba7bb2","owner()":"8da5cb5b","participants(uint256)":"35c1d349","participation(address)":"96f3a8ad","poolActive(uint256)":"25f11e8d","poolCount()":"f525cb68","poolWithdraw(uint256)":"3dc66ad3","pools(uint256)":"ac4afa38","reducePercentageSplit(uint256,uint256)":"a4948d85","renounceOwnership()":"715018a6","setCover(address)":"7c366cc6","setGovernance(address)":"ab033ea9","setVault(address)":"6817031b","transferOwnership(address)":"f2fde38b","updatePool(uint256,uint256,uint256)":"d86c0444","updatePoolCovers(uint256,(uint256,string,uint8,string,uint256,uint256,uint256,uint256,uint256,uint256,string))":"a14764d0","vaultContract()":"2274346b","vaultWithdraw(uint256)":"fb839dda","withdrawUpdate(address,uint256,uint8)":"83bc6357"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bqBTC\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ClaimAttempt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pool\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pool\",\"type\":\"string\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minPeriod\",\"type\":\"uint256\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pool\",\"type\":\"string\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ICoverContract\",\"outputs\":[{\"internalType\":\"contract ICover\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IGovernanceContract\",\"outputs\":[{\"internalType\":\"contract IGov\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IVaultContract\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover\",\"name\":\"_cover\",\"type\":\"tuple\"}],\"name\":\"addPoolCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bqBTC\",\"outputs\":[{\"internalType\":\"contract IbqBTC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bqBTCAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"claimProposalFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"_riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_poolName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_leverage\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"investmentarm\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"adt\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"deactivatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.DepositType\",\"name\":\"pdt\",\"type\":\"uint8\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"adt\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct CoverLib.DepositParams\",\"name\":\"depositParam\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllParticipants\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct CoverLib.Pool[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct CoverLib.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPoolCovers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPoolTVL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getPoolsByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"}],\"internalType\":\"struct InsurancePool.PoolInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"daysLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.DepositType\",\"name\":\"pdt\",\"type\":\"uint8\"}],\"internalType\":\"struct InsurancePool.Deposits\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserParticipation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__poolPercentageSplit\",\"type\":\"uint256\"}],\"name\":\"increasePercentageSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"participation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"poolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"poolWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__poolPercentageSplit\",\"type\":\"uint256\"}],\"name\":\"reducePercentageSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coverContract\",\"type\":\"address\"}],\"name\":\"setCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultContract\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPeriod\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"coverName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"chains\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverValues\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"CID\",\"type\":\"string\"}],\"internalType\":\"struct CoverLib.Cover\",\"name\":\"_cover\",\"type\":\"tuple\"}],\"name\":\"updatePoolCovers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"}],\"name\":\"vaultWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.DepositType\",\"name\":\"pdt\",\"type\":\"uint8\"}],\"name\":\"withdrawUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsurancePool.sol\":\"InsurancePool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/InsurancePool.sol\":{\"keccak256\":\"0x0afb6d69bd7e67c1b4d78c6101eccc28735663dcac552e65898c05b976a5cb72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6866aeebe932c790cac5e0a95772e857c54b83f1fc45692bdf5af67e163fe8e8\",\"dweb:/ipfs/QmbVYktyqVry8LYDRNGncUweGNs2XDe7ig6eSLDTJXrpLm\"]}},\"version\":1}"}},"contracts/Vaults.sol":{"ICover":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getDepositClaimableDays","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getLastClaimTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coverId","type":"uint256"}],"name":"updateMaxAmount","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDepositClaimableDays(address,uint256)":"73cce3ee","getLastClaimTime(address,uint256)":"10525814","updateMaxAmount(uint256)":"106b5da1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getDepositClaimableDays\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getLastClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coverId\",\"type\":\"uint256\"}],\"name\":\"updateMaxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vaults.sol\":\"ICover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/Vaults.sol\":{\"keccak256\":\"0x89db8b0539b871f1b70f6aca662749e4eeb882d5e8c97325e43efe9002858a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd229f58ba9eaf4568fc00e7e056367c46de12ba08c9ecc6982fb27bedeaf4c2\",\"dweb:/ipfs/QmdSDdriAVSzYnFzy2jfWLSYjwv7Rd4dAXuo9FcJzxpFnT\"]}},\"version\":1}"},"IGov":{"abi":[{"inputs":[{"internalType":"uint256","name":"_proposalId","type":"uint256"}],"name":"getProposalDetails","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"votesFor","type":"uint256"},{"internalType":"uint256","name":"votesAgainst","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"timeleft","type":"uint256"},{"internalType":"enum IGov.ProposalStaus","name":"status","type":"uint8"},{"internalType":"bool","name":"executed","type":"bool"},{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"coverId","type":"uint256"},{"internalType":"string","name":"txHash","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"claimAmount","type":"uint256"}],"internalType":"struct IGov.ProposalParams","name":"proposalParam","type":"tuple"}],"internalType":"struct IGov.Proposal","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"updateProposalStatusToClaimed","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getProposalDetails(uint256)":"3b4d01a7","updateProposalStatusToClaimed(uint256)":"f1b4bf9d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeleft\",\"type\":\"uint256\"},{\"internalType\":\"enum IGov.ProposalStaus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"coverId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"txHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IGov.ProposalParams\",\"name\":\"proposalParam\",\"type\":\"tuple\"}],\"internalType\":\"struct IGov.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"updateProposalStatusToClaimed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vaults.sol\":\"IGov\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/Vaults.sol\":{\"keccak256\":\"0x89db8b0539b871f1b70f6aca662749e4eeb882d5e8c97325e43efe9002858a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd229f58ba9eaf4568fc00e7e056367c46de12ba08c9ecc6982fb27bedeaf4c2\",\"dweb:/ipfs/QmdSDdriAVSzYnFzy2jfWLSYjwv7Rd4dAXuo9FcJzxpFnT\"]}},\"version\":1}"},"IPool":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"period","type":"uint256"},{"internalType":"enum CoverLib.DepositType","name":"pdt","type":"uint8"},{"internalType":"enum CoverLib.AssetDepositType","name":"adt","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"internalType":"struct CoverLib.DepositParams","name":"depositParam","type":"tuple"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"getPool","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct CoverLib.Pool","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"updateVaultWithdrawToDue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"enum CoverLib.DepositType","name":"pdt","type":"uint8"}],"name":"withdrawUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"deposit((address,uint256,uint256,uint256,uint8,uint8,address))":"2607b539","getPool(uint256)":"068bcd8d","updateVaultWithdrawToDue(address,uint256,uint256)":"502f4d3c","withdrawUpdate(address,uint256,uint8)":"83bc6357"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.DepositType\",\"name\":\"pdt\",\"type\":\"uint8\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"adt\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct CoverLib.DepositParams\",\"name\":\"depositParam\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct CoverLib.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateVaultWithdrawToDue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.DepositType\",\"name\":\"pdt\",\"type\":\"uint8\"}],\"name\":\"withdrawUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vaults.sol\":\"IPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/Vaults.sol\":{\"keccak256\":\"0x89db8b0539b871f1b70f6aca662749e4eeb882d5e8c97325e43efe9002858a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd229f58ba9eaf4568fc00e7e056367c46de12ba08c9ecc6982fb27bedeaf4c2\",\"dweb:/ipfs/QmdSDdriAVSzYnFzy2jfWLSYjwv7Rd4dAXuo9FcJzxpFnT\"]}},\"version\":1}"},"IbqBTC":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"bqMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"bqMint(address,uint256)":"e2094eda","burn(address,uint256)":"9dc29fac","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bqMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vaults.sol\":\"IbqBTC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/Vaults.sol\":{\"keccak256\":\"0x89db8b0539b871f1b70f6aca662749e4eeb882d5e8c97325e43efe9002858a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd229f58ba9eaf4568fc00e7e056367c46de12ba08c9ecc6982fb27bedeaf4c2\",\"dweb:/ipfs/QmdSDdriAVSzYnFzy2jfWLSYjwv7Rd4dAXuo9FcJzxpFnT\"]}},\"version\":1}"},"Vaults":{"abi":[{"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"address","name":"_bqBTC","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"},{"indexed":false,"internalType":"address","name":"","type":"address"}],"name":"ClaimAttempt","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"string","name":"pool","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"pool","type":"string"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"poolName","type":"string"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"apy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_minPeriod","type":"uint256"}],"name":"PoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"pool","type":"string"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ICoverContract","outputs":[{"internalType":"contract ICover","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"IGovernanceContract","outputs":[{"internalType":"contract IGov","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"IPoolContract","outputs":[{"internalType":"contract IPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bqBTC","outputs":[{"internalType":"contract IbqBTC","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bqBTCAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"coverContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_vaultName","type":"string"},{"internalType":"uint256[]","name":"_poolIds","type":"uint256[]"},{"internalType":"uint256[]","name":"poolPercentageSplit","type":"uint256[]"},{"internalType":"uint256","name":"_minInv","type":"uint256"},{"internalType":"uint256","name":"_maxInv","type":"uint256"},{"internalType":"uint256","name":"_minPeriod","type":"uint256"},{"internalType":"enum CoverLib.AssetDepositType","name":"adt","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"name":"createVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserVaultDeposit","outputs":[{"components":[{"internalType":"address","name":"lp","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"enum CoverLib.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"daysLeft","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"}],"internalType":"struct Vaults.VaultDeposit","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserVaultPoolDeposits","outputs":[{"components":[{"internalType":"address","name":"lp","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"dailyPayout","type":"uint256"},{"internalType":"enum CoverLib.Status","name":"status","type":"uint8"},{"internalType":"uint256","name":"daysLeft","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"accruedPayout","type":"uint256"}],"internalType":"struct Vaults.Deposits[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"}],"name":"getVault","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"vaultName","type":"string"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct CoverLib.Pool[]","name":"pools","type":"tuple[]"},{"internalType":"uint256","name":"minInv","type":"uint256"},{"internalType":"uint256","name":"maxInv","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"internalType":"struct Vaults.Vault","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"}],"name":"getVaultPools","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct CoverLib.Pool[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaults","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"vaultName","type":"string"},{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"poolName","type":"string"},{"internalType":"enum CoverLib.RiskType","name":"riskType","type":"uint8"},{"internalType":"uint256","name":"apy","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"uint256","name":"tvl","type":"uint256"},{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"coverTvl","type":"uint256"},{"internalType":"uint256","name":"tcp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"percentageSplitBalance","type":"uint256"},{"internalType":"uint256","name":"investmentArmPercent","type":"uint256"},{"internalType":"uint8","name":"leverage","type":"uint8"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"}],"internalType":"struct CoverLib.Pool[]","name":"pools","type":"tuple[]"},{"internalType":"uint256","name":"minInv","type":"uint256"},{"internalType":"uint256","name":"maxInv","type":"uint256"},{"internalType":"uint256","name":"minPeriod","type":"uint256"},{"internalType":"enum CoverLib.AssetDepositType","name":"assetType","type":"uint8"},{"internalType":"address","name":"asset","type":"address"}],"internalType":"struct Vaults.Vault[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"initialVaultWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"participants","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"participation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_coverContract","type":"address"}],"name":"setCover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_governance","type":"address"}],"name":"setGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"setUserVaultDepositToZero","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vaultCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_period","type":"uint256"}],"name":"vaultDeposit","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":296,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60803461010d57601f6121f938819003918201601f19168301916001600160401b0383118484101761011257808492604094855283398101031261010d57610052602061004b83610128565b9201610128565b60016000556001600160a01b039091169081156100f757600180546001600160a01b031981168417909155604051929081906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600f80546001600160a01b0319908116929092179055600b805482166001600160a01b03939093169283179055600d805490911690911790556120bc908161013d8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361010d5756fe6080604052600436101561001257600080fd5b60003560e01c80631f8be73c14611780578063248a75b71461175757806329ba7bb21461172e57806334808ec31461170557806335c1d349146116aa57806344d00f821461159057806357656486146115315780635aa6e6751461150857806360ebd718146114c5578063626cc0a914611177578063715018a61461111a57806372bafbde14610fd35780637c366cc614610f6a57806388d52ef714610f415780638da5cb5b14610f185780639403b63414610ecb57806396f3a8ad14610e91578063996b8a6f14610e68578063a7c6a10014610e4a578063ab033ea914610dd3578063b30703cd14610daa578063b5d90c2814610d81578063d000626514610b60578063f2fde38b14610ad6578063f339624b146101685763f6e805581461013a57600080fd5b34610163576000366003190112610163576008546040516001600160a01b039091168152602090f35b600080fd5b3461016357610100366003190112610163576004356001600160401b03811161016357366023820112156101635780600401356101a481611b64565b916101b26040519384611b43565b8183523660248383010111610163578160009260246020930183860137830101526024356001600160401b038111610163576101f2903690600401611b96565b6044356001600160401b03811161016357610211903690600401611b96565b9060a4359260c4359360028510156101635760e4356001600160a01b0381168082036101635761023f61205d565b8451865103610a8557610251876118e8565b8615908115610a7b575b5015610a36576006549260018401809411610a205783600655836000526003602052604060002093845560018401908051906001600160401b038211610669576102a58354611c46565b601f81116109d8575b50602090601f83116001146109695761032b949392916000918361095e575b50508160011b916000199060031b1c19161790559491945b6064356003850155608435600485015560068401610302886118e8565b80546001600160a81b03191660ff89161760089290921b610100600160a81b0316919091179055565b60009161016d9360009260028301935b8251811015610870576009546001600160a01b031695600061035d8386611c32565b516024604051809a819363068bcd8d60e01b835260048301525afa968715610864576000976106da575b506101c08701908a825161039a816118e8565b6103a3826118e8565b6103ac816118e8565b03610695576103c6906103bf8486611c32565b5190611f79565b966103d18385611c32565b518654600052600260205260406000206103eb8588611c32565b51600052602052604060002055865468010000000000000000811015610669576001810180895581101561067f5787600052600d602060002091020191815183556001830160208301518051906001600160401b0382116106695781906104528454611c46565b601f8111610616575b50602090601f83116001146105b1576000926105a6575b50508160011b916000199060031b1c19161790555b600283016040830151610499816118c8565b6104a2816118c8565b815460ff91821660ff199182161790925560608401516003860155608084018051600487015560a0850151600587015560c0850151600687015560e0850151600787015561010085015160088088019190915561012086015160098801805491151585169190951617909355610140850151600a870155610160850151600b870155610180850151600c90960180546101a0909601516001600160a81b031990961696909216959095179390911b610100600160a81b03169290921782555161056a816118e8565b610573816118e8565b815460ff60a81b191660a89190911b60ff60a81b161790555187811061059d575b5060010161033b565b96506001610594565b015190508f80610472565b60008581528281209350601f198516905b8181106105fe57509084600195949392106105e5575b505050811b019055610487565b015160001960f88460031b161c191690558f80806105d8565b929360206001819287860151815501950193016105c2565b909150836000526020600020601f840160051c8101916020851061065f575b90601f859493920160051c01905b818110610650575061045b565b60008155849350600101610643565b9091508190610635565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60405162461bcd60e51b815260206004820152601f60248201527f496e636f6d70617469626c65206173736574207479706520696e20706f6f6c006044820152606490fd5b90963d8082843e6106eb8184611b43565b820191602081840312610860578051906001600160401b03821161085457016101e081840312610860576040519261072284611b0b565b8151845260208201516001600160401b03811161085c57820181601f8201121561085c5780519061075282611b64565b926107606040519485611b43565b82845260208383010111610858579061077f9160208085019101611880565b602084015260408101516003811015610854576040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e081015160e084015261010081015161010084015261012081015180151581036108545761012084015261014081015161014084015261016081015161016084015261018081015160ff81168103610854576101808401526101a08101516001600160a01b0381168103610854576101a08401526101c0015190600282101561085157506101c0820152958a610387565b80fd5b8280fd5b8480fd5b8380fd5b5080fd5b6040513d6000823e3d90fd5b8386898981106108cd57600560649301550361088857005b60405162461bcd60e51b815260206004820152601b60248201527f546f74616c2073706c6974206d75737420657175616c203130302500000000006044820152606490fd5b60405162461bcd60e51b815260206004820152606060248201527f4d696e696d756e20706572696f64206d7573742062652067726561746572207460448201527f68616e206f7220657175616c20746f20746865206d696e696d756d207065726960648201527f6f64206f6620616c6c20706f6f6c732077697468696e20746865207661756c74608482015260a490fd5b015190508a806102cd565b90601f1983169184600052816000209260005b8181106109c0575091600193918561032b98979694106109a7575b505050811b0190559491946102e5565b015160001960f88460031b161c191690558a8080610997565b9293602060018192878601518155019501930161097c565b836000526020600020601f840160051c81019160208510610a16575b601f0160051c01905b818110610a0a57506102ae565b600081556001016109fd565b90915081906109f4565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420617373657420666f72206465706f736974207479706500006044820152606490fd5b905015158761025b565b60405162461bcd60e51b815260206004820152602360248201527f4d69736d61746368656420706f6f6c2049447320616e642070657263656e746160448201526267657360e81b6064820152608490fd5b3461016357602036600319011261016357610aef61186a565b610af761205d565b6001600160a01b03168015610b4a57600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461016357602036600319011261016357600435610b7c61203b565b33600052600560205260406000208160005260205260406000206001810191825415610d3257600482019160ff835416610bb5816118c8565b610cf557600701544210610cb0576000526003602052610bd86040600020611e40565b604081019260005b84518051821015610c605781610bf591611c32565b51516009546001600160a01b03169190823b15610163576000926064849260405195869384926383bc635760e01b84523360048501526024840152600160448401525af191821561086457600192610c4f575b5001610be0565b6000610c5a91611b43565b86610c48565b845460ff191660011785558254602085015160405133927f485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d9751928291610ca6919083611f86565b0390a26001600055005b60405162461bcd60e51b815260206004820152601c60248201527f4465706f73697420706572696f6420686173206e6f7420656e646564000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152744465706f736974206973206e6f742061637469766560581b6044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f4e6f206465706f73697420666f756e6420666f722074686973206164647265736044820152607360f81b6064820152608490fd5b3461016357600036600319011261016357600a546040516001600160a01b039091168152602090f35b34610163576000366003190112610163576009546040516001600160a01b039091168152602090f35b3461016357602036600319011261016357610dec61186a565b610df461205d565b60075490610e0b6001600160a01b03831615611fa0565b6001600160a01b0316908190610e22821515611fe5565b6001600160601b0360a01b16176007556001600160601b0360a01b600a541617600a55600080f35b34610163576000366003190112610163576020600654604051908152f35b3461016357600036600319011261016357600d546040516001600160a01b039091168152602090f35b34610163576020366003190112610163576001600160a01b03610eb261186a565b1660005260116020526020604060002054604051908152f35b3461016357602036600319011261016357610ee4611bf3565b506004356000526003602052610f14610f006040600020611e40565b604051918291602083526020830190611a0d565b0390f35b34610163576000366003190112610163576001546040516001600160a01b039091168152602090f35b3461016357600036600319011261016357600c546040516001600160a01b039091168152602090f35b3461016357602036600319011261016357610f8361186a565b610f8b61205d565b600e5490610fa26001600160a01b03831615611fa0565b6001600160a01b031690610fb7821515611fe5565b600880546001600160a01b031990811684179091551617600e55005b3461016357604036600319011261016357610fec611854565b6004356000526003602052604061100581600020611e40565b01908151519161101483611b7f565b926110226040519485611b43565b808452611031601f1991611b7f565b0160005b818110611103575090916001600160a01b0316905060005b82519081518110156110b15761106581600193611c32565b51518360005260046020526040600020906000526020526040600020826000526020526110956040600020611f00565b61109f8287611c32565b526110aa8186611c32565b500161104d565b8460405180916020820160208352815180915260206040840192019060005b8181106110de575050500390f35b919350916020610120826110f56001948851611a88565b0194019101918493926110d0565b60209061110e611ebc565b82828801015201611035565b346101635760003660031901126101635761113361205d565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b60603660031901126101635760243560443560043561119461203b565b8060005260036020526111aa6040600020611e40565b60a0810151831061146857919060008091600093604086019560c081019260e08201945b8851805189101561133857886111e391611c32565b51518551906111f1826118e8565b60018060a01b038851169060405160e08101908082106001600160401b03831117610669578e9460409460e49386523383526020830194855285830196875260608301918b8352608084016001815260a085019161124e816118e8565b825260c085019283526009548851632607b53960e01b815295516001600160a01b0390811660048801529751602487015298516044860152925160648501529151929687958694911692906112a2816118e8565b6084850152516112b1816118e8565b60a4840152516001600160a01b031660c483015234905af19182156108645760009182936112fa575b50906112eb6001936112f193611f79565b98611f79565b970196956111ce565b9250906040833d8211611330575b8161131560409383611b43565b810103126108515750815160209092015191906112eb6112da565b3d9150611308565b50868a938592620151808402848104620151801485151715610a20577f6f85d9948d6ca3dd6ce6ce7d175da22b4e865827ae6fcd530ec7edac1240f92895610ca69560209561138960089442611f79565b916040519561139787611aef565b33875288870192835260408701908582526060880190815260808801916000835260a0890193845260c089019442865260e08a019687526101008a0197600089523360005260058d526040600020906000528c5260406000209960018060a01b039051166001600160601b0360a01b8b5416178a555160018a015551600289015551600388015560048701905161142d816118c8565b611436816118c8565b60ff80198354169116179055516005860155516006850155516007840155519101550151604051918291339583611f86565b60405162461bcd60e51b815260206004820152602f60248201527f506572696f642063616e6e6f74206265206c657373207468616e20746865207660448201526e185d5b1d081b5a5b881c195c9a5bd9608a1b6064820152608490fd5b34610163576020366003190112610163576004356000526003602052610f146114f46002604060002001611d24565b6040519182916020835260208301906118f2565b34610163576000366003190112610163576007546040516001600160a01b039091168152602090f35b346101635760403660031901126101635761154a611854565b611552611ebc565b5060018060a01b0316600052600560205260406000206004356000526020526101206115816040600020611f00565b61158e6040518092611a88565bf35b34610163576000366003190112610163576006546115ad81611b7f565b906115bb6040519283611b43565b808252601f196115ca82611b7f565b0160005b81811061169357505060015b8181111561164a57826040518091602082016020835281518091526040830190602060408260051b8601019301916000905b82821061161b57505050500390f35b9193600191939550602061163a8192603f198a82030186528851611a0d565b960192019201859493919261160c565b80600052600360205260406000206000198201828111610a205761167061168192611e40565b61167a8287611c32565b5284611c32565b506000198114610a20576001016115da565b60209061169e611bf3565b828287010152016115ce565b34610163576020366003190112610163576004356010548110156101635760106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67201546040516001600160a01b039091168152602090f35b3461016357600036600319011261016357600b546040516001600160a01b039091168152602090f35b3461016357600036600319011261016357600f546040516001600160a01b039091168152602090f35b3461016357600036600319011261016357600e546040516001600160a01b039091168152602090f35b3461016357604036600319011261016357611799611854565b6117a161203b565b600c546001600160a01b031633148015611840575b156117ed5760018060a01b031660005260056020526040600020600435600052602052600060016040822001556001600055600080f35b60405162461bcd60e51b815260206004820152602560248201527f43616c6c6572206973206e6f742074686520676f7665726e616e636520636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b50600f546001600160a01b031633146117b6565b602435906001600160a01b038216820361016357565b600435906001600160a01b038216820361016357565b60005b8381106118935750506000910152565b8181015183820152602001611883565b906020916118bc81518092818552858086019101611880565b601f01601f1916010190565b600311156118d257565b634e487b7160e01b600052602160045260246000fd5b600211156118d257565b9080602083519182815201916020808360051b8301019401926000915b83831061191e57505050505090565b9091929394602080600192601f19858203018652885190815181526101c080611956858501516101e0878601526101e08501906118a3565b936040810151611965816118c8565b6040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610100810151610100850152610120810151151561012085015261014081015161014085015261016081015161016085015260ff61018082015116610180850152878060a01b036101a0820151166101a08501520151916119fc836118e8565b01529701930193019193929061190f565b908151815260e0611a44611a32602085015161010060208601526101008501906118a3565b604085015184820360408601526118f2565b92606081015160608401526080810151608084015260a081015160a084015260c0810151611a71816118e8565b60c08401528101516001600160a01b031691015290565b610100809160018060a01b0381511684526020810151602085015260408101516040850152606081015160608501526080810151611ac5816118c8565b608085015260a081015160a085015260c081015160c085015260e081015160e08501520151910152565b61012081019081106001600160401b0382111761066957604052565b6101e081019081106001600160401b0382111761066957604052565b61010081019081106001600160401b0382111761066957604052565b90601f801991011681019081106001600160401b0382111761066957604052565b6001600160401b03811161066957601f01601f191660200190565b6001600160401b0381116106695760051b60200190565b9080601f83011215610163578135611bad81611b7f565b92611bbb6040519485611b43565b81845260208085019260051b82010192831161016357602001905b828210611be35750505090565b8135815260209182019101611bd6565b60405190611c0082611b27565b600060e08382815260606020820152606060408201528260608201528260808201528260a08201528260c08201520152565b805182101561067f5760209160051b010190565b90600182811c92168015611c76575b6020831014611c6057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611c55565b9060405191826000825492611c9484611c46565b8084529360018116908115611d025750600114611cbb575b50611cb992500383611b43565b565b90506000929192526020600020906000915b818310611ce6575050906020611cb99282010138611cac565b6020919350806001915483858901015201910190918492611ccd565b905060209250611cb994915060ff191682840152151560051b82010138611cac565b908154611d3081611b7f565b92611d3e6040519485611b43565b818452602084019060005260206000206000915b838310611d5f5750505050565b600d6020600192604051611d7281611b0b565b85548152611d81858701611c80565b8382015260ff600287015416611d96816118c8565b60408201526003860154606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e0820152600886015461010082015260ff6009870154161515610120820152600a860154610140820152600b86015461016082015260ff600c870154818116610180840152868060a01b038160081c166101a084015260a81c16611e2c816118e8565b6101c0820152815201920192019190611d52565b90604051611e4d81611b27565b60e06006829480548452611e6360018201611c80565b6020850152611e7460028201611d24565b60408501526003810154606085015260048101546080850152600581015460a0850152015460ff8116611ea6816118e8565b60c084015260081c6001600160a01b0316910152565b60405190611ec982611aef565b6000610100838281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201520152565b90604051611f0d81611aef565b6101006008829460018060a01b03815416845260018101546020850152600281015460408501526003810154606085015260ff600482015416611f4f816118c8565b6080850152600581015460a0850152600681015460c0850152600781015460e08501520154910152565b91908201809211610a2057565b604090611f9d9392815281602082015201906118a3565b90565b15611fa757565b60405162461bcd60e51b815260206004820152601660248201527511dbdd995c9b985b98d948185b1c9958591e481cd95d60521b6044820152606490fd5b15611fec57565b60405162461bcd60e51b815260206004820152602160248201527f476f7665726e616e636520616464726573732063616e6e6f74206265207a65726044820152606f60f81b6064820152608490fd5b60026000541461204c576002600055565b633ee5aeb560e01b60005260046000fd5b6001546001600160a01b0316330361207157565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212209783b7298d4155c1e29e5dd6fdf65094dfc6de7e93c0133b6b44723e501055ac64736f6c634300081b0033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x10D JUMPI PUSH1 0x1F PUSH2 0x21F9 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x112 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x10D JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x128 JUMP JUMPDEST SWAP3 ADD PUSH2 0x128 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 DUP4 OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x20BC SWAP1 DUP2 PUSH2 0x13D DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10D JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F8BE73C EQ PUSH2 0x1780 JUMPI DUP1 PUSH4 0x248A75B7 EQ PUSH2 0x1757 JUMPI DUP1 PUSH4 0x29BA7BB2 EQ PUSH2 0x172E JUMPI DUP1 PUSH4 0x34808EC3 EQ PUSH2 0x1705 JUMPI DUP1 PUSH4 0x35C1D349 EQ PUSH2 0x16AA JUMPI DUP1 PUSH4 0x44D00F82 EQ PUSH2 0x1590 JUMPI DUP1 PUSH4 0x57656486 EQ PUSH2 0x1531 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x1508 JUMPI DUP1 PUSH4 0x60EBD718 EQ PUSH2 0x14C5 JUMPI DUP1 PUSH4 0x626CC0A9 EQ PUSH2 0x1177 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x111A JUMPI DUP1 PUSH4 0x72BAFBDE EQ PUSH2 0xFD3 JUMPI DUP1 PUSH4 0x7C366CC6 EQ PUSH2 0xF6A JUMPI DUP1 PUSH4 0x88D52EF7 EQ PUSH2 0xF41 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF18 JUMPI DUP1 PUSH4 0x9403B634 EQ PUSH2 0xECB JUMPI DUP1 PUSH4 0x96F3A8AD EQ PUSH2 0xE91 JUMPI DUP1 PUSH4 0x996B8A6F EQ PUSH2 0xE68 JUMPI DUP1 PUSH4 0xA7C6A100 EQ PUSH2 0xE4A JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0xDD3 JUMPI DUP1 PUSH4 0xB30703CD EQ PUSH2 0xDAA JUMPI DUP1 PUSH4 0xB5D90C28 EQ PUSH2 0xD81 JUMPI DUP1 PUSH4 0xD0006265 EQ PUSH2 0xB60 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAD6 JUMPI DUP1 PUSH4 0xF339624B EQ PUSH2 0x168 JUMPI PUSH4 0xF6E80558 EQ PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x163 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x163 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1A4 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP2 PUSH2 0x1B2 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1B43 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x163 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x163 JUMPI PUSH2 0x1F2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x163 JUMPI PUSH2 0x211 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B96 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x2 DUP6 LT ISZERO PUSH2 0x163 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x163 JUMPI PUSH2 0x23F PUSH2 0x205D JUMP JUMPDEST DUP5 MLOAD DUP7 MLOAD SUB PUSH2 0xA85 JUMPI PUSH2 0x251 DUP8 PUSH2 0x18E8 JUMP JUMPDEST DUP7 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xA7B JUMPI JUMPDEST POP ISZERO PUSH2 0xA36 JUMPI PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0xA20 JUMPI DUP4 PUSH1 0x6 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 DUP5 SSTORE PUSH1 0x1 DUP5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x669 JUMPI PUSH2 0x2A5 DUP4 SLOAD PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x9D8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x969 JUMPI PUSH2 0x32B SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x95E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE SWAP5 SWAP2 SWAP5 JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0x6 DUP5 ADD PUSH2 0x302 DUP9 PUSH2 0x18E8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0xFF DUP10 AND OR PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x16D SWAP4 PUSH1 0x0 SWAP3 PUSH1 0x2 DUP4 ADD SWAP4 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 PUSH1 0x0 PUSH2 0x35D DUP4 DUP7 PUSH2 0x1C32 JUMP JUMPDEST MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP11 DUP2 SWAP4 PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x6DA JUMPI JUMPDEST POP PUSH2 0x1C0 DUP8 ADD SWAP1 DUP11 DUP3 MLOAD PUSH2 0x39A DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x3A3 DUP3 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x18E8 JUMP JUMPDEST SUB PUSH2 0x695 JUMPI PUSH2 0x3C6 SWAP1 PUSH2 0x3BF DUP5 DUP7 PUSH2 0x1C32 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1F79 JUMP JUMPDEST SWAP7 PUSH2 0x3D1 DUP4 DUP6 PUSH2 0x1C32 JUMP JUMPDEST MLOAD DUP7 SLOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3EB DUP6 DUP9 PUSH2 0x1C32 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x669 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP10 SSTORE DUP2 LT ISZERO PUSH2 0x67F JUMPI DUP8 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP2 DUP2 MLOAD DUP4 SSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 DUP4 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x669 JUMPI DUP2 SWAP1 PUSH2 0x452 DUP5 SLOAD PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x616 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x5B1 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x5A6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP4 ADD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x499 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0x4A2 DUP2 PUSH2 0x18C8 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF SWAP2 DUP3 AND PUSH1 0xFF NOT SWAP2 DUP3 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP7 ADD SSTORE PUSH1 0x80 DUP5 ADD DUP1 MLOAD PUSH1 0x4 DUP8 ADD SSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x5 DUP8 ADD SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x6 DUP8 ADD SSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x7 DUP8 ADD SSTORE PUSH2 0x100 DUP6 ADD MLOAD PUSH1 0x8 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x120 DUP7 ADD MLOAD PUSH1 0x9 DUP9 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO DUP6 AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE PUSH2 0x140 DUP6 ADD MLOAD PUSH1 0xA DUP8 ADD SSTORE PUSH2 0x160 DUP6 ADD MLOAD PUSH1 0xB DUP8 ADD SSTORE PUSH2 0x180 DUP6 ADD MLOAD PUSH1 0xC SWAP1 SWAP7 ADD DUP1 SLOAD PUSH2 0x1A0 SWAP1 SWAP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP3 AND SWAP6 SWAP1 SWAP6 OR SWAP4 SWAP1 SWAP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE MLOAD PUSH2 0x56A DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x573 DUP2 PUSH2 0x18E8 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0xA8 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA8 SHL AND OR SWAP1 SSTORE MLOAD DUP8 DUP2 LT PUSH2 0x59D JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x33B JUMP JUMPDEST SWAP7 POP PUSH1 0x1 PUSH2 0x594 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x5FE JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x5E5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x487 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0x5D8 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x5C2 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x65F JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x650 JUMPI POP PUSH2 0x45B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x643 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x635 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F6D70617469626C65206173736574207479706520696E20706F6F6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0x6EB DUP2 DUP5 PUSH2 0x1B43 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x860 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x854 JUMPI ADD PUSH2 0x1E0 DUP2 DUP5 SUB SLT PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x722 DUP5 PUSH2 0x1B0B JUMP JUMPDEST DUP2 MLOAD DUP5 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x85C JUMPI DUP3 ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x85C JUMPI DUP1 MLOAD SWAP1 PUSH2 0x752 DUP3 PUSH2 0x1B64 JUMP JUMPDEST SWAP3 PUSH2 0x760 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B43 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x858 JUMPI SWAP1 PUSH2 0x77F SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x854 JUMPI PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x854 JUMPI PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x854 JUMPI PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x854 JUMPI PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x1C0 ADD MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x851 JUMPI POP PUSH2 0x1C0 DUP3 ADD MSTORE SWAP6 DUP11 PUSH2 0x387 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP7 DUP10 DUP10 DUP2 LT PUSH2 0x8CD JUMPI PUSH1 0x5 PUSH1 0x64 SWAP4 ADD SSTORE SUB PUSH2 0x888 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2073706C6974206D75737420657175616C20313030250000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756E20706572696F64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68616E206F7220657175616C20746F20746865206D696E696D756D2070657269 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6F64206F6620616C6C20706F6F6C732077697468696E20746865207661756C74 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x2CD JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x9C0 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH2 0x32B SWAP9 SWAP8 SWAP7 SWAP5 LT PUSH2 0x9A7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE SWAP5 SWAP2 SWAP5 PUSH2 0x2E5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x997 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x97C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xA16 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xA0A JUMPI POP PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x9FD JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420666F72206465706F73697420747970650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO ISZERO DUP8 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D61746368656420706F6F6C2049447320616E642070657263656E7461 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x676573 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0xAEF PUSH2 0x186A JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xB4A JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB7C PUSH2 0x203B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 ADD SWAP2 DUP3 SLOAD ISZERO PUSH2 0xD32 JUMPI PUSH1 0x4 DUP3 ADD SWAP2 PUSH1 0xFF DUP4 SLOAD AND PUSH2 0xBB5 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0xCF5 JUMPI PUSH1 0x7 ADD SLOAD TIMESTAMP LT PUSH2 0xCB0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xBD8 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1E40 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP3 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xC60 JUMPI DUP2 PUSH2 0xBF5 SWAP2 PUSH2 0x1C32 JUMP JUMPDEST MLOAD MLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 SWAP3 PUSH1 0x64 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x83BC6357 PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x864 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xC4F JUMPI JUMPDEST POP ADD PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5A SWAP2 PUSH2 0x1B43 JUMP JUMPDEST DUP7 PUSH2 0xC48 JUMP JUMPDEST DUP5 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP3 SLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 MLOAD CALLER SWAP3 PUSH32 0x485F1BB6524C663555797E00171A10F341656E59B02D6B557A0A38BA7D5D9751 SWAP3 DUP3 SWAP2 PUSH2 0xCA6 SWAP2 SWAP1 DUP4 PUSH2 0x1F86 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F73697420706572696F6420686173206E6F7420656E64656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4465706F736974206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206465706F73697420666F756E6420666F72207468697320616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0xDEC PUSH2 0x186A JUMP JUMPDEST PUSH2 0xDF4 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0xE0B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH2 0xE22 DUP3 ISZERO ISZERO PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL AND OR PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEB2 PUSH2 0x186A JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0xEE4 PUSH2 0x1BF3 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xF14 PUSH2 0xF00 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1E40 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0xF83 PUSH2 0x186A JUMP JUMPDEST PUSH2 0xF8B PUSH2 0x205D JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 PUSH2 0xFA2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xFB7 DUP3 ISZERO ISZERO PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND OR PUSH1 0xE SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0xFEC PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x1005 DUP2 PUSH1 0x0 KECCAK256 PUSH2 0x1E40 JUMP JUMPDEST ADD SWAP1 DUP2 MLOAD MLOAD SWAP2 PUSH2 0x1014 DUP4 PUSH2 0x1B7F JUMP JUMPDEST SWAP3 PUSH2 0x1022 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B43 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x1031 PUSH1 0x1F NOT SWAP2 PUSH2 0x1B7F JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1103 JUMPI POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x1065 DUP2 PUSH1 0x1 SWAP4 PUSH2 0x1C32 JUMP JUMPDEST MLOAD MLOAD DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1095 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x109F DUP3 DUP8 PUSH2 0x1C32 JUMP JUMPDEST MSTORE PUSH2 0x10AA DUP2 DUP7 PUSH2 0x1C32 JUMP JUMPDEST POP ADD PUSH2 0x104D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x10DE JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH2 0x120 DUP3 PUSH2 0x10F5 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x1A88 JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x110E PUSH2 0x1EBC JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x1035 JUMP JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0x1133 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1194 PUSH2 0x203B JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x11AA PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1E40 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD DUP4 LT PUSH2 0x1468 JUMPI SWAP2 SWAP1 PUSH1 0x0 DUP1 SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x40 DUP7 ADD SWAP6 PUSH1 0xC0 DUP2 ADD SWAP3 PUSH1 0xE0 DUP3 ADD SWAP5 JUMPDEST DUP9 MLOAD DUP1 MLOAD DUP10 LT ISZERO PUSH2 0x1338 JUMPI DUP9 PUSH2 0x11E3 SWAP2 PUSH2 0x1C32 JUMP JUMPDEST MLOAD MLOAD DUP6 MLOAD SWAP1 PUSH2 0x11F1 DUP3 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 MLOAD AND SWAP1 PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0x669 JUMPI DUP15 SWAP5 PUSH1 0x40 SWAP5 PUSH1 0xE4 SWAP4 DUP7 MSTORE CALLER DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP5 DUP6 MSTORE DUP6 DUP4 ADD SWAP7 DUP8 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP12 DUP4 MSTORE PUSH1 0x80 DUP5 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD SWAP2 PUSH2 0x124E DUP2 PUSH2 0x18E8 JUMP JUMPDEST DUP3 MSTORE PUSH1 0xC0 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0x9 SLOAD DUP9 MLOAD PUSH4 0x2607B539 PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP9 ADD MSTORE SWAP8 MLOAD PUSH1 0x24 DUP8 ADD MSTORE SWAP9 MLOAD PUSH1 0x44 DUP7 ADD MSTORE SWAP3 MLOAD PUSH1 0x64 DUP6 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP7 DUP8 SWAP6 DUP7 SWAP5 SWAP2 AND SWAP3 SWAP1 PUSH2 0x12A2 DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x84 DUP6 ADD MSTORE MLOAD PUSH2 0x12B1 DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0xA4 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 SWAP2 DUP3 SWAP4 PUSH2 0x12FA JUMPI JUMPDEST POP SWAP1 PUSH2 0x12EB PUSH1 0x1 SWAP4 PUSH2 0x12F1 SWAP4 PUSH2 0x1F79 JUMP JUMPDEST SWAP9 PUSH2 0x1F79 JUMP JUMPDEST SWAP8 ADD SWAP7 SWAP6 PUSH2 0x11CE JUMP JUMPDEST SWAP3 POP SWAP1 PUSH1 0x40 DUP4 RETURNDATASIZE DUP3 GT PUSH2 0x1330 JUMPI JUMPDEST DUP2 PUSH2 0x1315 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x1B43 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x851 JUMPI POP DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP2 SWAP1 PUSH2 0x12EB PUSH2 0x12DA JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1308 JUMP JUMPDEST POP DUP7 DUP11 SWAP4 DUP6 SWAP3 PUSH3 0x15180 DUP5 MUL DUP5 DUP2 DIV PUSH3 0x15180 EQ DUP6 ISZERO OR ISZERO PUSH2 0xA20 JUMPI PUSH32 0x6F85D9948D6CA3DD6CE6CE7D175DA22B4E865827AE6FCD530EC7EDAC1240F928 SWAP6 PUSH2 0xCA6 SWAP6 PUSH1 0x20 SWAP6 PUSH2 0x1389 PUSH1 0x8 SWAP5 TIMESTAMP PUSH2 0x1F79 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x1397 DUP8 PUSH2 0x1AEF JUMP JUMPDEST CALLER DUP8 MSTORE DUP9 DUP8 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP8 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP9 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0xA0 DUP10 ADD SWAP4 DUP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP5 TIMESTAMP DUP7 MSTORE PUSH1 0xE0 DUP11 ADD SWAP7 DUP8 MSTORE PUSH2 0x100 DUP11 ADD SWAP8 PUSH1 0x0 DUP10 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x5 DUP14 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE DUP13 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP12 SLOAD AND OR DUP11 SSTORE MLOAD PUSH1 0x1 DUP11 ADD SSTORE MLOAD PUSH1 0x2 DUP10 ADD SSTORE MLOAD PUSH1 0x3 DUP9 ADD SSTORE PUSH1 0x4 DUP8 ADD SWAP1 MLOAD PUSH2 0x142D DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE MLOAD PUSH1 0x5 DUP7 ADD SSTORE MLOAD PUSH1 0x6 DUP6 ADD SSTORE MLOAD PUSH1 0x7 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ADD MLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1F86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506572696F642063616E6E6F74206265206C657373207468616E207468652076 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x185D5B1D081B5A5B881C195C9A5BD9 PUSH1 0x8A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xF14 PUSH2 0x14F4 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x18F2 JUMP JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0x154A PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x1552 PUSH2 0x1EBC JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x120 PUSH2 0x1581 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x158E PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1A88 JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x6 SLOAD PUSH2 0x15AD DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 PUSH2 0x15BB PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1B43 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x15CA DUP3 PUSH2 0x1B7F JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1693 JUMPI POP POP PUSH1 0x1 JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x164A JUMPI DUP3 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x161B JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x163A DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1A0D JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x160C JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP3 ADD DUP3 DUP2 GT PUSH2 0xA20 JUMPI PUSH2 0x1670 PUSH2 0x1681 SWAP3 PUSH2 0x1E40 JUMP JUMPDEST PUSH2 0x167A DUP3 DUP8 PUSH2 0x1C32 JUMP JUMPDEST MSTORE DUP5 PUSH2 0x1C32 JUMP JUMPDEST POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA20 JUMPI PUSH1 0x1 ADD PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x169E PUSH2 0x1BF3 JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x15CE JUMP JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x163 JUMPI PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0x1799 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x17A1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1840 JUMPI JUMPDEST ISZERO PUSH2 0x17ED JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 DUP3 KECCAK256 ADD SSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520676F7665726E616E636520636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x163 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x163 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1893 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1883 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x18BC DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x18D2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0x18D2 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x191E JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x1F NOT DUP6 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH2 0x1C0 DUP1 PUSH2 0x1956 DUP6 DUP6 ADD MLOAD PUSH2 0x1E0 DUP8 DUP7 ADD MSTORE PUSH2 0x1E0 DUP6 ADD SWAP1 PUSH2 0x18A3 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1965 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF PUSH2 0x180 DUP3 ADD MLOAD AND PUSH2 0x180 DUP6 ADD MSTORE DUP8 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x1A0 DUP3 ADD MLOAD AND PUSH2 0x1A0 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x19FC DUP4 PUSH2 0x18E8 JUMP JUMPDEST ADD MSTORE SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x190F JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0xE0 PUSH2 0x1A44 PUSH2 0x1A32 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x100 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x18F2 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x1A71 DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x100 DUP1 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x1AC5 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x669 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x669 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x669 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x669 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x669 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x669 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x163 JUMPI DUP2 CALLDATALOAD PUSH2 0x1BAD DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP3 PUSH2 0x1BBB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B43 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x163 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BE3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C00 DUP3 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x67F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1C76 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1C60 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1C94 DUP5 PUSH2 0x1C46 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D02 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1CBB JUMPI JUMPDEST POP PUSH2 0x1CB9 SWAP3 POP SUB DUP4 PUSH2 0x1B43 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1CE6 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x1CB9 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x1CCD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x1CB9 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x1CAC JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH2 0x1D30 DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP3 PUSH2 0x1D3E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B43 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1D5F JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1D72 DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH2 0x1D81 DUP6 DUP8 ADD PUSH2 0x1C80 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x1D96 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x9 DUP8 ADD SLOAD AND ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA DUP7 ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xB DUP7 ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0xC DUP8 ADD SLOAD DUP2 DUP2 AND PUSH2 0x180 DUP5 ADD MSTORE DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP2 PUSH1 0x8 SHR AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0xA8 SHR AND PUSH2 0x1E2C DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x1C0 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x1D52 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1E4D DUP2 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x6 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE PUSH2 0x1E63 PUSH1 0x1 DUP3 ADD PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1E74 PUSH1 0x2 DUP3 ADD PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x1EA6 DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1EC9 DUP3 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1F0D DUP2 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x100 PUSH1 0x8 DUP3 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND PUSH2 0x1F4F DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA20 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1F9D SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1FA7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11DBDD995C9B985B98D948185B1C9958591E481CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FEC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636520616464726573732063616E6E6F74206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x204C JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2071 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 DUP4 0xB7 0x29 DUP14 COINBASE SSTORE 0xC1 0xE2 SWAP15 TSTORE 0xD6 REVERT 0xF6 POP SWAP5 0xDF 0xC6 0xDE PUSH31 0x93C0133B6B44723E501055AC64736F6C634300081B00330000000000000000 ","sourceMap":"2241:10379:10:-:0;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1857:1:4;-1:-1:-1;1857:1:4;-1:-1:-1;;;;;2241:10379:10;;;;1273:26:0;;1269:95;;1857:1:4;2241:10379:10;;-1:-1:-1;;;;;;2241:10379:10;;;;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;3052:40:0;-1:-1:-1;;3052:40:0;4781:28:10;2241:10379;;-1:-1:-1;;;;;;2241:10379:10;;;;;;;;;4820:22;2241:10379;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;4853:21;2241:10379;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;2241:10379:10;;-1:-1:-1;1322:31:0;2241:10379:10;-1:-1:-1;2241:10379:10;;;;;;-1:-1:-1;2241:10379:10;;;;;-1:-1:-1;2241:10379:10;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":6250,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_30755":{"entryPoint":6228,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":7062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Pool_dyn":{"entryPoint":6386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":6307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Vault":{"entryPoint":6669,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_VaultDeposit":{"entryPoint":6792,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_string":{"entryPoint":8070,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Vault":{"entryPoint":7155,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_VaultDeposit":{"entryPoint":7868,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":7039,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":7012,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":8057,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_array_struct_Pool__dyn":{"entryPoint":7460,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":7296,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6272,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7238,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6979,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_30759":{"entryPoint":6895,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_30773":{"entryPoint":6923,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_30793":{"entryPoint":6951,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":8285,"id":84,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":8251,"id":356,"parameterSlots":0,"returnSlots":0},"memory_array_index_access_struct_Vault_dyn":{"entryPoint":7218,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_reference_type_struct_Vault":{"entryPoint":7744,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_VaultDeposit":{"entryPoint":7936,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_256d":{"entryPoint":8096,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3aa1":{"entryPoint":8165,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"validator_assert_enum_AssetDepositType":{"entryPoint":6376,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_RiskType":{"entryPoint":6344,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c80631f8be73c14611780578063248a75b71461175757806329ba7bb21461172e57806334808ec31461170557806335c1d349146116aa57806344d00f821461159057806357656486146115315780635aa6e6751461150857806360ebd718146114c5578063626cc0a914611177578063715018a61461111a57806372bafbde14610fd35780637c366cc614610f6a57806388d52ef714610f415780638da5cb5b14610f185780639403b63414610ecb57806396f3a8ad14610e91578063996b8a6f14610e68578063a7c6a10014610e4a578063ab033ea914610dd3578063b30703cd14610daa578063b5d90c2814610d81578063d000626514610b60578063f2fde38b14610ad6578063f339624b146101685763f6e805581461013a57600080fd5b34610163576000366003190112610163576008546040516001600160a01b039091168152602090f35b600080fd5b3461016357610100366003190112610163576004356001600160401b03811161016357366023820112156101635780600401356101a481611b64565b916101b26040519384611b43565b8183523660248383010111610163578160009260246020930183860137830101526024356001600160401b038111610163576101f2903690600401611b96565b6044356001600160401b03811161016357610211903690600401611b96565b9060a4359260c4359360028510156101635760e4356001600160a01b0381168082036101635761023f61205d565b8451865103610a8557610251876118e8565b8615908115610a7b575b5015610a36576006549260018401809411610a205783600655836000526003602052604060002093845560018401908051906001600160401b038211610669576102a58354611c46565b601f81116109d8575b50602090601f83116001146109695761032b949392916000918361095e575b50508160011b916000199060031b1c19161790559491945b6064356003850155608435600485015560068401610302886118e8565b80546001600160a81b03191660ff89161760089290921b610100600160a81b0316919091179055565b60009161016d9360009260028301935b8251811015610870576009546001600160a01b031695600061035d8386611c32565b516024604051809a819363068bcd8d60e01b835260048301525afa968715610864576000976106da575b506101c08701908a825161039a816118e8565b6103a3826118e8565b6103ac816118e8565b03610695576103c6906103bf8486611c32565b5190611f79565b966103d18385611c32565b518654600052600260205260406000206103eb8588611c32565b51600052602052604060002055865468010000000000000000811015610669576001810180895581101561067f5787600052600d602060002091020191815183556001830160208301518051906001600160401b0382116106695781906104528454611c46565b601f8111610616575b50602090601f83116001146105b1576000926105a6575b50508160011b916000199060031b1c19161790555b600283016040830151610499816118c8565b6104a2816118c8565b815460ff91821660ff199182161790925560608401516003860155608084018051600487015560a0850151600587015560c0850151600687015560e0850151600787015561010085015160088088019190915561012086015160098801805491151585169190951617909355610140850151600a870155610160850151600b870155610180850151600c90960180546101a0909601516001600160a81b031990961696909216959095179390911b610100600160a81b03169290921782555161056a816118e8565b610573816118e8565b815460ff60a81b191660a89190911b60ff60a81b161790555187811061059d575b5060010161033b565b96506001610594565b015190508f80610472565b60008581528281209350601f198516905b8181106105fe57509084600195949392106105e5575b505050811b019055610487565b015160001960f88460031b161c191690558f80806105d8565b929360206001819287860151815501950193016105c2565b909150836000526020600020601f840160051c8101916020851061065f575b90601f859493920160051c01905b818110610650575061045b565b60008155849350600101610643565b9091508190610635565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60405162461bcd60e51b815260206004820152601f60248201527f496e636f6d70617469626c65206173736574207479706520696e20706f6f6c006044820152606490fd5b90963d8082843e6106eb8184611b43565b820191602081840312610860578051906001600160401b03821161085457016101e081840312610860576040519261072284611b0b565b8151845260208201516001600160401b03811161085c57820181601f8201121561085c5780519061075282611b64565b926107606040519485611b43565b82845260208383010111610858579061077f9160208085019101611880565b602084015260408101516003811015610854576040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e081015160e084015261010081015161010084015261012081015180151581036108545761012084015261014081015161014084015261016081015161016084015261018081015160ff81168103610854576101808401526101a08101516001600160a01b0381168103610854576101a08401526101c0015190600282101561085157506101c0820152958a610387565b80fd5b8280fd5b8480fd5b8380fd5b5080fd5b6040513d6000823e3d90fd5b8386898981106108cd57600560649301550361088857005b60405162461bcd60e51b815260206004820152601b60248201527f546f74616c2073706c6974206d75737420657175616c203130302500000000006044820152606490fd5b60405162461bcd60e51b815260206004820152606060248201527f4d696e696d756e20706572696f64206d7573742062652067726561746572207460448201527f68616e206f7220657175616c20746f20746865206d696e696d756d207065726960648201527f6f64206f6620616c6c20706f6f6c732077697468696e20746865207661756c74608482015260a490fd5b015190508a806102cd565b90601f1983169184600052816000209260005b8181106109c0575091600193918561032b98979694106109a7575b505050811b0190559491946102e5565b015160001960f88460031b161c191690558a8080610997565b9293602060018192878601518155019501930161097c565b836000526020600020601f840160051c81019160208510610a16575b601f0160051c01905b818110610a0a57506102ae565b600081556001016109fd565b90915081906109f4565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420617373657420666f72206465706f736974207479706500006044820152606490fd5b905015158761025b565b60405162461bcd60e51b815260206004820152602360248201527f4d69736d61746368656420706f6f6c2049447320616e642070657263656e746160448201526267657360e81b6064820152608490fd5b3461016357602036600319011261016357610aef61186a565b610af761205d565b6001600160a01b03168015610b4a57600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461016357602036600319011261016357600435610b7c61203b565b33600052600560205260406000208160005260205260406000206001810191825415610d3257600482019160ff835416610bb5816118c8565b610cf557600701544210610cb0576000526003602052610bd86040600020611e40565b604081019260005b84518051821015610c605781610bf591611c32565b51516009546001600160a01b03169190823b15610163576000926064849260405195869384926383bc635760e01b84523360048501526024840152600160448401525af191821561086457600192610c4f575b5001610be0565b6000610c5a91611b43565b86610c48565b845460ff191660011785558254602085015160405133927f485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d9751928291610ca6919083611f86565b0390a26001600055005b60405162461bcd60e51b815260206004820152601c60248201527f4465706f73697420706572696f6420686173206e6f7420656e646564000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152744465706f736974206973206e6f742061637469766560581b6044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f4e6f206465706f73697420666f756e6420666f722074686973206164647265736044820152607360f81b6064820152608490fd5b3461016357600036600319011261016357600a546040516001600160a01b039091168152602090f35b34610163576000366003190112610163576009546040516001600160a01b039091168152602090f35b3461016357602036600319011261016357610dec61186a565b610df461205d565b60075490610e0b6001600160a01b03831615611fa0565b6001600160a01b0316908190610e22821515611fe5565b6001600160601b0360a01b16176007556001600160601b0360a01b600a541617600a55600080f35b34610163576000366003190112610163576020600654604051908152f35b3461016357600036600319011261016357600d546040516001600160a01b039091168152602090f35b34610163576020366003190112610163576001600160a01b03610eb261186a565b1660005260116020526020604060002054604051908152f35b3461016357602036600319011261016357610ee4611bf3565b506004356000526003602052610f14610f006040600020611e40565b604051918291602083526020830190611a0d565b0390f35b34610163576000366003190112610163576001546040516001600160a01b039091168152602090f35b3461016357600036600319011261016357600c546040516001600160a01b039091168152602090f35b3461016357602036600319011261016357610f8361186a565b610f8b61205d565b600e5490610fa26001600160a01b03831615611fa0565b6001600160a01b031690610fb7821515611fe5565b600880546001600160a01b031990811684179091551617600e55005b3461016357604036600319011261016357610fec611854565b6004356000526003602052604061100581600020611e40565b01908151519161101483611b7f565b926110226040519485611b43565b808452611031601f1991611b7f565b0160005b818110611103575090916001600160a01b0316905060005b82519081518110156110b15761106581600193611c32565b51518360005260046020526040600020906000526020526040600020826000526020526110956040600020611f00565b61109f8287611c32565b526110aa8186611c32565b500161104d565b8460405180916020820160208352815180915260206040840192019060005b8181106110de575050500390f35b919350916020610120826110f56001948851611a88565b0194019101918493926110d0565b60209061110e611ebc565b82828801015201611035565b346101635760003660031901126101635761113361205d565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b60603660031901126101635760243560443560043561119461203b565b8060005260036020526111aa6040600020611e40565b60a0810151831061146857919060008091600093604086019560c081019260e08201945b8851805189101561133857886111e391611c32565b51518551906111f1826118e8565b60018060a01b038851169060405160e08101908082106001600160401b03831117610669578e9460409460e49386523383526020830194855285830196875260608301918b8352608084016001815260a085019161124e816118e8565b825260c085019283526009548851632607b53960e01b815295516001600160a01b0390811660048801529751602487015298516044860152925160648501529151929687958694911692906112a2816118e8565b6084850152516112b1816118e8565b60a4840152516001600160a01b031660c483015234905af19182156108645760009182936112fa575b50906112eb6001936112f193611f79565b98611f79565b970196956111ce565b9250906040833d8211611330575b8161131560409383611b43565b810103126108515750815160209092015191906112eb6112da565b3d9150611308565b50868a938592620151808402848104620151801485151715610a20577f6f85d9948d6ca3dd6ce6ce7d175da22b4e865827ae6fcd530ec7edac1240f92895610ca69560209561138960089442611f79565b916040519561139787611aef565b33875288870192835260408701908582526060880190815260808801916000835260a0890193845260c089019442865260e08a019687526101008a0197600089523360005260058d526040600020906000528c5260406000209960018060a01b039051166001600160601b0360a01b8b5416178a555160018a015551600289015551600388015560048701905161142d816118c8565b611436816118c8565b60ff80198354169116179055516005860155516006850155516007840155519101550151604051918291339583611f86565b60405162461bcd60e51b815260206004820152602f60248201527f506572696f642063616e6e6f74206265206c657373207468616e20746865207660448201526e185d5b1d081b5a5b881c195c9a5bd9608a1b6064820152608490fd5b34610163576020366003190112610163576004356000526003602052610f146114f46002604060002001611d24565b6040519182916020835260208301906118f2565b34610163576000366003190112610163576007546040516001600160a01b039091168152602090f35b346101635760403660031901126101635761154a611854565b611552611ebc565b5060018060a01b0316600052600560205260406000206004356000526020526101206115816040600020611f00565b61158e6040518092611a88565bf35b34610163576000366003190112610163576006546115ad81611b7f565b906115bb6040519283611b43565b808252601f196115ca82611b7f565b0160005b81811061169357505060015b8181111561164a57826040518091602082016020835281518091526040830190602060408260051b8601019301916000905b82821061161b57505050500390f35b9193600191939550602061163a8192603f198a82030186528851611a0d565b960192019201859493919261160c565b80600052600360205260406000206000198201828111610a205761167061168192611e40565b61167a8287611c32565b5284611c32565b506000198114610a20576001016115da565b60209061169e611bf3565b828287010152016115ce565b34610163576020366003190112610163576004356010548110156101635760106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67201546040516001600160a01b039091168152602090f35b3461016357600036600319011261016357600b546040516001600160a01b039091168152602090f35b3461016357600036600319011261016357600f546040516001600160a01b039091168152602090f35b3461016357600036600319011261016357600e546040516001600160a01b039091168152602090f35b3461016357604036600319011261016357611799611854565b6117a161203b565b600c546001600160a01b031633148015611840575b156117ed5760018060a01b031660005260056020526040600020600435600052602052600060016040822001556001600055600080f35b60405162461bcd60e51b815260206004820152602560248201527f43616c6c6572206973206e6f742074686520676f7665726e616e636520636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b50600f546001600160a01b031633146117b6565b602435906001600160a01b038216820361016357565b600435906001600160a01b038216820361016357565b60005b8381106118935750506000910152565b8181015183820152602001611883565b906020916118bc81518092818552858086019101611880565b601f01601f1916010190565b600311156118d257565b634e487b7160e01b600052602160045260246000fd5b600211156118d257565b9080602083519182815201916020808360051b8301019401926000915b83831061191e57505050505090565b9091929394602080600192601f19858203018652885190815181526101c080611956858501516101e0878601526101e08501906118a3565b936040810151611965816118c8565b6040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610100810151610100850152610120810151151561012085015261014081015161014085015261016081015161016085015260ff61018082015116610180850152878060a01b036101a0820151166101a08501520151916119fc836118e8565b01529701930193019193929061190f565b908151815260e0611a44611a32602085015161010060208601526101008501906118a3565b604085015184820360408601526118f2565b92606081015160608401526080810151608084015260a081015160a084015260c0810151611a71816118e8565b60c08401528101516001600160a01b031691015290565b610100809160018060a01b0381511684526020810151602085015260408101516040850152606081015160608501526080810151611ac5816118c8565b608085015260a081015160a085015260c081015160c085015260e081015160e08501520151910152565b61012081019081106001600160401b0382111761066957604052565b6101e081019081106001600160401b0382111761066957604052565b61010081019081106001600160401b0382111761066957604052565b90601f801991011681019081106001600160401b0382111761066957604052565b6001600160401b03811161066957601f01601f191660200190565b6001600160401b0381116106695760051b60200190565b9080601f83011215610163578135611bad81611b7f565b92611bbb6040519485611b43565b81845260208085019260051b82010192831161016357602001905b828210611be35750505090565b8135815260209182019101611bd6565b60405190611c0082611b27565b600060e08382815260606020820152606060408201528260608201528260808201528260a08201528260c08201520152565b805182101561067f5760209160051b010190565b90600182811c92168015611c76575b6020831014611c6057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611c55565b9060405191826000825492611c9484611c46565b8084529360018116908115611d025750600114611cbb575b50611cb992500383611b43565b565b90506000929192526020600020906000915b818310611ce6575050906020611cb99282010138611cac565b6020919350806001915483858901015201910190918492611ccd565b905060209250611cb994915060ff191682840152151560051b82010138611cac565b908154611d3081611b7f565b92611d3e6040519485611b43565b818452602084019060005260206000206000915b838310611d5f5750505050565b600d6020600192604051611d7281611b0b565b85548152611d81858701611c80565b8382015260ff600287015416611d96816118c8565b60408201526003860154606082015260048601546080820152600586015460a0820152600686015460c0820152600786015460e0820152600886015461010082015260ff6009870154161515610120820152600a860154610140820152600b86015461016082015260ff600c870154818116610180840152868060a01b038160081c166101a084015260a81c16611e2c816118e8565b6101c0820152815201920192019190611d52565b90604051611e4d81611b27565b60e06006829480548452611e6360018201611c80565b6020850152611e7460028201611d24565b60408501526003810154606085015260048101546080850152600581015460a0850152015460ff8116611ea6816118e8565b60c084015260081c6001600160a01b0316910152565b60405190611ec982611aef565b6000610100838281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201520152565b90604051611f0d81611aef565b6101006008829460018060a01b03815416845260018101546020850152600281015460408501526003810154606085015260ff600482015416611f4f816118c8565b6080850152600581015460a0850152600681015460c0850152600781015460e08501520154910152565b91908201809211610a2057565b604090611f9d9392815281602082015201906118a3565b90565b15611fa757565b60405162461bcd60e51b815260206004820152601660248201527511dbdd995c9b985b98d948185b1c9958591e481cd95d60521b6044820152606490fd5b15611fec57565b60405162461bcd60e51b815260206004820152602160248201527f476f7665726e616e636520616464726573732063616e6e6f74206265207a65726044820152606f60f81b6064820152608490fd5b60026000541461204c576002600055565b633ee5aeb560e01b60005260046000fd5b6001546001600160a01b0316330361207157565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212209783b7298d4155c1e29e5dd6fdf65094dfc6de7e93c0133b6b44723e501055ac64736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F8BE73C EQ PUSH2 0x1780 JUMPI DUP1 PUSH4 0x248A75B7 EQ PUSH2 0x1757 JUMPI DUP1 PUSH4 0x29BA7BB2 EQ PUSH2 0x172E JUMPI DUP1 PUSH4 0x34808EC3 EQ PUSH2 0x1705 JUMPI DUP1 PUSH4 0x35C1D349 EQ PUSH2 0x16AA JUMPI DUP1 PUSH4 0x44D00F82 EQ PUSH2 0x1590 JUMPI DUP1 PUSH4 0x57656486 EQ PUSH2 0x1531 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x1508 JUMPI DUP1 PUSH4 0x60EBD718 EQ PUSH2 0x14C5 JUMPI DUP1 PUSH4 0x626CC0A9 EQ PUSH2 0x1177 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x111A JUMPI DUP1 PUSH4 0x72BAFBDE EQ PUSH2 0xFD3 JUMPI DUP1 PUSH4 0x7C366CC6 EQ PUSH2 0xF6A JUMPI DUP1 PUSH4 0x88D52EF7 EQ PUSH2 0xF41 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF18 JUMPI DUP1 PUSH4 0x9403B634 EQ PUSH2 0xECB JUMPI DUP1 PUSH4 0x96F3A8AD EQ PUSH2 0xE91 JUMPI DUP1 PUSH4 0x996B8A6F EQ PUSH2 0xE68 JUMPI DUP1 PUSH4 0xA7C6A100 EQ PUSH2 0xE4A JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0xDD3 JUMPI DUP1 PUSH4 0xB30703CD EQ PUSH2 0xDAA JUMPI DUP1 PUSH4 0xB5D90C28 EQ PUSH2 0xD81 JUMPI DUP1 PUSH4 0xD0006265 EQ PUSH2 0xB60 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAD6 JUMPI DUP1 PUSH4 0xF339624B EQ PUSH2 0x168 JUMPI PUSH4 0xF6E80558 EQ PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x163 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x163 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1A4 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP2 PUSH2 0x1B2 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1B43 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x163 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x163 JUMPI PUSH2 0x1F2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x163 JUMPI PUSH2 0x211 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B96 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x2 DUP6 LT ISZERO PUSH2 0x163 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x163 JUMPI PUSH2 0x23F PUSH2 0x205D JUMP JUMPDEST DUP5 MLOAD DUP7 MLOAD SUB PUSH2 0xA85 JUMPI PUSH2 0x251 DUP8 PUSH2 0x18E8 JUMP JUMPDEST DUP7 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xA7B JUMPI JUMPDEST POP ISZERO PUSH2 0xA36 JUMPI PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0xA20 JUMPI DUP4 PUSH1 0x6 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 DUP5 SSTORE PUSH1 0x1 DUP5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x669 JUMPI PUSH2 0x2A5 DUP4 SLOAD PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x9D8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x969 JUMPI PUSH2 0x32B SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x95E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE SWAP5 SWAP2 SWAP5 JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0x6 DUP5 ADD PUSH2 0x302 DUP9 PUSH2 0x18E8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0xFF DUP10 AND OR PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x16D SWAP4 PUSH1 0x0 SWAP3 PUSH1 0x2 DUP4 ADD SWAP4 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 PUSH1 0x0 PUSH2 0x35D DUP4 DUP7 PUSH2 0x1C32 JUMP JUMPDEST MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP11 DUP2 SWAP4 PUSH4 0x68BCD8D PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x6DA JUMPI JUMPDEST POP PUSH2 0x1C0 DUP8 ADD SWAP1 DUP11 DUP3 MLOAD PUSH2 0x39A DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x3A3 DUP3 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x18E8 JUMP JUMPDEST SUB PUSH2 0x695 JUMPI PUSH2 0x3C6 SWAP1 PUSH2 0x3BF DUP5 DUP7 PUSH2 0x1C32 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1F79 JUMP JUMPDEST SWAP7 PUSH2 0x3D1 DUP4 DUP6 PUSH2 0x1C32 JUMP JUMPDEST MLOAD DUP7 SLOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3EB DUP6 DUP9 PUSH2 0x1C32 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x669 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP10 SSTORE DUP2 LT ISZERO PUSH2 0x67F JUMPI DUP8 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP2 DUP2 MLOAD DUP4 SSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 DUP4 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x669 JUMPI DUP2 SWAP1 PUSH2 0x452 DUP5 SLOAD PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x616 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x5B1 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x5A6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP4 ADD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x499 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0x4A2 DUP2 PUSH2 0x18C8 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF SWAP2 DUP3 AND PUSH1 0xFF NOT SWAP2 DUP3 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP7 ADD SSTORE PUSH1 0x80 DUP5 ADD DUP1 MLOAD PUSH1 0x4 DUP8 ADD SSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x5 DUP8 ADD SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x6 DUP8 ADD SSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x7 DUP8 ADD SSTORE PUSH2 0x100 DUP6 ADD MLOAD PUSH1 0x8 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x120 DUP7 ADD MLOAD PUSH1 0x9 DUP9 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO DUP6 AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE PUSH2 0x140 DUP6 ADD MLOAD PUSH1 0xA DUP8 ADD SSTORE PUSH2 0x160 DUP6 ADD MLOAD PUSH1 0xB DUP8 ADD SSTORE PUSH2 0x180 DUP6 ADD MLOAD PUSH1 0xC SWAP1 SWAP7 ADD DUP1 SLOAD PUSH2 0x1A0 SWAP1 SWAP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP3 AND SWAP6 SWAP1 SWAP6 OR SWAP4 SWAP1 SWAP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE MLOAD PUSH2 0x56A DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x573 DUP2 PUSH2 0x18E8 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0xA8 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA8 SHL AND OR SWAP1 SSTORE MLOAD DUP8 DUP2 LT PUSH2 0x59D JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x33B JUMP JUMPDEST SWAP7 POP PUSH1 0x1 PUSH2 0x594 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x5FE JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x5E5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x487 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0x5D8 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x5C2 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x65F JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x650 JUMPI POP PUSH2 0x45B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x643 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x635 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F6D70617469626C65206173736574207479706520696E20706F6F6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0x6EB DUP2 DUP5 PUSH2 0x1B43 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x860 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x854 JUMPI ADD PUSH2 0x1E0 DUP2 DUP5 SUB SLT PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x722 DUP5 PUSH2 0x1B0B JUMP JUMPDEST DUP2 MLOAD DUP5 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x85C JUMPI DUP3 ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x85C JUMPI DUP1 MLOAD SWAP1 PUSH2 0x752 DUP3 PUSH2 0x1B64 JUMP JUMPDEST SWAP3 PUSH2 0x760 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B43 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x858 JUMPI SWAP1 PUSH2 0x77F SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x854 JUMPI PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x854 JUMPI PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x854 JUMPI PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x854 JUMPI PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x1C0 ADD MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x851 JUMPI POP PUSH2 0x1C0 DUP3 ADD MSTORE SWAP6 DUP11 PUSH2 0x387 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP7 DUP10 DUP10 DUP2 LT PUSH2 0x8CD JUMPI PUSH1 0x5 PUSH1 0x64 SWAP4 ADD SSTORE SUB PUSH2 0x888 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2073706C6974206D75737420657175616C20313030250000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756E20706572696F64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68616E206F7220657175616C20746F20746865206D696E696D756D2070657269 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6F64206F6620616C6C20706F6F6C732077697468696E20746865207661756C74 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x2CD JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x9C0 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH2 0x32B SWAP9 SWAP8 SWAP7 SWAP5 LT PUSH2 0x9A7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE SWAP5 SWAP2 SWAP5 PUSH2 0x2E5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x997 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x97C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xA16 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xA0A JUMPI POP PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x9FD JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420666F72206465706F73697420747970650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO ISZERO DUP8 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D61746368656420706F6F6C2049447320616E642070657263656E7461 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x676573 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0xAEF PUSH2 0x186A JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xB4A JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB7C PUSH2 0x203B JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 ADD SWAP2 DUP3 SLOAD ISZERO PUSH2 0xD32 JUMPI PUSH1 0x4 DUP3 ADD SWAP2 PUSH1 0xFF DUP4 SLOAD AND PUSH2 0xBB5 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0xCF5 JUMPI PUSH1 0x7 ADD SLOAD TIMESTAMP LT PUSH2 0xCB0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xBD8 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1E40 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP3 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xC60 JUMPI DUP2 PUSH2 0xBF5 SWAP2 PUSH2 0x1C32 JUMP JUMPDEST MLOAD MLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 SWAP3 PUSH1 0x64 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x83BC6357 PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x864 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xC4F JUMPI JUMPDEST POP ADD PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5A SWAP2 PUSH2 0x1B43 JUMP JUMPDEST DUP7 PUSH2 0xC48 JUMP JUMPDEST DUP5 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP3 SLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 MLOAD CALLER SWAP3 PUSH32 0x485F1BB6524C663555797E00171A10F341656E59B02D6B557A0A38BA7D5D9751 SWAP3 DUP3 SWAP2 PUSH2 0xCA6 SWAP2 SWAP1 DUP4 PUSH2 0x1F86 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F73697420706572696F6420686173206E6F7420656E64656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4465706F736974206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206465706F73697420666F756E6420666F72207468697320616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0xDEC PUSH2 0x186A JUMP JUMPDEST PUSH2 0xDF4 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0xE0B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH2 0xE22 DUP3 ISZERO ISZERO PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL AND OR PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEB2 PUSH2 0x186A JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0xEE4 PUSH2 0x1BF3 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xF14 PUSH2 0xF00 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1E40 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0xF83 PUSH2 0x186A JUMP JUMPDEST PUSH2 0xF8B PUSH2 0x205D JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 PUSH2 0xFA2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xFB7 DUP3 ISZERO ISZERO PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND OR PUSH1 0xE SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0xFEC PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x1005 DUP2 PUSH1 0x0 KECCAK256 PUSH2 0x1E40 JUMP JUMPDEST ADD SWAP1 DUP2 MLOAD MLOAD SWAP2 PUSH2 0x1014 DUP4 PUSH2 0x1B7F JUMP JUMPDEST SWAP3 PUSH2 0x1022 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B43 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x1031 PUSH1 0x1F NOT SWAP2 PUSH2 0x1B7F JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1103 JUMPI POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x1065 DUP2 PUSH1 0x1 SWAP4 PUSH2 0x1C32 JUMP JUMPDEST MLOAD MLOAD DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1095 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x109F DUP3 DUP8 PUSH2 0x1C32 JUMP JUMPDEST MSTORE PUSH2 0x10AA DUP2 DUP7 PUSH2 0x1C32 JUMP JUMPDEST POP ADD PUSH2 0x104D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x10DE JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP SWAP2 PUSH1 0x20 PUSH2 0x120 DUP3 PUSH2 0x10F5 PUSH1 0x1 SWAP5 DUP9 MLOAD PUSH2 0x1A88 JUMP JUMPDEST ADD SWAP5 ADD SWAP2 ADD SWAP2 DUP5 SWAP4 SWAP3 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x110E PUSH2 0x1EBC JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x1035 JUMP JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0x1133 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1194 PUSH2 0x203B JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x11AA PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1E40 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD DUP4 LT PUSH2 0x1468 JUMPI SWAP2 SWAP1 PUSH1 0x0 DUP1 SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x40 DUP7 ADD SWAP6 PUSH1 0xC0 DUP2 ADD SWAP3 PUSH1 0xE0 DUP3 ADD SWAP5 JUMPDEST DUP9 MLOAD DUP1 MLOAD DUP10 LT ISZERO PUSH2 0x1338 JUMPI DUP9 PUSH2 0x11E3 SWAP2 PUSH2 0x1C32 JUMP JUMPDEST MLOAD MLOAD DUP6 MLOAD SWAP1 PUSH2 0x11F1 DUP3 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 MLOAD AND SWAP1 PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0x669 JUMPI DUP15 SWAP5 PUSH1 0x40 SWAP5 PUSH1 0xE4 SWAP4 DUP7 MSTORE CALLER DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP5 DUP6 MSTORE DUP6 DUP4 ADD SWAP7 DUP8 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP12 DUP4 MSTORE PUSH1 0x80 DUP5 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD SWAP2 PUSH2 0x124E DUP2 PUSH2 0x18E8 JUMP JUMPDEST DUP3 MSTORE PUSH1 0xC0 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0x9 SLOAD DUP9 MLOAD PUSH4 0x2607B539 PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP9 ADD MSTORE SWAP8 MLOAD PUSH1 0x24 DUP8 ADD MSTORE SWAP9 MLOAD PUSH1 0x44 DUP7 ADD MSTORE SWAP3 MLOAD PUSH1 0x64 DUP6 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP7 DUP8 SWAP6 DUP7 SWAP5 SWAP2 AND SWAP3 SWAP1 PUSH2 0x12A2 DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x84 DUP6 ADD MSTORE MLOAD PUSH2 0x12B1 DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0xA4 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 SWAP2 DUP3 SWAP4 PUSH2 0x12FA JUMPI JUMPDEST POP SWAP1 PUSH2 0x12EB PUSH1 0x1 SWAP4 PUSH2 0x12F1 SWAP4 PUSH2 0x1F79 JUMP JUMPDEST SWAP9 PUSH2 0x1F79 JUMP JUMPDEST SWAP8 ADD SWAP7 SWAP6 PUSH2 0x11CE JUMP JUMPDEST SWAP3 POP SWAP1 PUSH1 0x40 DUP4 RETURNDATASIZE DUP3 GT PUSH2 0x1330 JUMPI JUMPDEST DUP2 PUSH2 0x1315 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x1B43 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x851 JUMPI POP DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD SWAP2 SWAP1 PUSH2 0x12EB PUSH2 0x12DA JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1308 JUMP JUMPDEST POP DUP7 DUP11 SWAP4 DUP6 SWAP3 PUSH3 0x15180 DUP5 MUL DUP5 DUP2 DIV PUSH3 0x15180 EQ DUP6 ISZERO OR ISZERO PUSH2 0xA20 JUMPI PUSH32 0x6F85D9948D6CA3DD6CE6CE7D175DA22B4E865827AE6FCD530EC7EDAC1240F928 SWAP6 PUSH2 0xCA6 SWAP6 PUSH1 0x20 SWAP6 PUSH2 0x1389 PUSH1 0x8 SWAP5 TIMESTAMP PUSH2 0x1F79 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x1397 DUP8 PUSH2 0x1AEF JUMP JUMPDEST CALLER DUP8 MSTORE DUP9 DUP8 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP8 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP9 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0xA0 DUP10 ADD SWAP4 DUP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP5 TIMESTAMP DUP7 MSTORE PUSH1 0xE0 DUP11 ADD SWAP7 DUP8 MSTORE PUSH2 0x100 DUP11 ADD SWAP8 PUSH1 0x0 DUP10 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x5 DUP14 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE DUP13 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP12 SLOAD AND OR DUP11 SSTORE MLOAD PUSH1 0x1 DUP11 ADD SSTORE MLOAD PUSH1 0x2 DUP10 ADD SSTORE MLOAD PUSH1 0x3 DUP9 ADD SSTORE PUSH1 0x4 DUP8 ADD SWAP1 MLOAD PUSH2 0x142D DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE MLOAD PUSH1 0x5 DUP7 ADD SSTORE MLOAD PUSH1 0x6 DUP6 ADD SSTORE MLOAD PUSH1 0x7 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ADD MLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1F86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506572696F642063616E6E6F74206265206C657373207468616E207468652076 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x185D5B1D081B5A5B881C195C9A5BD9 PUSH1 0x8A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xF14 PUSH2 0x14F4 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x18F2 JUMP JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0x154A PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x1552 PUSH2 0x1EBC JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x120 PUSH2 0x1581 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x158E PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1A88 JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x6 SLOAD PUSH2 0x15AD DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 PUSH2 0x15BB PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1B43 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x15CA DUP3 PUSH2 0x1B7F JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1693 JUMPI POP POP PUSH1 0x1 JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x164A JUMPI DUP3 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x161B JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x163A DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1A0D JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x160C JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP3 ADD DUP3 DUP2 GT PUSH2 0xA20 JUMPI PUSH2 0x1670 PUSH2 0x1681 SWAP3 PUSH2 0x1E40 JUMP JUMPDEST PUSH2 0x167A DUP3 DUP8 PUSH2 0x1C32 JUMP JUMPDEST MSTORE DUP5 PUSH2 0x1C32 JUMP JUMPDEST POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA20 JUMPI PUSH1 0x1 ADD PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x169E PUSH2 0x1BF3 JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x15CE JUMP JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x163 JUMPI PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x163 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x163 JUMPI PUSH2 0x1799 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x17A1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1840 JUMPI JUMPDEST ISZERO PUSH2 0x17ED JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 DUP3 KECCAK256 ADD SSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520676F7665726E616E636520636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17B6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x163 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x163 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1893 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1883 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x18BC DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x18D2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0x18D2 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x191E JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x1F NOT DUP6 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH2 0x1C0 DUP1 PUSH2 0x1956 DUP6 DUP6 ADD MLOAD PUSH2 0x1E0 DUP8 DUP7 ADD MSTORE PUSH2 0x1E0 DUP6 ADD SWAP1 PUSH2 0x18A3 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1965 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF PUSH2 0x180 DUP3 ADD MLOAD AND PUSH2 0x180 DUP6 ADD MSTORE DUP8 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x1A0 DUP3 ADD MLOAD AND PUSH2 0x1A0 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x19FC DUP4 PUSH2 0x18E8 JUMP JUMPDEST ADD MSTORE SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x190F JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0xE0 PUSH2 0x1A44 PUSH2 0x1A32 PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x100 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x18F2 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x1A71 DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x100 DUP1 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x1AC5 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x669 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x669 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x669 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x669 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x669 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x669 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x163 JUMPI DUP2 CALLDATALOAD PUSH2 0x1BAD DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP3 PUSH2 0x1BBB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B43 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x163 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BE3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C00 DUP3 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x67F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1C76 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1C60 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1C94 DUP5 PUSH2 0x1C46 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1D02 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1CBB JUMPI JUMPDEST POP PUSH2 0x1CB9 SWAP3 POP SUB DUP4 PUSH2 0x1B43 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1CE6 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x1CB9 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x1CCD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x1CB9 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x1CAC JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH2 0x1D30 DUP2 PUSH2 0x1B7F JUMP JUMPDEST SWAP3 PUSH2 0x1D3E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B43 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1D5F JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1D72 DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE PUSH2 0x1D81 DUP6 DUP8 ADD PUSH2 0x1C80 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND PUSH2 0x1D96 DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x9 DUP8 ADD SLOAD AND ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA DUP7 ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xB DUP7 ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0xC DUP8 ADD SLOAD DUP2 DUP2 AND PUSH2 0x180 DUP5 ADD MSTORE DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP2 PUSH1 0x8 SHR AND PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0xA8 SHR AND PUSH2 0x1E2C DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x1C0 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x1D52 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1E4D DUP2 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x6 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE PUSH2 0x1E63 PUSH1 0x1 DUP3 ADD PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1E74 PUSH1 0x2 DUP3 ADD PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x1EA6 DUP2 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1EC9 DUP3 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1F0D DUP2 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x100 PUSH1 0x8 DUP3 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND PUSH2 0x1F4F DUP2 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA20 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1F9D SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1FA7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11DBDD995C9B985B98D948185B1C9958591E481CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FEC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E636520616464726573732063616E6E6F74206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x204C JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2071 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 DUP4 0xB7 0x29 DUP14 COINBASE SSTORE 0xC1 0xE2 SWAP15 TSTORE 0xD6 REVERT 0xF6 POP SWAP5 0xDF 0xC6 0xDE PUSH31 0x93C0133B6B44723E501055AC64736F6C634300081B00330000000000000000 ","sourceMap":"2241:10379:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;3915:28;2241:10379;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;1500:62:0;;:::i;:::-;2241:10379:10;;;;5231:45;2241:10379;;;;;:::i;:::-;5372:39;;:62;;;;;2241:10379;;;;;5505:15;2241:10379;;;;;;;;;;;5505:15;2241:10379;;;;5553:6;2241:10379;;;;;;;;;5614:15;;2241:10379;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5751:19;;2241:10379;;;;;;;;;;;;;;;;;;5553:6;2241:10379;;;;;;;;;;;;;5553:6;5653:12;;2241:10379;;;;5686:12;;2241:10379;5505:15;5719;;2241:10379;;;:::i;:::-;;;-1:-1:-1;;;;;;2241:10379:10;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;5751:19;2241:10379;9292:15;9304:3;9323:13;2241:10379;9708:11;2241:10379;9708:11;;9318:531;9359:3;2241:10379;;9338:19;;;;;9407:13;2241:10379;-1:-1:-1;;;;;2241:10379:10;;;9429:11;;;;:::i;:::-;2241:10379;;;;;;;;;;;9407:34;;2241:10379;9407:34;;2241:10379;9407:34;;;;;;;2241:10379;9407:34;;;9359:3;9464:14;;;;2241:10379;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;9464:21;2241:10379;;9536:41;9555:22;;;;;:::i;:::-;2241:10379;9536:41;;:::i;:::-;9639:54;;;;;:::i;:::-;2241:10379;;;;;;;;;;;9624:11;;;;:::i;:::-;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;:::i;:::-;;;;;;9359:3;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;5553:6;2241:10379;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;;;;;;5553:6;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;5505:15;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;9407:13;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2241:10379:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;;;;2241:10379:10;;;;;;-1:-1:-1;;;2241:10379:10;;;;;9749:26;;;9745:93;;2241:10379;9359:3;2241:10379;;9323:13;;9745:93;;-1:-1:-1;2241:10379:10;9745:93;;2241:10379;;;;-1:-1:-1;2241:10379:10;;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5553:6;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2241:10379:10;;;;;;;-1:-1:-1;2241:10379:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;;;;9407:34;;;;;;;;;;;;:::i;:::-;;;2241:10379;;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;5553:6;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;9464:14;2241:10379;;;;;;;;;;9464:14;2241:10379;;;9407:34;;;;2241:10379;;;;;;;;;;;;;;;;;;;9407:34;2241:10379;;;;;;;;;9338:19;;;;;5990:23;;2241:10379;;;;6148:15;;2241:10379;6197:22;2241:10379;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2241:10379:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5751:19;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;;5553:6;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2241:10379:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;;;;5372:62;5415:19;;;;5372:62;;;2241:10379;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;2241:10379:10;2627:22:0;;2623:91;;3004:6;2241:10379:10;;-1:-1:-1;;;;;;2241:10379:10;;;;;;;-1:-1:-1;;;;;2241:10379:10;3052:40:0;-1:-1:-1;;3052:40:0;2241:10379:10;2623:91:0;2672:31;;;2241:10379:10;2672:31:0;2241:10379:10;;;;;2672:31:0;2241:10379:10;;;;;;-1:-1:-1;;2241:10379:10;;;;;;2466:103:4;;:::i;:::-;6404:10:10;2241:10379;;6386:17;2241:10379;;;;;;;;;;;;;;6482:23;;2241:10379;;;6482:27;2241:10379;;;6603:23;;2241:10379;;;;;;;;:::i;:::-;;;6753:27;;2241:10379;6734:15;:46;2241:10379;;;;;;;;;;;;:::i;:::-;;6919:11;;;2241:10379;6939:3;6919:11;;2241:10379;;6915:22;;;;;6976:14;;;;:::i;:::-;;2241:10379;7008:13;2241:10379;-1:-1:-1;;;;;2241:10379:10;;;7008:142;;;;;2241:10379;;7008:142;2241:10379;;;;;;;;;;;;7008:142;;6404:10;2241:10379;7008:142;;2241:10379;;;;;;;;;;7008:142;;;;;;;2241:10379;7008:142;;;6939:3;;2241:10379;6900:13;;7008:142;2241:10379;7008:142;;;:::i;:::-;;;;6915:22;2241:10379;;-1:-1:-1;;2241:10379:10;;;;;;;;7283:15;;;2241:10379;;6404:10;;7237:62;;2241:10379;;7237:62;;7283:15;2241:10379;7237:62;:::i;:::-;;;;2241:10379;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;3983:31;2241:10379;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;3950:26;2241:10379;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;11416:10:10;2241:10379;;11408:59;-1:-1:-1;;;;;2241:10379:10;;11416:24;11408:59;:::i;:::-;-1:-1:-1;;;;;2241:10379:10;;;;11478:71;11486:25;;;11478:71;:::i;:::-;-1:-1:-1;;;;;2241:10379:10;;;;11416:10;2241:10379;-1:-1:-1;;;;;2241:10379:10;;11595:39;2241:10379;;;11595:39;2241:10379;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;3851:25;2241:10379;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;4081:27;2241:10379;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;-1:-1:-1;;;;;2241:10379:10;;:::i;:::-;;;;4220:48;2241:10379;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;:::i;:::-;;;;;;9952:6;2241:10379;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;4047:27;2241:10379;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;11730:13:10;2241:10379;;11722:62;-1:-1:-1;;;;;2241:10379:10;;11730:27;11722:62;:::i;:::-;-1:-1:-1;;;;;2241:10379:10;;11795:111;11817:28;;;11795:111;:::i;:::-;11917:39;2241:10379;;-1:-1:-1;;;;;;2241:10379:10;;;;;;;;;;11730:13;2241:10379;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;:::i;:::-;;;;;10301:6;2241:10379;;;;;;;;:::i;:::-;10376:11;;;;2241:10379;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;10411:13:10;;-1:-1:-1;;;;;2241:10379:10;;-1:-1:-1;2241:10379:10;10450:3;10430:11;;2241:10379;;;10426:22;;;;;10487:14;;2241:10379;10487:14;;:::i;:::-;;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10519:101;;;;:::i;:::-;;;;;;:::i;:::-;;2241:10379;10411:13;;10426:22;;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;1500:62:0;;:::i;:::-;3004:6;2241:10379:10;;-1:-1:-1;;;;;;2241:10379:10;;;;;;;-1:-1:-1;;;;;2241:10379:10;3052:40:0;2241:10379:10;;3052:40:0;2241:10379:10;;;;-1:-1:-1;;2241:10379:10;;;;;;;;;;2466:103:4;;:::i;:::-;2241:10379:10;;;7483:6;2241:10379;;;;;;;:::i;:::-;7543:15;;;2241:10379;7532:26;;2241:10379;;7644:28;;2241:10379;;7722:13;2241:10379;7741:11;2241:10379;7741:11;;8155:15;;;;8200:11;2241:10379;8200:11;;7717:748;7761:3;7741:11;;2241:10379;;7737:22;;;;;7798:14;;;;:::i;:::-;;2241:10379;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;8286:85;2241:10379;;;7950:10;2241:10379;;;7875:356;;2241:10379;;;7875:356;;;2241:10379;;;;7875:356;;2241:10379;;;;7875:356;;;2241:10379;;;7543:15;7875:356;;2241:10379;;;;:::i;:::-;;;8155:15;7875:356;;2241:10379;;;8286:13;2241:10379;;;-1:-1:-1;;;8286:85:10;;2241:10379;;-1:-1:-1;;;;;2241:10379:10;;;;8286:85;;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;8333:9;;8286:85;;;;;;;2241:10379;;;8286:85;;;7761:3;8386:31;;;2241:10379;8386:31;8432:21;8386:31;;:::i;:::-;8432:21;;:::i;:::-;7761:3;2241:10379;7722:13;;;;8286:85;;;;2241:10379;8286:85;;;;;;;;;2241:10379;8286:85;;;:::i;:::-;;;2241:10379;;;;-1:-1:-1;2241:10379:10;;;;;;;;;8386:31;8286:85;;;;;-1:-1:-1;8286:85:10;;7737:22;;;;;;;8837:6;2241:10379;;;;;8837:6;2241:10379;;;;;;;8967:47;8766:15;8967:47;8766:15;2241:10379;8766:15;8808:36;2241:10379;8766:15;;8808:36;:::i;:::-;2241:10379;;;;;;;:::i;:::-;7950:10;2241:10379;;8511:376;;;2241:10379;;;;8511:376;;2241:10379;;;;;8511:376;;2241:10379;;;7875:356;8511:376;;2241:10379;;;;7543:15;8511:376;;2241:10379;;;8155:15;8511:376;;8766:15;;2241:10379;;;8511:376;;2241:10379;;;8511:376;;;2241:10379;;;;7950:10;2241:10379;;8898:17;2241:10379;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;;;;;;7483:6;2241:10379;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;8898:17;2241:10379;;;;;;;;;;;;;;;;;8998:15;;2241:10379;;7950:10;;;;8967:47;;;:::i;2241:10379::-;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;;;10102:6;2241:10379;;;;10102:21;2241:10379;;;10102:21;2241:10379;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2241:10379:10;;;;3883:25;2241:10379;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;10825:17;2241:10379;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;2241:10379:10;;;;11171:10;2241:10379;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2241:10379:10;;;:::i;:::-;;;;;;;;;11198:13;;11210:1;11213:15;;;;;;;2241:10379;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11210:1;2241:10379;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;11230:3;2241:10379;;;11269:6;2241:10379;;;;;;;;;;;;;;;11250:28;2241:10379;;:::i;:::-;11250:28;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;2241:10379:10;;;;11210:1;2241:10379;11198:13;;2241:10379;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;4184:29;2241:10379;4184:29;;;;;;2241:10379;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;4021:19;2241:10379;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;4150:27;2241:10379;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;4115:28;2241:10379;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;;;;;;-1:-1:-1;;2241:10379:10;;;;;;:::i;:::-;2466:103:4;;:::i;:::-;12490:12:10;2241:10379;-1:-1:-1;;;;;2241:10379:10;12476:10;:26;:56;;;;2241:10379;;;;;;;;;;;;11004:17;2241:10379;;;;;;;;;;;;;;;;11004:39;2241:10379;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;12476:56;-1:-1:-1;12520:12:10;2241:10379;-1:-1:-1;;;;;2241:10379:10;12476:10;12506:26;12476:56;;2241:10379;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;2241:10379:10;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;2241:10379:10;;;;:::o;:::-;;-1:-1:-1;2241:10379:10;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;2241:10379:10;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2241:10379:10;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;;;;:::o;:::-;-1:-1:-1;;;;;2241:10379:10;;;;;;-1:-1:-1;;2241:10379:10;;;;:::o;:::-;-1:-1:-1;;;;;2241:10379:10;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2241:10379:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2241:10379:10;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;2241:10379:10;;;;;-1:-1:-1;2241:10379:10;;-1:-1:-1;2241:10379:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;2241:10379:10;;-1:-1:-1;2241:10379:10;-1:-1:-1;2241:10379:10;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2241:10379:10;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;2241:10379:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2241:10379:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;2241:10379:10;;;;;;;2575:307:4;1899:1;2702:7;2241:10379:10;2702:18:4;2698:86;;1899:1;2702:7;2241:10379:10;2575:307:4:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;1796:162:0;2241:10379:10;;-1:-1:-1;;;;;2241:10379:10;735:10:2;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:2;1901:40:0;2241:10379:10;;-1:-1:-1;1901:40:0"},"methodIdentifiers":{"ICoverContract()":"f6e80558","IGovernanceContract()":"b5d90c28","IPoolContract()":"b30703cd","bqBTC()":"34808ec3","bqBTCAddress()":"996b8a6f","coverContract()":"248a75b7","createVault(string,uint256[],uint256[],uint256,uint256,uint256,uint8,address)":"f339624b","getUserVaultDeposit(uint256,address)":"57656486","getUserVaultPoolDeposits(uint256,address)":"72bafbde","getVault(uint256)":"9403b634","getVaultPools(uint256)":"60ebd718","getVaults()":"44d00f82","governance()":"5aa6e675","initialOwner()":"29ba7bb2","initialVaultWithdraw(uint256)":"d0006265","owner()":"8da5cb5b","participants(uint256)":"35c1d349","participation(address)":"96f3a8ad","poolContract()":"88d52ef7","renounceOwnership()":"715018a6","setCover(address)":"7c366cc6","setGovernance(address)":"ab033ea9","setUserVaultDepositToZero(uint256,address)":"1f8be73c","transferOwnership(address)":"f2fde38b","vaultCount()":"a7c6a100","vaultDeposit(uint256,uint256,uint256)":"626cc0a9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bqBTC\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ClaimAttempt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pool\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pool\",\"type\":\"string\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minPeriod\",\"type\":\"uint256\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pool\",\"type\":\"string\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ICoverContract\",\"outputs\":[{\"internalType\":\"contract ICover\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IGovernanceContract\",\"outputs\":[{\"internalType\":\"contract IGov\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IPoolContract\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bqBTC\",\"outputs\":[{\"internalType\":\"contract IbqBTC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bqBTCAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_vaultName\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"poolPercentageSplit\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_minInv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxInv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"adt\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserVaultDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"daysLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"}],\"internalType\":\"struct Vaults.VaultDeposit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserVaultPoolDeposits\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPayout\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"daysLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accruedPayout\",\"type\":\"uint256\"}],\"internalType\":\"struct Vaults.Deposits[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"getVault\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"vaultName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct CoverLib.Pool[]\",\"name\":\"pools\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"minInv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct Vaults.Vault\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"getVaultPools\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct CoverLib.Pool[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaults\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"vaultName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"enum CoverLib.RiskType\",\"name\":\"riskType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percentageSplitBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentArmPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"}],\"internalType\":\"struct CoverLib.Pool[]\",\"name\":\"pools\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"minInv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum CoverLib.AssetDepositType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"internalType\":\"struct Vaults.Vault[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"}],\"name\":\"initialVaultWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"participation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coverContract\",\"type\":\"address\"}],\"name\":\"setCover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setUserVaultDepositToZero\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"vaultDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vaults.sol\":\"Vaults\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/CoverLib.sol\":{\"keccak256\":\"0x7bdac9cff59d8fd5b405cd95ea99a165dc206041685ea5cac6968334b35abc7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cd108ead594d2d35053d30c26affacf267934d5ff9ba3c186f8991d959e6736\",\"dweb:/ipfs/QmWyDXFV3TFrgUYVkDCgCUn66a85a8QKC1H5AwMyydQEvm\"]},\"contracts/Vaults.sol\":{\"keccak256\":\"0x89db8b0539b871f1b70f6aca662749e4eeb882d5e8c97325e43efe9002858a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd229f58ba9eaf4568fc00e7e056367c46de12ba08c9ecc6982fb27bedeaf4c2\",\"dweb:/ipfs/QmdSDdriAVSzYnFzy2jfWLSYjwv7Rd4dAXuo9FcJzxpFnT\"]}},\"version\":1}"}}}}}